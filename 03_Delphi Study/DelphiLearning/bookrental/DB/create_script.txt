
CREATE TABLE BOOK 
(
  BOOK_SEQ	INTEGER NOT NULL,
  BOOK_TITLE	VARCHAR(100) CHARACTER SET UTF8 NOT NULL,
  BOOK_ISBN	CHAR(13),
  BOOK_AUTHOR	VARCHAR(30) CHARACTER SET UTF8 NOT NULL,
  BOOK_PRICE	INTEGER,
  BOOK_LINK	VARCHAR(255) CHARACTER SET UTF8,
  BOOK_RENT_YN	CHAR(1) default 'N',
  BOOK_IMAGE	BLOB SUB_TYPE 0 SEGMENT SIZE 80,
  BOOK_DESCRIPTION	BLOB SUB_TYPE TEXT SEGMENT SIZE 80 CHARACTER SET UTF8,
CONSTRAINT BOOK_SEQ_PK PRIMARY KEY (BOOK_SEQ)
);

CREATE TABLE USERS 
(
  USER_SEQ	INTEGER NOT NULL,
  USER_NAME	VARCHAR(30) CHARACTER SET UTF8 NOT NULL,
  USER_BIRTH	DATE,
  USER_SEX	CHAR(1),
  USER_PHONE	VARCHAR(15),
  USER_MAIL	VARCHAR(255) CHARACTER SET UTF8,
  USER_IMAGE	BLOB SUB_TYPE 0 SEGMENT SIZE 80,
  USER_REG_DATE	DATE,
  USER_OUT_YN	CHAR(1) default 'N',
  USER_OUT_DATE	DATE,
  USER_RENT_COUNT	INTEGER DEFAULT 0,
CONSTRAINT USER_SEQ_PK PRIMARY KEY (USER_SEQ)
);

CREATE TABLE RENT 
(
  RENT_SEQ	INTEGER NOT NULL,
  USER_SEQ	INTEGER NOT NULL,
  BOOK_SEQ	INTEGER NOT NULL,
  RENT_DATE	DATE,
  RENT_RETURN_DATE	DATE,
  RENT_RETURN_YN	CHAR(1),
CONSTRAINT RENT_SEQ_PK PRIMARY KEY (RENT_SEQ)
);

CREATE GENERATOR BOOK_SEQ_GEN;
CREATE TRIGGER SET_BOOK_SEQ FOR BOOK 
ACTIVE BEFORE INSERT POSITION 0
as
begin
     new.book_seq = gen_id(book_seq_gen, 1);
end;

CREATE GENERATOR USER_SEQ_GEN;
CREATE TRIGGER SET_USER_SEQ FOR USERS 
ACTIVE BEFORE INSERT POSITION 0
as
begin
     new.USER_SEQ = gen_id(USER_SEQ_GEN, 1);
end;

CREATE GENERATOR RENT_SEQ_GEN;
CREATE TRIGGER SET_RENT_SEQ FOR RENT 
ACTIVE BEFORE INSERT POSITION 0
as
begin
     new.RENT_SEQ = gen_id(RENT_SEQ_GEN, 1);
end;
