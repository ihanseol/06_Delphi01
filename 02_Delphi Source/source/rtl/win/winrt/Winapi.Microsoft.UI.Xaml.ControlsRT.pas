{*******************************************************}
{                                                       }
{           CodeGear Delphi Runtime Library             }
{                                                       }
{ Copyright(c) 2020-2024 Embarcadero Technologies, Inc. }
{              All rights reserved                      }
{                                                       }
{*******************************************************}

unit Winapi.Microsoft.UI.Xaml.ControlsRT;

{$WEAKPACKAGEUNIT OFF}

{$HPPEMIT NOUSINGNAMESPACE}

{$WARN SYMBOL_DEPRECATED OFF}

interface

{$MINENUMSIZE 4}

uses
  Winapi.Windows,
  Winapi.WinRT,
  System.Types,
  System.Win.WinRT,
  Winapi.CommonTypes,
  Winapi.Microsoft.CommonTypes,
  Winapi.Microsoft.UI.Composition,
  Winapi.Microsoft.UI.Xaml.Media,
  Winapi.UI,
  Winapi.Foundation,
  Winapi.Globalization,
  Winapi.UI.Text,
  Winapi.Media,
  Winapi.ApplicationModel.Contacts,
  Winapi.ApplicationModel,
  Winapi.Microsoft.UI.Text,
  Winapi.CommonNames;

{$SCOPEDENUMS ON}

type
  // Alias type definitions for types moved from this unit

  AutoSuggestionBoxTextChangeReason = Winapi.Microsoft.CommonTypes.AutoSuggestionBoxTextChangeReason;
  PAutoSuggestionBoxTextChangeReason = Winapi.Microsoft.CommonTypes.PAutoSuggestionBoxTextChangeReason;
  ClickMode = Winapi.Microsoft.CommonTypes.ClickMode;
  PClickMode = Winapi.Microsoft.CommonTypes.PClickMode;
  DragItemsStartingEventHandler = Winapi.Microsoft.CommonTypes.DragItemsStartingEventHandler;
  PDragItemsStartingEventHandler = Winapi.Microsoft.CommonTypes.PDragItemsStartingEventHandler;
  IAutoSuggestBox = Winapi.Microsoft.CommonTypes.IAutoSuggestBox;
  PIAutoSuggestBox = Winapi.Microsoft.CommonTypes.PIAutoSuggestBox;
  IAutoSuggestBoxQuerySubmittedEventArgs = Winapi.Microsoft.CommonTypes.IAutoSuggestBoxQuerySubmittedEventArgs;
  PIAutoSuggestBoxQuerySubmittedEventArgs = Winapi.Microsoft.CommonTypes.PIAutoSuggestBoxQuerySubmittedEventArgs;
  IAutoSuggestBoxSuggestionChosenEventArgs = Winapi.Microsoft.CommonTypes.IAutoSuggestBoxSuggestionChosenEventArgs;
  PIAutoSuggestBoxSuggestionChosenEventArgs = Winapi.Microsoft.CommonTypes.PIAutoSuggestBoxSuggestionChosenEventArgs;
  IAutoSuggestBoxTextChangedEventArgs = Winapi.Microsoft.CommonTypes.IAutoSuggestBoxTextChangedEventArgs;
  PIAutoSuggestBoxTextChangedEventArgs = Winapi.Microsoft.CommonTypes.PIAutoSuggestBoxTextChangedEventArgs;
  IChoosingGroupHeaderContainerEventArgs = Winapi.Microsoft.CommonTypes.IChoosingGroupHeaderContainerEventArgs;
  PIChoosingGroupHeaderContainerEventArgs = Winapi.Microsoft.CommonTypes.PIChoosingGroupHeaderContainerEventArgs;
  IChoosingItemContainerEventArgs = Winapi.Microsoft.CommonTypes.IChoosingItemContainerEventArgs;
  PIChoosingItemContainerEventArgs = Winapi.Microsoft.CommonTypes.PIChoosingItemContainerEventArgs;
  IContainerContentChangingEventArgs = Winapi.Microsoft.CommonTypes.IContainerContentChangingEventArgs;
  PIContainerContentChangingEventArgs = Winapi.Microsoft.CommonTypes.PIContainerContentChangingEventArgs;
  ICoreWebView2InitializedEventArgs = Winapi.Microsoft.CommonTypes.ICoreWebView2InitializedEventArgs;
  PICoreWebView2InitializedEventArgs = Winapi.Microsoft.CommonTypes.PICoreWebView2InitializedEventArgs;
  IDataTemplateSelector = Winapi.Microsoft.CommonTypes.IDataTemplateSelector;
  PIDataTemplateSelector = Winapi.Microsoft.CommonTypes.PIDataTemplateSelector;
  IDragItemsCompletedEventArgs = Winapi.Microsoft.CommonTypes.IDragItemsCompletedEventArgs;
  PIDragItemsCompletedEventArgs = Winapi.Microsoft.CommonTypes.PIDragItemsCompletedEventArgs;
  IDragItemsStartingEventArgs = Winapi.Microsoft.CommonTypes.IDragItemsStartingEventArgs;
  PIDragItemsStartingEventArgs = Winapi.Microsoft.CommonTypes.PIDragItemsStartingEventArgs;
  IDynamicAnimatedVisualSource = Winapi.Microsoft.CommonTypes.IDynamicAnimatedVisualSource;
  PIDynamicAnimatedVisualSource = Winapi.Microsoft.CommonTypes.PIDynamicAnimatedVisualSource;
  IIconElement = Winapi.Microsoft.CommonTypes.IIconElement;
  PIIconElement = Winapi.Microsoft.CommonTypes.PIIconElement;
  IIconSource = Winapi.Microsoft.CommonTypes.IIconSource;
  PIIconSource = Winapi.Microsoft.CommonTypes.PIIconSource;
  IInfoBar = Winapi.Microsoft.CommonTypes.IInfoBar;
  PIInfoBar = Winapi.Microsoft.CommonTypes.PIInfoBar;
  IInfoBarClosedEventArgs = Winapi.Microsoft.CommonTypes.IInfoBarClosedEventArgs;
  PIInfoBarClosedEventArgs = Winapi.Microsoft.CommonTypes.PIInfoBarClosedEventArgs;
  IInfoBarClosingEventArgs = Winapi.Microsoft.CommonTypes.IInfoBarClosingEventArgs;
  PIInfoBarClosingEventArgs = Winapi.Microsoft.CommonTypes.PIInfoBarClosingEventArgs;
  IInfoBarTemplateSettings = Winapi.Microsoft.CommonTypes.IInfoBarTemplateSettings;
  PIInfoBarTemplateSettings = Winapi.Microsoft.CommonTypes.PIInfoBarTemplateSettings;
  IItemClickEventArgs = Winapi.Microsoft.CommonTypes.IItemClickEventArgs;
  PIItemClickEventArgs = Winapi.Microsoft.CommonTypes.PIItemClickEventArgs;
  ILayout = Winapi.Microsoft.CommonTypes.ILayout;
  PILayout = Winapi.Microsoft.CommonTypes.PILayout;
  ILayoutContext = Winapi.Microsoft.CommonTypes.ILayoutContext;
  PILayoutContext = Winapi.Microsoft.CommonTypes.PILayoutContext;
  IListViewBase = Winapi.Microsoft.CommonTypes.IListViewBase;
  PIListViewBase = Winapi.Microsoft.CommonTypes.PIListViewBase;
  IListViewBaseHeaderItem = Winapi.Microsoft.CommonTypes.IListViewBaseHeaderItem;
  PIListViewBaseHeaderItem = Winapi.Microsoft.CommonTypes.PIListViewBaseHeaderItem;
  IMediaTransportControls = Winapi.Microsoft.CommonTypes.IMediaTransportControls;
  PIMediaTransportControls = Winapi.Microsoft.CommonTypes.PIMediaTransportControls;
  INavigationView = Winapi.Microsoft.CommonTypes.INavigationView;
  PINavigationView = Winapi.Microsoft.CommonTypes.PINavigationView;
  INavigationViewDisplayModeChangedEventArgs = Winapi.Microsoft.CommonTypes.INavigationViewDisplayModeChangedEventArgs;
  PINavigationViewDisplayModeChangedEventArgs = Winapi.Microsoft.CommonTypes.PINavigationViewDisplayModeChangedEventArgs;
  INavigationViewItemInvokedEventArgs = Winapi.Microsoft.CommonTypes.INavigationViewItemInvokedEventArgs;
  PINavigationViewItemInvokedEventArgs = Winapi.Microsoft.CommonTypes.PINavigationViewItemInvokedEventArgs;
  INavigationViewSelectionChangedEventArgs = Winapi.Microsoft.CommonTypes.INavigationViewSelectionChangedEventArgs;
  PINavigationViewSelectionChangedEventArgs = Winapi.Microsoft.CommonTypes.PINavigationViewSelectionChangedEventArgs;
  IncrementalLoadingTrigger = Winapi.Microsoft.CommonTypes.IncrementalLoadingTrigger;
  PIncrementalLoadingTrigger = Winapi.Microsoft.CommonTypes.PIncrementalLoadingTrigger;
  InfoBarCloseReason = Winapi.Microsoft.CommonTypes.InfoBarCloseReason;
  PInfoBarCloseReason = Winapi.Microsoft.CommonTypes.PInfoBarCloseReason;
  InfoBarSeverity = Winapi.Microsoft.CommonTypes.InfoBarSeverity;
  PInfoBarSeverity = Winapi.Microsoft.CommonTypes.PInfoBarSeverity;
  IRatingControl = Winapi.Microsoft.CommonTypes.IRatingControl;
  PIRatingControl = Winapi.Microsoft.CommonTypes.PIRatingControl;
  IRatingItemInfo = Winapi.Microsoft.CommonTypes.IRatingItemInfo;
  PIRatingItemInfo = Winapi.Microsoft.CommonTypes.PIRatingItemInfo;
  ISelectionChangedEventArgs = Winapi.Microsoft.CommonTypes.ISelectionChangedEventArgs;
  PISelectionChangedEventArgs = Winapi.Microsoft.CommonTypes.PISelectionChangedEventArgs;
  ISplitView = Winapi.Microsoft.CommonTypes.ISplitView;
  PISplitView = Winapi.Microsoft.CommonTypes.PISplitView;
  ISplitViewPaneClosingEventArgs = Winapi.Microsoft.CommonTypes.ISplitViewPaneClosingEventArgs;
  PISplitViewPaneClosingEventArgs = Winapi.Microsoft.CommonTypes.PISplitViewPaneClosingEventArgs;
  IStyleSelector = Winapi.Microsoft.CommonTypes.IStyleSelector;
  PIStyleSelector = Winapi.Microsoft.CommonTypes.PIStyleSelector;
  ISwapChainPanel = Winapi.Microsoft.CommonTypes.ISwapChainPanel;
  PISwapChainPanel = Winapi.Microsoft.CommonTypes.PISwapChainPanel;
  ITabView = Winapi.Microsoft.CommonTypes.ITabView;
  PITabView = Winapi.Microsoft.CommonTypes.PITabView;
  ITabViewItem = Winapi.Microsoft.CommonTypes.ITabViewItem;
  PITabViewItem = Winapi.Microsoft.CommonTypes.PITabViewItem;
  ITabViewItemTemplateSettings = Winapi.Microsoft.CommonTypes.ITabViewItemTemplateSettings;
  PITabViewItemTemplateSettings = Winapi.Microsoft.CommonTypes.PITabViewItemTemplateSettings;
  ITabViewTabCloseRequestedEventArgs = Winapi.Microsoft.CommonTypes.ITabViewTabCloseRequestedEventArgs;
  PITabViewTabCloseRequestedEventArgs = Winapi.Microsoft.CommonTypes.PITabViewTabCloseRequestedEventArgs;
  ITabViewTabDragCompletedEventArgs = Winapi.Microsoft.CommonTypes.ITabViewTabDragCompletedEventArgs;
  PITabViewTabDragCompletedEventArgs = Winapi.Microsoft.CommonTypes.PITabViewTabDragCompletedEventArgs;
  ITabViewTabDragStartingEventArgs = Winapi.Microsoft.CommonTypes.ITabViewTabDragStartingEventArgs;
  PITabViewTabDragStartingEventArgs = Winapi.Microsoft.CommonTypes.PITabViewTabDragStartingEventArgs;
  ITabViewTabDroppedOutsideEventArgs = Winapi.Microsoft.CommonTypes.ITabViewTabDroppedOutsideEventArgs;
  PITabViewTabDroppedOutsideEventArgs = Winapi.Microsoft.CommonTypes.PITabViewTabDroppedOutsideEventArgs;
  ITeachingTip = Winapi.Microsoft.CommonTypes.ITeachingTip;
  PITeachingTip = Winapi.Microsoft.CommonTypes.PITeachingTip;
  ITeachingTipClosedEventArgs = Winapi.Microsoft.CommonTypes.ITeachingTipClosedEventArgs;
  PITeachingTipClosedEventArgs = Winapi.Microsoft.CommonTypes.PITeachingTipClosedEventArgs;
  ITeachingTipClosingEventArgs = Winapi.Microsoft.CommonTypes.ITeachingTipClosingEventArgs;
  PITeachingTipClosingEventArgs = Winapi.Microsoft.CommonTypes.PITeachingTipClosingEventArgs;
  ITeachingTipTemplateSettings = Winapi.Microsoft.CommonTypes.ITeachingTipTemplateSettings;
  PITeachingTipTemplateSettings = Winapi.Microsoft.CommonTypes.PITeachingTipTemplateSettings;
  ItemClickEventHandler = Winapi.Microsoft.CommonTypes.ItemClickEventHandler;
  PItemClickEventHandler = Winapi.Microsoft.CommonTypes.PItemClickEventHandler;
  ITwoPaneView = Winapi.Microsoft.CommonTypes.ITwoPaneView;
  PITwoPaneView = Winapi.Microsoft.CommonTypes.PITwoPaneView;
  IVectorView_1__Primitives_IPopup = Winapi.Microsoft.CommonTypes.IVectorView_1__Primitives_IPopup;
  PIVectorView_1__Primitives_IPopup = Winapi.Microsoft.CommonTypes.PIVectorView_1__Primitives_IPopup;
  IWebView2 = Winapi.Microsoft.CommonTypes.IWebView2;
  PIWebView2 = Winapi.Microsoft.CommonTypes.PIWebView2;
  LightDismissOverlayMode = Winapi.Microsoft.CommonTypes.LightDismissOverlayMode;
  PLightDismissOverlayMode = Winapi.Microsoft.CommonTypes.PLightDismissOverlayMode;
  ListViewReorderMode = Winapi.Microsoft.CommonTypes.ListViewReorderMode;
  PListViewReorderMode = Winapi.Microsoft.CommonTypes.PListViewReorderMode;
  ListViewSelectionMode = Winapi.Microsoft.CommonTypes.ListViewSelectionMode;
  PListViewSelectionMode = Winapi.Microsoft.CommonTypes.PListViewSelectionMode;
  NavigationViewDisplayMode = Winapi.Microsoft.CommonTypes.NavigationViewDisplayMode;
  PNavigationViewDisplayMode = Winapi.Microsoft.CommonTypes.PNavigationViewDisplayMode;
  Primitives_AnimationDirection = Winapi.Microsoft.CommonTypes.Primitives_AnimationDirection;
  PPrimitives_AnimationDirection = Winapi.Microsoft.CommonTypes.PPrimitives_AnimationDirection;
  Primitives_EdgeTransitionLocation = Winapi.Microsoft.CommonTypes.Primitives_EdgeTransitionLocation;
  PPrimitives_EdgeTransitionLocation = Winapi.Microsoft.CommonTypes.PPrimitives_EdgeTransitionLocation;
  Primitives_FlyoutPlacementMode = Winapi.Microsoft.CommonTypes.Primitives_FlyoutPlacementMode;
  PPrimitives_FlyoutPlacementMode = Winapi.Microsoft.CommonTypes.PPrimitives_FlyoutPlacementMode;
  Primitives_FlyoutShowMode = Winapi.Microsoft.CommonTypes.Primitives_FlyoutShowMode;
  PPrimitives_FlyoutShowMode = Winapi.Microsoft.CommonTypes.PPrimitives_FlyoutShowMode;
  Primitives_IButtonBase = Winapi.Microsoft.CommonTypes.Primitives_IButtonBase;
  PPrimitives_IButtonBase = Winapi.Microsoft.CommonTypes.PPrimitives_IButtonBase;
  Primitives_IFlyoutBase = Winapi.Microsoft.CommonTypes.Primitives_IFlyoutBase;
  PPrimitives_IFlyoutBase = Winapi.Microsoft.CommonTypes.PPrimitives_IFlyoutBase;
  Primitives_IFlyoutBaseClosingEventArgs = Winapi.Microsoft.CommonTypes.Primitives_IFlyoutBaseClosingEventArgs;
  PPrimitives_IFlyoutBaseClosingEventArgs = Winapi.Microsoft.CommonTypes.PPrimitives_IFlyoutBaseClosingEventArgs;
  Primitives_IFlyoutShowOptions = Winapi.Microsoft.CommonTypes.Primitives_IFlyoutShowOptions;
  PPrimitives_IFlyoutShowOptions = Winapi.Microsoft.CommonTypes.PPrimitives_IFlyoutShowOptions;
  Primitives_IPopup = Winapi.Microsoft.CommonTypes.Primitives_IPopup;
  PPrimitives_IPopup = Winapi.Microsoft.CommonTypes.PPrimitives_IPopup;
  Primitives_ISelectorItem = Winapi.Microsoft.CommonTypes.Primitives_ISelectorItem;
  PPrimitives_ISelectorItem = Winapi.Microsoft.CommonTypes.PPrimitives_ISelectorItem;
  Primitives_ISplitViewTemplateSettings = Winapi.Microsoft.CommonTypes.Primitives_ISplitViewTemplateSettings;
  PPrimitives_ISplitViewTemplateSettings = Winapi.Microsoft.CommonTypes.PPrimitives_ISplitViewTemplateSettings;
  ScrollIntoViewAlignment = Winapi.Microsoft.CommonTypes.ScrollIntoViewAlignment;
  PScrollIntoViewAlignment = Winapi.Microsoft.CommonTypes.PScrollIntoViewAlignment;
  SelectionChangedEventHandler = Winapi.Microsoft.CommonTypes.SelectionChangedEventHandler;
  PSelectionChangedEventHandler = Winapi.Microsoft.CommonTypes.PSelectionChangedEventHandler;
  SplitViewDisplayMode = Winapi.Microsoft.CommonTypes.SplitViewDisplayMode;
  PSplitViewDisplayMode = Winapi.Microsoft.CommonTypes.PSplitViewDisplayMode;
  SplitViewPanePlacement = Winapi.Microsoft.CommonTypes.SplitViewPanePlacement;
  PSplitViewPanePlacement = Winapi.Microsoft.CommonTypes.PSplitViewPanePlacement;
  TabViewCloseButtonOverlayMode = Winapi.Microsoft.CommonTypes.TabViewCloseButtonOverlayMode;
  PTabViewCloseButtonOverlayMode = Winapi.Microsoft.CommonTypes.PTabViewCloseButtonOverlayMode;
  TabViewWidthMode = Winapi.Microsoft.CommonTypes.TabViewWidthMode;
  PTabViewWidthMode = Winapi.Microsoft.CommonTypes.PTabViewWidthMode;
  TeachingTipCloseReason = Winapi.Microsoft.CommonTypes.TeachingTipCloseReason;
  PTeachingTipCloseReason = Winapi.Microsoft.CommonTypes.PTeachingTipCloseReason;
  TeachingTipHeroContentPlacementMode = Winapi.Microsoft.CommonTypes.TeachingTipHeroContentPlacementMode;
  PTeachingTipHeroContentPlacementMode = Winapi.Microsoft.CommonTypes.PTeachingTipHeroContentPlacementMode;
  TeachingTipPlacementMode = Winapi.Microsoft.CommonTypes.TeachingTipPlacementMode;
  PTeachingTipPlacementMode = Winapi.Microsoft.CommonTypes.PTeachingTipPlacementMode;
  TeachingTipTailVisibility = Winapi.Microsoft.CommonTypes.TeachingTipTailVisibility;
  PTeachingTipTailVisibility = Winapi.Microsoft.CommonTypes.PTeachingTipTailVisibility;
  TwoPaneViewMode = Winapi.Microsoft.CommonTypes.TwoPaneViewMode;
  PTwoPaneViewMode = Winapi.Microsoft.CommonTypes.PTwoPaneViewMode;
  TwoPaneViewPriority = Winapi.Microsoft.CommonTypes.TwoPaneViewPriority;
  PTwoPaneViewPriority = Winapi.Microsoft.CommonTypes.PTwoPaneViewPriority;
  TwoPaneViewTallModeConfiguration = Winapi.Microsoft.CommonTypes.TwoPaneViewTallModeConfiguration;
  PTwoPaneViewTallModeConfiguration = Winapi.Microsoft.CommonTypes.PTwoPaneViewTallModeConfiguration;
  TwoPaneViewWideModeConfiguration = Winapi.Microsoft.CommonTypes.TwoPaneViewWideModeConfiguration;
  PTwoPaneViewWideModeConfiguration = Winapi.Microsoft.CommonTypes.PTwoPaneViewWideModeConfiguration;
  TypedEventHandler_2__IAutoSuggestBox__IAutoSuggestBoxQuerySubmittedEventArgs_Delegate_Base = Winapi.Microsoft.CommonTypes.TypedEventHandler_2__IAutoSuggestBox__IAutoSuggestBoxQuerySubmittedEventArgs_Delegate_Base;
  TypedEventHandler_2__IAutoSuggestBox__IAutoSuggestBoxQuerySubmittedEventArgs = Winapi.Microsoft.CommonTypes.TypedEventHandler_2__IAutoSuggestBox__IAutoSuggestBoxQuerySubmittedEventArgs;
  PTypedEventHandler_2__IAutoSuggestBox__IAutoSuggestBoxQuerySubmittedEventArgs = Winapi.Microsoft.CommonTypes.PTypedEventHandler_2__IAutoSuggestBox__IAutoSuggestBoxQuerySubmittedEventArgs;
  TypedEventHandler_2__IAutoSuggestBox__IAutoSuggestBoxSuggestionChosenEventArgs_Delegate_Base = Winapi.Microsoft.CommonTypes.TypedEventHandler_2__IAutoSuggestBox__IAutoSuggestBoxSuggestionChosenEventArgs_Delegate_Base;
  TypedEventHandler_2__IAutoSuggestBox__IAutoSuggestBoxSuggestionChosenEventArgs = Winapi.Microsoft.CommonTypes.TypedEventHandler_2__IAutoSuggestBox__IAutoSuggestBoxSuggestionChosenEventArgs;
  PTypedEventHandler_2__IAutoSuggestBox__IAutoSuggestBoxSuggestionChosenEventArgs = Winapi.Microsoft.CommonTypes.PTypedEventHandler_2__IAutoSuggestBox__IAutoSuggestBoxSuggestionChosenEventArgs;
  TypedEventHandler_2__IAutoSuggestBox__IAutoSuggestBoxTextChangedEventArgs_Delegate_Base = Winapi.Microsoft.CommonTypes.TypedEventHandler_2__IAutoSuggestBox__IAutoSuggestBoxTextChangedEventArgs_Delegate_Base;
  TypedEventHandler_2__IAutoSuggestBox__IAutoSuggestBoxTextChangedEventArgs = Winapi.Microsoft.CommonTypes.TypedEventHandler_2__IAutoSuggestBox__IAutoSuggestBoxTextChangedEventArgs;
  PTypedEventHandler_2__IAutoSuggestBox__IAutoSuggestBoxTextChangedEventArgs = Winapi.Microsoft.CommonTypes.PTypedEventHandler_2__IAutoSuggestBox__IAutoSuggestBoxTextChangedEventArgs;
  TypedEventHandler_2__IInfoBar__IInfoBarClosedEventArgs_Delegate_Base = Winapi.Microsoft.CommonTypes.TypedEventHandler_2__IInfoBar__IInfoBarClosedEventArgs_Delegate_Base;
  TypedEventHandler_2__IInfoBar__IInfoBarClosedEventArgs = Winapi.Microsoft.CommonTypes.TypedEventHandler_2__IInfoBar__IInfoBarClosedEventArgs;
  PTypedEventHandler_2__IInfoBar__IInfoBarClosedEventArgs = Winapi.Microsoft.CommonTypes.PTypedEventHandler_2__IInfoBar__IInfoBarClosedEventArgs;
  TypedEventHandler_2__IInfoBar__IInfoBarClosingEventArgs_Delegate_Base = Winapi.Microsoft.CommonTypes.TypedEventHandler_2__IInfoBar__IInfoBarClosingEventArgs_Delegate_Base;
  TypedEventHandler_2__IInfoBar__IInfoBarClosingEventArgs = Winapi.Microsoft.CommonTypes.TypedEventHandler_2__IInfoBar__IInfoBarClosingEventArgs;
  PTypedEventHandler_2__IInfoBar__IInfoBarClosingEventArgs = Winapi.Microsoft.CommonTypes.PTypedEventHandler_2__IInfoBar__IInfoBarClosingEventArgs;
  TypedEventHandler_2__IListViewBase__IChoosingGroupHeaderContainerEventArgs_Delegate_Base = Winapi.Microsoft.CommonTypes.TypedEventHandler_2__IListViewBase__IChoosingGroupHeaderContainerEventArgs_Delegate_Base;
  TypedEventHandler_2__IListViewBase__IChoosingGroupHeaderContainerEventArgs = Winapi.Microsoft.CommonTypes.TypedEventHandler_2__IListViewBase__IChoosingGroupHeaderContainerEventArgs;
  PTypedEventHandler_2__IListViewBase__IChoosingGroupHeaderContainerEventArgs = Winapi.Microsoft.CommonTypes.PTypedEventHandler_2__IListViewBase__IChoosingGroupHeaderContainerEventArgs;
  TypedEventHandler_2__IListViewBase__IChoosingItemContainerEventArgs_Delegate_Base = Winapi.Microsoft.CommonTypes.TypedEventHandler_2__IListViewBase__IChoosingItemContainerEventArgs_Delegate_Base;
  TypedEventHandler_2__IListViewBase__IChoosingItemContainerEventArgs = Winapi.Microsoft.CommonTypes.TypedEventHandler_2__IListViewBase__IChoosingItemContainerEventArgs;
  PTypedEventHandler_2__IListViewBase__IChoosingItemContainerEventArgs = Winapi.Microsoft.CommonTypes.PTypedEventHandler_2__IListViewBase__IChoosingItemContainerEventArgs;
  TypedEventHandler_2__IListViewBase__IContainerContentChangingEventArgs_Delegate_Base = Winapi.Microsoft.CommonTypes.TypedEventHandler_2__IListViewBase__IContainerContentChangingEventArgs_Delegate_Base;
  TypedEventHandler_2__IListViewBase__IContainerContentChangingEventArgs = Winapi.Microsoft.CommonTypes.TypedEventHandler_2__IListViewBase__IContainerContentChangingEventArgs;
  PTypedEventHandler_2__IListViewBase__IContainerContentChangingEventArgs = Winapi.Microsoft.CommonTypes.PTypedEventHandler_2__IListViewBase__IContainerContentChangingEventArgs;
  TypedEventHandler_2__IListViewBase__IDragItemsCompletedEventArgs_Delegate_Base = Winapi.Microsoft.CommonTypes.TypedEventHandler_2__IListViewBase__IDragItemsCompletedEventArgs_Delegate_Base;
  TypedEventHandler_2__IListViewBase__IDragItemsCompletedEventArgs = Winapi.Microsoft.CommonTypes.TypedEventHandler_2__IListViewBase__IDragItemsCompletedEventArgs;
  PTypedEventHandler_2__IListViewBase__IDragItemsCompletedEventArgs = Winapi.Microsoft.CommonTypes.PTypedEventHandler_2__IListViewBase__IDragItemsCompletedEventArgs;
  TypedEventHandler_2__INavigationView__INavigationViewDisplayModeChangedEventArgs_Delegate_Base = Winapi.Microsoft.CommonTypes.TypedEventHandler_2__INavigationView__INavigationViewDisplayModeChangedEventArgs_Delegate_Base;
  TypedEventHandler_2__INavigationView__INavigationViewDisplayModeChangedEventArgs = Winapi.Microsoft.CommonTypes.TypedEventHandler_2__INavigationView__INavigationViewDisplayModeChangedEventArgs;
  PTypedEventHandler_2__INavigationView__INavigationViewDisplayModeChangedEventArgs = Winapi.Microsoft.CommonTypes.PTypedEventHandler_2__INavigationView__INavigationViewDisplayModeChangedEventArgs;
  TypedEventHandler_2__INavigationView__INavigationViewItemInvokedEventArgs_Delegate_Base = Winapi.Microsoft.CommonTypes.TypedEventHandler_2__INavigationView__INavigationViewItemInvokedEventArgs_Delegate_Base;
  TypedEventHandler_2__INavigationView__INavigationViewItemInvokedEventArgs = Winapi.Microsoft.CommonTypes.TypedEventHandler_2__INavigationView__INavigationViewItemInvokedEventArgs;
  PTypedEventHandler_2__INavigationView__INavigationViewItemInvokedEventArgs = Winapi.Microsoft.CommonTypes.PTypedEventHandler_2__INavigationView__INavigationViewItemInvokedEventArgs;
  TypedEventHandler_2__INavigationView__INavigationViewSelectionChangedEventArgs_Delegate_Base = Winapi.Microsoft.CommonTypes.TypedEventHandler_2__INavigationView__INavigationViewSelectionChangedEventArgs_Delegate_Base;
  TypedEventHandler_2__INavigationView__INavigationViewSelectionChangedEventArgs = Winapi.Microsoft.CommonTypes.TypedEventHandler_2__INavigationView__INavigationViewSelectionChangedEventArgs;
  PTypedEventHandler_2__INavigationView__INavigationViewSelectionChangedEventArgs = Winapi.Microsoft.CommonTypes.PTypedEventHandler_2__INavigationView__INavigationViewSelectionChangedEventArgs;
  TypedEventHandler_2__ISplitView__ISplitViewPaneClosingEventArgs_Delegate_Base = Winapi.Microsoft.CommonTypes.TypedEventHandler_2__ISplitView__ISplitViewPaneClosingEventArgs_Delegate_Base;
  TypedEventHandler_2__ISplitView__ISplitViewPaneClosingEventArgs = Winapi.Microsoft.CommonTypes.TypedEventHandler_2__ISplitView__ISplitViewPaneClosingEventArgs;
  PTypedEventHandler_2__ISplitView__ISplitViewPaneClosingEventArgs = Winapi.Microsoft.CommonTypes.PTypedEventHandler_2__ISplitView__ISplitViewPaneClosingEventArgs;
  TypedEventHandler_2__ITabView__ITabViewTabCloseRequestedEventArgs_Delegate_Base = Winapi.Microsoft.CommonTypes.TypedEventHandler_2__ITabView__ITabViewTabCloseRequestedEventArgs_Delegate_Base;
  TypedEventHandler_2__ITabView__ITabViewTabCloseRequestedEventArgs = Winapi.Microsoft.CommonTypes.TypedEventHandler_2__ITabView__ITabViewTabCloseRequestedEventArgs;
  PTypedEventHandler_2__ITabView__ITabViewTabCloseRequestedEventArgs = Winapi.Microsoft.CommonTypes.PTypedEventHandler_2__ITabView__ITabViewTabCloseRequestedEventArgs;
  TypedEventHandler_2__ITabView__ITabViewTabDragCompletedEventArgs_Delegate_Base = Winapi.Microsoft.CommonTypes.TypedEventHandler_2__ITabView__ITabViewTabDragCompletedEventArgs_Delegate_Base;
  TypedEventHandler_2__ITabView__ITabViewTabDragCompletedEventArgs = Winapi.Microsoft.CommonTypes.TypedEventHandler_2__ITabView__ITabViewTabDragCompletedEventArgs;
  PTypedEventHandler_2__ITabView__ITabViewTabDragCompletedEventArgs = Winapi.Microsoft.CommonTypes.PTypedEventHandler_2__ITabView__ITabViewTabDragCompletedEventArgs;
  TypedEventHandler_2__ITabView__ITabViewTabDragStartingEventArgs_Delegate_Base = Winapi.Microsoft.CommonTypes.TypedEventHandler_2__ITabView__ITabViewTabDragStartingEventArgs_Delegate_Base;
  TypedEventHandler_2__ITabView__ITabViewTabDragStartingEventArgs = Winapi.Microsoft.CommonTypes.TypedEventHandler_2__ITabView__ITabViewTabDragStartingEventArgs;
  PTypedEventHandler_2__ITabView__ITabViewTabDragStartingEventArgs = Winapi.Microsoft.CommonTypes.PTypedEventHandler_2__ITabView__ITabViewTabDragStartingEventArgs;
  TypedEventHandler_2__ITabView__ITabViewTabDroppedOutsideEventArgs_Delegate_Base = Winapi.Microsoft.CommonTypes.TypedEventHandler_2__ITabView__ITabViewTabDroppedOutsideEventArgs_Delegate_Base;
  TypedEventHandler_2__ITabView__ITabViewTabDroppedOutsideEventArgs = Winapi.Microsoft.CommonTypes.TypedEventHandler_2__ITabView__ITabViewTabDroppedOutsideEventArgs;
  PTypedEventHandler_2__ITabView__ITabViewTabDroppedOutsideEventArgs = Winapi.Microsoft.CommonTypes.PTypedEventHandler_2__ITabView__ITabViewTabDroppedOutsideEventArgs;
  TypedEventHandler_2__ITabViewItem__ITabViewTabCloseRequestedEventArgs_Delegate_Base = Winapi.Microsoft.CommonTypes.TypedEventHandler_2__ITabViewItem__ITabViewTabCloseRequestedEventArgs_Delegate_Base;
  TypedEventHandler_2__ITabViewItem__ITabViewTabCloseRequestedEventArgs = Winapi.Microsoft.CommonTypes.TypedEventHandler_2__ITabViewItem__ITabViewTabCloseRequestedEventArgs;
  PTypedEventHandler_2__ITabViewItem__ITabViewTabCloseRequestedEventArgs = Winapi.Microsoft.CommonTypes.PTypedEventHandler_2__ITabViewItem__ITabViewTabCloseRequestedEventArgs;
  TypedEventHandler_2__ITeachingTip__ITeachingTipClosedEventArgs_Delegate_Base = Winapi.Microsoft.CommonTypes.TypedEventHandler_2__ITeachingTip__ITeachingTipClosedEventArgs_Delegate_Base;
  TypedEventHandler_2__ITeachingTip__ITeachingTipClosedEventArgs = Winapi.Microsoft.CommonTypes.TypedEventHandler_2__ITeachingTip__ITeachingTipClosedEventArgs;
  PTypedEventHandler_2__ITeachingTip__ITeachingTipClosedEventArgs = Winapi.Microsoft.CommonTypes.PTypedEventHandler_2__ITeachingTip__ITeachingTipClosedEventArgs;
  TypedEventHandler_2__ITeachingTip__ITeachingTipClosingEventArgs_Delegate_Base = Winapi.Microsoft.CommonTypes.TypedEventHandler_2__ITeachingTip__ITeachingTipClosingEventArgs_Delegate_Base;
  TypedEventHandler_2__ITeachingTip__ITeachingTipClosingEventArgs = Winapi.Microsoft.CommonTypes.TypedEventHandler_2__ITeachingTip__ITeachingTipClosingEventArgs;
  PTypedEventHandler_2__ITeachingTip__ITeachingTipClosingEventArgs = Winapi.Microsoft.CommonTypes.PTypedEventHandler_2__ITeachingTip__ITeachingTipClosingEventArgs;
  TypedEventHandler_2__IWebView2__ICoreWebView2InitializedEventArgs_Delegate_Base = Winapi.Microsoft.CommonTypes.TypedEventHandler_2__IWebView2__ICoreWebView2InitializedEventArgs_Delegate_Base;
  TypedEventHandler_2__IWebView2__ICoreWebView2InitializedEventArgs = Winapi.Microsoft.CommonTypes.TypedEventHandler_2__IWebView2__ICoreWebView2InitializedEventArgs;
  PTypedEventHandler_2__IWebView2__ICoreWebView2InitializedEventArgs = Winapi.Microsoft.CommonTypes.PTypedEventHandler_2__IWebView2__ICoreWebView2InitializedEventArgs;
  TypedEventHandler_2__Primitives_IFlyoutBase__Primitives_IFlyoutBaseClosingEventArgs_Delegate_Base = Winapi.Microsoft.CommonTypes.TypedEventHandler_2__Primitives_IFlyoutBase__Primitives_IFlyoutBaseClosingEventArgs_Delegate_Base;
  TypedEventHandler_2__Primitives_IFlyoutBase__Primitives_IFlyoutBaseClosingEventArgs = Winapi.Microsoft.CommonTypes.TypedEventHandler_2__Primitives_IFlyoutBase__Primitives_IFlyoutBaseClosingEventArgs;
  PTypedEventHandler_2__Primitives_IFlyoutBase__Primitives_IFlyoutBaseClosingEventArgs = Winapi.Microsoft.CommonTypes.PTypedEventHandler_2__Primitives_IFlyoutBase__Primitives_IFlyoutBaseClosingEventArgs;

  // Forward declarations for interfaces

  // Microsoft.UI.Xaml.Controls.IAnimatedVisual
  IAnimatedVisual = interface;
  PIAnimatedVisual = ^IAnimatedVisual;

  // Microsoft.UI.Xaml.Controls.IAnimatedVisualSource
  IAnimatedVisualSource = interface;
  PIAnimatedVisualSource = ^IAnimatedVisualSource;

  // Microsoft.UI.Xaml.Controls.IAnimatedVisualPlayer
  IAnimatedVisualPlayer = interface;
  PIAnimatedVisualPlayer = ^IAnimatedVisualPlayer;

  // Microsoft.UI.Xaml.Controls.Primitives.IAppBarTemplateSettings
  Primitives_IAppBarTemplateSettings = interface;
  PPrimitives_IAppBarTemplateSettings = ^Primitives_IAppBarTemplateSettings;

  // Microsoft.UI.Xaml.Controls.IAppBar
  IAppBar = interface;
  PIAppBar = ^IAppBar;

  // Microsoft.UI.Xaml.Controls.Primitives.IAppBarButtonTemplateSettings
  Primitives_IAppBarButtonTemplateSettings = interface;
  PPrimitives_IAppBarButtonTemplateSettings = ^Primitives_IAppBarButtonTemplateSettings;

  // Microsoft.UI.Xaml.Controls.IAppBarButton
  IAppBarButton = interface;
  PIAppBarButton = ^IAppBarButton;

  // Microsoft.UI.Xaml.Controls.Primitives.IAppBarToggleButtonTemplateSettings
  Primitives_IAppBarToggleButtonTemplateSettings = interface;
  PPrimitives_IAppBarToggleButtonTemplateSettings = ^Primitives_IAppBarToggleButtonTemplateSettings;

  // Microsoft.UI.Xaml.Controls.IAppBarToggleButton
  IAppBarToggleButton = interface;
  PIAppBarToggleButton = ^IAppBarToggleButton;

  // Microsoft.UI.Xaml.Controls.IBreadcrumbBarItem
  IBreadcrumbBarItem = interface;
  PIBreadcrumbBarItem = ^IBreadcrumbBarItem;

  // Microsoft.UI.Xaml.Controls.IButton
  IButton = interface;
  PIButton = ^IButton;

  // Microsoft.UI.Xaml.Controls.Primitives.ICalendarViewTemplateSettings
  Primitives_ICalendarViewTemplateSettings = interface;
  PPrimitives_ICalendarViewTemplateSettings = ^Primitives_ICalendarViewTemplateSettings;

  // Microsoft.UI.Xaml.Controls.ICalendarViewDayItem
  ICalendarViewDayItem = interface;
  PICalendarViewDayItem = ^ICalendarViewDayItem;

  // Microsoft.UI.Xaml.Controls.ICalendarViewDayItemChangingEventArgs
  ICalendarViewDayItemChangingEventArgs = interface;
  PICalendarViewDayItemChangingEventArgs = ^ICalendarViewDayItemChangingEventArgs;

  // Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.Controls.ICalendarView,Microsoft.UI.Xaml.Controls.ICalendarViewDayItemChangingEventArgs>
  TypedEventHandler_2__ICalendarView__ICalendarViewDayItemChangingEventArgs = interface;
  PTypedEventHandler_2__ICalendarView__ICalendarViewDayItemChangingEventArgs = ^TypedEventHandler_2__ICalendarView__ICalendarViewDayItemChangingEventArgs;

  // Microsoft.UI.Xaml.Controls.ICalendarViewSelectedDatesChangedEventArgs
  ICalendarViewSelectedDatesChangedEventArgs = interface;
  PICalendarViewSelectedDatesChangedEventArgs = ^ICalendarViewSelectedDatesChangedEventArgs;

  // Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.Controls.ICalendarView,Microsoft.UI.Xaml.Controls.ICalendarViewSelectedDatesChangedEventArgs>
  TypedEventHandler_2__ICalendarView__ICalendarViewSelectedDatesChangedEventArgs = interface;
  PTypedEventHandler_2__ICalendarView__ICalendarViewSelectedDatesChangedEventArgs = ^TypedEventHandler_2__ICalendarView__ICalendarViewSelectedDatesChangedEventArgs;

  // Microsoft.UI.Xaml.Controls.ICalendarView
  ICalendarView = interface;
  PICalendarView = ^ICalendarView;

  // Microsoft.UI.Xaml.Controls.CalendarViewDayItemChangingEventHandler
  CalendarViewDayItemChangingEventHandler = interface;
  PCalendarViewDayItemChangingEventHandler = ^CalendarViewDayItemChangingEventHandler;

  // Microsoft.UI.Xaml.Controls.ICalendarDatePickerDateChangedEventArgs
  ICalendarDatePickerDateChangedEventArgs = interface;
  PICalendarDatePickerDateChangedEventArgs = ^ICalendarDatePickerDateChangedEventArgs;

  // Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.Controls.ICalendarDatePicker,Microsoft.UI.Xaml.Controls.ICalendarDatePickerDateChangedEventArgs>
  TypedEventHandler_2__ICalendarDatePicker__ICalendarDatePickerDateChangedEventArgs = interface;
  PTypedEventHandler_2__ICalendarDatePicker__ICalendarDatePickerDateChangedEventArgs = ^TypedEventHandler_2__ICalendarDatePicker__ICalendarDatePickerDateChangedEventArgs;

  // Microsoft.UI.Xaml.Controls.ICalendarDatePicker
  ICalendarDatePicker = interface;
  PICalendarDatePicker = ^ICalendarDatePicker;

  // Microsoft.UI.Xaml.Controls.ICheckBox
  ICheckBox = interface;
  PICheckBox = ^ICheckBox;

  // Microsoft.UI.Xaml.Controls.Primitives.IColorPickerSlider
  Primitives_IColorPickerSlider = interface;
  PPrimitives_IColorPickerSlider = ^Primitives_IColorPickerSlider;

  // Microsoft.UI.Xaml.Controls.IColorChangedEventArgs
  IColorChangedEventArgs = interface;
  PIColorChangedEventArgs = ^IColorChangedEventArgs;

  // Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.Controls.Primitives.IColorSpectrum,Microsoft.UI.Xaml.Controls.IColorChangedEventArgs>
  TypedEventHandler_2__Primitives_IColorSpectrum__IColorChangedEventArgs = interface;
  PTypedEventHandler_2__Primitives_IColorSpectrum__IColorChangedEventArgs = ^TypedEventHandler_2__Primitives_IColorSpectrum__IColorChangedEventArgs;

  // Microsoft.UI.Xaml.Controls.Primitives.IColorSpectrum
  Primitives_IColorSpectrum = interface;
  PPrimitives_IColorSpectrum = ^Primitives_IColorSpectrum;

  // Microsoft.UI.Xaml.Controls.Primitives.IComboBoxTemplateSettings
  Primitives_IComboBoxTemplateSettings = interface;
  PPrimitives_IComboBoxTemplateSettings = ^Primitives_IComboBoxTemplateSettings;

  // Microsoft.UI.Xaml.Controls.IComboBoxTextSubmittedEventArgs
  IComboBoxTextSubmittedEventArgs = interface;
  PIComboBoxTextSubmittedEventArgs = ^IComboBoxTextSubmittedEventArgs;

  // Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.Controls.IComboBox,Microsoft.UI.Xaml.Controls.IComboBoxTextSubmittedEventArgs>
  TypedEventHandler_2__IComboBox__IComboBoxTextSubmittedEventArgs = interface;
  PTypedEventHandler_2__IComboBox__IComboBoxTextSubmittedEventArgs = ^TypedEventHandler_2__IComboBox__IComboBoxTextSubmittedEventArgs;

  // Microsoft.UI.Xaml.Controls.IComboBox
  IComboBox = interface;
  PIComboBox = ^IComboBox;

  // Microsoft.UI.Xaml.Controls.IComboBoxItem
  IComboBoxItem = interface;
  PIComboBoxItem = ^IComboBoxItem;

  // Microsoft.UI.Xaml.Controls.IDatePickerValueChangedEventArgs
  IDatePickerValueChangedEventArgs = interface;
  PIDatePickerValueChangedEventArgs = ^IDatePickerValueChangedEventArgs;

  // Windows.Foundation.EventHandler`1<Microsoft.UI.Xaml.Controls.IDatePickerValueChangedEventArgs>
  EventHandler_1__IDatePickerValueChangedEventArgs = interface;
  PEventHandler_1__IDatePickerValueChangedEventArgs = ^EventHandler_1__IDatePickerValueChangedEventArgs;

  // Microsoft.UI.Xaml.Controls.IDatePickerSelectedValueChangedEventArgs
  IDatePickerSelectedValueChangedEventArgs = interface;
  PIDatePickerSelectedValueChangedEventArgs = ^IDatePickerSelectedValueChangedEventArgs;

  // Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.Controls.IDatePicker,Microsoft.UI.Xaml.Controls.IDatePickerSelectedValueChangedEventArgs>
  TypedEventHandler_2__IDatePicker__IDatePickerSelectedValueChangedEventArgs = interface;
  PTypedEventHandler_2__IDatePicker__IDatePickerSelectedValueChangedEventArgs = ^TypedEventHandler_2__IDatePicker__IDatePickerSelectedValueChangedEventArgs;

  // Microsoft.UI.Xaml.Controls.IDatePicker
  IDatePicker = interface;
  PIDatePicker = ^IDatePicker;

  // Microsoft.UI.Xaml.Controls.IDropDownButton
  IDropDownButton = interface;
  PIDropDownButton = ^IDropDownButton;

  // Microsoft.UI.Xaml.Controls.IExpanderExpandingEventArgs
  IExpanderExpandingEventArgs = interface;
  PIExpanderExpandingEventArgs = ^IExpanderExpandingEventArgs;

  // Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.Controls.IExpander,Microsoft.UI.Xaml.Controls.IExpanderExpandingEventArgs>
  TypedEventHandler_2__IExpander__IExpanderExpandingEventArgs = interface;
  PTypedEventHandler_2__IExpander__IExpanderExpandingEventArgs = ^TypedEventHandler_2__IExpander__IExpanderExpandingEventArgs;

  // Microsoft.UI.Xaml.Controls.IExpanderCollapsedEventArgs
  IExpanderCollapsedEventArgs = interface;
  PIExpanderCollapsedEventArgs = ^IExpanderCollapsedEventArgs;

  // Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.Controls.IExpander,Microsoft.UI.Xaml.Controls.IExpanderCollapsedEventArgs>
  TypedEventHandler_2__IExpander__IExpanderCollapsedEventArgs = interface;
  PTypedEventHandler_2__IExpander__IExpanderCollapsedEventArgs = ^TypedEventHandler_2__IExpander__IExpanderCollapsedEventArgs;

  // Microsoft.UI.Xaml.Controls.IExpanderTemplateSettings
  IExpanderTemplateSettings = interface;
  PIExpanderTemplateSettings = ^IExpanderTemplateSettings;

  // Microsoft.UI.Xaml.Controls.IExpander
  IExpander = interface;
  PIExpander = ^IExpander;

  // Microsoft.UI.Xaml.Controls.IFlipView
  IFlipView = interface;
  PIFlipView = ^IFlipView;

  // Microsoft.UI.Xaml.Controls.IFlipViewItem
  IFlipViewItem = interface;
  PIFlipViewItem = ^IFlipViewItem;

  // Microsoft.UI.Xaml.Controls.IFlyoutPresenter
  IFlyoutPresenter = interface;
  PIFlyoutPresenter = ^IFlyoutPresenter;

  // Microsoft.UI.Xaml.Controls.IGridView
  IGridView = interface;
  PIGridView = ^IGridView;

  // Microsoft.UI.Xaml.Controls.IGridViewHeaderItem
  IGridViewHeaderItem = interface;
  PIGridViewHeaderItem = ^IGridViewHeaderItem;

  // Microsoft.UI.Xaml.Controls.Primitives.IGridViewItemTemplateSettings
  Primitives_IGridViewItemTemplateSettings = interface;
  PPrimitives_IGridViewItemTemplateSettings = ^Primitives_IGridViewItemTemplateSettings;

  // Microsoft.UI.Xaml.Controls.IGridViewItem
  IGridViewItem = interface;
  PIGridViewItem = ^IGridViewItem;

  // Microsoft.UI.Xaml.Controls.IGroupItem
  IGroupItem = interface;
  PIGroupItem = ^IGroupItem;

  // Microsoft.UI.Xaml.Controls.IHubSection
  IHubSection = interface;
  PIHubSection = ^IHubSection;

  // Windows.Foundation.Collections.IIterator`1<Microsoft.UI.Xaml.Controls.IHubSection>
  IIterator_1__IHubSection = interface;
  PIIterator_1__IHubSection = ^IIterator_1__IHubSection;

  // Windows.Foundation.Collections.IIterable`1<Microsoft.UI.Xaml.Controls.IHubSection>
  IIterable_1__IHubSection = interface;
  PIIterable_1__IHubSection = ^IIterable_1__IHubSection;

  // Windows.Foundation.Collections.IVectorView`1<Microsoft.UI.Xaml.Controls.IHubSection>
  IVectorView_1__IHubSection = interface;
  PIVectorView_1__IHubSection = ^IVectorView_1__IHubSection;

  // Windows.Foundation.Collections.IVector`1<Microsoft.UI.Xaml.Controls.IHubSection>
  IVector_1__IHubSection = interface;
  PIVector_1__IHubSection = ^IVector_1__IHubSection;

  // Microsoft.UI.Xaml.Controls.IHubSectionHeaderClickEventArgs
  IHubSectionHeaderClickEventArgs = interface;
  PIHubSectionHeaderClickEventArgs = ^IHubSectionHeaderClickEventArgs;

  // Microsoft.UI.Xaml.Controls.HubSectionHeaderClickEventHandler
  HubSectionHeaderClickEventHandler = interface;
  PHubSectionHeaderClickEventHandler = ^HubSectionHeaderClickEventHandler;

  // Microsoft.UI.Xaml.Controls.ISectionsInViewChangedEventArgs
  ISectionsInViewChangedEventArgs = interface;
  PISectionsInViewChangedEventArgs = ^ISectionsInViewChangedEventArgs;

  // Microsoft.UI.Xaml.Controls.SectionsInViewChangedEventHandler
  SectionsInViewChangedEventHandler = interface;
  PSectionsInViewChangedEventHandler = ^SectionsInViewChangedEventHandler;

  // Microsoft.UI.Xaml.Controls.IHub
  IHub = interface;
  PIHub = ^IHub;

  // Microsoft.UI.Xaml.Controls.IHyperlinkButton
  IHyperlinkButton = interface;
  PIHyperlinkButton = ^IHyperlinkButton;

  // Microsoft.UI.Xaml.Controls.IImage
  IImage = interface;
  PIImage = ^IImage;

  // Microsoft.UI.Xaml.Controls.IItemsPanelTemplate
  IItemsPanelTemplate = interface;
  PIItemsPanelTemplate = ^IItemsPanelTemplate;

  // Microsoft.UI.Xaml.Controls.IUIElementCollection
  IUIElementCollection = interface;
  PIUIElementCollection = ^IUIElementCollection;

  // Microsoft.UI.Xaml.Controls.IPanel
  IPanel = interface;
  PIPanel = ^IPanel;

  // Microsoft.UI.Xaml.Controls.Primitives.IItemsChangedEventArgs
  Primitives_IItemsChangedEventArgs = interface;
  PPrimitives_IItemsChangedEventArgs = ^Primitives_IItemsChangedEventArgs;

  // Microsoft.UI.Xaml.Controls.Primitives.ItemsChangedEventHandler
  Primitives_ItemsChangedEventHandler = interface;
  PPrimitives_ItemsChangedEventHandler = ^Primitives_ItemsChangedEventHandler;

  // Microsoft.UI.Xaml.Controls.IItemContainerGenerator
  IItemContainerGenerator = interface;
  PIItemContainerGenerator = ^IItemContainerGenerator;

  // Microsoft.UI.Xaml.Controls.IGroupStyle
  IGroupStyle = interface;
  PIGroupStyle = ^IGroupStyle;

  // Windows.Foundation.Collections.IIterator`1<Microsoft.UI.Xaml.Controls.IGroupStyle>
  IIterator_1__IGroupStyle = interface;
  PIIterator_1__IGroupStyle = ^IIterator_1__IGroupStyle;

  // Windows.Foundation.Collections.IIterable`1<Microsoft.UI.Xaml.Controls.IGroupStyle>
  IIterable_1__IGroupStyle = interface;
  PIIterable_1__IGroupStyle = ^IIterable_1__IGroupStyle;

  // Windows.Foundation.Collections.IVectorView`1<Microsoft.UI.Xaml.Controls.IGroupStyle>
  IVectorView_1__IGroupStyle = interface;
  PIVectorView_1__IGroupStyle = ^IVectorView_1__IGroupStyle;

  // Windows.Foundation.Collections.IVector`1<Microsoft.UI.Xaml.Controls.IGroupStyle>
  IVector_1__IGroupStyle = interface;
  PIVector_1__IGroupStyle = ^IVector_1__IGroupStyle;

  // Windows.Foundation.Collections.VectorChangedEventHandler`1<Microsoft.UI.Xaml.Controls.IGroupStyle>
  VectorChangedEventHandler_1__IGroupStyle = interface;
  PVectorChangedEventHandler_1__IGroupStyle = ^VectorChangedEventHandler_1__IGroupStyle;

  // Windows.Foundation.Collections.IObservableVector`1<Microsoft.UI.Xaml.Controls.IGroupStyle>
  IObservableVector_1__IGroupStyle = interface;
  PIObservableVector_1__IGroupStyle = ^IObservableVector_1__IGroupStyle;

  // Microsoft.UI.Xaml.Controls.IGroupStyleSelector
  IGroupStyleSelector = interface;
  PIGroupStyleSelector = ^IGroupStyleSelector;

  // Microsoft.UI.Xaml.Controls.IItemsControl
  IItemsControl = interface;
  PIItemsControl = ^IItemsControl;

  // Microsoft.UI.Xaml.Controls.IListBox
  IListBox = interface;
  PIListBox = ^IListBox;

  // Microsoft.UI.Xaml.Controls.IListBoxItem
  IListBoxItem = interface;
  PIListBoxItem = ^IListBoxItem;

  // Microsoft.UI.Xaml.Controls.IListView
  IListView = interface;
  PIListView = ^IListView;

  // Microsoft.UI.Xaml.Controls.IListViewHeaderItem
  IListViewHeaderItem = interface;
  PIListViewHeaderItem = ^IListViewHeaderItem;

  // Microsoft.UI.Xaml.Controls.Primitives.IListViewItemTemplateSettings
  Primitives_IListViewItemTemplateSettings = interface;
  PPrimitives_IListViewItemTemplateSettings = ^Primitives_IListViewItemTemplateSettings;

  // Microsoft.UI.Xaml.Controls.IListViewItem
  IListViewItem = interface;
  PIListViewItem = ^IListViewItem;

  // Microsoft.UI.Xaml.Controls.IMediaPlayerElement
  IMediaPlayerElement = interface;
  PIMediaPlayerElement = ^IMediaPlayerElement;

  // Microsoft.UI.Xaml.Controls.IMenuFlyoutItemBase
  IMenuFlyoutItemBase = interface;
  PIMenuFlyoutItemBase = ^IMenuFlyoutItemBase;

  // Windows.Foundation.Collections.IIterator`1<Microsoft.UI.Xaml.Controls.IMenuFlyoutItemBase>
  IIterator_1__IMenuFlyoutItemBase = interface;
  PIIterator_1__IMenuFlyoutItemBase = ^IIterator_1__IMenuFlyoutItemBase;

  // Windows.Foundation.Collections.IIterable`1<Microsoft.UI.Xaml.Controls.IMenuFlyoutItemBase>
  IIterable_1__IMenuFlyoutItemBase = interface;
  PIIterable_1__IMenuFlyoutItemBase = ^IIterable_1__IMenuFlyoutItemBase;

  // Windows.Foundation.Collections.IVectorView`1<Microsoft.UI.Xaml.Controls.IMenuFlyoutItemBase>
  IVectorView_1__IMenuFlyoutItemBase = interface;
  PIVectorView_1__IMenuFlyoutItemBase = ^IVectorView_1__IMenuFlyoutItemBase;

  // Windows.Foundation.Collections.IVector`1<Microsoft.UI.Xaml.Controls.IMenuFlyoutItemBase>
  IVector_1__IMenuFlyoutItemBase = interface;
  PIVector_1__IMenuFlyoutItemBase = ^IVector_1__IMenuFlyoutItemBase;

  // Microsoft.UI.Xaml.Controls.IMenuBarItem
  IMenuBarItem = interface;
  PIMenuBarItem = ^IMenuBarItem;

  // Windows.Foundation.Collections.IIterator`1<Microsoft.UI.Xaml.Controls.IMenuBarItem>
  IIterator_1__IMenuBarItem = interface;
  PIIterator_1__IMenuBarItem = ^IIterator_1__IMenuBarItem;

  // Windows.Foundation.Collections.IIterable`1<Microsoft.UI.Xaml.Controls.IMenuBarItem>
  IIterable_1__IMenuBarItem = interface;
  PIIterable_1__IMenuBarItem = ^IIterable_1__IMenuBarItem;

  // Windows.Foundation.Collections.IVectorView`1<Microsoft.UI.Xaml.Controls.IMenuBarItem>
  IVectorView_1__IMenuBarItem = interface;
  PIVectorView_1__IMenuBarItem = ^IVectorView_1__IMenuBarItem;

  // Windows.Foundation.Collections.IVector`1<Microsoft.UI.Xaml.Controls.IMenuBarItem>
  IVector_1__IMenuBarItem = interface;
  PIVector_1__IMenuBarItem = ^IVector_1__IMenuBarItem;

  // Microsoft.UI.Xaml.Controls.IMenuBar
  IMenuBar = interface;
  PIMenuBar = ^IMenuBar;

  // Microsoft.UI.Xaml.Controls.Primitives.IMenuFlyoutItemTemplateSettings
  Primitives_IMenuFlyoutItemTemplateSettings = interface;
  PPrimitives_IMenuFlyoutItemTemplateSettings = ^Primitives_IMenuFlyoutItemTemplateSettings;

  // Microsoft.UI.Xaml.Controls.IMenuFlyoutItem
  IMenuFlyoutItem = interface;
  PIMenuFlyoutItem = ^IMenuFlyoutItem;

  // Microsoft.UI.Xaml.Controls.Primitives.IMenuFlyoutPresenterTemplateSettings
  Primitives_IMenuFlyoutPresenterTemplateSettings = interface;
  PPrimitives_IMenuFlyoutPresenterTemplateSettings = ^Primitives_IMenuFlyoutPresenterTemplateSettings;

  // Microsoft.UI.Xaml.Controls.IMenuFlyoutPresenter
  IMenuFlyoutPresenter = interface;
  PIMenuFlyoutPresenter = ^IMenuFlyoutPresenter;

  // Microsoft.UI.Xaml.Controls.INavigationViewItem
  INavigationViewItem = interface;
  PINavigationViewItem = ^INavigationViewItem;

  // Microsoft.UI.Xaml.Controls.INumberBoxValueChangedEventArgs
  INumberBoxValueChangedEventArgs = interface;
  PINumberBoxValueChangedEventArgs = ^INumberBoxValueChangedEventArgs;

  // Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.Controls.INumberBox,Microsoft.UI.Xaml.Controls.INumberBoxValueChangedEventArgs>
  TypedEventHandler_2__INumberBox__INumberBoxValueChangedEventArgs = interface;
  PTypedEventHandler_2__INumberBox__INumberBoxValueChangedEventArgs = ^TypedEventHandler_2__INumberBox__INumberBoxValueChangedEventArgs;

  // Microsoft.UI.Xaml.Controls.INumberBox
  INumberBox = interface;
  PINumberBox = ^INumberBox;

  // Microsoft.UI.Xaml.Controls.IContextMenuEventArgs
  IContextMenuEventArgs = interface;
  PIContextMenuEventArgs = ^IContextMenuEventArgs;

  // Microsoft.UI.Xaml.Controls.ContextMenuOpeningEventHandler
  ContextMenuOpeningEventHandler = interface;
  PContextMenuOpeningEventHandler = ^ContextMenuOpeningEventHandler;

  // Microsoft.UI.Xaml.Controls.ITextControlPasteEventArgs
  ITextControlPasteEventArgs = interface;
  PITextControlPasteEventArgs = ^ITextControlPasteEventArgs;

  // Microsoft.UI.Xaml.Controls.TextControlPasteEventHandler
  TextControlPasteEventHandler = interface;
  PTextControlPasteEventHandler = ^TextControlPasteEventHandler;

  // Microsoft.UI.Xaml.Controls.IPasswordBoxPasswordChangingEventArgs
  IPasswordBoxPasswordChangingEventArgs = interface;
  PIPasswordBoxPasswordChangingEventArgs = ^IPasswordBoxPasswordChangingEventArgs;

  // Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.Controls.IPasswordBox,Microsoft.UI.Xaml.Controls.IPasswordBoxPasswordChangingEventArgs>
  TypedEventHandler_2__IPasswordBox__IPasswordBoxPasswordChangingEventArgs = interface;
  PTypedEventHandler_2__IPasswordBox__IPasswordBoxPasswordChangingEventArgs = ^TypedEventHandler_2__IPasswordBox__IPasswordBoxPasswordChangingEventArgs;

  // Microsoft.UI.Xaml.Controls.IPasswordBox
  IPasswordBox = interface;
  PIPasswordBox = ^IPasswordBox;

  // Microsoft.UI.Xaml.Controls.IPersonPictureTemplateSettings
  IPersonPictureTemplateSettings = interface;
  PIPersonPictureTemplateSettings = ^IPersonPictureTemplateSettings;

  // Microsoft.UI.Xaml.Controls.IPersonPicture
  IPersonPicture = interface;
  PIPersonPicture = ^IPersonPicture;

  // Microsoft.UI.Xaml.Controls.IPipsPagerSelectedIndexChangedEventArgs
  IPipsPagerSelectedIndexChangedEventArgs = interface;
  PIPipsPagerSelectedIndexChangedEventArgs = ^IPipsPagerSelectedIndexChangedEventArgs;

  // Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.Controls.IPipsPager,Microsoft.UI.Xaml.Controls.IPipsPagerSelectedIndexChangedEventArgs>
  TypedEventHandler_2__IPipsPager__IPipsPagerSelectedIndexChangedEventArgs = interface;
  PTypedEventHandler_2__IPipsPager__IPipsPagerSelectedIndexChangedEventArgs = ^TypedEventHandler_2__IPipsPager__IPipsPagerSelectedIndexChangedEventArgs;

  // Microsoft.UI.Xaml.Controls.IPipsPagerTemplateSettings
  IPipsPagerTemplateSettings = interface;
  PIPipsPagerTemplateSettings = ^IPipsPagerTemplateSettings;

  // Microsoft.UI.Xaml.Controls.IPipsPager
  IPipsPager = interface;
  PIPipsPager = ^IPipsPager;

  // Microsoft.UI.Xaml.Controls.IPivotItem
  IPivotItem = interface;
  PIPivotItem = ^IPivotItem;

  // Microsoft.UI.Xaml.Controls.IPivotItemEventArgs
  IPivotItemEventArgs = interface;
  PIPivotItemEventArgs = ^IPivotItemEventArgs;

  // Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.Controls.IPivot,Microsoft.UI.Xaml.Controls.IPivotItemEventArgs>
  TypedEventHandler_2__IPivot__IPivotItemEventArgs = interface;
  PTypedEventHandler_2__IPivot__IPivotItemEventArgs = ^TypedEventHandler_2__IPivot__IPivotItemEventArgs;

  // Microsoft.UI.Xaml.Controls.IPivot
  IPivot = interface;
  PIPivot = ^IPivot;

  // Microsoft.UI.Xaml.Controls.IProgressBarTemplateSettings
  IProgressBarTemplateSettings = interface;
  PIProgressBarTemplateSettings = ^IProgressBarTemplateSettings;

  // Microsoft.UI.Xaml.Controls.IProgressBar
  IProgressBar = interface;
  PIProgressBar = ^IProgressBar;

  // Microsoft.UI.Xaml.Controls.IProgressRingTemplateSettings
  IProgressRingTemplateSettings = interface;
  PIProgressRingTemplateSettings = ^IProgressRingTemplateSettings;

  // Microsoft.UI.Xaml.Controls.IProgressRing
  IProgressRing = interface;
  PIProgressRing = ^IProgressRing;

  // Microsoft.UI.Xaml.Controls.IRadioButton
  IRadioButton = interface;
  PIRadioButton = ^IRadioButton;

  // Microsoft.UI.Xaml.Controls.IRadioButtons
  IRadioButtons = interface;
  PIRadioButtons = ^IRadioButtons;

  // Microsoft.UI.Xaml.Controls.Primitives.IRangeBaseValueChangedEventArgs
  Primitives_IRangeBaseValueChangedEventArgs = interface;
  PPrimitives_IRangeBaseValueChangedEventArgs = ^Primitives_IRangeBaseValueChangedEventArgs;

  // Microsoft.UI.Xaml.Controls.Primitives.RangeBaseValueChangedEventHandler
  Primitives_RangeBaseValueChangedEventHandler = interface;
  PPrimitives_RangeBaseValueChangedEventHandler = ^Primitives_RangeBaseValueChangedEventHandler;

  // Microsoft.UI.Xaml.Controls.Primitives.IRangeBase
  Primitives_IRangeBase = interface;
  PPrimitives_IRangeBase = ^Primitives_IRangeBase;

  // Microsoft.UI.Xaml.Controls.Primitives.IRepeatButton
  Primitives_IRepeatButton = interface;
  PPrimitives_IRepeatButton = ^Primitives_IRepeatButton;

  // Microsoft.UI.Xaml.Controls.IItemsSourceView
  IItemsSourceView = interface;
  PIItemsSourceView = ^IItemsSourceView;

  // Microsoft.UI.Xaml.Controls.IItemsRepeaterElementPreparedEventArgs
  IItemsRepeaterElementPreparedEventArgs = interface;
  PIItemsRepeaterElementPreparedEventArgs = ^IItemsRepeaterElementPreparedEventArgs;

  // Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.Controls.IItemsRepeater,Microsoft.UI.Xaml.Controls.IItemsRepeaterElementPreparedEventArgs>
  TypedEventHandler_2__IItemsRepeater__IItemsRepeaterElementPreparedEventArgs = interface;
  PTypedEventHandler_2__IItemsRepeater__IItemsRepeaterElementPreparedEventArgs = ^TypedEventHandler_2__IItemsRepeater__IItemsRepeaterElementPreparedEventArgs;

  // Microsoft.UI.Xaml.Controls.IItemsRepeaterElementClearingEventArgs
  IItemsRepeaterElementClearingEventArgs = interface;
  PIItemsRepeaterElementClearingEventArgs = ^IItemsRepeaterElementClearingEventArgs;

  // Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.Controls.IItemsRepeater,Microsoft.UI.Xaml.Controls.IItemsRepeaterElementClearingEventArgs>
  TypedEventHandler_2__IItemsRepeater__IItemsRepeaterElementClearingEventArgs = interface;
  PTypedEventHandler_2__IItemsRepeater__IItemsRepeaterElementClearingEventArgs = ^TypedEventHandler_2__IItemsRepeater__IItemsRepeaterElementClearingEventArgs;

  // Microsoft.UI.Xaml.Controls.IItemsRepeaterElementIndexChangedEventArgs
  IItemsRepeaterElementIndexChangedEventArgs = interface;
  PIItemsRepeaterElementIndexChangedEventArgs = ^IItemsRepeaterElementIndexChangedEventArgs;

  // Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.Controls.IItemsRepeater,Microsoft.UI.Xaml.Controls.IItemsRepeaterElementIndexChangedEventArgs>
  TypedEventHandler_2__IItemsRepeater__IItemsRepeaterElementIndexChangedEventArgs = interface;
  PTypedEventHandler_2__IItemsRepeater__IItemsRepeaterElementIndexChangedEventArgs = ^TypedEventHandler_2__IItemsRepeater__IItemsRepeaterElementIndexChangedEventArgs;

  // Microsoft.UI.Xaml.Controls.IItemsRepeater
  IItemsRepeater = interface;
  PIItemsRepeater = ^IItemsRepeater;

  // Microsoft.UI.Xaml.Controls.ITextCompositionStartedEventArgs
  ITextCompositionStartedEventArgs = interface;
  PITextCompositionStartedEventArgs = ^ITextCompositionStartedEventArgs;

  // Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.Controls.IRichEditBox,Microsoft.UI.Xaml.Controls.ITextCompositionStartedEventArgs>
  TypedEventHandler_2__IRichEditBox__ITextCompositionStartedEventArgs = interface;
  PTypedEventHandler_2__IRichEditBox__ITextCompositionStartedEventArgs = ^TypedEventHandler_2__IRichEditBox__ITextCompositionStartedEventArgs;

  // Microsoft.UI.Xaml.Controls.ITextCompositionChangedEventArgs
  ITextCompositionChangedEventArgs = interface;
  PITextCompositionChangedEventArgs = ^ITextCompositionChangedEventArgs;

  // Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.Controls.IRichEditBox,Microsoft.UI.Xaml.Controls.ITextCompositionChangedEventArgs>
  TypedEventHandler_2__IRichEditBox__ITextCompositionChangedEventArgs = interface;
  PTypedEventHandler_2__IRichEditBox__ITextCompositionChangedEventArgs = ^TypedEventHandler_2__IRichEditBox__ITextCompositionChangedEventArgs;

  // Microsoft.UI.Xaml.Controls.ITextCompositionEndedEventArgs
  ITextCompositionEndedEventArgs = interface;
  PITextCompositionEndedEventArgs = ^ITextCompositionEndedEventArgs;

  // Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.Controls.IRichEditBox,Microsoft.UI.Xaml.Controls.ITextCompositionEndedEventArgs>
  TypedEventHandler_2__IRichEditBox__ITextCompositionEndedEventArgs = interface;
  PTypedEventHandler_2__IRichEditBox__ITextCompositionEndedEventArgs = ^TypedEventHandler_2__IRichEditBox__ITextCompositionEndedEventArgs;

  // Microsoft.UI.Xaml.Controls.ITextControlCopyingToClipboardEventArgs
  ITextControlCopyingToClipboardEventArgs = interface;
  PITextControlCopyingToClipboardEventArgs = ^ITextControlCopyingToClipboardEventArgs;

  // Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.Controls.IRichEditBox,Microsoft.UI.Xaml.Controls.ITextControlCopyingToClipboardEventArgs>
  TypedEventHandler_2__IRichEditBox__ITextControlCopyingToClipboardEventArgs = interface;
  PTypedEventHandler_2__IRichEditBox__ITextControlCopyingToClipboardEventArgs = ^TypedEventHandler_2__IRichEditBox__ITextControlCopyingToClipboardEventArgs;

  // Microsoft.UI.Xaml.Controls.ITextControlCuttingToClipboardEventArgs
  ITextControlCuttingToClipboardEventArgs = interface;
  PITextControlCuttingToClipboardEventArgs = ^ITextControlCuttingToClipboardEventArgs;

  // Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.Controls.IRichEditBox,Microsoft.UI.Xaml.Controls.ITextControlCuttingToClipboardEventArgs>
  TypedEventHandler_2__IRichEditBox__ITextControlCuttingToClipboardEventArgs = interface;
  PTypedEventHandler_2__IRichEditBox__ITextControlCuttingToClipboardEventArgs = ^TypedEventHandler_2__IRichEditBox__ITextControlCuttingToClipboardEventArgs;

  // Microsoft.UI.Xaml.Controls.IRichEditBoxSelectionChangingEventArgs
  IRichEditBoxSelectionChangingEventArgs = interface;
  PIRichEditBoxSelectionChangingEventArgs = ^IRichEditBoxSelectionChangingEventArgs;

  // Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.Controls.IRichEditBox,Microsoft.UI.Xaml.Controls.IRichEditBoxSelectionChangingEventArgs>
  TypedEventHandler_2__IRichEditBox__IRichEditBoxSelectionChangingEventArgs = interface;
  PTypedEventHandler_2__IRichEditBox__IRichEditBoxSelectionChangingEventArgs = ^TypedEventHandler_2__IRichEditBox__IRichEditBoxSelectionChangingEventArgs;

  // Microsoft.UI.Xaml.Controls.ICandidateWindowBoundsChangedEventArgs
  ICandidateWindowBoundsChangedEventArgs = interface;
  PICandidateWindowBoundsChangedEventArgs = ^ICandidateWindowBoundsChangedEventArgs;

  // Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.Controls.IRichEditBox,Microsoft.UI.Xaml.Controls.ICandidateWindowBoundsChangedEventArgs>
  TypedEventHandler_2__IRichEditBox__ICandidateWindowBoundsChangedEventArgs = interface;
  PTypedEventHandler_2__IRichEditBox__ICandidateWindowBoundsChangedEventArgs = ^TypedEventHandler_2__IRichEditBox__ICandidateWindowBoundsChangedEventArgs;

  // Microsoft.UI.Xaml.Controls.IRichEditBoxTextChangingEventArgs
  IRichEditBoxTextChangingEventArgs = interface;
  PIRichEditBoxTextChangingEventArgs = ^IRichEditBoxTextChangingEventArgs;

  // Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.Controls.IRichEditBox,Microsoft.UI.Xaml.Controls.IRichEditBoxTextChangingEventArgs>
  TypedEventHandler_2__IRichEditBox__IRichEditBoxTextChangingEventArgs = interface;
  PTypedEventHandler_2__IRichEditBox__IRichEditBoxTextChangingEventArgs = ^TypedEventHandler_2__IRichEditBox__IRichEditBoxTextChangingEventArgs;

  // Microsoft.UI.Xaml.Controls.IRichEditBox
  IRichEditBox = interface;
  PIRichEditBox = ^IRichEditBox;

  // Microsoft.UI.Xaml.Controls.IIsTextTrimmedChangedEventArgs
  IIsTextTrimmedChangedEventArgs = interface;
  PIIsTextTrimmedChangedEventArgs = ^IIsTextTrimmedChangedEventArgs;

  // Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.Controls.IRichTextBlockOverflow,Microsoft.UI.Xaml.Controls.IIsTextTrimmedChangedEventArgs>
  TypedEventHandler_2__IRichTextBlockOverflow__IIsTextTrimmedChangedEventArgs = interface;
  PTypedEventHandler_2__IRichTextBlockOverflow__IIsTextTrimmedChangedEventArgs = ^TypedEventHandler_2__IRichTextBlockOverflow__IIsTextTrimmedChangedEventArgs;

  // Microsoft.UI.Xaml.Controls.IRichTextBlockOverflow
  IRichTextBlockOverflow = interface;
  PIRichTextBlockOverflow = ^IRichTextBlockOverflow;

  // Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.Controls.IRichTextBlock,Microsoft.UI.Xaml.Controls.IIsTextTrimmedChangedEventArgs>
  TypedEventHandler_2__IRichTextBlock__IIsTextTrimmedChangedEventArgs = interface;
  PTypedEventHandler_2__IRichTextBlock__IIsTextTrimmedChangedEventArgs = ^TypedEventHandler_2__IRichTextBlock__IIsTextTrimmedChangedEventArgs;

  // Microsoft.UI.Xaml.Controls.IRichTextBlock
  IRichTextBlock = interface;
  PIRichTextBlock = ^IRichTextBlock;

  // Microsoft.UI.Xaml.Controls.Primitives.IScrollEventArgs
  Primitives_IScrollEventArgs = interface;
  PPrimitives_IScrollEventArgs = ^Primitives_IScrollEventArgs;

  // Microsoft.UI.Xaml.Controls.Primitives.ScrollEventHandler
  Primitives_ScrollEventHandler = interface;
  PPrimitives_ScrollEventHandler = ^Primitives_ScrollEventHandler;

  // Microsoft.UI.Xaml.Controls.Primitives.IScrollBar
  Primitives_IScrollBar = interface;
  PPrimitives_IScrollBar = ^Primitives_IScrollBar;

  // Microsoft.UI.Xaml.Controls.IAnchorRequestedEventArgs
  IAnchorRequestedEventArgs = interface;
  PIAnchorRequestedEventArgs = ^IAnchorRequestedEventArgs;

  // Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.Controls.IScrollViewer,Microsoft.UI.Xaml.Controls.IAnchorRequestedEventArgs>
  TypedEventHandler_2__IScrollViewer__IAnchorRequestedEventArgs = interface;
  PTypedEventHandler_2__IScrollViewer__IAnchorRequestedEventArgs = ^TypedEventHandler_2__IScrollViewer__IAnchorRequestedEventArgs;

  // Microsoft.UI.Xaml.Controls.IScrollViewerView
  IScrollViewerView = interface;
  PIScrollViewerView = ^IScrollViewerView;

  // Microsoft.UI.Xaml.Controls.IScrollViewerViewChangingEventArgs
  IScrollViewerViewChangingEventArgs = interface;
  PIScrollViewerViewChangingEventArgs = ^IScrollViewerViewChangingEventArgs;

  // Windows.Foundation.EventHandler`1<Microsoft.UI.Xaml.Controls.IScrollViewerViewChangingEventArgs>
  EventHandler_1__IScrollViewerViewChangingEventArgs = interface;
  PEventHandler_1__IScrollViewerViewChangingEventArgs = ^EventHandler_1__IScrollViewerViewChangingEventArgs;

  // Microsoft.UI.Xaml.Controls.IScrollViewerViewChangedEventArgs
  IScrollViewerViewChangedEventArgs = interface;
  PIScrollViewerViewChangedEventArgs = ^IScrollViewerViewChangedEventArgs;

  // Windows.Foundation.EventHandler`1<Microsoft.UI.Xaml.Controls.IScrollViewerViewChangedEventArgs>
  EventHandler_1__IScrollViewerViewChangedEventArgs = interface;
  PEventHandler_1__IScrollViewerViewChangedEventArgs = ^EventHandler_1__IScrollViewerViewChangedEventArgs;

  // Microsoft.UI.Xaml.Controls.IScrollViewer
  IScrollViewer = interface;
  PIScrollViewer = ^IScrollViewer;

  // Microsoft.UI.Xaml.Controls.Primitives.ISelector
  Primitives_ISelector = interface;
  PPrimitives_ISelector = ^Primitives_ISelector;

  // Microsoft.UI.Xaml.Controls.ISemanticZoomLocation
  ISemanticZoomLocation = interface;
  PISemanticZoomLocation = ^ISemanticZoomLocation;

  // Microsoft.UI.Xaml.Controls.ISemanticZoomInformation
  ISemanticZoomInformation = interface;
  PISemanticZoomInformation = ^ISemanticZoomInformation;

  // Microsoft.UI.Xaml.Controls.ISemanticZoomViewChangedEventArgs
  ISemanticZoomViewChangedEventArgs = interface;
  PISemanticZoomViewChangedEventArgs = ^ISemanticZoomViewChangedEventArgs;

  // Microsoft.UI.Xaml.Controls.SemanticZoomViewChangedEventHandler
  SemanticZoomViewChangedEventHandler = interface;
  PSemanticZoomViewChangedEventHandler = ^SemanticZoomViewChangedEventHandler;

  // Microsoft.UI.Xaml.Controls.ISemanticZoom
  ISemanticZoom = interface;
  PISemanticZoom = ^ISemanticZoom;

  // Microsoft.UI.Xaml.Controls.ISlider
  ISlider = interface;
  PISlider = ^ISlider;

  // Microsoft.UI.Xaml.Controls.ISplitButtonClickEventArgs
  ISplitButtonClickEventArgs = interface;
  PISplitButtonClickEventArgs = ^ISplitButtonClickEventArgs;

  // Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.Controls.ISplitButton,Microsoft.UI.Xaml.Controls.ISplitButtonClickEventArgs>
  TypedEventHandler_2__ISplitButton__ISplitButtonClickEventArgs = interface;
  PTypedEventHandler_2__ISplitButton__ISplitButtonClickEventArgs = ^TypedEventHandler_2__ISplitButton__ISplitButtonClickEventArgs;

  // Microsoft.UI.Xaml.Controls.ISplitButton
  ISplitButton = interface;
  PISplitButton = ^ISplitButton;

  // Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.Controls.ITextBlock,Microsoft.UI.Xaml.Controls.IIsTextTrimmedChangedEventArgs>
  TypedEventHandler_2__ITextBlock__IIsTextTrimmedChangedEventArgs = interface;
  PTypedEventHandler_2__ITextBlock__IIsTextTrimmedChangedEventArgs = ^TypedEventHandler_2__ITextBlock__IIsTextTrimmedChangedEventArgs;

  // Microsoft.UI.Xaml.Controls.ITextBlock
  ITextBlock = interface;
  PITextBlock = ^ITextBlock;

  // Microsoft.UI.Xaml.Controls.ITextChangedEventArgs
  ITextChangedEventArgs = interface;
  PITextChangedEventArgs = ^ITextChangedEventArgs;

  // Microsoft.UI.Xaml.Controls.TextChangedEventHandler
  TextChangedEventHandler = interface;
  PTextChangedEventHandler = ^TextChangedEventHandler;

  // Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.Controls.ITextBox,Microsoft.UI.Xaml.Controls.ITextCompositionStartedEventArgs>
  TypedEventHandler_2__ITextBox__ITextCompositionStartedEventArgs = interface;
  PTypedEventHandler_2__ITextBox__ITextCompositionStartedEventArgs = ^TypedEventHandler_2__ITextBox__ITextCompositionStartedEventArgs;

  // Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.Controls.ITextBox,Microsoft.UI.Xaml.Controls.ITextCompositionChangedEventArgs>
  TypedEventHandler_2__ITextBox__ITextCompositionChangedEventArgs = interface;
  PTypedEventHandler_2__ITextBox__ITextCompositionChangedEventArgs = ^TypedEventHandler_2__ITextBox__ITextCompositionChangedEventArgs;

  // Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.Controls.ITextBox,Microsoft.UI.Xaml.Controls.ITextCompositionEndedEventArgs>
  TypedEventHandler_2__ITextBox__ITextCompositionEndedEventArgs = interface;
  PTypedEventHandler_2__ITextBox__ITextCompositionEndedEventArgs = ^TypedEventHandler_2__ITextBox__ITextCompositionEndedEventArgs;

  // Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.Controls.ITextBox,Microsoft.UI.Xaml.Controls.ITextControlCopyingToClipboardEventArgs>
  TypedEventHandler_2__ITextBox__ITextControlCopyingToClipboardEventArgs = interface;
  PTypedEventHandler_2__ITextBox__ITextControlCopyingToClipboardEventArgs = ^TypedEventHandler_2__ITextBox__ITextControlCopyingToClipboardEventArgs;

  // Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.Controls.ITextBox,Microsoft.UI.Xaml.Controls.ITextControlCuttingToClipboardEventArgs>
  TypedEventHandler_2__ITextBox__ITextControlCuttingToClipboardEventArgs = interface;
  PTypedEventHandler_2__ITextBox__ITextControlCuttingToClipboardEventArgs = ^TypedEventHandler_2__ITextBox__ITextControlCuttingToClipboardEventArgs;

  // Microsoft.UI.Xaml.Controls.ITextBoxBeforeTextChangingEventArgs
  ITextBoxBeforeTextChangingEventArgs = interface;
  PITextBoxBeforeTextChangingEventArgs = ^ITextBoxBeforeTextChangingEventArgs;

  // Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.Controls.ITextBox,Microsoft.UI.Xaml.Controls.ITextBoxBeforeTextChangingEventArgs>
  TypedEventHandler_2__ITextBox__ITextBoxBeforeTextChangingEventArgs = interface;
  PTypedEventHandler_2__ITextBox__ITextBoxBeforeTextChangingEventArgs = ^TypedEventHandler_2__ITextBox__ITextBoxBeforeTextChangingEventArgs;

  // Microsoft.UI.Xaml.Controls.ITextBoxSelectionChangingEventArgs
  ITextBoxSelectionChangingEventArgs = interface;
  PITextBoxSelectionChangingEventArgs = ^ITextBoxSelectionChangingEventArgs;

  // Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.Controls.ITextBox,Microsoft.UI.Xaml.Controls.ITextBoxSelectionChangingEventArgs>
  TypedEventHandler_2__ITextBox__ITextBoxSelectionChangingEventArgs = interface;
  PTypedEventHandler_2__ITextBox__ITextBoxSelectionChangingEventArgs = ^TypedEventHandler_2__ITextBox__ITextBoxSelectionChangingEventArgs;

  // Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.Controls.ITextBox,Microsoft.UI.Xaml.Controls.ICandidateWindowBoundsChangedEventArgs>
  TypedEventHandler_2__ITextBox__ICandidateWindowBoundsChangedEventArgs = interface;
  PTypedEventHandler_2__ITextBox__ICandidateWindowBoundsChangedEventArgs = ^TypedEventHandler_2__ITextBox__ICandidateWindowBoundsChangedEventArgs;

  // Microsoft.UI.Xaml.Controls.ITextBoxTextChangingEventArgs
  ITextBoxTextChangingEventArgs = interface;
  PITextBoxTextChangingEventArgs = ^ITextBoxTextChangingEventArgs;

  // Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.Controls.ITextBox,Microsoft.UI.Xaml.Controls.ITextBoxTextChangingEventArgs>
  TypedEventHandler_2__ITextBox__ITextBoxTextChangingEventArgs = interface;
  PTypedEventHandler_2__ITextBox__ITextBoxTextChangingEventArgs = ^TypedEventHandler_2__ITextBox__ITextBoxTextChangingEventArgs;

  // Microsoft.UI.Xaml.Controls.ITextBox
  ITextBox = interface;
  PITextBox = ^ITextBox;

  // Microsoft.UI.Xaml.Controls.Primitives.IDragStartedEventArgs
  Primitives_IDragStartedEventArgs = interface;
  PPrimitives_IDragStartedEventArgs = ^Primitives_IDragStartedEventArgs;

  // Microsoft.UI.Xaml.Controls.Primitives.DragStartedEventHandler
  Primitives_DragStartedEventHandler = interface;
  PPrimitives_DragStartedEventHandler = ^Primitives_DragStartedEventHandler;

  // Microsoft.UI.Xaml.Controls.Primitives.IDragDeltaEventArgs
  Primitives_IDragDeltaEventArgs = interface;
  PPrimitives_IDragDeltaEventArgs = ^Primitives_IDragDeltaEventArgs;

  // Microsoft.UI.Xaml.Controls.Primitives.DragDeltaEventHandler
  Primitives_DragDeltaEventHandler = interface;
  PPrimitives_DragDeltaEventHandler = ^Primitives_DragDeltaEventHandler;

  // Microsoft.UI.Xaml.Controls.Primitives.IDragCompletedEventArgs
  Primitives_IDragCompletedEventArgs = interface;
  PPrimitives_IDragCompletedEventArgs = ^Primitives_IDragCompletedEventArgs;

  // Microsoft.UI.Xaml.Controls.Primitives.DragCompletedEventHandler
  Primitives_DragCompletedEventHandler = interface;
  PPrimitives_DragCompletedEventHandler = ^Primitives_DragCompletedEventHandler;

  // Microsoft.UI.Xaml.Controls.Primitives.IThumb
  Primitives_IThumb = interface;
  PPrimitives_IThumb = ^Primitives_IThumb;

  // Microsoft.UI.Xaml.Controls.ITimePickerValueChangedEventArgs
  ITimePickerValueChangedEventArgs = interface;
  PITimePickerValueChangedEventArgs = ^ITimePickerValueChangedEventArgs;

  // Windows.Foundation.EventHandler`1<Microsoft.UI.Xaml.Controls.ITimePickerValueChangedEventArgs>
  EventHandler_1__ITimePickerValueChangedEventArgs = interface;
  PEventHandler_1__ITimePickerValueChangedEventArgs = ^EventHandler_1__ITimePickerValueChangedEventArgs;

  // Microsoft.UI.Xaml.Controls.ITimePickerSelectedValueChangedEventArgs
  ITimePickerSelectedValueChangedEventArgs = interface;
  PITimePickerSelectedValueChangedEventArgs = ^ITimePickerSelectedValueChangedEventArgs;

  // Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.Controls.ITimePicker,Microsoft.UI.Xaml.Controls.ITimePickerSelectedValueChangedEventArgs>
  TypedEventHandler_2__ITimePicker__ITimePickerSelectedValueChangedEventArgs = interface;
  PTypedEventHandler_2__ITimePicker__ITimePickerSelectedValueChangedEventArgs = ^TypedEventHandler_2__ITimePicker__ITimePickerSelectedValueChangedEventArgs;

  // Microsoft.UI.Xaml.Controls.ITimePicker
  ITimePicker = interface;
  PITimePicker = ^ITimePicker;

  // Microsoft.UI.Xaml.Controls.Primitives.IToggleButton
  Primitives_IToggleButton = interface;
  PPrimitives_IToggleButton = ^Primitives_IToggleButton;

  // Microsoft.UI.Xaml.Controls.IToggleMenuFlyoutItem
  IToggleMenuFlyoutItem = interface;
  PIToggleMenuFlyoutItem = ^IToggleMenuFlyoutItem;

  // Microsoft.UI.Xaml.Controls.IToggleSplitButtonIsCheckedChangedEventArgs
  IToggleSplitButtonIsCheckedChangedEventArgs = interface;
  PIToggleSplitButtonIsCheckedChangedEventArgs = ^IToggleSplitButtonIsCheckedChangedEventArgs;

  // Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.Controls.IToggleSplitButton,Microsoft.UI.Xaml.Controls.IToggleSplitButtonIsCheckedChangedEventArgs>
  TypedEventHandler_2__IToggleSplitButton__IToggleSplitButtonIsCheckedChangedEventArgs = interface;
  PTypedEventHandler_2__IToggleSplitButton__IToggleSplitButtonIsCheckedChangedEventArgs = ^TypedEventHandler_2__IToggleSplitButton__IToggleSplitButtonIsCheckedChangedEventArgs;

  // Microsoft.UI.Xaml.Controls.IToggleSplitButton
  IToggleSplitButton = interface;
  PIToggleSplitButton = ^IToggleSplitButton;

  // Microsoft.UI.Xaml.Controls.Primitives.IToggleSwitchTemplateSettings
  Primitives_IToggleSwitchTemplateSettings = interface;
  PPrimitives_IToggleSwitchTemplateSettings = ^Primitives_IToggleSwitchTemplateSettings;

  // Microsoft.UI.Xaml.Controls.IToggleSwitch
  IToggleSwitch = interface;
  PIToggleSwitch = ^IToggleSwitch;

  // Microsoft.UI.Xaml.Controls.ITreeViewItemTemplateSettings
  ITreeViewItemTemplateSettings = interface;
  PITreeViewItemTemplateSettings = ^ITreeViewItemTemplateSettings;

  // Microsoft.UI.Xaml.Controls.ITreeViewItem
  ITreeViewItem = interface;
  PITreeViewItem = ^ITreeViewItem;

  // Microsoft.UI.Xaml.Controls.ITreeViewList
  ITreeViewList = interface;
  PITreeViewList = ^ITreeViewList;

  // Microsoft.UI.Xaml.Controls.ICleanUpVirtualizedItemEventArgs
  ICleanUpVirtualizedItemEventArgs = interface;
  PICleanUpVirtualizedItemEventArgs = ^ICleanUpVirtualizedItemEventArgs;

  // Microsoft.UI.Xaml.Controls.CleanUpVirtualizedItemEventHandler
  CleanUpVirtualizedItemEventHandler = interface;
  PCleanUpVirtualizedItemEventHandler = ^CleanUpVirtualizedItemEventHandler;

  // Microsoft.UI.Xaml.Controls.IAnimatedVisualSource2
  IAnimatedVisualSource2 = interface;
  PIAnimatedVisualSource2 = ^IAnimatedVisualSource2;

  // Microsoft.UI.Xaml.Controls.IAnimatedIcon
  IAnimatedIcon = interface;
  PIAnimatedIcon = ^IAnimatedIcon;

  // Microsoft.UI.Xaml.Controls.IAnimatedIconFactory
  IAnimatedIconFactory = interface;
  PIAnimatedIconFactory = ^IAnimatedIconFactory;

  // Microsoft.UI.Xaml.Controls.IAnimatedIconSource
  IAnimatedIconSource = interface;
  PIAnimatedIconSource = ^IAnimatedIconSource;

  // Microsoft.UI.Xaml.Controls.IAnimatedIconSourceFactory
  IAnimatedIconSourceFactory = interface;
  PIAnimatedIconSourceFactory = ^IAnimatedIconSourceFactory;

  // Microsoft.UI.Xaml.Controls.IAnimatedIconSourceStatics
  IAnimatedIconSourceStatics = interface;
  PIAnimatedIconSourceStatics = ^IAnimatedIconSourceStatics;

  // Microsoft.UI.Xaml.Controls.IAnimatedIconStatics
  IAnimatedIconStatics = interface;
  PIAnimatedIconStatics = ^IAnimatedIconStatics;

  // Microsoft.UI.Xaml.Controls.IAnimatedVisual2
  IAnimatedVisual2 = interface;
  PIAnimatedVisual2 = ^IAnimatedVisual2;

  // Microsoft.UI.Xaml.Controls.IAnimatedVisualPlayer2
  IAnimatedVisualPlayer2 = interface;
  PIAnimatedVisualPlayer2 = ^IAnimatedVisualPlayer2;

  // Microsoft.UI.Xaml.Controls.IAnimatedVisualPlayerFactory
  IAnimatedVisualPlayerFactory = interface;
  PIAnimatedVisualPlayerFactory = ^IAnimatedVisualPlayerFactory;

  // Microsoft.UI.Xaml.Controls.IAnimatedVisualPlayerStatics
  IAnimatedVisualPlayerStatics = interface;
  PIAnimatedVisualPlayerStatics = ^IAnimatedVisualPlayerStatics;

  // Microsoft.UI.Xaml.Controls.IAnimatedVisualPlayerStatics2
  IAnimatedVisualPlayerStatics2 = interface;
  PIAnimatedVisualPlayerStatics2 = ^IAnimatedVisualPlayerStatics2;

  // Microsoft.UI.Xaml.Controls.IAnimatedVisualSource3
  IAnimatedVisualSource3 = interface;
  PIAnimatedVisualSource3 = ^IAnimatedVisualSource3;

  // Microsoft.UI.Xaml.Controls.IAppBarButtonFactory
  IAppBarButtonFactory = interface;
  PIAppBarButtonFactory = ^IAppBarButtonFactory;

  // Microsoft.UI.Xaml.Controls.IAppBarButtonStatics
  IAppBarButtonStatics = interface;
  PIAppBarButtonStatics = ^IAppBarButtonStatics;

  // Microsoft.UI.Xaml.Controls.IAppBarElementContainer
  IAppBarElementContainer = interface;
  PIAppBarElementContainer = ^IAppBarElementContainer;

  // Microsoft.UI.Xaml.Controls.IAppBarElementContainerFactory
  IAppBarElementContainerFactory = interface;
  PIAppBarElementContainerFactory = ^IAppBarElementContainerFactory;

  // Microsoft.UI.Xaml.Controls.IAppBarElementContainerStatics
  IAppBarElementContainerStatics = interface;
  PIAppBarElementContainerStatics = ^IAppBarElementContainerStatics;

  // Microsoft.UI.Xaml.Controls.IAppBarFactory
  IAppBarFactory = interface;
  PIAppBarFactory = ^IAppBarFactory;

  // Microsoft.UI.Xaml.Controls.IAppBarOverrides
  IAppBarOverrides = interface;
  PIAppBarOverrides = ^IAppBarOverrides;

  // Microsoft.UI.Xaml.Controls.IAppBarSeparator
  IAppBarSeparator = interface;
  PIAppBarSeparator = ^IAppBarSeparator;

  // Microsoft.UI.Xaml.Controls.IAppBarSeparatorFactory
  IAppBarSeparatorFactory = interface;
  PIAppBarSeparatorFactory = ^IAppBarSeparatorFactory;

  // Microsoft.UI.Xaml.Controls.IAppBarSeparatorStatics
  IAppBarSeparatorStatics = interface;
  PIAppBarSeparatorStatics = ^IAppBarSeparatorStatics;

  // Microsoft.UI.Xaml.Controls.IAppBarStatics
  IAppBarStatics = interface;
  PIAppBarStatics = ^IAppBarStatics;

  // Microsoft.UI.Xaml.Controls.IAppBarToggleButtonFactory
  IAppBarToggleButtonFactory = interface;
  PIAppBarToggleButtonFactory = ^IAppBarToggleButtonFactory;

  // Microsoft.UI.Xaml.Controls.IAppBarToggleButtonStatics
  IAppBarToggleButtonStatics = interface;
  PIAppBarToggleButtonStatics = ^IAppBarToggleButtonStatics;

  // Microsoft.UI.Xaml.Controls.IAutoSuggestBoxStatics
  IAutoSuggestBoxStatics = interface;
  PIAutoSuggestBoxStatics = ^IAutoSuggestBoxStatics;

  // Microsoft.UI.Xaml.Controls.IAutoSuggestBoxTextChangedEventArgsStatics
  IAutoSuggestBoxTextChangedEventArgsStatics = interface;
  PIAutoSuggestBoxTextChangedEventArgsStatics = ^IAutoSuggestBoxTextChangedEventArgsStatics;

  // Microsoft.UI.Xaml.Controls.IBitmapIcon
  IBitmapIcon = interface;
  PIBitmapIcon = ^IBitmapIcon;

  // Microsoft.UI.Xaml.Controls.IBitmapIconFactory
  IBitmapIconFactory = interface;
  PIBitmapIconFactory = ^IBitmapIconFactory;

  // Microsoft.UI.Xaml.Controls.IBitmapIconSource
  IBitmapIconSource = interface;
  PIBitmapIconSource = ^IBitmapIconSource;

  // Microsoft.UI.Xaml.Controls.IBitmapIconSourceFactory
  IBitmapIconSourceFactory = interface;
  PIBitmapIconSourceFactory = ^IBitmapIconSourceFactory;

  // Microsoft.UI.Xaml.Controls.IBitmapIconSourceStatics
  IBitmapIconSourceStatics = interface;
  PIBitmapIconSourceStatics = ^IBitmapIconSourceStatics;

  // Microsoft.UI.Xaml.Controls.IBitmapIconStatics
  IBitmapIconStatics = interface;
  PIBitmapIconStatics = ^IBitmapIconStatics;

  // Microsoft.UI.Xaml.Controls.IBorder
  IBorder = interface;
  PIBorder = ^IBorder;

  // Microsoft.UI.Xaml.Controls.IBorderStatics
  IBorderStatics = interface;
  PIBorderStatics = ^IBorderStatics;

  // Microsoft.UI.Xaml.Controls.IBreadcrumbBarItemClickedEventArgs
  IBreadcrumbBarItemClickedEventArgs = interface;
  PIBreadcrumbBarItemClickedEventArgs = ^IBreadcrumbBarItemClickedEventArgs;

  // Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.Controls.IBreadcrumbBar,Microsoft.UI.Xaml.Controls.IBreadcrumbBarItemClickedEventArgs>
  TypedEventHandler_2__IBreadcrumbBar__IBreadcrumbBarItemClickedEventArgs = interface;
  PTypedEventHandler_2__IBreadcrumbBar__IBreadcrumbBarItemClickedEventArgs = ^TypedEventHandler_2__IBreadcrumbBar__IBreadcrumbBarItemClickedEventArgs;

  // Microsoft.UI.Xaml.Controls.IBreadcrumbBar
  IBreadcrumbBar = interface;
  PIBreadcrumbBar = ^IBreadcrumbBar;

  // Microsoft.UI.Xaml.Controls.IBreadcrumbBarFactory
  IBreadcrumbBarFactory = interface;
  PIBreadcrumbBarFactory = ^IBreadcrumbBarFactory;

  // Microsoft.UI.Xaml.Controls.IBreadcrumbBarItemFactory
  IBreadcrumbBarItemFactory = interface;
  PIBreadcrumbBarItemFactory = ^IBreadcrumbBarItemFactory;

  // Microsoft.UI.Xaml.Controls.IBreadcrumbBarStatics
  IBreadcrumbBarStatics = interface;
  PIBreadcrumbBarStatics = ^IBreadcrumbBarStatics;

  // Microsoft.UI.Xaml.Controls.IButtonFactory
  IButtonFactory = interface;
  PIButtonFactory = ^IButtonFactory;

  // Microsoft.UI.Xaml.Controls.IButtonStatics
  IButtonStatics = interface;
  PIButtonStatics = ^IButtonStatics;

  // Microsoft.UI.Xaml.Controls.ICalendarDatePickerFactory
  ICalendarDatePickerFactory = interface;
  PICalendarDatePickerFactory = ^ICalendarDatePickerFactory;

  // Microsoft.UI.Xaml.Controls.ICalendarDatePickerStatics
  ICalendarDatePickerStatics = interface;
  PICalendarDatePickerStatics = ^ICalendarDatePickerStatics;

  // Microsoft.UI.Xaml.Controls.ICalendarViewDayItemFactory
  ICalendarViewDayItemFactory = interface;
  PICalendarViewDayItemFactory = ^ICalendarViewDayItemFactory;

  // Microsoft.UI.Xaml.Controls.ICalendarViewDayItemStatics
  ICalendarViewDayItemStatics = interface;
  PICalendarViewDayItemStatics = ^ICalendarViewDayItemStatics;

  // Microsoft.UI.Xaml.Controls.ICalendarViewFactory
  ICalendarViewFactory = interface;
  PICalendarViewFactory = ^ICalendarViewFactory;

  // Microsoft.UI.Xaml.Controls.ICalendarViewStatics
  ICalendarViewStatics = interface;
  PICalendarViewStatics = ^ICalendarViewStatics;

  // Microsoft.UI.Xaml.Controls.ICanvas
  ICanvas = interface;
  PICanvas = ^ICanvas;

  // Microsoft.UI.Xaml.Controls.ICanvasFactory
  ICanvasFactory = interface;
  PICanvasFactory = ^ICanvasFactory;

  // Microsoft.UI.Xaml.Controls.ICanvasStatics
  ICanvasStatics = interface;
  PICanvasStatics = ^ICanvasStatics;

  // Microsoft.UI.Xaml.Controls.ICheckBoxFactory
  ICheckBoxFactory = interface;
  PICheckBoxFactory = ^ICheckBoxFactory;

  // Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.Controls.IColorPicker,Microsoft.UI.Xaml.Controls.IColorChangedEventArgs>
  TypedEventHandler_2__IColorPicker__IColorChangedEventArgs = interface;
  PTypedEventHandler_2__IColorPicker__IColorChangedEventArgs = ^TypedEventHandler_2__IColorPicker__IColorChangedEventArgs;

  // Microsoft.UI.Xaml.Controls.IColorPicker
  IColorPicker = interface;
  PIColorPicker = ^IColorPicker;

  // Microsoft.UI.Xaml.Controls.IColorPicker2
  IColorPicker2 = interface;
  PIColorPicker2 = ^IColorPicker2;

  // Microsoft.UI.Xaml.Controls.IColorPickerFactory
  IColorPickerFactory = interface;
  PIColorPickerFactory = ^IColorPickerFactory;

  // Microsoft.UI.Xaml.Controls.IColorPickerStatics
  IColorPickerStatics = interface;
  PIColorPickerStatics = ^IColorPickerStatics;

  // Microsoft.UI.Xaml.Controls.IColorPickerStatics2
  IColorPickerStatics2 = interface;
  PIColorPickerStatics2 = ^IColorPickerStatics2;

  // Microsoft.UI.Xaml.Controls.IColumnDefinition
  IColumnDefinition = interface;
  PIColumnDefinition = ^IColumnDefinition;

  // Microsoft.UI.Xaml.Controls.IColumnDefinitionStatics
  IColumnDefinitionStatics = interface;
  PIColumnDefinitionStatics = ^IColumnDefinitionStatics;

  // Microsoft.UI.Xaml.Controls.IComboBoxFactory
  IComboBoxFactory = interface;
  PIComboBoxFactory = ^IComboBoxFactory;

  // Microsoft.UI.Xaml.Controls.IComboBoxItemFactory
  IComboBoxItemFactory = interface;
  PIComboBoxItemFactory = ^IComboBoxItemFactory;

  // Microsoft.UI.Xaml.Controls.IComboBoxOverrides
  IComboBoxOverrides = interface;
  PIComboBoxOverrides = ^IComboBoxOverrides;

  // Microsoft.UI.Xaml.Controls.IComboBoxStatics
  IComboBoxStatics = interface;
  PIComboBoxStatics = ^IComboBoxStatics;

  // Microsoft.UI.Xaml.Controls.ICommandBarElement
  ICommandBarElement = interface;
  PICommandBarElement = ^ICommandBarElement;

  // Windows.Foundation.Collections.IIterator`1<Microsoft.UI.Xaml.Controls.ICommandBarElement>
  IIterator_1__ICommandBarElement = interface;
  PIIterator_1__ICommandBarElement = ^IIterator_1__ICommandBarElement;

  // Windows.Foundation.Collections.IIterable`1<Microsoft.UI.Xaml.Controls.ICommandBarElement>
  IIterable_1__ICommandBarElement = interface;
  PIIterable_1__ICommandBarElement = ^IIterable_1__ICommandBarElement;

  // Windows.Foundation.Collections.IVectorView`1<Microsoft.UI.Xaml.Controls.ICommandBarElement>
  IVectorView_1__ICommandBarElement = interface;
  PIVectorView_1__ICommandBarElement = ^IVectorView_1__ICommandBarElement;

  // Windows.Foundation.Collections.IVector`1<Microsoft.UI.Xaml.Controls.ICommandBarElement>
  IVector_1__ICommandBarElement = interface;
  PIVector_1__ICommandBarElement = ^IVector_1__ICommandBarElement;

  // Windows.Foundation.Collections.VectorChangedEventHandler`1<Microsoft.UI.Xaml.Controls.ICommandBarElement>
  VectorChangedEventHandler_1__ICommandBarElement = interface;
  PVectorChangedEventHandler_1__ICommandBarElement = ^VectorChangedEventHandler_1__ICommandBarElement;

  // Windows.Foundation.Collections.IObservableVector`1<Microsoft.UI.Xaml.Controls.ICommandBarElement>
  IObservableVector_1__ICommandBarElement = interface;
  PIObservableVector_1__ICommandBarElement = ^IObservableVector_1__ICommandBarElement;

  // Microsoft.UI.Xaml.Controls.Primitives.ICommandBarTemplateSettings
  Primitives_ICommandBarTemplateSettings = interface;
  PPrimitives_ICommandBarTemplateSettings = ^Primitives_ICommandBarTemplateSettings;

  // Microsoft.UI.Xaml.Controls.IDynamicOverflowItemsChangingEventArgs
  IDynamicOverflowItemsChangingEventArgs = interface;
  PIDynamicOverflowItemsChangingEventArgs = ^IDynamicOverflowItemsChangingEventArgs;

  // Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.Controls.ICommandBar,Microsoft.UI.Xaml.Controls.IDynamicOverflowItemsChangingEventArgs>
  TypedEventHandler_2__ICommandBar__IDynamicOverflowItemsChangingEventArgs = interface;
  PTypedEventHandler_2__ICommandBar__IDynamicOverflowItemsChangingEventArgs = ^TypedEventHandler_2__ICommandBar__IDynamicOverflowItemsChangingEventArgs;

  // Microsoft.UI.Xaml.Controls.ICommandBar
  ICommandBar = interface;
  PICommandBar = ^ICommandBar;

  // Microsoft.UI.Xaml.Controls.ICommandBarFactory
  ICommandBarFactory = interface;
  PICommandBarFactory = ^ICommandBarFactory;

  // Microsoft.UI.Xaml.Controls.ICommandBarFlyout
  ICommandBarFlyout = interface;
  PICommandBarFlyout = ^ICommandBarFlyout;

  // Microsoft.UI.Xaml.Controls.ICommandBarFlyout2
  ICommandBarFlyout2 = interface;
  PICommandBarFlyout2 = ^ICommandBarFlyout2;

  // Microsoft.UI.Xaml.Controls.ICommandBarFlyoutFactory
  ICommandBarFlyoutFactory = interface;
  PICommandBarFlyoutFactory = ^ICommandBarFlyoutFactory;

  // Microsoft.UI.Xaml.Controls.ICommandBarOverflowPresenter
  ICommandBarOverflowPresenter = interface;
  PICommandBarOverflowPresenter = ^ICommandBarOverflowPresenter;

  // Microsoft.UI.Xaml.Controls.ICommandBarOverflowPresenterFactory
  ICommandBarOverflowPresenterFactory = interface;
  PICommandBarOverflowPresenterFactory = ^ICommandBarOverflowPresenterFactory;

  // Microsoft.UI.Xaml.Controls.ICommandBarStatics
  ICommandBarStatics = interface;
  PICommandBarStatics = ^ICommandBarStatics;

  // Microsoft.UI.Xaml.Controls.IContentControl
  IContentControl = interface;
  PIContentControl = ^IContentControl;

  // Microsoft.UI.Xaml.Controls.IContentControlFactory
  IContentControlFactory = interface;
  PIContentControlFactory = ^IContentControlFactory;

  // Microsoft.UI.Xaml.Controls.IContentControlOverrides
  IContentControlOverrides = interface;
  PIContentControlOverrides = ^IContentControlOverrides;

  // Microsoft.UI.Xaml.Controls.IContentControlStatics
  IContentControlStatics = interface;
  PIContentControlStatics = ^IContentControlStatics;

  // Microsoft.UI.Xaml.Controls.IContentDialogClosingDeferral
  IContentDialogClosingDeferral = interface;
  PIContentDialogClosingDeferral = ^IContentDialogClosingDeferral;

  // Microsoft.UI.Xaml.Controls.IContentDialogClosingEventArgs
  IContentDialogClosingEventArgs = interface;
  PIContentDialogClosingEventArgs = ^IContentDialogClosingEventArgs;

  // Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.Controls.IContentDialog,Microsoft.UI.Xaml.Controls.IContentDialogClosingEventArgs>
  TypedEventHandler_2__IContentDialog__IContentDialogClosingEventArgs = interface;
  PTypedEventHandler_2__IContentDialog__IContentDialogClosingEventArgs = ^TypedEventHandler_2__IContentDialog__IContentDialogClosingEventArgs;

  // Microsoft.UI.Xaml.Controls.IContentDialogClosedEventArgs
  IContentDialogClosedEventArgs = interface;
  PIContentDialogClosedEventArgs = ^IContentDialogClosedEventArgs;

  // Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.Controls.IContentDialog,Microsoft.UI.Xaml.Controls.IContentDialogClosedEventArgs>
  TypedEventHandler_2__IContentDialog__IContentDialogClosedEventArgs = interface;
  PTypedEventHandler_2__IContentDialog__IContentDialogClosedEventArgs = ^TypedEventHandler_2__IContentDialog__IContentDialogClosedEventArgs;

  // Microsoft.UI.Xaml.Controls.IContentDialogOpenedEventArgs
  IContentDialogOpenedEventArgs = interface;
  PIContentDialogOpenedEventArgs = ^IContentDialogOpenedEventArgs;

  // Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.Controls.IContentDialog,Microsoft.UI.Xaml.Controls.IContentDialogOpenedEventArgs>
  TypedEventHandler_2__IContentDialog__IContentDialogOpenedEventArgs = interface;
  PTypedEventHandler_2__IContentDialog__IContentDialogOpenedEventArgs = ^TypedEventHandler_2__IContentDialog__IContentDialogOpenedEventArgs;

  // Microsoft.UI.Xaml.Controls.IContentDialogButtonClickDeferral
  IContentDialogButtonClickDeferral = interface;
  PIContentDialogButtonClickDeferral = ^IContentDialogButtonClickDeferral;

  // Microsoft.UI.Xaml.Controls.IContentDialogButtonClickEventArgs
  IContentDialogButtonClickEventArgs = interface;
  PIContentDialogButtonClickEventArgs = ^IContentDialogButtonClickEventArgs;

  // Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.Controls.IContentDialog,Microsoft.UI.Xaml.Controls.IContentDialogButtonClickEventArgs>
  TypedEventHandler_2__IContentDialog__IContentDialogButtonClickEventArgs = interface;
  PTypedEventHandler_2__IContentDialog__IContentDialogButtonClickEventArgs = ^TypedEventHandler_2__IContentDialog__IContentDialogButtonClickEventArgs;

  // Windows.Foundation.AsyncOperationCompletedHandler`1<Microsoft.UI.Xaml.Controls.ContentDialogResult>
  AsyncOperationCompletedHandler_1__ContentDialogResult = interface;
  PAsyncOperationCompletedHandler_1__ContentDialogResult = ^AsyncOperationCompletedHandler_1__ContentDialogResult;

  // Windows.Foundation.IAsyncOperation`1<Microsoft.UI.Xaml.Controls.ContentDialogResult>
  IAsyncOperation_1__ContentDialogResult = interface;
  PIAsyncOperation_1__ContentDialogResult = ^IAsyncOperation_1__ContentDialogResult;

  // Microsoft.UI.Xaml.Controls.IContentDialog
  IContentDialog = interface;
  PIContentDialog = ^IContentDialog;

  // Microsoft.UI.Xaml.Controls.IContentDialogFactory
  IContentDialogFactory = interface;
  PIContentDialogFactory = ^IContentDialogFactory;

  // Microsoft.UI.Xaml.Controls.IContentDialogStatics
  IContentDialogStatics = interface;
  PIContentDialogStatics = ^IContentDialogStatics;

  // Microsoft.UI.Xaml.Controls.IContentPresenter
  IContentPresenter = interface;
  PIContentPresenter = ^IContentPresenter;

  // Microsoft.UI.Xaml.Controls.IContentPresenterFactory
  IContentPresenterFactory = interface;
  PIContentPresenterFactory = ^IContentPresenterFactory;

  // Microsoft.UI.Xaml.Controls.IContentPresenterOverrides
  IContentPresenterOverrides = interface;
  PIContentPresenterOverrides = ^IContentPresenterOverrides;

  // Microsoft.UI.Xaml.Controls.IContentPresenterStatics
  IContentPresenterStatics = interface;
  PIContentPresenterStatics = ^IContentPresenterStatics;

  // Microsoft.UI.Xaml.Controls.IControlTemplate
  IControlTemplate = interface;
  PIControlTemplate = ^IControlTemplate;

  // Microsoft.UI.Xaml.Controls.IFocusEngagedEventArgs
  IFocusEngagedEventArgs = interface;
  PIFocusEngagedEventArgs = ^IFocusEngagedEventArgs;

  // Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.Controls.IControl,Microsoft.UI.Xaml.Controls.IFocusEngagedEventArgs>
  TypedEventHandler_2__IControl__IFocusEngagedEventArgs = interface;
  PTypedEventHandler_2__IControl__IFocusEngagedEventArgs = ^TypedEventHandler_2__IControl__IFocusEngagedEventArgs;

  // Microsoft.UI.Xaml.Controls.IFocusDisengagedEventArgs
  IFocusDisengagedEventArgs = interface;
  PIFocusDisengagedEventArgs = ^IFocusDisengagedEventArgs;

  // Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.Controls.IControl,Microsoft.UI.Xaml.Controls.IFocusDisengagedEventArgs>
  TypedEventHandler_2__IControl__IFocusDisengagedEventArgs = interface;
  PTypedEventHandler_2__IControl__IFocusDisengagedEventArgs = ^TypedEventHandler_2__IControl__IFocusDisengagedEventArgs;

  // Microsoft.UI.Xaml.Controls.IControl
  IControl = interface;
  PIControl = ^IControl;

  // Microsoft.UI.Xaml.Controls.IControlFactory
  IControlFactory = interface;
  PIControlFactory = ^IControlFactory;

  // Microsoft.UI.Xaml.Controls.IControlOverrides
  IControlOverrides = interface;
  PIControlOverrides = ^IControlOverrides;

  // Microsoft.UI.Xaml.Controls.IControlProtected
  IControlProtected = interface;
  PIControlProtected = ^IControlProtected;

  // Microsoft.UI.Xaml.Controls.IControlStatics
  IControlStatics = interface;
  PIControlStatics = ^IControlStatics;

  // Microsoft.UI.Xaml.Controls.IDataTemplateSelectorFactory
  IDataTemplateSelectorFactory = interface;
  PIDataTemplateSelectorFactory = ^IDataTemplateSelectorFactory;

  // Microsoft.UI.Xaml.Controls.IDataTemplateSelectorOverrides
  IDataTemplateSelectorOverrides = interface;
  PIDataTemplateSelectorOverrides = ^IDataTemplateSelectorOverrides;

  // Microsoft.UI.Xaml.Controls.IDatePickedEventArgs
  IDatePickedEventArgs = interface;
  PIDatePickedEventArgs = ^IDatePickedEventArgs;

  // Microsoft.UI.Xaml.Controls.IDatePickerFactory
  IDatePickerFactory = interface;
  PIDatePickerFactory = ^IDatePickerFactory;

  // Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.Controls.IDatePickerFlyout,Microsoft.UI.Xaml.Controls.IDatePickedEventArgs>
  TypedEventHandler_2__IDatePickerFlyout__IDatePickedEventArgs = interface;
  PTypedEventHandler_2__IDatePickerFlyout__IDatePickedEventArgs = ^TypedEventHandler_2__IDatePickerFlyout__IDatePickedEventArgs;

  // Microsoft.UI.Xaml.Controls.IDatePickerFlyout
  IDatePickerFlyout = interface;
  PIDatePickerFlyout = ^IDatePickerFlyout;

  // Microsoft.UI.Xaml.Controls.IDatePickerFlyoutItem
  IDatePickerFlyoutItem = interface;
  PIDatePickerFlyoutItem = ^IDatePickerFlyoutItem;

  // Microsoft.UI.Xaml.Controls.IDatePickerFlyoutItemStatics
  IDatePickerFlyoutItemStatics = interface;
  PIDatePickerFlyoutItemStatics = ^IDatePickerFlyoutItemStatics;

  // Microsoft.UI.Xaml.Controls.IDatePickerFlyoutPresenter
  IDatePickerFlyoutPresenter = interface;
  PIDatePickerFlyoutPresenter = ^IDatePickerFlyoutPresenter;

  // Microsoft.UI.Xaml.Controls.IDatePickerFlyoutPresenterStatics
  IDatePickerFlyoutPresenterStatics = interface;
  PIDatePickerFlyoutPresenterStatics = ^IDatePickerFlyoutPresenterStatics;

  // Microsoft.UI.Xaml.Controls.IDatePickerFlyoutStatics
  IDatePickerFlyoutStatics = interface;
  PIDatePickerFlyoutStatics = ^IDatePickerFlyoutStatics;

  // Microsoft.UI.Xaml.Controls.IDatePickerStatics
  IDatePickerStatics = interface;
  PIDatePickerStatics = ^IDatePickerStatics;

  // Microsoft.UI.Xaml.Controls.IDropDownButtonFactory
  IDropDownButtonFactory = interface;
  PIDropDownButtonFactory = ^IDropDownButtonFactory;

  // Microsoft.UI.Xaml.Controls.IExpanderFactory
  IExpanderFactory = interface;
  PIExpanderFactory = ^IExpanderFactory;

  // Microsoft.UI.Xaml.Controls.IExpanderStatics
  IExpanderStatics = interface;
  PIExpanderStatics = ^IExpanderStatics;

  // Microsoft.UI.Xaml.Controls.IFlipViewFactory
  IFlipViewFactory = interface;
  PIFlipViewFactory = ^IFlipViewFactory;

  // Microsoft.UI.Xaml.Controls.IFlipViewItemFactory
  IFlipViewItemFactory = interface;
  PIFlipViewItemFactory = ^IFlipViewItemFactory;

  // Microsoft.UI.Xaml.Controls.IFlipViewStatics
  IFlipViewStatics = interface;
  PIFlipViewStatics = ^IFlipViewStatics;

  // Microsoft.UI.Xaml.Controls.IFlyout
  IFlyout = interface;
  PIFlyout = ^IFlyout;

  // Microsoft.UI.Xaml.Controls.IFlyoutFactory
  IFlyoutFactory = interface;
  PIFlyoutFactory = ^IFlyoutFactory;

  // Microsoft.UI.Xaml.Controls.IFlyoutPresenterFactory
  IFlyoutPresenterFactory = interface;
  PIFlyoutPresenterFactory = ^IFlyoutPresenterFactory;

  // Microsoft.UI.Xaml.Controls.IFlyoutPresenterStatics
  IFlyoutPresenterStatics = interface;
  PIFlyoutPresenterStatics = ^IFlyoutPresenterStatics;

  // Microsoft.UI.Xaml.Controls.IFlyoutStatics
  IFlyoutStatics = interface;
  PIFlyoutStatics = ^IFlyoutStatics;

  // Microsoft.UI.Xaml.Controls.IFontIcon
  IFontIcon = interface;
  PIFontIcon = ^IFontIcon;

  // Microsoft.UI.Xaml.Controls.IFontIconFactory
  IFontIconFactory = interface;
  PIFontIconFactory = ^IFontIconFactory;

  // Microsoft.UI.Xaml.Controls.IFontIconSource
  IFontIconSource = interface;
  PIFontIconSource = ^IFontIconSource;

  // Microsoft.UI.Xaml.Controls.IFontIconSourceFactory
  IFontIconSourceFactory = interface;
  PIFontIconSourceFactory = ^IFontIconSourceFactory;

  // Microsoft.UI.Xaml.Controls.IFontIconSourceStatics
  IFontIconSourceStatics = interface;
  PIFontIconSourceStatics = ^IFontIconSourceStatics;

  // Microsoft.UI.Xaml.Controls.IFontIconStatics
  IFontIconStatics = interface;
  PIFontIconStatics = ^IFontIconStatics;

  // Microsoft.UI.Xaml.Controls.IFrame
  IFrame = interface;
  PIFrame = ^IFrame;

  // Microsoft.UI.Xaml.Controls.IFrameFactory
  IFrameFactory = interface;
  PIFrameFactory = ^IFrameFactory;

  // Microsoft.UI.Xaml.Controls.IFrameStatics
  IFrameStatics = interface;
  PIFrameStatics = ^IFrameStatics;

  // Microsoft.UI.Xaml.Controls.IRowDefinition
  IRowDefinition = interface;
  PIRowDefinition = ^IRowDefinition;

  // Windows.Foundation.Collections.IIterator`1<Microsoft.UI.Xaml.Controls.IRowDefinition>
  IIterator_1__IRowDefinition = interface;
  PIIterator_1__IRowDefinition = ^IIterator_1__IRowDefinition;

  // Windows.Foundation.Collections.IIterable`1<Microsoft.UI.Xaml.Controls.IRowDefinition>
  IIterable_1__IRowDefinition = interface;
  PIIterable_1__IRowDefinition = ^IIterable_1__IRowDefinition;

  // Windows.Foundation.Collections.IVectorView`1<Microsoft.UI.Xaml.Controls.IRowDefinition>
  IVectorView_1__IRowDefinition = interface;
  PIVectorView_1__IRowDefinition = ^IVectorView_1__IRowDefinition;

  // Windows.Foundation.Collections.IVector`1<Microsoft.UI.Xaml.Controls.IRowDefinition>
  IVector_1__IRowDefinition = interface;
  PIVector_1__IRowDefinition = ^IVector_1__IRowDefinition;

  // Windows.Foundation.Collections.IIterator`1<Microsoft.UI.Xaml.Controls.IColumnDefinition>
  IIterator_1__IColumnDefinition = interface;
  PIIterator_1__IColumnDefinition = ^IIterator_1__IColumnDefinition;

  // Windows.Foundation.Collections.IIterable`1<Microsoft.UI.Xaml.Controls.IColumnDefinition>
  IIterable_1__IColumnDefinition = interface;
  PIIterable_1__IColumnDefinition = ^IIterable_1__IColumnDefinition;

  // Windows.Foundation.Collections.IVectorView`1<Microsoft.UI.Xaml.Controls.IColumnDefinition>
  IVectorView_1__IColumnDefinition = interface;
  PIVectorView_1__IColumnDefinition = ^IVectorView_1__IColumnDefinition;

  // Windows.Foundation.Collections.IVector`1<Microsoft.UI.Xaml.Controls.IColumnDefinition>
  IVector_1__IColumnDefinition = interface;
  PIVector_1__IColumnDefinition = ^IVector_1__IColumnDefinition;

  // Microsoft.UI.Xaml.Controls.IGrid
  IGrid = interface;
  PIGrid = ^IGrid;

  // Microsoft.UI.Xaml.Controls.IGridFactory
  IGridFactory = interface;
  PIGridFactory = ^IGridFactory;

  // Microsoft.UI.Xaml.Controls.IGridStatics
  IGridStatics = interface;
  PIGridStatics = ^IGridStatics;

  // Microsoft.UI.Xaml.Controls.IGridViewFactory
  IGridViewFactory = interface;
  PIGridViewFactory = ^IGridViewFactory;

  // Microsoft.UI.Xaml.Controls.IGridViewHeaderItemFactory
  IGridViewHeaderItemFactory = interface;
  PIGridViewHeaderItemFactory = ^IGridViewHeaderItemFactory;

  // Microsoft.UI.Xaml.Controls.IGridViewItemFactory
  IGridViewItemFactory = interface;
  PIGridViewItemFactory = ^IGridViewItemFactory;

  // Microsoft.UI.Xaml.Controls.IGroupItemFactory
  IGroupItemFactory = interface;
  PIGroupItemFactory = ^IGroupItemFactory;

  // Microsoft.UI.Xaml.Controls.IGroupStyleFactory
  IGroupStyleFactory = interface;
  PIGroupStyleFactory = ^IGroupStyleFactory;

  // Microsoft.UI.Xaml.Controls.IGroupStyleSelectorFactory
  IGroupStyleSelectorFactory = interface;
  PIGroupStyleSelectorFactory = ^IGroupStyleSelectorFactory;

  // Microsoft.UI.Xaml.Controls.IGroupStyleSelectorOverrides
  IGroupStyleSelectorOverrides = interface;
  PIGroupStyleSelectorOverrides = ^IGroupStyleSelectorOverrides;

  // Microsoft.UI.Xaml.Controls.IHasValidationErrorsChangedEventArgs
  IHasValidationErrorsChangedEventArgs = interface;
  PIHasValidationErrorsChangedEventArgs = ^IHasValidationErrorsChangedEventArgs;

  // Microsoft.UI.Xaml.Controls.IHubFactory
  IHubFactory = interface;
  PIHubFactory = ^IHubFactory;

  // Microsoft.UI.Xaml.Controls.IHubSectionFactory
  IHubSectionFactory = interface;
  PIHubSectionFactory = ^IHubSectionFactory;

  // Microsoft.UI.Xaml.Controls.IHubSectionStatics
  IHubSectionStatics = interface;
  PIHubSectionStatics = ^IHubSectionStatics;

  // Microsoft.UI.Xaml.Controls.IHubStatics
  IHubStatics = interface;
  PIHubStatics = ^IHubStatics;

  // Microsoft.UI.Xaml.Controls.IHyperlinkButtonFactory
  IHyperlinkButtonFactory = interface;
  PIHyperlinkButtonFactory = ^IHyperlinkButtonFactory;

  // Microsoft.UI.Xaml.Controls.IHyperlinkButtonStatics
  IHyperlinkButtonStatics = interface;
  PIHyperlinkButtonStatics = ^IHyperlinkButtonStatics;

  // Microsoft.UI.Xaml.Controls.IIconElementFactory
  IIconElementFactory = interface;
  PIIconElementFactory = ^IIconElementFactory;

  // Microsoft.UI.Xaml.Controls.IIconElementStatics
  IIconElementStatics = interface;
  PIIconElementStatics = ^IIconElementStatics;

  // Microsoft.UI.Xaml.Controls.IIconSourceElement
  IIconSourceElement = interface;
  PIIconSourceElement = ^IIconSourceElement;

  // Microsoft.UI.Xaml.Controls.IIconSourceElementFactory
  IIconSourceElementFactory = interface;
  PIIconSourceElementFactory = ^IIconSourceElementFactory;

  // Microsoft.UI.Xaml.Controls.IIconSourceElementStatics
  IIconSourceElementStatics = interface;
  PIIconSourceElementStatics = ^IIconSourceElementStatics;

  // Microsoft.UI.Xaml.Controls.IIconSourceFactory
  IIconSourceFactory = interface;
  PIIconSourceFactory = ^IIconSourceFactory;

  // Microsoft.UI.Xaml.Controls.IIconSourceOverrides
  IIconSourceOverrides = interface;
  PIIconSourceOverrides = ^IIconSourceOverrides;

  // Microsoft.UI.Xaml.Controls.IIconSourceStatics
  IIconSourceStatics = interface;
  PIIconSourceStatics = ^IIconSourceStatics;

  // Microsoft.UI.Xaml.Controls.IImageIcon
  IImageIcon = interface;
  PIImageIcon = ^IImageIcon;

  // Microsoft.UI.Xaml.Controls.IImageIconFactory
  IImageIconFactory = interface;
  PIImageIconFactory = ^IImageIconFactory;

  // Microsoft.UI.Xaml.Controls.IImageIconSource
  IImageIconSource = interface;
  PIImageIconSource = ^IImageIconSource;

  // Microsoft.UI.Xaml.Controls.IImageIconSourceFactory
  IImageIconSourceFactory = interface;
  PIImageIconSourceFactory = ^IImageIconSourceFactory;

  // Microsoft.UI.Xaml.Controls.IImageIconSourceStatics
  IImageIconSourceStatics = interface;
  PIImageIconSourceStatics = ^IImageIconSourceStatics;

  // Microsoft.UI.Xaml.Controls.IImageIconStatics
  IImageIconStatics = interface;
  PIImageIconStatics = ^IImageIconStatics;

  // Microsoft.UI.Xaml.Controls.IImageStatics
  IImageStatics = interface;
  PIImageStatics = ^IImageStatics;

  // Microsoft.UI.Xaml.Controls.IInfoBadgeTemplateSettings
  IInfoBadgeTemplateSettings = interface;
  PIInfoBadgeTemplateSettings = ^IInfoBadgeTemplateSettings;

  // Microsoft.UI.Xaml.Controls.IInfoBadge
  IInfoBadge = interface;
  PIInfoBadge = ^IInfoBadge;

  // Microsoft.UI.Xaml.Controls.IInfoBadgeFactory
  IInfoBadgeFactory = interface;
  PIInfoBadgeFactory = ^IInfoBadgeFactory;

  // Microsoft.UI.Xaml.Controls.IInfoBadgeStatics
  IInfoBadgeStatics = interface;
  PIInfoBadgeStatics = ^IInfoBadgeStatics;

  // Microsoft.UI.Xaml.Controls.IInfoBadgeTemplateSettingsFactory
  IInfoBadgeTemplateSettingsFactory = interface;
  PIInfoBadgeTemplateSettingsFactory = ^IInfoBadgeTemplateSettingsFactory;

  // Microsoft.UI.Xaml.Controls.IInfoBadgeTemplateSettingsStatics
  IInfoBadgeTemplateSettingsStatics = interface;
  PIInfoBadgeTemplateSettingsStatics = ^IInfoBadgeTemplateSettingsStatics;

  // Microsoft.UI.Xaml.Controls.IInfoBarClosedEventArgsFactory
  IInfoBarClosedEventArgsFactory = interface;
  PIInfoBarClosedEventArgsFactory = ^IInfoBarClosedEventArgsFactory;

  // Microsoft.UI.Xaml.Controls.IInfoBarClosingEventArgsFactory
  IInfoBarClosingEventArgsFactory = interface;
  PIInfoBarClosingEventArgsFactory = ^IInfoBarClosingEventArgsFactory;

  // Microsoft.UI.Xaml.Controls.IInfoBarFactory
  IInfoBarFactory = interface;
  PIInfoBarFactory = ^IInfoBarFactory;

  // Microsoft.UI.Xaml.Controls.IInfoBarStatics
  IInfoBarStatics = interface;
  PIInfoBarStatics = ^IInfoBarStatics;

  // Microsoft.UI.Xaml.Controls.IInfoBarTemplateSettingsFactory
  IInfoBarTemplateSettingsFactory = interface;
  PIInfoBarTemplateSettingsFactory = ^IInfoBarTemplateSettingsFactory;

  // Microsoft.UI.Xaml.Controls.IInfoBarTemplateSettingsStatics
  IInfoBarTemplateSettingsStatics = interface;
  PIInfoBarTemplateSettingsStatics = ^IInfoBarTemplateSettingsStatics;

  // Microsoft.UI.Xaml.Controls.IInsertionPanel
  IInsertionPanel = interface;
  PIInsertionPanel = ^IInsertionPanel;

  // Microsoft.UI.Xaml.Controls.IItemContainerMapping
  IItemContainerMapping = interface;
  PIItemContainerMapping = ^IItemContainerMapping;

  // Microsoft.UI.Xaml.Controls.IItemsControlFactory
  IItemsControlFactory = interface;
  PIItemsControlFactory = ^IItemsControlFactory;

  // Microsoft.UI.Xaml.Controls.IItemsControlOverrides
  IItemsControlOverrides = interface;
  PIItemsControlOverrides = ^IItemsControlOverrides;

  // Microsoft.UI.Xaml.Controls.IItemsControlStatics
  IItemsControlStatics = interface;
  PIItemsControlStatics = ^IItemsControlStatics;

  // Microsoft.UI.Xaml.Controls.IItemsPickedEventArgs
  IItemsPickedEventArgs = interface;
  PIItemsPickedEventArgs = ^IItemsPickedEventArgs;

  // Microsoft.UI.Xaml.Controls.IItemsPresenter
  IItemsPresenter = interface;
  PIItemsPresenter = ^IItemsPresenter;

  // Microsoft.UI.Xaml.Controls.IItemsPresenterStatics
  IItemsPresenterStatics = interface;
  PIItemsPresenterStatics = ^IItemsPresenterStatics;

  // Microsoft.UI.Xaml.Controls.IItemsRepeaterFactory
  IItemsRepeaterFactory = interface;
  PIItemsRepeaterFactory = ^IItemsRepeaterFactory;

  // Microsoft.UI.Xaml.Controls.IItemsRepeaterScrollHost
  IItemsRepeaterScrollHost = interface;
  PIItemsRepeaterScrollHost = ^IItemsRepeaterScrollHost;

  // Microsoft.UI.Xaml.Controls.IItemsRepeaterStatics
  IItemsRepeaterStatics = interface;
  PIItemsRepeaterStatics = ^IItemsRepeaterStatics;

  // Microsoft.UI.Xaml.Controls.IItemsSourceViewFactory
  IItemsSourceViewFactory = interface;
  PIItemsSourceViewFactory = ^IItemsSourceViewFactory;

  // Microsoft.UI.Xaml.Controls.IItemsStackPanel
  IItemsStackPanel = interface;
  PIItemsStackPanel = ^IItemsStackPanel;

  // Microsoft.UI.Xaml.Controls.IItemsStackPanelStatics
  IItemsStackPanelStatics = interface;
  PIItemsStackPanelStatics = ^IItemsStackPanelStatics;

  // Microsoft.UI.Xaml.Controls.IItemsWrapGrid
  IItemsWrapGrid = interface;
  PIItemsWrapGrid = ^IItemsWrapGrid;

  // Microsoft.UI.Xaml.Controls.IItemsWrapGridStatics
  IItemsWrapGridStatics = interface;
  PIItemsWrapGridStatics = ^IItemsWrapGridStatics;

  // Microsoft.UI.Xaml.Controls.IKeyIndexMapping
  IKeyIndexMapping = interface;
  PIKeyIndexMapping = ^IKeyIndexMapping;

  // Microsoft.UI.Xaml.Controls.ILayoutContextFactory
  ILayoutContextFactory = interface;
  PILayoutContextFactory = ^ILayoutContextFactory;

  // Microsoft.UI.Xaml.Controls.ILayoutContextOverrides
  ILayoutContextOverrides = interface;
  PILayoutContextOverrides = ^ILayoutContextOverrides;

  // Microsoft.UI.Xaml.Controls.ILayoutFactory
  ILayoutFactory = interface;
  PILayoutFactory = ^ILayoutFactory;

  // Microsoft.UI.Xaml.Controls.ILayoutProtected
  ILayoutProtected = interface;
  PILayoutProtected = ^ILayoutProtected;

  // Microsoft.UI.Xaml.Controls.IListBoxFactory
  IListBoxFactory = interface;
  PIListBoxFactory = ^IListBoxFactory;

  // Microsoft.UI.Xaml.Controls.IListBoxItemFactory
  IListBoxItemFactory = interface;
  PIListBoxItemFactory = ^IListBoxItemFactory;

  // Microsoft.UI.Xaml.Controls.IListBoxStatics
  IListBoxStatics = interface;
  PIListBoxStatics = ^IListBoxStatics;

  // Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.Controls.IListPickerFlyout,Microsoft.UI.Xaml.Controls.IItemsPickedEventArgs>
  TypedEventHandler_2__IListPickerFlyout__IItemsPickedEventArgs = interface;
  PTypedEventHandler_2__IListPickerFlyout__IItemsPickedEventArgs = ^TypedEventHandler_2__IListPickerFlyout__IItemsPickedEventArgs;

  // Microsoft.UI.Xaml.Controls.IListPickerFlyout
  IListPickerFlyout = interface;
  PIListPickerFlyout = ^IListPickerFlyout;

  // Microsoft.UI.Xaml.Controls.IListPickerFlyoutPresenter
  IListPickerFlyoutPresenter = interface;
  PIListPickerFlyoutPresenter = ^IListPickerFlyoutPresenter;

  // Microsoft.UI.Xaml.Controls.IListPickerFlyoutStatics
  IListPickerFlyoutStatics = interface;
  PIListPickerFlyoutStatics = ^IListPickerFlyoutStatics;

  // Microsoft.UI.Xaml.Controls.IListViewBaseFactory
  IListViewBaseFactory = interface;
  PIListViewBaseFactory = ^IListViewBaseFactory;

  // Microsoft.UI.Xaml.Controls.IListViewBaseHeaderItemFactory
  IListViewBaseHeaderItemFactory = interface;
  PIListViewBaseHeaderItemFactory = ^IListViewBaseHeaderItemFactory;

  // Microsoft.UI.Xaml.Controls.IListViewBaseStatics
  IListViewBaseStatics = interface;
  PIListViewBaseStatics = ^IListViewBaseStatics;

  // Microsoft.UI.Xaml.Controls.IListViewFactory
  IListViewFactory = interface;
  PIListViewFactory = ^IListViewFactory;

  // Microsoft.UI.Xaml.Controls.IListViewHeaderItemFactory
  IListViewHeaderItemFactory = interface;
  PIListViewHeaderItemFactory = ^IListViewHeaderItemFactory;

  // Microsoft.UI.Xaml.Controls.IListViewItemFactory
  IListViewItemFactory = interface;
  PIListViewItemFactory = ^IListViewItemFactory;

  // Microsoft.UI.Xaml.Controls.IListViewPersistenceHelper
  IListViewPersistenceHelper = interface;
  PIListViewPersistenceHelper = ^IListViewPersistenceHelper;

  // Microsoft.UI.Xaml.Controls.ListViewItemToKeyHandler
  ListViewItemToKeyHandler = interface;
  PListViewItemToKeyHandler = ^ListViewItemToKeyHandler;

  // Microsoft.UI.Xaml.Controls.ListViewKeyToItemHandler
  ListViewKeyToItemHandler = interface;
  PListViewKeyToItemHandler = ^ListViewKeyToItemHandler;

  // Microsoft.UI.Xaml.Controls.IListViewPersistenceHelperStatics
  IListViewPersistenceHelperStatics = interface;
  PIListViewPersistenceHelperStatics = ^IListViewPersistenceHelperStatics;

  // Microsoft.UI.Xaml.Controls.IMediaPlayerElementFactory
  IMediaPlayerElementFactory = interface;
  PIMediaPlayerElementFactory = ^IMediaPlayerElementFactory;

  // Microsoft.UI.Xaml.Controls.IMediaPlayerElementStatics
  IMediaPlayerElementStatics = interface;
  PIMediaPlayerElementStatics = ^IMediaPlayerElementStatics;

  // Microsoft.UI.Xaml.Controls.IMediaPlayerPresenter
  IMediaPlayerPresenter = interface;
  PIMediaPlayerPresenter = ^IMediaPlayerPresenter;

  // Microsoft.UI.Xaml.Controls.IMediaPlayerPresenterFactory
  IMediaPlayerPresenterFactory = interface;
  PIMediaPlayerPresenterFactory = ^IMediaPlayerPresenterFactory;

  // Microsoft.UI.Xaml.Controls.IMediaPlayerPresenterStatics
  IMediaPlayerPresenterStatics = interface;
  PIMediaPlayerPresenterStatics = ^IMediaPlayerPresenterStatics;

  // Microsoft.UI.Xaml.Controls.IMediaTransportControlsFactory
  IMediaTransportControlsFactory = interface;
  PIMediaTransportControlsFactory = ^IMediaTransportControlsFactory;

  // Microsoft.UI.Xaml.Controls.IMediaTransportControlsHelper
  IMediaTransportControlsHelper = interface;
  PIMediaTransportControlsHelper = ^IMediaTransportControlsHelper;

  // Microsoft.UI.Xaml.Controls.IMediaTransportControlsHelperStatics
  IMediaTransportControlsHelperStatics = interface;
  PIMediaTransportControlsHelperStatics = ^IMediaTransportControlsHelperStatics;

  // Microsoft.UI.Xaml.Controls.IMediaTransportControlsStatics
  IMediaTransportControlsStatics = interface;
  PIMediaTransportControlsStatics = ^IMediaTransportControlsStatics;

  // Microsoft.UI.Xaml.Controls.IMenuBarFactory
  IMenuBarFactory = interface;
  PIMenuBarFactory = ^IMenuBarFactory;

  // Microsoft.UI.Xaml.Controls.IMenuBarItemFactory
  IMenuBarItemFactory = interface;
  PIMenuBarItemFactory = ^IMenuBarItemFactory;

  // Microsoft.UI.Xaml.Controls.IMenuBarItemFlyout
  IMenuBarItemFlyout = interface;
  PIMenuBarItemFlyout = ^IMenuBarItemFlyout;

  // Microsoft.UI.Xaml.Controls.IMenuBarItemFlyoutFactory
  IMenuBarItemFlyoutFactory = interface;
  PIMenuBarItemFlyoutFactory = ^IMenuBarItemFlyoutFactory;

  // Microsoft.UI.Xaml.Controls.IMenuBarItemStatics
  IMenuBarItemStatics = interface;
  PIMenuBarItemStatics = ^IMenuBarItemStatics;

  // Microsoft.UI.Xaml.Controls.IMenuBarStatics
  IMenuBarStatics = interface;
  PIMenuBarStatics = ^IMenuBarStatics;

  // Microsoft.UI.Xaml.Controls.IMenuFlyout
  IMenuFlyout = interface;
  PIMenuFlyout = ^IMenuFlyout;

  // Microsoft.UI.Xaml.Controls.IMenuFlyoutFactory
  IMenuFlyoutFactory = interface;
  PIMenuFlyoutFactory = ^IMenuFlyoutFactory;

  // Microsoft.UI.Xaml.Controls.IMenuFlyoutItemBaseFactory
  IMenuFlyoutItemBaseFactory = interface;
  PIMenuFlyoutItemBaseFactory = ^IMenuFlyoutItemBaseFactory;

  // Microsoft.UI.Xaml.Controls.IMenuFlyoutItemFactory
  IMenuFlyoutItemFactory = interface;
  PIMenuFlyoutItemFactory = ^IMenuFlyoutItemFactory;

  // Microsoft.UI.Xaml.Controls.IMenuFlyoutItemStatics
  IMenuFlyoutItemStatics = interface;
  PIMenuFlyoutItemStatics = ^IMenuFlyoutItemStatics;

  // Microsoft.UI.Xaml.Controls.IMenuFlyoutPresenterFactory
  IMenuFlyoutPresenterFactory = interface;
  PIMenuFlyoutPresenterFactory = ^IMenuFlyoutPresenterFactory;

  // Microsoft.UI.Xaml.Controls.IMenuFlyoutPresenterStatics
  IMenuFlyoutPresenterStatics = interface;
  PIMenuFlyoutPresenterStatics = ^IMenuFlyoutPresenterStatics;

  // Microsoft.UI.Xaml.Controls.IMenuFlyoutSeparator
  IMenuFlyoutSeparator = interface;
  PIMenuFlyoutSeparator = ^IMenuFlyoutSeparator;

  // Microsoft.UI.Xaml.Controls.IMenuFlyoutSeparatorFactory
  IMenuFlyoutSeparatorFactory = interface;
  PIMenuFlyoutSeparatorFactory = ^IMenuFlyoutSeparatorFactory;

  // Microsoft.UI.Xaml.Controls.IMenuFlyoutStatics
  IMenuFlyoutStatics = interface;
  PIMenuFlyoutStatics = ^IMenuFlyoutStatics;

  // Microsoft.UI.Xaml.Controls.IMenuFlyoutSubItem
  IMenuFlyoutSubItem = interface;
  PIMenuFlyoutSubItem = ^IMenuFlyoutSubItem;

  // Microsoft.UI.Xaml.Controls.IMenuFlyoutSubItemStatics
  IMenuFlyoutSubItemStatics = interface;
  PIMenuFlyoutSubItemStatics = ^IMenuFlyoutSubItemStatics;

  // Microsoft.UI.Xaml.Controls.INavigate
  INavigate = interface;
  PINavigate = ^INavigate;

  // Microsoft.UI.Xaml.Controls.INavigationViewBackRequestedEventArgs
  INavigationViewBackRequestedEventArgs = interface;
  PINavigationViewBackRequestedEventArgs = ^INavigationViewBackRequestedEventArgs;

  // Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.Controls.INavigationView,Microsoft.UI.Xaml.Controls.INavigationViewBackRequestedEventArgs>
  TypedEventHandler_2__INavigationView__INavigationViewBackRequestedEventArgs = interface;
  PTypedEventHandler_2__INavigationView__INavigationViewBackRequestedEventArgs = ^TypedEventHandler_2__INavigationView__INavigationViewBackRequestedEventArgs;

  // Microsoft.UI.Xaml.Controls.INavigationViewPaneClosingEventArgs
  INavigationViewPaneClosingEventArgs = interface;
  PINavigationViewPaneClosingEventArgs = ^INavigationViewPaneClosingEventArgs;

  // Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.Controls.INavigationView,Microsoft.UI.Xaml.Controls.INavigationViewPaneClosingEventArgs>
  TypedEventHandler_2__INavigationView__INavigationViewPaneClosingEventArgs = interface;
  PTypedEventHandler_2__INavigationView__INavigationViewPaneClosingEventArgs = ^TypedEventHandler_2__INavigationView__INavigationViewPaneClosingEventArgs;

  // Microsoft.UI.Xaml.Controls.INavigationViewTemplateSettings
  INavigationViewTemplateSettings = interface;
  PINavigationViewTemplateSettings = ^INavigationViewTemplateSettings;

  // Microsoft.UI.Xaml.Controls.INavigationViewItemBase
  INavigationViewItemBase = interface;
  PINavigationViewItemBase = ^INavigationViewItemBase;

  // Microsoft.UI.Xaml.Controls.INavigationViewItemExpandingEventArgs
  INavigationViewItemExpandingEventArgs = interface;
  PINavigationViewItemExpandingEventArgs = ^INavigationViewItemExpandingEventArgs;

  // Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.Controls.INavigationView,Microsoft.UI.Xaml.Controls.INavigationViewItemExpandingEventArgs>
  TypedEventHandler_2__INavigationView__INavigationViewItemExpandingEventArgs = interface;
  PTypedEventHandler_2__INavigationView__INavigationViewItemExpandingEventArgs = ^TypedEventHandler_2__INavigationView__INavigationViewItemExpandingEventArgs;

  // Microsoft.UI.Xaml.Controls.INavigationViewItemCollapsedEventArgs
  INavigationViewItemCollapsedEventArgs = interface;
  PINavigationViewItemCollapsedEventArgs = ^INavigationViewItemCollapsedEventArgs;

  // Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.Controls.INavigationView,Microsoft.UI.Xaml.Controls.INavigationViewItemCollapsedEventArgs>
  TypedEventHandler_2__INavigationView__INavigationViewItemCollapsedEventArgs = interface;
  PTypedEventHandler_2__INavigationView__INavigationViewItemCollapsedEventArgs = ^TypedEventHandler_2__INavigationView__INavigationViewItemCollapsedEventArgs;

  // Microsoft.UI.Xaml.Controls.INavigationView2
  INavigationView2 = interface;
  PINavigationView2 = ^INavigationView2;

  // Microsoft.UI.Xaml.Controls.INavigationViewFactory
  INavigationViewFactory = interface;
  PINavigationViewFactory = ^INavigationViewFactory;

  // Microsoft.UI.Xaml.Controls.INavigationViewItem2
  INavigationViewItem2 = interface;
  PINavigationViewItem2 = ^INavigationViewItem2;

  // Microsoft.UI.Xaml.Controls.INavigationViewItem3
  INavigationViewItem3 = interface;
  PINavigationViewItem3 = ^INavigationViewItem3;

  // Microsoft.UI.Xaml.Controls.INavigationViewItemBase2
  INavigationViewItemBase2 = interface;
  PINavigationViewItemBase2 = ^INavigationViewItemBase2;

  // Microsoft.UI.Xaml.Controls.INavigationViewItemBaseFactory
  INavigationViewItemBaseFactory = interface;
  PINavigationViewItemBaseFactory = ^INavigationViewItemBaseFactory;

  // Microsoft.UI.Xaml.Controls.INavigationViewItemBaseStatics
  INavigationViewItemBaseStatics = interface;
  PINavigationViewItemBaseStatics = ^INavigationViewItemBaseStatics;

  // Microsoft.UI.Xaml.Controls.INavigationViewItemFactory
  INavigationViewItemFactory = interface;
  PINavigationViewItemFactory = ^INavigationViewItemFactory;

  // Microsoft.UI.Xaml.Controls.INavigationViewItemHeader
  INavigationViewItemHeader = interface;
  PINavigationViewItemHeader = ^INavigationViewItemHeader;

  // Microsoft.UI.Xaml.Controls.INavigationViewItemHeaderFactory
  INavigationViewItemHeaderFactory = interface;
  PINavigationViewItemHeaderFactory = ^INavigationViewItemHeaderFactory;

  // Microsoft.UI.Xaml.Controls.INavigationViewItemInvokedEventArgs2
  INavigationViewItemInvokedEventArgs2 = interface;
  PINavigationViewItemInvokedEventArgs2 = ^INavigationViewItemInvokedEventArgs2;

  // Microsoft.UI.Xaml.Controls.INavigationViewItemSeparator
  INavigationViewItemSeparator = interface;
  PINavigationViewItemSeparator = ^INavigationViewItemSeparator;

  // Microsoft.UI.Xaml.Controls.INavigationViewItemSeparatorFactory
  INavigationViewItemSeparatorFactory = interface;
  PINavigationViewItemSeparatorFactory = ^INavigationViewItemSeparatorFactory;

  // Microsoft.UI.Xaml.Controls.INavigationViewItemStatics
  INavigationViewItemStatics = interface;
  PINavigationViewItemStatics = ^INavigationViewItemStatics;

  // Microsoft.UI.Xaml.Controls.INavigationViewItemStatics2
  INavigationViewItemStatics2 = interface;
  PINavigationViewItemStatics2 = ^INavigationViewItemStatics2;

  // Microsoft.UI.Xaml.Controls.INavigationViewItemStatics3
  INavigationViewItemStatics3 = interface;
  PINavigationViewItemStatics3 = ^INavigationViewItemStatics3;

  // Microsoft.UI.Xaml.Controls.INavigationViewSelectionChangedEventArgs2
  INavigationViewSelectionChangedEventArgs2 = interface;
  PINavigationViewSelectionChangedEventArgs2 = ^INavigationViewSelectionChangedEventArgs2;

  // Microsoft.UI.Xaml.Controls.INavigationViewStatics
  INavigationViewStatics = interface;
  PINavigationViewStatics = ^INavigationViewStatics;

  // Microsoft.UI.Xaml.Controls.INavigationViewStatics2
  INavigationViewStatics2 = interface;
  PINavigationViewStatics2 = ^INavigationViewStatics2;

  // Microsoft.UI.Xaml.Controls.INavigationViewTemplateSettings2
  INavigationViewTemplateSettings2 = interface;
  PINavigationViewTemplateSettings2 = ^INavigationViewTemplateSettings2;

  // Microsoft.UI.Xaml.Controls.INavigationViewTemplateSettingsFactory
  INavigationViewTemplateSettingsFactory = interface;
  PINavigationViewTemplateSettingsFactory = ^INavigationViewTemplateSettingsFactory;

  // Microsoft.UI.Xaml.Controls.INavigationViewTemplateSettingsStatics
  INavigationViewTemplateSettingsStatics = interface;
  PINavigationViewTemplateSettingsStatics = ^INavigationViewTemplateSettingsStatics;

  // Microsoft.UI.Xaml.Controls.INavigationViewTemplateSettingsStatics2
  INavigationViewTemplateSettingsStatics2 = interface;
  PINavigationViewTemplateSettingsStatics2 = ^INavigationViewTemplateSettingsStatics2;

  // Microsoft.UI.Xaml.Controls.INonVirtualizingLayout
  INonVirtualizingLayout = interface;
  PINonVirtualizingLayout = ^INonVirtualizingLayout;

  // Microsoft.UI.Xaml.Controls.INonVirtualizingLayoutContext
  INonVirtualizingLayoutContext = interface;
  PINonVirtualizingLayoutContext = ^INonVirtualizingLayoutContext;

  // Microsoft.UI.Xaml.Controls.INonVirtualizingLayoutContextFactory
  INonVirtualizingLayoutContextFactory = interface;
  PINonVirtualizingLayoutContextFactory = ^INonVirtualizingLayoutContextFactory;

  // Microsoft.UI.Xaml.Controls.INonVirtualizingLayoutContextOverrides
  INonVirtualizingLayoutContextOverrides = interface;
  PINonVirtualizingLayoutContextOverrides = ^INonVirtualizingLayoutContextOverrides;

  // Microsoft.UI.Xaml.Controls.INonVirtualizingLayoutFactory
  INonVirtualizingLayoutFactory = interface;
  PINonVirtualizingLayoutFactory = ^INonVirtualizingLayoutFactory;

  // Microsoft.UI.Xaml.Controls.INonVirtualizingLayoutOverrides
  INonVirtualizingLayoutOverrides = interface;
  PINonVirtualizingLayoutOverrides = ^INonVirtualizingLayoutOverrides;

  // Microsoft.UI.Xaml.Controls.INumberBoxFactory
  INumberBoxFactory = interface;
  PINumberBoxFactory = ^INumberBoxFactory;

  // Microsoft.UI.Xaml.Controls.INumberBoxStatics
  INumberBoxStatics = interface;
  PINumberBoxStatics = ^INumberBoxStatics;

  // Microsoft.UI.Xaml.Controls.IPage
  IPage = interface;
  PIPage = ^IPage;

  // Microsoft.UI.Xaml.Controls.IPageFactory
  IPageFactory = interface;
  PIPageFactory = ^IPageFactory;

  // Microsoft.UI.Xaml.Controls.IPageOverrides
  IPageOverrides = interface;
  PIPageOverrides = ^IPageOverrides;

  // Microsoft.UI.Xaml.Controls.IPageStatics
  IPageStatics = interface;
  PIPageStatics = ^IPageStatics;

  // Microsoft.UI.Xaml.Controls.IPanelFactory
  IPanelFactory = interface;
  PIPanelFactory = ^IPanelFactory;

  // Microsoft.UI.Xaml.Controls.IPanelStatics
  IPanelStatics = interface;
  PIPanelStatics = ^IPanelStatics;

  // Microsoft.UI.Xaml.Controls.IParallaxView
  IParallaxView = interface;
  PIParallaxView = ^IParallaxView;

  // Microsoft.UI.Xaml.Controls.IParallaxViewFactory
  IParallaxViewFactory = interface;
  PIParallaxViewFactory = ^IParallaxViewFactory;

  // Microsoft.UI.Xaml.Controls.IParallaxViewStatics
  IParallaxViewStatics = interface;
  PIParallaxViewStatics = ^IParallaxViewStatics;

  // Microsoft.UI.Xaml.Controls.IPasswordBoxStatics
  IPasswordBoxStatics = interface;
  PIPasswordBoxStatics = ^IPasswordBoxStatics;

  // Microsoft.UI.Xaml.Controls.IPathIcon
  IPathIcon = interface;
  PIPathIcon = ^IPathIcon;

  // Microsoft.UI.Xaml.Controls.IPathIconFactory
  IPathIconFactory = interface;
  PIPathIconFactory = ^IPathIconFactory;

  // Microsoft.UI.Xaml.Controls.IPathIconSource
  IPathIconSource = interface;
  PIPathIconSource = ^IPathIconSource;

  // Microsoft.UI.Xaml.Controls.IPathIconSourceFactory
  IPathIconSourceFactory = interface;
  PIPathIconSourceFactory = ^IPathIconSourceFactory;

  // Microsoft.UI.Xaml.Controls.IPathIconSourceStatics
  IPathIconSourceStatics = interface;
  PIPathIconSourceStatics = ^IPathIconSourceStatics;

  // Microsoft.UI.Xaml.Controls.IPathIconStatics
  IPathIconStatics = interface;
  PIPathIconStatics = ^IPathIconStatics;

  // Microsoft.UI.Xaml.Controls.IPersonPictureFactory
  IPersonPictureFactory = interface;
  PIPersonPictureFactory = ^IPersonPictureFactory;

  // Microsoft.UI.Xaml.Controls.IPersonPictureStatics
  IPersonPictureStatics = interface;
  PIPersonPictureStatics = ^IPersonPictureStatics;

  // Microsoft.UI.Xaml.Controls.IPickerConfirmedEventArgs
  IPickerConfirmedEventArgs = interface;
  PIPickerConfirmedEventArgs = ^IPickerConfirmedEventArgs;

  // Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.Controls.IPickerFlyout,Microsoft.UI.Xaml.Controls.IPickerConfirmedEventArgs>
  TypedEventHandler_2__IPickerFlyout__IPickerConfirmedEventArgs = interface;
  PTypedEventHandler_2__IPickerFlyout__IPickerConfirmedEventArgs = ^TypedEventHandler_2__IPickerFlyout__IPickerConfirmedEventArgs;

  // Microsoft.UI.Xaml.Controls.IPickerFlyout
  IPickerFlyout = interface;
  PIPickerFlyout = ^IPickerFlyout;

  // Microsoft.UI.Xaml.Controls.IPickerFlyoutPresenter
  IPickerFlyoutPresenter = interface;
  PIPickerFlyoutPresenter = ^IPickerFlyoutPresenter;

  // Microsoft.UI.Xaml.Controls.IPickerFlyoutStatics
  IPickerFlyoutStatics = interface;
  PIPickerFlyoutStatics = ^IPickerFlyoutStatics;

  // Microsoft.UI.Xaml.Controls.IPipsPagerFactory
  IPipsPagerFactory = interface;
  PIPipsPagerFactory = ^IPipsPagerFactory;

  // Microsoft.UI.Xaml.Controls.IPipsPagerStatics
  IPipsPagerStatics = interface;
  PIPipsPagerStatics = ^IPipsPagerStatics;

  // Microsoft.UI.Xaml.Controls.IPivotFactory
  IPivotFactory = interface;
  PIPivotFactory = ^IPivotFactory;

  // Microsoft.UI.Xaml.Controls.IPivotItemFactory
  IPivotItemFactory = interface;
  PIPivotItemFactory = ^IPivotItemFactory;

  // Microsoft.UI.Xaml.Controls.IPivotItemStatics
  IPivotItemStatics = interface;
  PIPivotItemStatics = ^IPivotItemStatics;

  // Microsoft.UI.Xaml.Controls.IPivotStatics
  IPivotStatics = interface;
  PIPivotStatics = ^IPivotStatics;

  // Microsoft.UI.Xaml.Controls.IProgressBarFactory
  IProgressBarFactory = interface;
  PIProgressBarFactory = ^IProgressBarFactory;

  // Microsoft.UI.Xaml.Controls.IProgressBarStatics
  IProgressBarStatics = interface;
  PIProgressBarStatics = ^IProgressBarStatics;

  // Microsoft.UI.Xaml.Controls.IProgressRingFactory
  IProgressRingFactory = interface;
  PIProgressRingFactory = ^IProgressRingFactory;

  // Microsoft.UI.Xaml.Controls.IProgressRingStatics
  IProgressRingStatics = interface;
  PIProgressRingStatics = ^IProgressRingStatics;

  // Microsoft.UI.Xaml.Controls.IRadioButtonFactory
  IRadioButtonFactory = interface;
  PIRadioButtonFactory = ^IRadioButtonFactory;

  // Microsoft.UI.Xaml.Controls.IRadioButtonStatics
  IRadioButtonStatics = interface;
  PIRadioButtonStatics = ^IRadioButtonStatics;

  // Microsoft.UI.Xaml.Controls.IRadioButtonsFactory
  IRadioButtonsFactory = interface;
  PIRadioButtonsFactory = ^IRadioButtonsFactory;

  // Microsoft.UI.Xaml.Controls.IRadioButtonsStatics
  IRadioButtonsStatics = interface;
  PIRadioButtonsStatics = ^IRadioButtonsStatics;

  // Microsoft.UI.Xaml.Controls.IRadioMenuFlyoutItem
  IRadioMenuFlyoutItem = interface;
  PIRadioMenuFlyoutItem = ^IRadioMenuFlyoutItem;

  // Microsoft.UI.Xaml.Controls.IRadioMenuFlyoutItemFactory
  IRadioMenuFlyoutItemFactory = interface;
  PIRadioMenuFlyoutItemFactory = ^IRadioMenuFlyoutItemFactory;

  // Microsoft.UI.Xaml.Controls.IRadioMenuFlyoutItemStatics
  IRadioMenuFlyoutItemStatics = interface;
  PIRadioMenuFlyoutItemStatics = ^IRadioMenuFlyoutItemStatics;

  // Microsoft.UI.Xaml.Controls.IRadioMenuFlyoutItemStatics2
  IRadioMenuFlyoutItemStatics2 = interface;
  PIRadioMenuFlyoutItemStatics2 = ^IRadioMenuFlyoutItemStatics2;

  // Microsoft.UI.Xaml.Controls.IRatingControlFactory
  IRatingControlFactory = interface;
  PIRatingControlFactory = ^IRatingControlFactory;

  // Microsoft.UI.Xaml.Controls.IRatingControlStatics
  IRatingControlStatics = interface;
  PIRatingControlStatics = ^IRatingControlStatics;

  // Microsoft.UI.Xaml.Controls.IRatingItemFontInfo
  IRatingItemFontInfo = interface;
  PIRatingItemFontInfo = ^IRatingItemFontInfo;

  // Microsoft.UI.Xaml.Controls.IRatingItemFontInfoFactory
  IRatingItemFontInfoFactory = interface;
  PIRatingItemFontInfoFactory = ^IRatingItemFontInfoFactory;

  // Microsoft.UI.Xaml.Controls.IRatingItemFontInfoStatics
  IRatingItemFontInfoStatics = interface;
  PIRatingItemFontInfoStatics = ^IRatingItemFontInfoStatics;

  // Microsoft.UI.Xaml.Controls.IRatingItemImageInfo
  IRatingItemImageInfo = interface;
  PIRatingItemImageInfo = ^IRatingItemImageInfo;

  // Microsoft.UI.Xaml.Controls.IRatingItemImageInfoFactory
  IRatingItemImageInfoFactory = interface;
  PIRatingItemImageInfoFactory = ^IRatingItemImageInfoFactory;

  // Microsoft.UI.Xaml.Controls.IRatingItemImageInfoStatics
  IRatingItemImageInfoStatics = interface;
  PIRatingItemImageInfoStatics = ^IRatingItemImageInfoStatics;

  // Microsoft.UI.Xaml.Controls.IRatingItemInfoFactory
  IRatingItemInfoFactory = interface;
  PIRatingItemInfoFactory = ^IRatingItemInfoFactory;

  // Microsoft.UI.Xaml.Controls.IRefreshRequestedEventArgs
  IRefreshRequestedEventArgs = interface;
  PIRefreshRequestedEventArgs = ^IRefreshRequestedEventArgs;

  // Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.Controls.IRefreshVisualizer,Microsoft.UI.Xaml.Controls.IRefreshRequestedEventArgs>
  TypedEventHandler_2__IRefreshVisualizer__IRefreshRequestedEventArgs = interface;
  PTypedEventHandler_2__IRefreshVisualizer__IRefreshRequestedEventArgs = ^TypedEventHandler_2__IRefreshVisualizer__IRefreshRequestedEventArgs;

  // Microsoft.UI.Xaml.Controls.IRefreshStateChangedEventArgs
  IRefreshStateChangedEventArgs = interface;
  PIRefreshStateChangedEventArgs = ^IRefreshStateChangedEventArgs;

  // Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.Controls.IRefreshVisualizer,Microsoft.UI.Xaml.Controls.IRefreshStateChangedEventArgs>
  TypedEventHandler_2__IRefreshVisualizer__IRefreshStateChangedEventArgs = interface;
  PTypedEventHandler_2__IRefreshVisualizer__IRefreshStateChangedEventArgs = ^TypedEventHandler_2__IRefreshVisualizer__IRefreshStateChangedEventArgs;

  // Microsoft.UI.Xaml.Controls.IRefreshVisualizer
  IRefreshVisualizer = interface;
  PIRefreshVisualizer = ^IRefreshVisualizer;

  // Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.Controls.IRefreshContainer,Microsoft.UI.Xaml.Controls.IRefreshRequestedEventArgs>
  TypedEventHandler_2__IRefreshContainer__IRefreshRequestedEventArgs = interface;
  PTypedEventHandler_2__IRefreshContainer__IRefreshRequestedEventArgs = ^TypedEventHandler_2__IRefreshContainer__IRefreshRequestedEventArgs;

  // Microsoft.UI.Xaml.Controls.IRefreshContainer
  IRefreshContainer = interface;
  PIRefreshContainer = ^IRefreshContainer;

  // Microsoft.UI.Xaml.Controls.IRefreshContainerFactory
  IRefreshContainerFactory = interface;
  PIRefreshContainerFactory = ^IRefreshContainerFactory;

  // Microsoft.UI.Xaml.Controls.IRefreshContainerStatics
  IRefreshContainerStatics = interface;
  PIRefreshContainerStatics = ^IRefreshContainerStatics;

  // Microsoft.UI.Xaml.Controls.IRefreshInteractionRatioChangedEventArgs
  IRefreshInteractionRatioChangedEventArgs = interface;
  PIRefreshInteractionRatioChangedEventArgs = ^IRefreshInteractionRatioChangedEventArgs;

  // Microsoft.UI.Xaml.Controls.IRefreshVisualizerFactory
  IRefreshVisualizerFactory = interface;
  PIRefreshVisualizerFactory = ^IRefreshVisualizerFactory;

  // Microsoft.UI.Xaml.Controls.IRefreshVisualizerStatics
  IRefreshVisualizerStatics = interface;
  PIRefreshVisualizerStatics = ^IRefreshVisualizerStatics;

  // Microsoft.UI.Xaml.Controls.IRelativePanel
  IRelativePanel = interface;
  PIRelativePanel = ^IRelativePanel;

  // Microsoft.UI.Xaml.Controls.IRelativePanelFactory
  IRelativePanelFactory = interface;
  PIRelativePanelFactory = ^IRelativePanelFactory;

  // Microsoft.UI.Xaml.Controls.IRelativePanelStatics
  IRelativePanelStatics = interface;
  PIRelativePanelStatics = ^IRelativePanelStatics;

  // Microsoft.UI.Xaml.Controls.IRevealListViewItemPresenter
  IRevealListViewItemPresenter = interface;
  PIRevealListViewItemPresenter = ^IRevealListViewItemPresenter;

  // Microsoft.UI.Xaml.Controls.IRevealListViewItemPresenterFactory
  IRevealListViewItemPresenterFactory = interface;
  PIRevealListViewItemPresenterFactory = ^IRevealListViewItemPresenterFactory;

  // Microsoft.UI.Xaml.Controls.IRichEditBoxFactory
  IRichEditBoxFactory = interface;
  PIRichEditBoxFactory = ^IRichEditBoxFactory;

  // Microsoft.UI.Xaml.Controls.IRichEditBoxStatics
  IRichEditBoxStatics = interface;
  PIRichEditBoxStatics = ^IRichEditBoxStatics;

  // Microsoft.UI.Xaml.Controls.IRichTextBlockOverflowStatics
  IRichTextBlockOverflowStatics = interface;
  PIRichTextBlockOverflowStatics = ^IRichTextBlockOverflowStatics;

  // Microsoft.UI.Xaml.Controls.IRichTextBlockStatics
  IRichTextBlockStatics = interface;
  PIRichTextBlockStatics = ^IRichTextBlockStatics;

  // Microsoft.UI.Xaml.Controls.IRowDefinitionStatics
  IRowDefinitionStatics = interface;
  PIRowDefinitionStatics = ^IRowDefinitionStatics;

  // Microsoft.UI.Xaml.Controls.IScrollAnchorProvider
  IScrollAnchorProvider = interface;
  PIScrollAnchorProvider = ^IScrollAnchorProvider;

  // Microsoft.UI.Xaml.Controls.IScrollContentPresenter
  IScrollContentPresenter = interface;
  PIScrollContentPresenter = ^IScrollContentPresenter;

  // Microsoft.UI.Xaml.Controls.IScrollContentPresenterStatics
  IScrollContentPresenterStatics = interface;
  PIScrollContentPresenterStatics = ^IScrollContentPresenterStatics;

  // Microsoft.UI.Xaml.Controls.IScrollViewerStatics
  IScrollViewerStatics = interface;
  PIScrollViewerStatics = ^IScrollViewerStatics;

  // Microsoft.UI.Xaml.Controls.ISectionsInViewChangedEventArgsFactory
  ISectionsInViewChangedEventArgsFactory = interface;
  PISectionsInViewChangedEventArgsFactory = ^ISectionsInViewChangedEventArgsFactory;

  // Microsoft.UI.Xaml.Controls.ISelectionChangedEventArgsFactory
  ISelectionChangedEventArgsFactory = interface;
  PISelectionChangedEventArgsFactory = ^ISelectionChangedEventArgsFactory;

  // Microsoft.UI.Xaml.Controls.ISemanticZoomStatics
  ISemanticZoomStatics = interface;
  PISemanticZoomStatics = ^ISemanticZoomStatics;

  // Microsoft.UI.Xaml.Controls.ISliderFactory
  ISliderFactory = interface;
  PISliderFactory = ^ISliderFactory;

  // Microsoft.UI.Xaml.Controls.ISliderStatics
  ISliderStatics = interface;
  PISliderStatics = ^ISliderStatics;

  // Microsoft.UI.Xaml.Controls.ISplitButtonFactory
  ISplitButtonFactory = interface;
  PISplitButtonFactory = ^ISplitButtonFactory;

  // Microsoft.UI.Xaml.Controls.ISplitButtonStatics
  ISplitButtonStatics = interface;
  PISplitButtonStatics = ^ISplitButtonStatics;

  // Microsoft.UI.Xaml.Controls.ISplitViewFactory
  ISplitViewFactory = interface;
  PISplitViewFactory = ^ISplitViewFactory;

  // Microsoft.UI.Xaml.Controls.ISplitViewStatics
  ISplitViewStatics = interface;
  PISplitViewStatics = ^ISplitViewStatics;

  // Microsoft.UI.Xaml.Controls.IStackLayout
  IStackLayout = interface;
  PIStackLayout = ^IStackLayout;

  // Microsoft.UI.Xaml.Controls.IStackLayoutFactory
  IStackLayoutFactory = interface;
  PIStackLayoutFactory = ^IStackLayoutFactory;

  // Microsoft.UI.Xaml.Controls.IStackLayoutStatics
  IStackLayoutStatics = interface;
  PIStackLayoutStatics = ^IStackLayoutStatics;

  // Microsoft.UI.Xaml.Controls.IStackPanel
  IStackPanel = interface;
  PIStackPanel = ^IStackPanel;

  // Microsoft.UI.Xaml.Controls.IStackPanelFactory
  IStackPanelFactory = interface;
  PIStackPanelFactory = ^IStackPanelFactory;

  // Microsoft.UI.Xaml.Controls.IStackPanelStatics
  IStackPanelStatics = interface;
  PIStackPanelStatics = ^IStackPanelStatics;

  // Microsoft.UI.Xaml.Controls.IStyleSelectorFactory
  IStyleSelectorFactory = interface;
  PIStyleSelectorFactory = ^IStyleSelectorFactory;

  // Microsoft.UI.Xaml.Controls.IStyleSelectorOverrides
  IStyleSelectorOverrides = interface;
  PIStyleSelectorOverrides = ^IStyleSelectorOverrides;

  // Microsoft.UI.Xaml.Controls.ISwapChainBackgroundPanel
  ISwapChainBackgroundPanel = interface;
  PISwapChainBackgroundPanel = ^ISwapChainBackgroundPanel;

  // Microsoft.UI.Xaml.Controls.ISwapChainBackgroundPanelFactory
  ISwapChainBackgroundPanelFactory = interface;
  PISwapChainBackgroundPanelFactory = ^ISwapChainBackgroundPanelFactory;

  // Microsoft.UI.Xaml.Controls.ISwapChainPanelFactory
  ISwapChainPanelFactory = interface;
  PISwapChainPanelFactory = ^ISwapChainPanelFactory;

  // Microsoft.UI.Xaml.Controls.ISwapChainPanelStatics
  ISwapChainPanelStatics = interface;
  PISwapChainPanelStatics = ^ISwapChainPanelStatics;

  // Microsoft.UI.Xaml.Controls.ISwipeItems
  ISwipeItems = interface;
  PISwipeItems = ^ISwipeItems;

  // Microsoft.UI.Xaml.Controls.ISwipeControl
  ISwipeControl = interface;
  PISwipeControl = ^ISwipeControl;

  // Microsoft.UI.Xaml.Controls.ISwipeControlFactory
  ISwipeControlFactory = interface;
  PISwipeControlFactory = ^ISwipeControlFactory;

  // Microsoft.UI.Xaml.Controls.ISwipeControlStatics
  ISwipeControlStatics = interface;
  PISwipeControlStatics = ^ISwipeControlStatics;

  // Microsoft.UI.Xaml.Controls.ISwipeItemInvokedEventArgs
  ISwipeItemInvokedEventArgs = interface;
  PISwipeItemInvokedEventArgs = ^ISwipeItemInvokedEventArgs;

  // Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.Controls.ISwipeItem,Microsoft.UI.Xaml.Controls.ISwipeItemInvokedEventArgs>
  TypedEventHandler_2__ISwipeItem__ISwipeItemInvokedEventArgs = interface;
  PTypedEventHandler_2__ISwipeItem__ISwipeItemInvokedEventArgs = ^TypedEventHandler_2__ISwipeItem__ISwipeItemInvokedEventArgs;

  // Microsoft.UI.Xaml.Controls.ISwipeItem
  ISwipeItem = interface;
  PISwipeItem = ^ISwipeItem;

  // Microsoft.UI.Xaml.Controls.ISwipeItemFactory
  ISwipeItemFactory = interface;
  PISwipeItemFactory = ^ISwipeItemFactory;

  // Microsoft.UI.Xaml.Controls.ISwipeItemStatics
  ISwipeItemStatics = interface;
  PISwipeItemStatics = ^ISwipeItemStatics;

  // Microsoft.UI.Xaml.Controls.ISwipeItemsFactory
  ISwipeItemsFactory = interface;
  PISwipeItemsFactory = ^ISwipeItemsFactory;

  // Microsoft.UI.Xaml.Controls.ISwipeItemsStatics
  ISwipeItemsStatics = interface;
  PISwipeItemsStatics = ^ISwipeItemsStatics;

  // Microsoft.UI.Xaml.Controls.ISymbolIcon
  ISymbolIcon = interface;
  PISymbolIcon = ^ISymbolIcon;

  // Microsoft.UI.Xaml.Controls.ISymbolIconFactory
  ISymbolIconFactory = interface;
  PISymbolIconFactory = ^ISymbolIconFactory;

  // Microsoft.UI.Xaml.Controls.ISymbolIconSource
  ISymbolIconSource = interface;
  PISymbolIconSource = ^ISymbolIconSource;

  // Microsoft.UI.Xaml.Controls.ISymbolIconSourceFactory
  ISymbolIconSourceFactory = interface;
  PISymbolIconSourceFactory = ^ISymbolIconSourceFactory;

  // Microsoft.UI.Xaml.Controls.ISymbolIconSourceStatics
  ISymbolIconSourceStatics = interface;
  PISymbolIconSourceStatics = ^ISymbolIconSourceStatics;

  // Microsoft.UI.Xaml.Controls.ISymbolIconStatics
  ISymbolIconStatics = interface;
  PISymbolIconStatics = ^ISymbolIconStatics;

  // Microsoft.UI.Xaml.Controls.ITabViewFactory
  ITabViewFactory = interface;
  PITabViewFactory = ^ITabViewFactory;

  // Microsoft.UI.Xaml.Controls.ITabViewItemFactory
  ITabViewItemFactory = interface;
  PITabViewItemFactory = ^ITabViewItemFactory;

  // Microsoft.UI.Xaml.Controls.ITabViewItemStatics
  ITabViewItemStatics = interface;
  PITabViewItemStatics = ^ITabViewItemStatics;

  // Microsoft.UI.Xaml.Controls.ITabViewItemTemplateSettings2
  ITabViewItemTemplateSettings2 = interface;
  PITabViewItemTemplateSettings2 = ^ITabViewItemTemplateSettings2;

  // Microsoft.UI.Xaml.Controls.ITabViewItemTemplateSettingsFactory
  ITabViewItemTemplateSettingsFactory = interface;
  PITabViewItemTemplateSettingsFactory = ^ITabViewItemTemplateSettingsFactory;

  // Microsoft.UI.Xaml.Controls.ITabViewItemTemplateSettingsStatics
  ITabViewItemTemplateSettingsStatics = interface;
  PITabViewItemTemplateSettingsStatics = ^ITabViewItemTemplateSettingsStatics;

  // Microsoft.UI.Xaml.Controls.ITabViewItemTemplateSettingsStatics2
  ITabViewItemTemplateSettingsStatics2 = interface;
  PITabViewItemTemplateSettingsStatics2 = ^ITabViewItemTemplateSettingsStatics2;

  // Microsoft.UI.Xaml.Controls.ITabViewStatics
  ITabViewStatics = interface;
  PITabViewStatics = ^ITabViewStatics;

  // Microsoft.UI.Xaml.Controls.ITeachingTipFactory
  ITeachingTipFactory = interface;
  PITeachingTipFactory = ^ITeachingTipFactory;

  // Microsoft.UI.Xaml.Controls.ITeachingTipStatics
  ITeachingTipStatics = interface;
  PITeachingTipStatics = ^ITeachingTipStatics;

  // Microsoft.UI.Xaml.Controls.ITeachingTipTemplateSettingsFactory
  ITeachingTipTemplateSettingsFactory = interface;
  PITeachingTipTemplateSettingsFactory = ^ITeachingTipTemplateSettingsFactory;

  // Microsoft.UI.Xaml.Controls.ITeachingTipTemplateSettingsStatics
  ITeachingTipTemplateSettingsStatics = interface;
  PITeachingTipTemplateSettingsStatics = ^ITeachingTipTemplateSettingsStatics;

  // Microsoft.UI.Xaml.Controls.ITextBlockStatics
  ITextBlockStatics = interface;
  PITextBlockStatics = ^ITextBlockStatics;

  // Microsoft.UI.Xaml.Controls.ITextBoxFactory
  ITextBoxFactory = interface;
  PITextBoxFactory = ^ITextBoxFactory;

  // Microsoft.UI.Xaml.Controls.ITextBoxStatics
  ITextBoxStatics = interface;
  PITextBoxStatics = ^ITextBoxStatics;

  // Microsoft.UI.Xaml.Controls.ITextCommandBarFlyout
  ITextCommandBarFlyout = interface;
  PITextCommandBarFlyout = ^ITextCommandBarFlyout;

  // Microsoft.UI.Xaml.Controls.ITextCommandBarFlyoutFactory
  ITextCommandBarFlyoutFactory = interface;
  PITextCommandBarFlyoutFactory = ^ITextCommandBarFlyoutFactory;

  // Microsoft.UI.Xaml.Controls.ITimePickedEventArgs
  ITimePickedEventArgs = interface;
  PITimePickedEventArgs = ^ITimePickedEventArgs;

  // Microsoft.UI.Xaml.Controls.ITimePickerFactory
  ITimePickerFactory = interface;
  PITimePickerFactory = ^ITimePickerFactory;

  // Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.Controls.ITimePickerFlyout,Microsoft.UI.Xaml.Controls.ITimePickedEventArgs>
  TypedEventHandler_2__ITimePickerFlyout__ITimePickedEventArgs = interface;
  PTypedEventHandler_2__ITimePickerFlyout__ITimePickedEventArgs = ^TypedEventHandler_2__ITimePickerFlyout__ITimePickedEventArgs;

  // Microsoft.UI.Xaml.Controls.ITimePickerFlyout
  ITimePickerFlyout = interface;
  PITimePickerFlyout = ^ITimePickerFlyout;

  // Microsoft.UI.Xaml.Controls.ITimePickerFlyoutPresenter
  ITimePickerFlyoutPresenter = interface;
  PITimePickerFlyoutPresenter = ^ITimePickerFlyoutPresenter;

  // Microsoft.UI.Xaml.Controls.ITimePickerFlyoutPresenterStatics
  ITimePickerFlyoutPresenterStatics = interface;
  PITimePickerFlyoutPresenterStatics = ^ITimePickerFlyoutPresenterStatics;

  // Microsoft.UI.Xaml.Controls.ITimePickerFlyoutStatics
  ITimePickerFlyoutStatics = interface;
  PITimePickerFlyoutStatics = ^ITimePickerFlyoutStatics;

  // Microsoft.UI.Xaml.Controls.ITimePickerStatics
  ITimePickerStatics = interface;
  PITimePickerStatics = ^ITimePickerStatics;

  // Microsoft.UI.Xaml.Controls.IToggleMenuFlyoutItemFactory
  IToggleMenuFlyoutItemFactory = interface;
  PIToggleMenuFlyoutItemFactory = ^IToggleMenuFlyoutItemFactory;

  // Microsoft.UI.Xaml.Controls.IToggleMenuFlyoutItemStatics
  IToggleMenuFlyoutItemStatics = interface;
  PIToggleMenuFlyoutItemStatics = ^IToggleMenuFlyoutItemStatics;

  // Microsoft.UI.Xaml.Controls.IToggleSplitButtonFactory
  IToggleSplitButtonFactory = interface;
  PIToggleSplitButtonFactory = ^IToggleSplitButtonFactory;

  // Microsoft.UI.Xaml.Controls.IToggleSplitButtonStatics
  IToggleSplitButtonStatics = interface;
  PIToggleSplitButtonStatics = ^IToggleSplitButtonStatics;

  // Microsoft.UI.Xaml.Controls.IToggleSwitchOverrides
  IToggleSwitchOverrides = interface;
  PIToggleSwitchOverrides = ^IToggleSwitchOverrides;

  // Microsoft.UI.Xaml.Controls.IToggleSwitchStatics
  IToggleSwitchStatics = interface;
  PIToggleSwitchStatics = ^IToggleSwitchStatics;

  // Microsoft.UI.Xaml.Controls.Primitives.IToolTipTemplateSettings
  Primitives_IToolTipTemplateSettings = interface;
  PPrimitives_IToolTipTemplateSettings = ^Primitives_IToolTipTemplateSettings;

  // Microsoft.UI.Xaml.Controls.IToolTip
  IToolTip = interface;
  PIToolTip = ^IToolTip;

  // Microsoft.UI.Xaml.Controls.IToolTipFactory
  IToolTipFactory = interface;
  PIToolTipFactory = ^IToolTipFactory;

  // Microsoft.UI.Xaml.Controls.IToolTipService
  IToolTipService = interface;
  PIToolTipService = ^IToolTipService;

  // Microsoft.UI.Xaml.Controls.IToolTipServiceStatics
  IToolTipServiceStatics = interface;
  PIToolTipServiceStatics = ^IToolTipServiceStatics;

  // Microsoft.UI.Xaml.Controls.IToolTipStatics
  IToolTipStatics = interface;
  PIToolTipStatics = ^IToolTipStatics;

  // Microsoft.UI.Xaml.Controls.ITreeViewNode
  ITreeViewNode = interface;
  PITreeViewNode = ^ITreeViewNode;

  // Windows.Foundation.Collections.IIterator`1<Microsoft.UI.Xaml.Controls.ITreeViewNode>
  IIterator_1__ITreeViewNode = interface;
  PIIterator_1__ITreeViewNode = ^IIterator_1__ITreeViewNode;

  // Windows.Foundation.Collections.IIterable`1<Microsoft.UI.Xaml.Controls.ITreeViewNode>
  IIterable_1__ITreeViewNode = interface;
  PIIterable_1__ITreeViewNode = ^IIterable_1__ITreeViewNode;

  // Windows.Foundation.Collections.IVectorView`1<Microsoft.UI.Xaml.Controls.ITreeViewNode>
  IVectorView_1__ITreeViewNode = interface;
  PIVectorView_1__ITreeViewNode = ^IVectorView_1__ITreeViewNode;

  // Windows.Foundation.Collections.IVector`1<Microsoft.UI.Xaml.Controls.ITreeViewNode>
  IVector_1__ITreeViewNode = interface;
  PIVector_1__ITreeViewNode = ^IVector_1__ITreeViewNode;

  // Microsoft.UI.Xaml.Controls.ITreeViewItemInvokedEventArgs
  ITreeViewItemInvokedEventArgs = interface;
  PITreeViewItemInvokedEventArgs = ^ITreeViewItemInvokedEventArgs;

  // Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.Controls.ITreeView,Microsoft.UI.Xaml.Controls.ITreeViewItemInvokedEventArgs>
  TypedEventHandler_2__ITreeView__ITreeViewItemInvokedEventArgs = interface;
  PTypedEventHandler_2__ITreeView__ITreeViewItemInvokedEventArgs = ^TypedEventHandler_2__ITreeView__ITreeViewItemInvokedEventArgs;

  // Microsoft.UI.Xaml.Controls.ITreeViewExpandingEventArgs
  ITreeViewExpandingEventArgs = interface;
  PITreeViewExpandingEventArgs = ^ITreeViewExpandingEventArgs;

  // Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.Controls.ITreeView,Microsoft.UI.Xaml.Controls.ITreeViewExpandingEventArgs>
  TypedEventHandler_2__ITreeView__ITreeViewExpandingEventArgs = interface;
  PTypedEventHandler_2__ITreeView__ITreeViewExpandingEventArgs = ^TypedEventHandler_2__ITreeView__ITreeViewExpandingEventArgs;

  // Microsoft.UI.Xaml.Controls.ITreeViewCollapsedEventArgs
  ITreeViewCollapsedEventArgs = interface;
  PITreeViewCollapsedEventArgs = ^ITreeViewCollapsedEventArgs;

  // Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.Controls.ITreeView,Microsoft.UI.Xaml.Controls.ITreeViewCollapsedEventArgs>
  TypedEventHandler_2__ITreeView__ITreeViewCollapsedEventArgs = interface;
  PTypedEventHandler_2__ITreeView__ITreeViewCollapsedEventArgs = ^TypedEventHandler_2__ITreeView__ITreeViewCollapsedEventArgs;

  // Microsoft.UI.Xaml.Controls.ITreeView
  ITreeView = interface;
  PITreeView = ^ITreeView;

  // Microsoft.UI.Xaml.Controls.ITreeViewDragItemsStartingEventArgs
  ITreeViewDragItemsStartingEventArgs = interface;
  PITreeViewDragItemsStartingEventArgs = ^ITreeViewDragItemsStartingEventArgs;

  // Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.Controls.ITreeView,Microsoft.UI.Xaml.Controls.ITreeViewDragItemsStartingEventArgs>
  TypedEventHandler_2__ITreeView__ITreeViewDragItemsStartingEventArgs = interface;
  PTypedEventHandler_2__ITreeView__ITreeViewDragItemsStartingEventArgs = ^TypedEventHandler_2__ITreeView__ITreeViewDragItemsStartingEventArgs;

  // Microsoft.UI.Xaml.Controls.ITreeViewDragItemsCompletedEventArgs
  ITreeViewDragItemsCompletedEventArgs = interface;
  PITreeViewDragItemsCompletedEventArgs = ^ITreeViewDragItemsCompletedEventArgs;

  // Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.Controls.ITreeView,Microsoft.UI.Xaml.Controls.ITreeViewDragItemsCompletedEventArgs>
  TypedEventHandler_2__ITreeView__ITreeViewDragItemsCompletedEventArgs = interface;
  PTypedEventHandler_2__ITreeView__ITreeViewDragItemsCompletedEventArgs = ^TypedEventHandler_2__ITreeView__ITreeViewDragItemsCompletedEventArgs;

  // Microsoft.UI.Xaml.Controls.ITreeView2
  ITreeView2 = interface;
  PITreeView2 = ^ITreeView2;

  // Microsoft.UI.Xaml.Controls.ITreeViewCollapsedEventArgs2
  ITreeViewCollapsedEventArgs2 = interface;
  PITreeViewCollapsedEventArgs2 = ^ITreeViewCollapsedEventArgs2;

  // Microsoft.UI.Xaml.Controls.ITreeViewDragItemsCompletedEventArgs2
  ITreeViewDragItemsCompletedEventArgs2 = interface;
  PITreeViewDragItemsCompletedEventArgs2 = ^ITreeViewDragItemsCompletedEventArgs2;

  // Microsoft.UI.Xaml.Controls.ITreeViewExpandingEventArgs2
  ITreeViewExpandingEventArgs2 = interface;
  PITreeViewExpandingEventArgs2 = ^ITreeViewExpandingEventArgs2;

  // Microsoft.UI.Xaml.Controls.ITreeViewFactory
  ITreeViewFactory = interface;
  PITreeViewFactory = ^ITreeViewFactory;

  // Microsoft.UI.Xaml.Controls.ITreeViewItem2
  ITreeViewItem2 = interface;
  PITreeViewItem2 = ^ITreeViewItem2;

  // Microsoft.UI.Xaml.Controls.ITreeViewItemFactory
  ITreeViewItemFactory = interface;
  PITreeViewItemFactory = ^ITreeViewItemFactory;

  // Microsoft.UI.Xaml.Controls.ITreeViewItemStatics
  ITreeViewItemStatics = interface;
  PITreeViewItemStatics = ^ITreeViewItemStatics;

  // Microsoft.UI.Xaml.Controls.ITreeViewItemStatics2
  ITreeViewItemStatics2 = interface;
  PITreeViewItemStatics2 = ^ITreeViewItemStatics2;

  // Microsoft.UI.Xaml.Controls.ITreeViewItemTemplateSettingsFactory
  ITreeViewItemTemplateSettingsFactory = interface;
  PITreeViewItemTemplateSettingsFactory = ^ITreeViewItemTemplateSettingsFactory;

  // Microsoft.UI.Xaml.Controls.ITreeViewItemTemplateSettingsStatics
  ITreeViewItemTemplateSettingsStatics = interface;
  PITreeViewItemTemplateSettingsStatics = ^ITreeViewItemTemplateSettingsStatics;

  // Microsoft.UI.Xaml.Controls.ITreeViewListFactory
  ITreeViewListFactory = interface;
  PITreeViewListFactory = ^ITreeViewListFactory;

  // Microsoft.UI.Xaml.Controls.ITreeViewNodeFactory
  ITreeViewNodeFactory = interface;
  PITreeViewNodeFactory = ^ITreeViewNodeFactory;

  // Microsoft.UI.Xaml.Controls.ITreeViewNodeStatics
  ITreeViewNodeStatics = interface;
  PITreeViewNodeStatics = ^ITreeViewNodeStatics;

  // Microsoft.UI.Xaml.Controls.ITreeViewStatics
  ITreeViewStatics = interface;
  PITreeViewStatics = ^ITreeViewStatics;

  // Microsoft.UI.Xaml.Controls.ITreeViewStatics2
  ITreeViewStatics2 = interface;
  PITreeViewStatics2 = ^ITreeViewStatics2;

  // Microsoft.UI.Xaml.Controls.ITwoPaneViewFactory
  ITwoPaneViewFactory = interface;
  PITwoPaneViewFactory = ^ITwoPaneViewFactory;

  // Microsoft.UI.Xaml.Controls.ITwoPaneViewStatics
  ITwoPaneViewStatics = interface;
  PITwoPaneViewStatics = ^ITwoPaneViewStatics;

  // Microsoft.UI.Xaml.Controls.IUniformGridLayout
  IUniformGridLayout = interface;
  PIUniformGridLayout = ^IUniformGridLayout;

  // Microsoft.UI.Xaml.Controls.IUniformGridLayoutFactory
  IUniformGridLayoutFactory = interface;
  PIUniformGridLayoutFactory = ^IUniformGridLayoutFactory;

  // Microsoft.UI.Xaml.Controls.IUniformGridLayoutStatics
  IUniformGridLayoutStatics = interface;
  PIUniformGridLayoutStatics = ^IUniformGridLayoutStatics;

  // Microsoft.UI.Xaml.Controls.IUserControl
  IUserControl = interface;
  PIUserControl = ^IUserControl;

  // Microsoft.UI.Xaml.Controls.IUserControlFactory
  IUserControlFactory = interface;
  PIUserControlFactory = ^IUserControlFactory;

  // Microsoft.UI.Xaml.Controls.IUserControlStatics
  IUserControlStatics = interface;
  PIUserControlStatics = ^IUserControlStatics;

  // Microsoft.UI.Xaml.Controls.IVariableSizedWrapGrid
  IVariableSizedWrapGrid = interface;
  PIVariableSizedWrapGrid = ^IVariableSizedWrapGrid;

  // Microsoft.UI.Xaml.Controls.IVariableSizedWrapGridStatics
  IVariableSizedWrapGridStatics = interface;
  PIVariableSizedWrapGridStatics = ^IVariableSizedWrapGridStatics;

  // Microsoft.UI.Xaml.Controls.IViewbox
  IViewbox = interface;
  PIViewbox = ^IViewbox;

  // Microsoft.UI.Xaml.Controls.IViewboxStatics
  IViewboxStatics = interface;
  PIViewboxStatics = ^IViewboxStatics;

  // Microsoft.UI.Xaml.Controls.IVirtualizingLayout
  IVirtualizingLayout = interface;
  PIVirtualizingLayout = ^IVirtualizingLayout;

  // Microsoft.UI.Xaml.Controls.IVirtualizingLayoutContext
  IVirtualizingLayoutContext = interface;
  PIVirtualizingLayoutContext = ^IVirtualizingLayoutContext;

  // Microsoft.UI.Xaml.Controls.IVirtualizingLayoutContextFactory
  IVirtualizingLayoutContextFactory = interface;
  PIVirtualizingLayoutContextFactory = ^IVirtualizingLayoutContextFactory;

  // Microsoft.UI.Xaml.Controls.IVirtualizingLayoutContextOverrides
  IVirtualizingLayoutContextOverrides = interface;
  PIVirtualizingLayoutContextOverrides = ^IVirtualizingLayoutContextOverrides;

  // Microsoft.UI.Xaml.Controls.IVirtualizingLayoutFactory
  IVirtualizingLayoutFactory = interface;
  PIVirtualizingLayoutFactory = ^IVirtualizingLayoutFactory;

  // Microsoft.UI.Xaml.Controls.IVirtualizingLayoutOverrides
  IVirtualizingLayoutOverrides = interface;
  PIVirtualizingLayoutOverrides = ^IVirtualizingLayoutOverrides;

  // Microsoft.UI.Xaml.Controls.IVirtualizingPanel
  IVirtualizingPanel = interface;
  PIVirtualizingPanel = ^IVirtualizingPanel;

  // Microsoft.UI.Xaml.Controls.IVirtualizingPanelFactory
  IVirtualizingPanelFactory = interface;
  PIVirtualizingPanelFactory = ^IVirtualizingPanelFactory;

  // Microsoft.UI.Xaml.Controls.IVirtualizingPanelOverrides
  IVirtualizingPanelOverrides = interface;
  PIVirtualizingPanelOverrides = ^IVirtualizingPanelOverrides;

  // Microsoft.UI.Xaml.Controls.IVirtualizingPanelProtected
  IVirtualizingPanelProtected = interface;
  PIVirtualizingPanelProtected = ^IVirtualizingPanelProtected;

  // Microsoft.UI.Xaml.Controls.IVirtualizingStackPanel
  IVirtualizingStackPanel = interface;
  PIVirtualizingStackPanel = ^IVirtualizingStackPanel;

  // Microsoft.UI.Xaml.Controls.IVirtualizingStackPanelOverrides
  IVirtualizingStackPanelOverrides = interface;
  PIVirtualizingStackPanelOverrides = ^IVirtualizingStackPanelOverrides;

  // Microsoft.UI.Xaml.Controls.IVirtualizingStackPanelStatics
  IVirtualizingStackPanelStatics = interface;
  PIVirtualizingStackPanelStatics = ^IVirtualizingStackPanelStatics;

  // Microsoft.UI.Xaml.Controls.IWebView2Factory
  IWebView2Factory = interface;
  PIWebView2Factory = ^IWebView2Factory;

  // Microsoft.UI.Xaml.Controls.IWebView2Statics
  IWebView2Statics = interface;
  PIWebView2Statics = ^IWebView2Statics;

  // Microsoft.UI.Xaml.Controls.IWrapGrid
  IWrapGrid = interface;
  PIWrapGrid = ^IWrapGrid;

  // Microsoft.UI.Xaml.Controls.IWrapGridStatics
  IWrapGridStatics = interface;
  PIWrapGridStatics = ^IWrapGridStatics;

  // Microsoft.UI.Xaml.Controls.IXamlControlsResources
  IXamlControlsResources = interface;
  PIXamlControlsResources = ^IXamlControlsResources;

  // Microsoft.UI.Xaml.Controls.IXamlControlsResourcesStatics
  IXamlControlsResourcesStatics = interface;
  PIXamlControlsResourcesStatics = ^IXamlControlsResourcesStatics;

  // Microsoft.UI.Xaml.Controls.Primitives.IAutoSuggestBoxHelper
  Primitives_IAutoSuggestBoxHelper = interface;
  PPrimitives_IAutoSuggestBoxHelper = ^Primitives_IAutoSuggestBoxHelper;

  // Microsoft.UI.Xaml.Controls.Primitives.IAutoSuggestBoxHelperStatics
  Primitives_IAutoSuggestBoxHelperStatics = interface;
  PPrimitives_IAutoSuggestBoxHelperStatics = ^Primitives_IAutoSuggestBoxHelperStatics;

  // Microsoft.UI.Xaml.Controls.Primitives.IButtonBaseFactory
  Primitives_IButtonBaseFactory = interface;
  PPrimitives_IButtonBaseFactory = ^Primitives_IButtonBaseFactory;

  // Microsoft.UI.Xaml.Controls.Primitives.IButtonBaseStatics
  Primitives_IButtonBaseStatics = interface;
  PPrimitives_IButtonBaseStatics = ^Primitives_IButtonBaseStatics;

  // Microsoft.UI.Xaml.Controls.Primitives.ICalendarPanel
  Primitives_ICalendarPanel = interface;
  PPrimitives_ICalendarPanel = ^Primitives_ICalendarPanel;

  // Microsoft.UI.Xaml.Controls.Primitives.ICarouselPanel
  Primitives_ICarouselPanel = interface;
  PPrimitives_ICarouselPanel = ^Primitives_ICarouselPanel;

  // Microsoft.UI.Xaml.Controls.Primitives.ICarouselPanelFactory
  Primitives_ICarouselPanelFactory = interface;
  PPrimitives_ICarouselPanelFactory = ^Primitives_ICarouselPanelFactory;

  // Microsoft.UI.Xaml.Controls.Primitives.IColorPickerSliderFactory
  Primitives_IColorPickerSliderFactory = interface;
  PPrimitives_IColorPickerSliderFactory = ^Primitives_IColorPickerSliderFactory;

  // Microsoft.UI.Xaml.Controls.Primitives.IColorPickerSliderStatics
  Primitives_IColorPickerSliderStatics = interface;
  PPrimitives_IColorPickerSliderStatics = ^Primitives_IColorPickerSliderStatics;

  // Microsoft.UI.Xaml.Controls.Primitives.IColorSpectrumFactory
  Primitives_IColorSpectrumFactory = interface;
  PPrimitives_IColorSpectrumFactory = ^Primitives_IColorSpectrumFactory;

  // Microsoft.UI.Xaml.Controls.Primitives.IColorSpectrumStatics
  Primitives_IColorSpectrumStatics = interface;
  PPrimitives_IColorSpectrumStatics = ^Primitives_IColorSpectrumStatics;

  // Microsoft.UI.Xaml.Controls.Primitives.IColumnMajorUniformToLargestGridLayout
  Primitives_IColumnMajorUniformToLargestGridLayout = interface;
  PPrimitives_IColumnMajorUniformToLargestGridLayout = ^Primitives_IColumnMajorUniformToLargestGridLayout;

  // Microsoft.UI.Xaml.Controls.Primitives.IColumnMajorUniformToLargestGridLayoutFactory
  Primitives_IColumnMajorUniformToLargestGridLayoutFactory = interface;
  PPrimitives_IColumnMajorUniformToLargestGridLayoutFactory = ^Primitives_IColumnMajorUniformToLargestGridLayoutFactory;

  // Microsoft.UI.Xaml.Controls.Primitives.IColumnMajorUniformToLargestGridLayoutStatics
  Primitives_IColumnMajorUniformToLargestGridLayoutStatics = interface;
  PPrimitives_IColumnMajorUniformToLargestGridLayoutStatics = ^Primitives_IColumnMajorUniformToLargestGridLayoutStatics;

  // Microsoft.UI.Xaml.Controls.Primitives.IComboBoxHelper
  Primitives_IComboBoxHelper = interface;
  PPrimitives_IComboBoxHelper = ^Primitives_IComboBoxHelper;

  // Microsoft.UI.Xaml.Controls.Primitives.IComboBoxHelperStatics
  Primitives_IComboBoxHelperStatics = interface;
  PPrimitives_IComboBoxHelperStatics = ^Primitives_IComboBoxHelperStatics;

  // Microsoft.UI.Xaml.Controls.Primitives.ICommandBarFlyoutCommandBarTemplateSettings
  Primitives_ICommandBarFlyoutCommandBarTemplateSettings = interface;
  PPrimitives_ICommandBarFlyoutCommandBarTemplateSettings = ^Primitives_ICommandBarFlyoutCommandBarTemplateSettings;

  // Microsoft.UI.Xaml.Controls.Primitives.ICommandBarFlyoutCommandBar
  Primitives_ICommandBarFlyoutCommandBar = interface;
  PPrimitives_ICommandBarFlyoutCommandBar = ^Primitives_ICommandBarFlyoutCommandBar;

  // Microsoft.UI.Xaml.Controls.Primitives.ICommandBarFlyoutCommandBarAutomationPropertiesStatics
  Primitives_ICommandBarFlyoutCommandBarAutomationPropertiesStatics = interface;
  PPrimitives_ICommandBarFlyoutCommandBarAutomationPropertiesStatics = ^Primitives_ICommandBarFlyoutCommandBarAutomationPropertiesStatics;

  // Microsoft.UI.Xaml.Controls.Primitives.ICommandBarFlyoutCommandBarFactory
  Primitives_ICommandBarFlyoutCommandBarFactory = interface;
  PPrimitives_ICommandBarFlyoutCommandBarFactory = ^Primitives_ICommandBarFlyoutCommandBarFactory;

  // Microsoft.UI.Xaml.Controls.Primitives.ICornerRadiusFilterConverter
  Primitives_ICornerRadiusFilterConverter = interface;
  PPrimitives_ICornerRadiusFilterConverter = ^Primitives_ICornerRadiusFilterConverter;

  // Microsoft.UI.Xaml.Controls.Primitives.ICornerRadiusFilterConverterStatics
  Primitives_ICornerRadiusFilterConverterStatics = interface;
  PPrimitives_ICornerRadiusFilterConverterStatics = ^Primitives_ICornerRadiusFilterConverterStatics;

  // Microsoft.UI.Xaml.Controls.Primitives.ICornerRadiusToThicknessConverter
  Primitives_ICornerRadiusToThicknessConverter = interface;
  PPrimitives_ICornerRadiusToThicknessConverter = ^Primitives_ICornerRadiusToThicknessConverter;

  // Microsoft.UI.Xaml.Controls.Primitives.ICornerRadiusToThicknessConverterStatics
  Primitives_ICornerRadiusToThicknessConverterStatics = interface;
  PPrimitives_ICornerRadiusToThicknessConverterStatics = ^Primitives_ICornerRadiusToThicknessConverterStatics;

  // Microsoft.UI.Xaml.Controls.Primitives.IDragCompletedEventArgsFactory
  Primitives_IDragCompletedEventArgsFactory = interface;
  PPrimitives_IDragCompletedEventArgsFactory = ^Primitives_IDragCompletedEventArgsFactory;

  // Microsoft.UI.Xaml.Controls.Primitives.IDragDeltaEventArgsFactory
  Primitives_IDragDeltaEventArgsFactory = interface;
  PPrimitives_IDragDeltaEventArgsFactory = ^Primitives_IDragDeltaEventArgsFactory;

  // Microsoft.UI.Xaml.Controls.Primitives.IDragStartedEventArgsFactory
  Primitives_IDragStartedEventArgsFactory = interface;
  PPrimitives_IDragStartedEventArgsFactory = ^Primitives_IDragStartedEventArgsFactory;

  // Microsoft.UI.Xaml.Controls.Primitives.IFlyoutBaseFactory
  Primitives_IFlyoutBaseFactory = interface;
  PPrimitives_IFlyoutBaseFactory = ^Primitives_IFlyoutBaseFactory;

  // Microsoft.UI.Xaml.Controls.Primitives.IFlyoutBaseOverrides
  Primitives_IFlyoutBaseOverrides = interface;
  PPrimitives_IFlyoutBaseOverrides = ^Primitives_IFlyoutBaseOverrides;

  // Microsoft.UI.Xaml.Controls.Primitives.IFlyoutBaseStatics
  Primitives_IFlyoutBaseStatics = interface;
  PPrimitives_IFlyoutBaseStatics = ^Primitives_IFlyoutBaseStatics;

  // Microsoft.UI.Xaml.Controls.Primitives.IFlyoutShowOptionsFactory
  Primitives_IFlyoutShowOptionsFactory = interface;
  PPrimitives_IFlyoutShowOptionsFactory = ^Primitives_IFlyoutShowOptionsFactory;

  // Microsoft.UI.Xaml.Controls.Primitives.IGeneratorPositionHelper
  Primitives_IGeneratorPositionHelper = interface;
  PPrimitives_IGeneratorPositionHelper = ^Primitives_IGeneratorPositionHelper;

  // Microsoft.UI.Xaml.Controls.Primitives.IGeneratorPositionHelperStatics
  Primitives_IGeneratorPositionHelperStatics = interface;
  PPrimitives_IGeneratorPositionHelperStatics = ^Primitives_IGeneratorPositionHelperStatics;

  // Microsoft.UI.Xaml.Controls.Primitives.IGridViewItemPresenter
  Primitives_IGridViewItemPresenter = interface;
  PPrimitives_IGridViewItemPresenter = ^Primitives_IGridViewItemPresenter;

  // Microsoft.UI.Xaml.Controls.Primitives.IGridViewItemPresenterFactory
  Primitives_IGridViewItemPresenterFactory = interface;
  PPrimitives_IGridViewItemPresenterFactory = ^Primitives_IGridViewItemPresenterFactory;

  // Microsoft.UI.Xaml.Controls.Primitives.IGridViewItemPresenterStatics
  Primitives_IGridViewItemPresenterStatics = interface;
  PPrimitives_IGridViewItemPresenterStatics = ^Primitives_IGridViewItemPresenterStatics;

  // Microsoft.UI.Xaml.Controls.Primitives.IInfoBarPanel
  Primitives_IInfoBarPanel = interface;
  PPrimitives_IInfoBarPanel = ^Primitives_IInfoBarPanel;

  // Microsoft.UI.Xaml.Controls.Primitives.IInfoBarPanelFactory
  Primitives_IInfoBarPanelFactory = interface;
  PPrimitives_IInfoBarPanelFactory = ^Primitives_IInfoBarPanelFactory;

  // Microsoft.UI.Xaml.Controls.Primitives.IInfoBarPanelStatics
  Primitives_IInfoBarPanelStatics = interface;
  PPrimitives_IInfoBarPanelStatics = ^Primitives_IInfoBarPanelStatics;

  // Microsoft.UI.Xaml.Controls.Primitives.IJumpListItemBackgroundConverter
  Primitives_IJumpListItemBackgroundConverter = interface;
  PPrimitives_IJumpListItemBackgroundConverter = ^Primitives_IJumpListItemBackgroundConverter;

  // Microsoft.UI.Xaml.Controls.Primitives.IJumpListItemBackgroundConverterStatics
  Primitives_IJumpListItemBackgroundConverterStatics = interface;
  PPrimitives_IJumpListItemBackgroundConverterStatics = ^Primitives_IJumpListItemBackgroundConverterStatics;

  // Microsoft.UI.Xaml.Controls.Primitives.IJumpListItemForegroundConverter
  Primitives_IJumpListItemForegroundConverter = interface;
  PPrimitives_IJumpListItemForegroundConverter = ^Primitives_IJumpListItemForegroundConverter;

  // Microsoft.UI.Xaml.Controls.Primitives.IJumpListItemForegroundConverterStatics
  Primitives_IJumpListItemForegroundConverterStatics = interface;
  PPrimitives_IJumpListItemForegroundConverterStatics = ^Primitives_IJumpListItemForegroundConverterStatics;

  // Microsoft.UI.Xaml.Controls.Primitives.ILayoutInformation
  Primitives_ILayoutInformation = interface;
  PPrimitives_ILayoutInformation = ^Primitives_ILayoutInformation;

  // Microsoft.UI.Xaml.Controls.Primitives.ILayoutInformationStatics
  Primitives_ILayoutInformationStatics = interface;
  PPrimitives_ILayoutInformationStatics = ^Primitives_ILayoutInformationStatics;

  // Microsoft.UI.Xaml.Controls.Primitives.IListViewItemPresenter
  Primitives_IListViewItemPresenter = interface;
  PPrimitives_IListViewItemPresenter = ^Primitives_IListViewItemPresenter;

  // Microsoft.UI.Xaml.Controls.Primitives.IListViewItemPresenterFactory
  Primitives_IListViewItemPresenterFactory = interface;
  PPrimitives_IListViewItemPresenterFactory = ^Primitives_IListViewItemPresenterFactory;

  // Microsoft.UI.Xaml.Controls.Primitives.IListViewItemPresenterStatics
  Primitives_IListViewItemPresenterStatics = interface;
  PPrimitives_IListViewItemPresenterStatics = ^Primitives_IListViewItemPresenterStatics;

  // Microsoft.UI.Xaml.Controls.Primitives.ILoopingSelector
  Primitives_ILoopingSelector = interface;
  PPrimitives_ILoopingSelector = ^Primitives_ILoopingSelector;

  // Microsoft.UI.Xaml.Controls.Primitives.ILoopingSelectorItem
  Primitives_ILoopingSelectorItem = interface;
  PPrimitives_ILoopingSelectorItem = ^Primitives_ILoopingSelectorItem;

  // Microsoft.UI.Xaml.Controls.Primitives.ILoopingSelectorPanel
  Primitives_ILoopingSelectorPanel = interface;
  PPrimitives_ILoopingSelectorPanel = ^Primitives_ILoopingSelectorPanel;

  // Microsoft.UI.Xaml.Controls.Primitives.ILoopingSelectorStatics
  Primitives_ILoopingSelectorStatics = interface;
  PPrimitives_ILoopingSelectorStatics = ^Primitives_ILoopingSelectorStatics;

  // Microsoft.UI.Xaml.Controls.Primitives.IMonochromaticOverlayPresenter
  Primitives_IMonochromaticOverlayPresenter = interface;
  PPrimitives_IMonochromaticOverlayPresenter = ^Primitives_IMonochromaticOverlayPresenter;

  // Microsoft.UI.Xaml.Controls.Primitives.IMonochromaticOverlayPresenterFactory
  Primitives_IMonochromaticOverlayPresenterFactory = interface;
  PPrimitives_IMonochromaticOverlayPresenterFactory = ^Primitives_IMonochromaticOverlayPresenterFactory;

  // Microsoft.UI.Xaml.Controls.Primitives.IMonochromaticOverlayPresenterStatics
  Primitives_IMonochromaticOverlayPresenterStatics = interface;
  PPrimitives_IMonochromaticOverlayPresenterStatics = ^Primitives_IMonochromaticOverlayPresenterStatics;

  // Microsoft.UI.Xaml.Controls.Primitives.INavigationViewItemPresenterTemplateSettings
  Primitives_INavigationViewItemPresenterTemplateSettings = interface;
  PPrimitives_INavigationViewItemPresenterTemplateSettings = ^Primitives_INavigationViewItemPresenterTemplateSettings;

  // Microsoft.UI.Xaml.Controls.Primitives.INavigationViewItemPresenter
  Primitives_INavigationViewItemPresenter = interface;
  PPrimitives_INavigationViewItemPresenter = ^Primitives_INavigationViewItemPresenter;

  // Microsoft.UI.Xaml.Controls.Primitives.INavigationViewItemPresenter2
  Primitives_INavigationViewItemPresenter2 = interface;
  PPrimitives_INavigationViewItemPresenter2 = ^Primitives_INavigationViewItemPresenter2;

  // Microsoft.UI.Xaml.Controls.Primitives.INavigationViewItemPresenterFactory
  Primitives_INavigationViewItemPresenterFactory = interface;
  PPrimitives_INavigationViewItemPresenterFactory = ^Primitives_INavigationViewItemPresenterFactory;

  // Microsoft.UI.Xaml.Controls.Primitives.INavigationViewItemPresenterStatics
  Primitives_INavigationViewItemPresenterStatics = interface;
  PPrimitives_INavigationViewItemPresenterStatics = ^Primitives_INavigationViewItemPresenterStatics;

  // Microsoft.UI.Xaml.Controls.Primitives.INavigationViewItemPresenterStatics2
  Primitives_INavigationViewItemPresenterStatics2 = interface;
  PPrimitives_INavigationViewItemPresenterStatics2 = ^Primitives_INavigationViewItemPresenterStatics2;

  // Microsoft.UI.Xaml.Controls.Primitives.INavigationViewItemPresenterTemplateSettingsFactory
  Primitives_INavigationViewItemPresenterTemplateSettingsFactory = interface;
  PPrimitives_INavigationViewItemPresenterTemplateSettingsFactory = ^Primitives_INavigationViewItemPresenterTemplateSettingsFactory;

  // Microsoft.UI.Xaml.Controls.Primitives.INavigationViewItemPresenterTemplateSettingsStatics
  Primitives_INavigationViewItemPresenterTemplateSettingsStatics = interface;
  PPrimitives_INavigationViewItemPresenterTemplateSettingsStatics = ^Primitives_INavigationViewItemPresenterTemplateSettingsStatics;

  // Microsoft.UI.Xaml.Controls.Primitives.IOrientedVirtualizingPanel
  Primitives_IOrientedVirtualizingPanel = interface;
  PPrimitives_IOrientedVirtualizingPanel = ^Primitives_IOrientedVirtualizingPanel;

  // Microsoft.UI.Xaml.Controls.Primitives.IOrientedVirtualizingPanelFactory
  Primitives_IOrientedVirtualizingPanelFactory = interface;
  PPrimitives_IOrientedVirtualizingPanelFactory = ^Primitives_IOrientedVirtualizingPanelFactory;

  // Microsoft.UI.Xaml.Controls.Primitives.IPickerFlyoutBase
  Primitives_IPickerFlyoutBase = interface;
  PPrimitives_IPickerFlyoutBase = ^Primitives_IPickerFlyoutBase;

  // Microsoft.UI.Xaml.Controls.Primitives.IPickerFlyoutBaseFactory
  Primitives_IPickerFlyoutBaseFactory = interface;
  PPrimitives_IPickerFlyoutBaseFactory = ^Primitives_IPickerFlyoutBaseFactory;

  // Microsoft.UI.Xaml.Controls.Primitives.IPickerFlyoutBaseOverrides
  Primitives_IPickerFlyoutBaseOverrides = interface;
  PPrimitives_IPickerFlyoutBaseOverrides = ^Primitives_IPickerFlyoutBaseOverrides;

  // Microsoft.UI.Xaml.Controls.Primitives.IPickerFlyoutBaseStatics
  Primitives_IPickerFlyoutBaseStatics = interface;
  PPrimitives_IPickerFlyoutBaseStatics = ^Primitives_IPickerFlyoutBaseStatics;

  // Microsoft.UI.Xaml.Controls.Primitives.IPivotHeaderItem
  Primitives_IPivotHeaderItem = interface;
  PPrimitives_IPivotHeaderItem = ^Primitives_IPivotHeaderItem;

  // Microsoft.UI.Xaml.Controls.Primitives.IPivotHeaderItemFactory
  Primitives_IPivotHeaderItemFactory = interface;
  PPrimitives_IPivotHeaderItemFactory = ^Primitives_IPivotHeaderItemFactory;

  // Microsoft.UI.Xaml.Controls.Primitives.IPivotHeaderPanel
  Primitives_IPivotHeaderPanel = interface;
  PPrimitives_IPivotHeaderPanel = ^Primitives_IPivotHeaderPanel;

  // Microsoft.UI.Xaml.Controls.Primitives.IPivotPanel
  Primitives_IPivotPanel = interface;
  PPrimitives_IPivotPanel = ^Primitives_IPivotPanel;

  // Microsoft.UI.Xaml.Controls.Primitives.IPopup2
  Primitives_IPopup2 = interface;
  PPrimitives_IPopup2 = ^Primitives_IPopup2;

  // Microsoft.UI.Xaml.Controls.Primitives.IPopupStatics
  Primitives_IPopupStatics = interface;
  PPrimitives_IPopupStatics = ^Primitives_IPopupStatics;

  // Microsoft.UI.Xaml.Controls.Primitives.IPopupStatics2
  Primitives_IPopupStatics2 = interface;
  PPrimitives_IPopupStatics2 = ^Primitives_IPopupStatics2;

  // Microsoft.UI.Xaml.Controls.Primitives.IRangeBaseFactory
  Primitives_IRangeBaseFactory = interface;
  PPrimitives_IRangeBaseFactory = ^Primitives_IRangeBaseFactory;

  // Microsoft.UI.Xaml.Controls.Primitives.IRangeBaseOverrides
  Primitives_IRangeBaseOverrides = interface;
  PPrimitives_IRangeBaseOverrides = ^Primitives_IRangeBaseOverrides;

  // Microsoft.UI.Xaml.Controls.Primitives.IRangeBaseStatics
  Primitives_IRangeBaseStatics = interface;
  PPrimitives_IRangeBaseStatics = ^Primitives_IRangeBaseStatics;

  // Microsoft.UI.Xaml.Controls.Primitives.IRepeatButtonStatics
  Primitives_IRepeatButtonStatics = interface;
  PPrimitives_IRepeatButtonStatics = ^Primitives_IRepeatButtonStatics;

  // Microsoft.UI.Xaml.Controls.Primitives.IScrollBarStatics
  Primitives_IScrollBarStatics = interface;
  PPrimitives_IScrollBarStatics = ^Primitives_IScrollBarStatics;

  // Microsoft.UI.Xaml.Controls.Primitives.IScrollSnapPointsInfo
  Primitives_IScrollSnapPointsInfo = interface;
  PPrimitives_IScrollSnapPointsInfo = ^Primitives_IScrollSnapPointsInfo;

  // Microsoft.UI.Xaml.Controls.Primitives.ISelectorFactory
  Primitives_ISelectorFactory = interface;
  PPrimitives_ISelectorFactory = ^Primitives_ISelectorFactory;

  // Microsoft.UI.Xaml.Controls.Primitives.ISelectorItemFactory
  Primitives_ISelectorItemFactory = interface;
  PPrimitives_ISelectorItemFactory = ^Primitives_ISelectorItemFactory;

  // Microsoft.UI.Xaml.Controls.Primitives.ISelectorItemStatics
  Primitives_ISelectorItemStatics = interface;
  PPrimitives_ISelectorItemStatics = ^Primitives_ISelectorItemStatics;

  // Microsoft.UI.Xaml.Controls.Primitives.ISelectorStatics
  Primitives_ISelectorStatics = interface;
  PPrimitives_ISelectorStatics = ^Primitives_ISelectorStatics;

  // Microsoft.UI.Xaml.Controls.Primitives.ITabViewListView
  Primitives_ITabViewListView = interface;
  PPrimitives_ITabViewListView = ^Primitives_ITabViewListView;

  // Microsoft.UI.Xaml.Controls.Primitives.ITabViewListViewFactory
  Primitives_ITabViewListViewFactory = interface;
  PPrimitives_ITabViewListViewFactory = ^Primitives_ITabViewListViewFactory;

  // Microsoft.UI.Xaml.Controls.Primitives.IThumbStatics
  Primitives_IThumbStatics = interface;
  PPrimitives_IThumbStatics = ^Primitives_IThumbStatics;

  // Microsoft.UI.Xaml.Controls.Primitives.ITickBar
  Primitives_ITickBar = interface;
  PPrimitives_ITickBar = ^Primitives_ITickBar;

  // Microsoft.UI.Xaml.Controls.Primitives.ITickBarStatics
  Primitives_ITickBarStatics = interface;
  PPrimitives_ITickBarStatics = ^Primitives_ITickBarStatics;

  // Microsoft.UI.Xaml.Controls.Primitives.IToggleButtonFactory
  Primitives_IToggleButtonFactory = interface;
  PPrimitives_IToggleButtonFactory = ^Primitives_IToggleButtonFactory;

  // Microsoft.UI.Xaml.Controls.Primitives.IToggleButtonOverrides
  Primitives_IToggleButtonOverrides = interface;
  PPrimitives_IToggleButtonOverrides = ^Primitives_IToggleButtonOverrides;

  // Microsoft.UI.Xaml.Controls.Primitives.IToggleButtonStatics
  Primitives_IToggleButtonStatics = interface;
  PPrimitives_IToggleButtonStatics = ^Primitives_IToggleButtonStatics;

  // Windows.Foundation.Collections.IIterator`1<Microsoft.UI.Xaml.Controls.Primitives.IPopup>
  IIterator_1__Primitives_IPopup = interface;
  PIIterator_1__Primitives_IPopup = ^IIterator_1__Primitives_IPopup;

  // Windows.Foundation.Collections.IIterable`1<Microsoft.UI.Xaml.Controls.Primitives.IPopup>
  IIterable_1__Primitives_IPopup = interface;
  PIIterable_1__Primitives_IPopup = ^IIterable_1__Primitives_IPopup;

  // Microsoft.UI.Xaml.Controls Enums

  // Microsoft.UI.Xaml.Controls.AppBarClosedDisplayMode
  AppBarClosedDisplayMode = (
    Compact = 0,
    Minimal = 1,
    Hidden = 2
  );
  PAppBarClosedDisplayMode = ^AppBarClosedDisplayMode;

  // Microsoft.UI.Xaml.Controls.BackgroundSizing
  BackgroundSizing = (
    InnerBorderEdge = 0,
    OuterBorderEdge = 1
  );
  PBackgroundSizing = ^BackgroundSizing;

  // Microsoft.UI.Xaml.Controls.CalendarViewDisplayMode
  CalendarViewDisplayMode = (
    Month = 0,
    Year = 1,
    Decade = 2
  );
  PCalendarViewDisplayMode = ^CalendarViewDisplayMode;

  // Microsoft.UI.Xaml.Controls.CalendarViewSelectionMode
  CalendarViewSelectionMode = (
    None = 0,
    Single = 1,
    Multiple = 2
  );
  PCalendarViewSelectionMode = ^CalendarViewSelectionMode;

  // Microsoft.UI.Xaml.Controls.CandidateWindowAlignment
  CandidateWindowAlignment = (
    Default = 0,
    BottomEdge = 1
  );
  PCandidateWindowAlignment = ^CandidateWindowAlignment;

  // Microsoft.UI.Xaml.Controls.CharacterCasing
  CharacterCasing = (
    Normal = 0,
    Lower = 1,
    Upper = 2
  );
  PCharacterCasing = ^CharacterCasing;

  // Microsoft.UI.Xaml.Controls.ColorPickerHsvChannel
  ColorPickerHsvChannel = (
    Hue = 0,
    Saturation = 1,
    Value = 2,
    Alpha = 3
  );
  PColorPickerHsvChannel = ^ColorPickerHsvChannel;

  // Microsoft.UI.Xaml.Controls.ColorSpectrumComponents
  ColorSpectrumComponents = (
    HueValue = 0,
    ValueHue = 1,
    HueSaturation = 2,
    SaturationHue = 3,
    SaturationValue = 4,
    ValueSaturation = 5
  );
  PColorSpectrumComponents = ^ColorSpectrumComponents;

  // Microsoft.UI.Xaml.Controls.ColorSpectrumShape
  ColorSpectrumShape = (
    Box = 0,
    Ring = 1
  );
  PColorSpectrumShape = ^ColorSpectrumShape;

  // Microsoft.UI.Xaml.Controls.ComboBoxSelectionChangedTrigger
  ComboBoxSelectionChangedTrigger = (
    Committed = 0,
    Always = 1
  );
  PComboBoxSelectionChangedTrigger = ^ComboBoxSelectionChangedTrigger;

  // Microsoft.UI.Xaml.Controls.CommandBarDefaultLabelPosition
  CommandBarDefaultLabelPosition = (
    Bottom = 0,
    Right = 1,
    Collapsed = 2
  );
  PCommandBarDefaultLabelPosition = ^CommandBarDefaultLabelPosition;

  // Microsoft.UI.Xaml.Controls.CommandBarDynamicOverflowAction
  CommandBarDynamicOverflowAction = (
    AddingToOverflow = 0,
    RemovingFromOverflow = 1
  );
  PCommandBarDynamicOverflowAction = ^CommandBarDynamicOverflowAction;

  // Microsoft.UI.Xaml.Controls.CommandBarLabelPosition
  CommandBarLabelPosition = (
    Default = 0,
    Collapsed = 1
  );
  PCommandBarLabelPosition = ^CommandBarLabelPosition;

  // Microsoft.UI.Xaml.Controls.CommandBarOverflowButtonVisibility
  CommandBarOverflowButtonVisibility = (
    Auto = 0,
    Visible = 1,
    Collapsed = 2
  );
  PCommandBarOverflowButtonVisibility = ^CommandBarOverflowButtonVisibility;

  // Microsoft.UI.Xaml.Controls.ContentDialogButton
  ContentDialogButton = (
    None = 0,
    Primary = 1,
    Secondary = 2,
    Close = 3
  );
  PContentDialogButton = ^ContentDialogButton;

  // Microsoft.UI.Xaml.Controls.ContentDialogPlacement
  ContentDialogPlacement = (
    Popup = 0,
    InPlace = 1
  );
  PContentDialogPlacement = ^ContentDialogPlacement;

  // Microsoft.UI.Xaml.Controls.ContentDialogResult
  ContentDialogResult = (
    None = 0,
    Primary = 1,
    Secondary = 2
  );
  PContentDialogResult = ^ContentDialogResult;

  // Microsoft.UI.Xaml.Controls.DisabledFormattingAccelerators
  DisabledFormattingAccelerators = (
    None = 0,
    Bold = 1,
    Italic = 2,
    Underline = 4,
    All = -1
  );
  PDisabledFormattingAccelerators = ^DisabledFormattingAccelerators;

  // Microsoft.UI.Xaml.Controls.ElementRealizationOptions
  ElementRealizationOptions = (
    None = 0,
    ForceCreate = 1,
    SuppressAutoRecycle = 2
  );
  PElementRealizationOptions = ^ElementRealizationOptions;

  // Microsoft.UI.Xaml.Controls.ExpandDirection
  ExpandDirection = (
    Down = 0,
    Up = 1
  );
  PExpandDirection = ^ExpandDirection;

  // Microsoft.UI.Xaml.Controls.ItemsUpdatingScrollMode
  ItemsUpdatingScrollMode = (
    KeepItemsInView = 0,
    KeepScrollOffset = 1,
    KeepLastItemInView = 2
  );
  PItemsUpdatingScrollMode = ^ItemsUpdatingScrollMode;

  // Microsoft.UI.Xaml.Controls.ListPickerFlyoutSelectionMode
  ListPickerFlyoutSelectionMode = (
    Single = 0,
    Multiple = 1
  );
  PListPickerFlyoutSelectionMode = ^ListPickerFlyoutSelectionMode;

  // Microsoft.UI.Xaml.Controls.NavigationViewBackButtonVisible
  NavigationViewBackButtonVisible = (
    Collapsed = 0,
    Visible = 1,
    Auto = 2
  );
  PNavigationViewBackButtonVisible = ^NavigationViewBackButtonVisible;

  // Microsoft.UI.Xaml.Controls.NavigationViewOverflowLabelMode
  NavigationViewOverflowLabelMode = (
    MoreLabel = 0,
    NoLabel = 1
  );
  PNavigationViewOverflowLabelMode = ^NavigationViewOverflowLabelMode;

  // Microsoft.UI.Xaml.Controls.NavigationViewPaneDisplayMode
  NavigationViewPaneDisplayMode = (
    Auto = 0,
    Left = 1,
    Top = 2,
    LeftCompact = 3,
    LeftMinimal = 4
  );
  PNavigationViewPaneDisplayMode = ^NavigationViewPaneDisplayMode;

  // Microsoft.UI.Xaml.Controls.NavigationViewSelectionFollowsFocus
  NavigationViewSelectionFollowsFocus = (
    Disabled = 0,
    Enabled = 1
  );
  PNavigationViewSelectionFollowsFocus = ^NavigationViewSelectionFollowsFocus;

  // Microsoft.UI.Xaml.Controls.NavigationViewShoulderNavigationEnabled
  NavigationViewShoulderNavigationEnabled = (
    WhenSelectionFollowsFocus = 0,
    Always = 1,
    Never = 2
  );
  PNavigationViewShoulderNavigationEnabled = ^NavigationViewShoulderNavigationEnabled;

  // Microsoft.UI.Xaml.Controls.NumberBoxSpinButtonPlacementMode
  NumberBoxSpinButtonPlacementMode = (
    Hidden = 0,
    Compact = 1,
    &Inline = 2
  );
  PNumberBoxSpinButtonPlacementMode = ^NumberBoxSpinButtonPlacementMode;

  // Microsoft.UI.Xaml.Controls.NumberBoxValidationMode
  NumberBoxValidationMode = (
    InvalidInputOverwritten = 0,
    Disabled = 1
  );
  PNumberBoxValidationMode = ^NumberBoxValidationMode;

  // Microsoft.UI.Xaml.Controls.Orientation
  Orientation = (
    Vertical = 0,
    Horizontal = 1
  );
  POrientation = ^Orientation;

  // Microsoft.UI.Xaml.Controls.PanelScrollingDirection
  PanelScrollingDirection = (
    None = 0,
    Forward = 1,
    Backward = 2
  );
  PPanelScrollingDirection = ^PanelScrollingDirection;

  // Microsoft.UI.Xaml.Controls.ParallaxSourceOffsetKind
  ParallaxSourceOffsetKind = (
    Absolute = 0,
    Relative = 1
  );
  PParallaxSourceOffsetKind = ^ParallaxSourceOffsetKind;

  // Microsoft.UI.Xaml.Controls.PasswordRevealMode
  PasswordRevealMode = (
    Peek = 0,
    Hidden = 1,
    Visible = 2
  );
  PPasswordRevealMode = ^PasswordRevealMode;

  // Microsoft.UI.Xaml.Controls.PipsPagerButtonVisibility
  PipsPagerButtonVisibility = (
    Visible = 0,
    VisibleOnPointerOver = 1,
    Collapsed = 2
  );
  PPipsPagerButtonVisibility = ^PipsPagerButtonVisibility;

  // Microsoft.UI.Xaml.Controls.PivotHeaderFocusVisualPlacement
  PivotHeaderFocusVisualPlacement = (
    ItemHeaders = 0,
    SelectedItemHeader = 1
  );
  PPivotHeaderFocusVisualPlacement = ^PivotHeaderFocusVisualPlacement;

  // Microsoft.UI.Xaml.Controls.PivotSlideInAnimationGroup
  PivotSlideInAnimationGroup = (
    Default = 0,
    GroupOne = 1,
    GroupTwo = 2,
    GroupThree = 3
  );
  PPivotSlideInAnimationGroup = ^PivotSlideInAnimationGroup;

  // Microsoft.UI.Xaml.Controls.PlayerAnimationOptimization
  PlayerAnimationOptimization = (
    Latency = 0,
    Resources = 1
  );
  PPlayerAnimationOptimization = ^PlayerAnimationOptimization;

  // Microsoft.UI.Xaml.Controls.Primitives.ComponentResourceLocation
  Primitives_ComponentResourceLocation = (
    Application = 0,
    Nested = 1
  );
  PPrimitives_ComponentResourceLocation = ^Primitives_ComponentResourceLocation;

  // Microsoft.UI.Xaml.Controls.Primitives.CornerRadiusFilterKind
  Primitives_CornerRadiusFilterKind = (
    None = 0,
    Top = 1,
    Right = 2,
    Bottom = 3,
    Left = 4,
    TopLeftValue = 5,
    BottomRightValue = 6
  );
  PPrimitives_CornerRadiusFilterKind = ^Primitives_CornerRadiusFilterKind;

  // Microsoft.UI.Xaml.Controls.Primitives.CornerRadiusToThicknessConverterKind
  Primitives_CornerRadiusToThicknessConverterKind = (
    FilterTopAndBottomFromLeft = 0,
    FilterTopAndBottomFromRight = 1,
    FilterLeftAndRightFromTop = 2,
    FilterLeftAndRightFromBottom = 3,
    FilterTopFromTopLeft = 4,
    FilterTopFromTopRight = 5,
    FilterRightFromTopRight = 6,
    FilterRightFromBottomRight = 7,
    FilterBottomFromBottomRight = 8,
    FilterBottomFromBottomLeft = 9,
    FilterLeftFromBottomLeft = 10,
    FilterLeftFromTopLeft = 11
  );
  PPrimitives_CornerRadiusToThicknessConverterKind = ^Primitives_CornerRadiusToThicknessConverterKind;

  // Microsoft.UI.Xaml.Controls.Primitives.GeneratorDirection
  Primitives_GeneratorDirection = (
    Forward = 0,
    Backward = 1
  );
  PPrimitives_GeneratorDirection = ^Primitives_GeneratorDirection;

  // Microsoft.UI.Xaml.Controls.Primitives.GroupHeaderPlacement
  Primitives_GroupHeaderPlacement = (
    Top = 0,
    Left = 1
  );
  PPrimitives_GroupHeaderPlacement = ^Primitives_GroupHeaderPlacement;

  // Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenterCheckMode
  Primitives_ListViewItemPresenterCheckMode = (
    &Inline = 0,
    Overlay = 1
  );
  PPrimitives_ListViewItemPresenterCheckMode = ^Primitives_ListViewItemPresenterCheckMode;

  // Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenterSelectionIndicatorMode
  Primitives_ListViewItemPresenterSelectionIndicatorMode = (
    &Inline = 0,
    Overlay = 1
  );
  PPrimitives_ListViewItemPresenterSelectionIndicatorMode = ^Primitives_ListViewItemPresenterSelectionIndicatorMode;

  // Microsoft.UI.Xaml.Controls.Primitives.PlacementMode
  Primitives_PlacementMode = (
    Bottom = 2,
    Left = 9,
    Mouse = 7,
    Right = 4,
    Top = 10
  );
  PPrimitives_PlacementMode = ^Primitives_PlacementMode;

  // Microsoft.UI.Xaml.Controls.Primitives.PopupPlacementMode
  Primitives_PopupPlacementMode = (
    Auto = 0,
    Top = 1,
    Bottom = 2,
    Left = 3,
    Right = 4,
    TopEdgeAlignedLeft = 5,
    TopEdgeAlignedRight = 6,
    BottomEdgeAlignedLeft = 7,
    BottomEdgeAlignedRight = 8,
    LeftEdgeAlignedTop = 9,
    LeftEdgeAlignedBottom = 10,
    RightEdgeAlignedTop = 11,
    RightEdgeAlignedBottom = 12
  );
  PPrimitives_PopupPlacementMode = ^Primitives_PopupPlacementMode;

  // Microsoft.UI.Xaml.Controls.Primitives.ScrollEventType
  Primitives_ScrollEventType = (
    SmallDecrement = 0,
    SmallIncrement = 1,
    LargeDecrement = 2,
    LargeIncrement = 3,
    ThumbPosition = 4,
    ThumbTrack = 5,
    First = 6,
    Last = 7,
    EndScroll = 8
  );
  PPrimitives_ScrollEventType = ^Primitives_ScrollEventType;

  // Microsoft.UI.Xaml.Controls.Primitives.ScrollingIndicatorMode
  Primitives_ScrollingIndicatorMode = (
    None = 0,
    TouchIndicator = 1,
    MouseIndicator = 2
  );
  PPrimitives_ScrollingIndicatorMode = ^Primitives_ScrollingIndicatorMode;

  // Microsoft.UI.Xaml.Controls.Primitives.SliderSnapsTo
  Primitives_SliderSnapsTo = (
    StepValues = 0,
    Ticks = 1
  );
  PPrimitives_SliderSnapsTo = ^Primitives_SliderSnapsTo;

  // Microsoft.UI.Xaml.Controls.Primitives.SnapPointsAlignment
  Primitives_SnapPointsAlignment = (
    &Near = 0,
    Center = 1,
    &Far = 2
  );
  PPrimitives_SnapPointsAlignment = ^Primitives_SnapPointsAlignment;

  // Microsoft.UI.Xaml.Controls.Primitives.TickPlacement
  Primitives_TickPlacement = (
    None = 0,
    TopLeft = 1,
    BottomRight = 2,
    Outside = 3,
    &Inline = 4
  );
  PPrimitives_TickPlacement = ^Primitives_TickPlacement;

  // Microsoft.UI.Xaml.Controls.RefreshPullDirection
  RefreshPullDirection = (
    LeftToRight = 0,
    TopToBottom = 1,
    RightToLeft = 2,
    BottomToTop = 3
  );
  PRefreshPullDirection = ^RefreshPullDirection;

  // Microsoft.UI.Xaml.Controls.RefreshVisualizerOrientation
  RefreshVisualizerOrientation = (
    Auto = 0,
    Normal = 1,
    Rotate90DegreesCounterclockwise = 2,
    Rotate270DegreesCounterclockwise = 3
  );
  PRefreshVisualizerOrientation = ^RefreshVisualizerOrientation;

  // Microsoft.UI.Xaml.Controls.RefreshVisualizerState
  RefreshVisualizerState = (
    Idle = 0,
    Peeking = 1,
    Interacting = 2,
    Pending = 3,
    Refreshing = 4
  );
  PRefreshVisualizerState = ^RefreshVisualizerState;

  // Microsoft.UI.Xaml.Controls.RequiresPointer
  RequiresPointer = (
    Never = 0,
    WhenEngaged = 1,
    WhenFocused = 2
  );
  PRequiresPointer = ^RequiresPointer;

  // Microsoft.UI.Xaml.Controls.RichEditClipboardFormat
  RichEditClipboardFormat = (
    AllFormats = 0,
    PlainText = 1
  );
  PRichEditClipboardFormat = ^RichEditClipboardFormat;

  // Microsoft.UI.Xaml.Controls.ScrollBarVisibility
  ScrollBarVisibility = (
    Disabled = 0,
    Auto = 1,
    Hidden = 2,
    Visible = 3
  );
  PScrollBarVisibility = ^ScrollBarVisibility;

  // Microsoft.UI.Xaml.Controls.ScrollMode
  ScrollMode = (
    Disabled = 0,
    Enabled = 1,
    Auto = 2
  );
  PScrollMode = ^ScrollMode;

  // Microsoft.UI.Xaml.Controls.SelectionMode
  SelectionMode = (
    Single = 0,
    Multiple = 1,
    Extended = 2
  );
  PSelectionMode = ^SelectionMode;

  // Microsoft.UI.Xaml.Controls.SnapPointsType
  SnapPointsType = (
    None = 0,
    Optional = 1,
    Mandatory = 2,
    OptionalSingle = 3,
    MandatorySingle = 4
  );
  PSnapPointsType = ^SnapPointsType;

  // Microsoft.UI.Xaml.Controls.StretchDirection
  StretchDirection = (
    UpOnly = 0,
    DownOnly = 1,
    Both = 2
  );
  PStretchDirection = ^StretchDirection;

  // Microsoft.UI.Xaml.Controls.SwipeBehaviorOnInvoked
  SwipeBehaviorOnInvoked = (
    Auto = 0,
    Close = 1,
    RemainOpen = 2
  );
  PSwipeBehaviorOnInvoked = ^SwipeBehaviorOnInvoked;

  // Microsoft.UI.Xaml.Controls.SwipeMode
  SwipeMode = (
    Reveal = 0,
    Execute = 1
  );
  PSwipeMode = ^SwipeMode;

  // Microsoft.UI.Xaml.Controls.Symbol
  Symbol = (
    Previous = 57600,
    Next = 57601,
    Play = 57602,
    Pause = 57603,
    Edit = 57604,
    Save = 57605,
    Clear = 57606,
    Delete = 57607,
    Remove = 57608,
    Add = 57609,
    Cancel = 57610,
    Accept = 57611,
    More = 57612,
    Redo = 57613,
    Undo = 57614,
    Home = 57615,
    Up = 57616,
    Forward = 57617,
    Back = 57618,
    Favorite = 57619,
    Camera = 57620,
    Setting = 57621,
    Video = 57622,
    Sync = 57623,
    Download = 57624,
    Mail = 57625,
    Find = 57626,
    Help = 57627,
    Upload = 57628,
    Emoji = 57629,
    TwoPage = 57630,
    LeaveChat = 57631,
    MailForward = 57632,
    Clock = 57633,
    Send = 57634,
    Crop = 57635,
    RotateCamera = 57636,
    People = 57637,
    OpenPane = 57638,
    ClosePane = 57639,
    World = 57640,
    Flag = 57641,
    PreviewLink = 57642,
    Globe = 57643,
    Trim = 57644,
    AttachCamera = 57645,
    ZoomIn = 57646,
    Bookmarks = 57647,
    Document = 57648,
    ProtectedDocument = 57649,
    Page = 57650,
    Bullets = 57651,
    Comment = 57652,
    MailFilled = 57653,
    ContactInfo = 57654,
    HangUp = 57655,
    ViewAll = 57656,
    MapPin = 57657,
    Phone = 57658,
    VideoChat = 57659,
    Switch = 57660,
    Contact = 57661,
    Rename = 57662,
    Pin = 57665,
    MusicInfo = 57666,
    Go = 57667,
    Keyboard = 57668,
    DockLeft = 57669,
    DockRight = 57670,
    DockBottom = 57671,
    Remote = 57672,
    Refresh = 57673,
    Rotate = 57674,
    Shuffle = 57675,
    List = 57676,
    Shop = 57677,
    SelectAll = 57678,
    Orientation = 57679,
    Import = 57680,
    ImportAll = 57681,
    BrowsePhotos = 57685,
    WebCam = 57686,
    Pictures = 57688,
    SaveLocal = 57689,
    Caption = 57690,
    Stop = 57691,
    ShowResults = 57692,
    Volume = 57693,
    Repair = 57694,
    &Message = 57695,
    Page2 = 57696,
    CalendarDay = 57697,
    CalendarWeek = 57698,
    Calendar = 57699,
    Character = 57700,
    MailReplyAll = 57701,
    Read = 57702,
    Link = 57703,
    Account = 57704,
    ShowBcc = 57705,
    HideBcc = 57706,
    Cut = 57707,
    Attach = 57708,
    Paste = 57709,
    Filter = 57710,
    Copy = 57711,
    Emoji2 = 57712,
    Important = 57713,
    MailReply = 57714,
    SlideShow = 57715,
    Sort = 57716,
    Manage = 57720,
    AllApps = 57721,
    DisconnectDrive = 57722,
    MapDrive = 57723,
    NewWindow = 57724,
    OpenWith = 57725,
    ContactPresence = 57729,
    Priority = 57730,
    GoToToday = 57732,
    Font = 57733,
    FontColor = 57734,
    Contact2 = 57735,
    Folder = 57736,
    Audio = 57737,
    Placeholder = 57738,
    View = 57739,
    SetLockScreen = 57740,
    SetTile = 57741,
    ClosedCaption = 57744,
    StopSlideShow = 57745,
    Permissions = 57746,
    Highlight = 57747,
    DisableUpdates = 57748,
    UnFavorite = 57749,
    UnPin = 57750,
    OpenLocal = 57751,
    Mute = 57752,
    Italic = 57753,
    Underline = 57754,
    Bold = 57755,
    MoveToFolder = 57756,
    LikeDislike = 57757,
    Dislike = 57758,
    Like = 57759,
    AlignRight = 57760,
    AlignCenter = 57761,
    AlignLeft = 57762,
    Zoom = 57763,
    ZoomOut = 57764,
    OpenFile = 57765,
    OtherUser = 57766,
    Admin = 57767,
    Street = 57795,
    Map = 57796,
    ClearSelection = 57797,
    FontDecrease = 57798,
    FontIncrease = 57799,
    FontSize = 57800,
    CellPhone = 57801,
    ReShare = 57802,
    Tag = 57803,
    RepeatOne = 57804,
    RepeatAll = 57805,
    OutlineStar = 57806,
    SolidStar = 57807,
    Calculator = 57808,
    Directions = 57809,
    Target = 57810,
    &Library = 57811,
    PhoneBook = 57812,
    Memo = 57813,
    Microphone = 57814,
    PostUpdate = 57815,
    BackToWindow = 57816,
    FullScreen = 57817,
    NewFolder = 57818,
    CalendarReply = 57819,
    UnSyncFolder = 57821,
    ReportHacked = 57822,
    SyncFolder = 57823,
    BlockContact = 57824,
    SwitchApps = 57825,
    AddFriend = 57826,
    TouchPointer = 57827,
    GoToStart = 57828,
    ZeroBars = 57829,
    OneBar = 57830,
    TwoBars = 57831,
    ThreeBars = 57832,
    FourBars = 57833,
    Scan = 58004,
    Preview = 58005,
    GlobalNavigationButton = 59136,
    Share = 59181,
    Print = 59209,
    XboxOneConsole = 59792
  );
  PSymbol = ^Symbol;

  // Microsoft.UI.Xaml.Controls.TreeViewSelectionMode
  TreeViewSelectionMode = (
    None = 0,
    Single = 1,
    Multiple = 2
  );
  PTreeViewSelectionMode = ^TreeViewSelectionMode;

  // Microsoft.UI.Xaml.Controls.UniformGridLayoutItemsJustification
  UniformGridLayoutItemsJustification = (
    Start = 0,
    Center = 1,
    &End = 2,
    SpaceAround = 3,
    SpaceBetween = 4,
    SpaceEvenly = 5
  );
  PUniformGridLayoutItemsJustification = ^UniformGridLayoutItemsJustification;

  // Microsoft.UI.Xaml.Controls.UniformGridLayoutItemsStretch
  UniformGridLayoutItemsStretch = (
    None = 0,
    Fill = 1,
    Uniform = 2
  );
  PUniformGridLayoutItemsStretch = ^UniformGridLayoutItemsStretch;

  // Microsoft.UI.Xaml.Controls.VirtualizationMode
  VirtualizationMode = (
    Standard = 0,
    Recycling = 1
  );
  PVirtualizationMode = ^VirtualizationMode;

  // Microsoft.UI.Xaml.Controls.ZoomMode
  ZoomMode = (
    Disabled = 0,
    Enabled = 1
  );
  PZoomMode = ^ZoomMode;

  // Microsoft.UI.Xaml.Controls Records

  // Microsoft.UI.Xaml.Controls.Primitives.GeneratorPosition
  Primitives_GeneratorPosition = record
    Index: Integer;
    Offset: Integer;
  end;
  PPrimitives_GeneratorPosition = ^Primitives_GeneratorPosition;

  // Microsoft.UI.Xaml.Controls Interfaces

  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IAnimatedVisual
  IAnimatedVisual = interface(IInspectable)
  ['{645FF609-FD6B-5FEF-BDC0-9C34EFF33C64}']
    function get_RootVisual: IVisual; safecall;
    function get_Size: Numerics_Vector2; safecall;
    function get_Duration: TimeSpan; safecall;
    property Duration: TimeSpan read get_Duration;
    property RootVisual: IVisual read get_RootVisual;
    property Size: Numerics_Vector2 read get_Size;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IAnimatedVisualSource
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_AnimatedVisuals_AnimatedSettingsVisualSource)]
  IAnimatedVisualSource = interface(IInspectable)
  ['{294765C3-70E3-555C-9657-01FC4051169D}']
    function TryCreateAnimatedVisual(compositor: ICompositor; out diagnostics: IInspectable): IAnimatedVisual; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IAnimatedVisualPlayer
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_AnimatedVisualPlayer)]
  IAnimatedVisualPlayer = interface(IInspectable)
  ['{17F024F0-1692-51DD-A4DA-F4ED648D614C}']
    function get_Diagnostics: IInspectable; safecall;
    function get_Duration: TimeSpan; safecall;
    function get_Source: IAnimatedVisualSource; safecall;
    procedure put_Source(value: IAnimatedVisualSource); safecall;
    function get_FallbackContent: IDataTemplate; safecall;
    procedure put_FallbackContent(value: IDataTemplate); safecall;
    function get_AutoPlay: Boolean; safecall;
    procedure put_AutoPlay(value: Boolean); safecall;
    function get_IsAnimatedVisualLoaded: Boolean; safecall;
    function get_IsPlaying: Boolean; safecall;
    function get_PlaybackRate: Double; safecall;
    procedure put_PlaybackRate(value: Double); safecall;
    function get_ProgressObject: ICompositionObject; safecall;
    function get_Stretch: Stretch; safecall;
    procedure put_Stretch(value: Stretch); safecall;
    procedure Pause; safecall;
    function PlayAsync(fromProgress: Double; toProgress: Double; looped: Boolean): IAsyncAction; safecall;
    procedure Resume; safecall;
    procedure SetProgress(progress: Double); safecall;
    procedure Stop; safecall;
    property AutoPlay: Boolean read get_AutoPlay write put_AutoPlay;
    property Diagnostics: IInspectable read get_Diagnostics;
    property Duration: TimeSpan read get_Duration;
    property FallbackContent: IDataTemplate read get_FallbackContent write put_FallbackContent;
    property IsAnimatedVisualLoaded: Boolean read get_IsAnimatedVisualLoaded;
    property IsPlaying: Boolean read get_IsPlaying;
    property PlaybackRate: Double read get_PlaybackRate write put_PlaybackRate;
    property ProgressObject: ICompositionObject read get_ProgressObject;
    property Source: IAnimatedVisualSource read get_Source write put_Source;
    property Stretch_: Stretch read get_Stretch write put_Stretch;
  end;

  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.Primitives.IAppBarTemplateSettings
  Primitives_IAppBarTemplateSettings = interface(IInspectable)
  ['{FE60E73F-9A52-5E0A-B738-426F97D09768}']
    function get_ClipRect: TRectF; safecall;
    function get_CompactVerticalDelta: Double; safecall;
    function get_CompactRootMargin: Thickness; safecall;
    function get_MinimalVerticalDelta: Double; safecall;
    function get_MinimalRootMargin: Thickness; safecall;
    function get_HiddenVerticalDelta: Double; safecall;
    function get_HiddenRootMargin: Thickness; safecall;
    function get_NegativeCompactVerticalDelta: Double; safecall;
    function get_NegativeMinimalVerticalDelta: Double; safecall;
    function get_NegativeHiddenVerticalDelta: Double; safecall;
    property ClipRect: TRectF read get_ClipRect;
    property CompactRootMargin: Thickness read get_CompactRootMargin;
    property CompactVerticalDelta: Double read get_CompactVerticalDelta;
    property HiddenRootMargin: Thickness read get_HiddenRootMargin;
    property HiddenVerticalDelta: Double read get_HiddenVerticalDelta;
    property MinimalRootMargin: Thickness read get_MinimalRootMargin;
    property MinimalVerticalDelta: Double read get_MinimalVerticalDelta;
    property NegativeCompactVerticalDelta: Double read get_NegativeCompactVerticalDelta;
    property NegativeHiddenVerticalDelta: Double read get_NegativeHiddenVerticalDelta;
    property NegativeMinimalVerticalDelta: Double read get_NegativeMinimalVerticalDelta;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IAppBar
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_AppBar)]
  IAppBar = interface(IInspectable)
  ['{3D8C2927-5AC5-51BB-8BEC-13FF4C1BD6C8}']
    function get_IsOpen: Boolean; safecall;
    procedure put_IsOpen(value: Boolean); safecall;
    function get_IsSticky: Boolean; safecall;
    procedure put_IsSticky(value: Boolean); safecall;
    function get_ClosedDisplayMode: AppBarClosedDisplayMode; safecall;
    procedure put_ClosedDisplayMode(value: AppBarClosedDisplayMode); safecall;
    function get_TemplateSettings: Primitives_IAppBarTemplateSettings; safecall;
    function get_LightDismissOverlayMode: LightDismissOverlayMode; safecall;
    procedure put_LightDismissOverlayMode(value: LightDismissOverlayMode); safecall;
    function add_Opening(handler: EventHandler_1__IInspectable): EventRegistrationToken; safecall;
    procedure remove_Opening(token: EventRegistrationToken); safecall;
    function add_Opened(handler: EventHandler_1__IInspectable): EventRegistrationToken; safecall;
    procedure remove_Opened(token: EventRegistrationToken); safecall;
    function add_Closing(handler: EventHandler_1__IInspectable): EventRegistrationToken; safecall;
    procedure remove_Closing(token: EventRegistrationToken); safecall;
    function add_Closed(handler: EventHandler_1__IInspectable): EventRegistrationToken; safecall;
    procedure remove_Closed(token: EventRegistrationToken); safecall;
    property ClosedDisplayMode: AppBarClosedDisplayMode read get_ClosedDisplayMode write put_ClosedDisplayMode;
    property IsOpen: Boolean read get_IsOpen write put_IsOpen;
    property IsSticky: Boolean read get_IsSticky write put_IsSticky;
    property LightDismissOverlayMode_: LightDismissOverlayMode read get_LightDismissOverlayMode write put_LightDismissOverlayMode;
    property TemplateSettings: Primitives_IAppBarTemplateSettings read get_TemplateSettings;
  end;

  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.Primitives.IAppBarButtonTemplateSettings
  Primitives_IAppBarButtonTemplateSettings = interface(IInspectable)
  ['{6FC13525-BF03-5190-A1D5-EBD6A1BCB6B4}']
    function get_KeyboardAcceleratorTextMinWidth: Double; safecall;
    property KeyboardAcceleratorTextMinWidth: Double read get_KeyboardAcceleratorTextMinWidth;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IAppBarButton
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_AppBarButton)]
  IAppBarButton = interface(IInspectable)
  ['{8AB0E278-B6AE-569E-8DCD-D293552FE4D5}']
    function get_Label: HSTRING; safecall;
    procedure put_Label(value: HSTRING); safecall;
    function get_Icon: IIconElement; safecall;
    procedure put_Icon(value: IIconElement); safecall;
    function get_LabelPosition: CommandBarLabelPosition; safecall;
    procedure put_LabelPosition(value: CommandBarLabelPosition); safecall;
    function get_KeyboardAcceleratorTextOverride: HSTRING; safecall;
    procedure put_KeyboardAcceleratorTextOverride(value: HSTRING); safecall;
    function get_TemplateSettings: Primitives_IAppBarButtonTemplateSettings; safecall;
    property Icon: IIconElement read get_Icon write put_Icon;
    property KeyboardAcceleratorTextOverride: HSTRING read get_KeyboardAcceleratorTextOverride write put_KeyboardAcceleratorTextOverride;
    property &Label: HSTRING read get_Label write put_Label;
    property LabelPosition: CommandBarLabelPosition read get_LabelPosition write put_LabelPosition;
    property TemplateSettings: Primitives_IAppBarButtonTemplateSettings read get_TemplateSettings;
  end;

  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.Primitives.IAppBarToggleButtonTemplateSettings
  Primitives_IAppBarToggleButtonTemplateSettings = interface(IInspectable)
  ['{32AA9F11-2F5E-57AB-A570-B03BCEEE835D}']
    function get_KeyboardAcceleratorTextMinWidth: Double; safecall;
    property KeyboardAcceleratorTextMinWidth: Double read get_KeyboardAcceleratorTextMinWidth;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IAppBarToggleButton
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_AppBarToggleButton)]
  IAppBarToggleButton = interface(IInspectable)
  ['{9687C0B1-C390-59BE-ACDC-4FC48F552823}']
    function get_Label: HSTRING; safecall;
    procedure put_Label(value: HSTRING); safecall;
    function get_Icon: IIconElement; safecall;
    procedure put_Icon(value: IIconElement); safecall;
    function get_LabelPosition: CommandBarLabelPosition; safecall;
    procedure put_LabelPosition(value: CommandBarLabelPosition); safecall;
    function get_KeyboardAcceleratorTextOverride: HSTRING; safecall;
    procedure put_KeyboardAcceleratorTextOverride(value: HSTRING); safecall;
    function get_TemplateSettings: Primitives_IAppBarToggleButtonTemplateSettings; safecall;
    property Icon: IIconElement read get_Icon write put_Icon;
    property KeyboardAcceleratorTextOverride: HSTRING read get_KeyboardAcceleratorTextOverride write put_KeyboardAcceleratorTextOverride;
    property &Label: HSTRING read get_Label write put_Label;
    property LabelPosition: CommandBarLabelPosition read get_LabelPosition write put_LabelPosition;
    property TemplateSettings: Primitives_IAppBarToggleButtonTemplateSettings read get_TemplateSettings;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IBreadcrumbBarItem
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_BreadcrumbBarItem)]
  IBreadcrumbBarItem = interface(IInspectable)
  ['{34582DE4-6BEF-5BA0-86CA-7CC1A3DB37EE}']
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IButton
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_Button)]
  IButton = interface(IInspectable)
  ['{216C183D-D07A-5AA5-B8A4-0300A2683E87}']
    function get_Flyout: Primitives_IFlyoutBase; safecall;
    procedure put_Flyout(value: Primitives_IFlyoutBase); safecall;
    property Flyout: Primitives_IFlyoutBase read get_Flyout write put_Flyout;
  end;

  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.Primitives.ICalendarViewTemplateSettings
  Primitives_ICalendarViewTemplateSettings = interface(IInspectable)
  ['{23B0FACB-0083-5109-87D3-DBEB13E331A0}']
    function get_MinViewWidth: Double; safecall;
    function get_HeaderText: HSTRING; safecall;
    function get_WeekDay1: HSTRING; safecall;
    function get_WeekDay2: HSTRING; safecall;
    function get_WeekDay3: HSTRING; safecall;
    function get_WeekDay4: HSTRING; safecall;
    function get_WeekDay5: HSTRING; safecall;
    function get_WeekDay6: HSTRING; safecall;
    function get_WeekDay7: HSTRING; safecall;
    function get_HasMoreContentAfter: Boolean; safecall;
    function get_HasMoreContentBefore: Boolean; safecall;
    function get_HasMoreViews: Boolean; safecall;
    function get_ClipRect: TRectF; safecall;
    function get_CenterX: Double; safecall;
    function get_CenterY: Double; safecall;
    property CenterX: Double read get_CenterX;
    property CenterY: Double read get_CenterY;
    property ClipRect: TRectF read get_ClipRect;
    property HasMoreContentAfter: Boolean read get_HasMoreContentAfter;
    property HasMoreContentBefore: Boolean read get_HasMoreContentBefore;
    property HasMoreViews: Boolean read get_HasMoreViews;
    property HeaderText: HSTRING read get_HeaderText;
    property MinViewWidth: Double read get_MinViewWidth;
    property WeekDay1: HSTRING read get_WeekDay1;
    property WeekDay2: HSTRING read get_WeekDay2;
    property WeekDay3: HSTRING read get_WeekDay3;
    property WeekDay4: HSTRING read get_WeekDay4;
    property WeekDay5: HSTRING read get_WeekDay5;
    property WeekDay6: HSTRING read get_WeekDay6;
    property WeekDay7: HSTRING read get_WeekDay7;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.ICalendarViewDayItem
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_CalendarViewDayItem)]
  ICalendarViewDayItem = interface(IInspectable)
  ['{947D3A07-6FA4-553C-9B12-57CA1BF72E9E}']
    function get_IsBlackout: Boolean; safecall;
    procedure put_IsBlackout(value: Boolean); safecall;
    function get_Date: DateTime; safecall;
    procedure SetDensityColors(colors: IIterable_1__Color); safecall;
    property Date: DateTime read get_Date;
    property IsBlackout: Boolean read get_IsBlackout write put_IsBlackout;
  end;

  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.ICalendarViewDayItemChangingEventArgs
  ICalendarViewDayItemChangingEventArgs = interface(IInspectable)
  ['{E894FE7F-12F6-5B1A-88A2-A96764C1273F}']
    function get_InRecycleQueue: Boolean; safecall;
    function get_Item: ICalendarViewDayItem; safecall;
    function get_Phase: Cardinal; safecall;
    procedure RegisterUpdateCallback(callback: TypedEventHandler_2__ICalendarView__ICalendarViewDayItemChangingEventArgs); overload; safecall;
    procedure RegisterUpdateCallback(callbackPhase: Cardinal; callback: TypedEventHandler_2__ICalendarView__ICalendarViewDayItemChangingEventArgs); overload; safecall;
    property InRecycleQueue: Boolean read get_InRecycleQueue;
    property Item: ICalendarViewDayItem read get_Item;
    property Phase: Cardinal read get_Phase;
  end;

  // Generic Delegate for:
  // Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.Controls.ICalendarView,Microsoft.UI.Xaml.Controls.ICalendarViewDayItemChangingEventArgs>
  TypedEventHandler_2__ICalendarView__ICalendarViewDayItemChangingEventArgs_Delegate_Base = interface(IUnknown)
  ['{48F50AFE-153F-5D6D-9AB3-3030C7B68243}']
    procedure Invoke(sender: ICalendarView; args: ICalendarViewDayItemChangingEventArgs); safecall;
  end;
  // UsedAPI Interface
  // Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.Controls.ICalendarView,Microsoft.UI.Xaml.Controls.ICalendarViewDayItemChangingEventArgs>
  TypedEventHandler_2__ICalendarView__ICalendarViewDayItemChangingEventArgs = interface(TypedEventHandler_2__ICalendarView__ICalendarViewDayItemChangingEventArgs_Delegate_Base)
  ['{779FC679-12BD-54CF-8645-E6FA0C6FE798}']
  end;

  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.ICalendarViewSelectedDatesChangedEventArgs
  ICalendarViewSelectedDatesChangedEventArgs = interface(IInspectable)
  ['{675F688F-BC30-59F6-83C4-140BD053A09A}']
    function get_AddedDates: IVectorView_1__DateTime; safecall;
    function get_RemovedDates: IVectorView_1__DateTime; safecall;
    property AddedDates: IVectorView_1__DateTime read get_AddedDates;
    property RemovedDates: IVectorView_1__DateTime read get_RemovedDates;
  end;

  // Generic Delegate for:
  // Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.Controls.ICalendarView,Microsoft.UI.Xaml.Controls.ICalendarViewSelectedDatesChangedEventArgs>
  TypedEventHandler_2__ICalendarView__ICalendarViewSelectedDatesChangedEventArgs_Delegate_Base = interface(IUnknown)
  ['{7DD65130-39AD-52DD-AB26-CDB8F9A033D9}']
    procedure Invoke(sender: ICalendarView; args: ICalendarViewSelectedDatesChangedEventArgs); safecall;
  end;
  // UsedAPI Interface
  // Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.Controls.ICalendarView,Microsoft.UI.Xaml.Controls.ICalendarViewSelectedDatesChangedEventArgs>
  TypedEventHandler_2__ICalendarView__ICalendarViewSelectedDatesChangedEventArgs = interface(TypedEventHandler_2__ICalendarView__ICalendarViewSelectedDatesChangedEventArgs_Delegate_Base)
  ['{1D844A06-4C5B-54EA-AFAE-12EE2E97F66E}']
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.ICalendarView
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_CalendarView)]
  ICalendarView = interface(IInspectable)
  ['{E786081E-B680-56AB-BFBB-52D5B17C365E}']
    function get_CalendarIdentifier: HSTRING; safecall;
    procedure put_CalendarIdentifier(value: HSTRING); safecall;
    function get_DayOfWeekFormat: HSTRING; safecall;
    procedure put_DayOfWeekFormat(value: HSTRING); safecall;
    function get_IsGroupLabelVisible: Boolean; safecall;
    procedure put_IsGroupLabelVisible(value: Boolean); safecall;
    function get_DisplayMode: CalendarViewDisplayMode; safecall;
    procedure put_DisplayMode(value: CalendarViewDisplayMode); safecall;
    function get_FirstDayOfWeek: DayOfWeek; safecall;
    procedure put_FirstDayOfWeek(value: DayOfWeek); safecall;
    function get_IsOutOfScopeEnabled: Boolean; safecall;
    procedure put_IsOutOfScopeEnabled(value: Boolean); safecall;
    function get_IsTodayHighlighted: Boolean; safecall;
    procedure put_IsTodayHighlighted(value: Boolean); safecall;
    function get_MaxDate: DateTime; safecall;
    procedure put_MaxDate(value: DateTime); safecall;
    function get_MinDate: DateTime; safecall;
    procedure put_MinDate(value: DateTime); safecall;
    function get_NumberOfWeeksInView: Integer; safecall;
    procedure put_NumberOfWeeksInView(value: Integer); safecall;
    function get_SelectedDates: IVector_1__DateTime; safecall;
    function get_SelectionMode: CalendarViewSelectionMode; safecall;
    procedure put_SelectionMode(value: CalendarViewSelectionMode); safecall;
    function get_TemplateSettings: Primitives_ICalendarViewTemplateSettings; safecall;
    function get_FocusBorderBrush: IBrush; safecall;
    procedure put_FocusBorderBrush(value: IBrush); safecall;
    function get_SelectedHoverBorderBrush: IBrush; safecall;
    procedure put_SelectedHoverBorderBrush(value: IBrush); safecall;
    function get_SelectedPressedBorderBrush: IBrush; safecall;
    procedure put_SelectedPressedBorderBrush(value: IBrush); safecall;
    function get_SelectedDisabledBorderBrush: IBrush; safecall;
    procedure put_SelectedDisabledBorderBrush(value: IBrush); safecall;
    function get_SelectedBorderBrush: IBrush; safecall;
    procedure put_SelectedBorderBrush(value: IBrush); safecall;
    function get_HoverBorderBrush: IBrush; safecall;
    procedure put_HoverBorderBrush(value: IBrush); safecall;
    function get_PressedBorderBrush: IBrush; safecall;
    procedure put_PressedBorderBrush(value: IBrush); safecall;
    function get_TodaySelectedInnerBorderBrush: IBrush; safecall;
    procedure put_TodaySelectedInnerBorderBrush(value: IBrush); safecall;
    function get_BlackoutStrikethroughBrush: IBrush; safecall;
    procedure put_BlackoutStrikethroughBrush(value: IBrush); safecall;
    function get_CalendarItemBorderBrush: IBrush; safecall;
    procedure put_CalendarItemBorderBrush(value: IBrush); safecall;
    function get_BlackoutBackground: IBrush; safecall;
    procedure put_BlackoutBackground(value: IBrush); safecall;
    function get_OutOfScopeBackground: IBrush; safecall;
    procedure put_OutOfScopeBackground(value: IBrush); safecall;
    function get_CalendarItemBackground: IBrush; safecall;
    procedure put_CalendarItemBackground(value: IBrush); safecall;
    function get_CalendarItemHoverBackground: IBrush; safecall;
    procedure put_CalendarItemHoverBackground(value: IBrush); safecall;
    function get_CalendarItemPressedBackground: IBrush; safecall;
    procedure put_CalendarItemPressedBackground(value: IBrush); safecall;
    function get_CalendarItemDisabledBackground: IBrush; safecall;
    procedure put_CalendarItemDisabledBackground(value: IBrush); safecall;
    function get_TodayBackground: IBrush; safecall;
    procedure put_TodayBackground(value: IBrush); safecall;
    function get_TodayBlackoutBackground: IBrush; safecall;
    procedure put_TodayBlackoutBackground(value: IBrush); safecall;
    function get_TodayHoverBackground: IBrush; safecall;
    procedure put_TodayHoverBackground(value: IBrush); safecall;
    function get_TodayPressedBackground: IBrush; safecall;
    procedure put_TodayPressedBackground(value: IBrush); safecall;
    function get_TodayDisabledBackground: IBrush; safecall;
    procedure put_TodayDisabledBackground(value: IBrush); safecall;
    function get_PressedForeground: IBrush; safecall;
    procedure put_PressedForeground(value: IBrush); safecall;
    function get_TodayForeground: IBrush; safecall;
    procedure put_TodayForeground(value: IBrush); safecall;
    function get_BlackoutForeground: IBrush; safecall;
    procedure put_BlackoutForeground(value: IBrush); safecall;
    function get_TodayBlackoutForeground: IBrush; safecall;
    procedure put_TodayBlackoutForeground(value: IBrush); safecall;
    function get_SelectedForeground: IBrush; safecall;
    procedure put_SelectedForeground(value: IBrush); safecall;
    function get_SelectedHoverForeground: IBrush; safecall;
    procedure put_SelectedHoverForeground(value: IBrush); safecall;
    function get_SelectedPressedForeground: IBrush; safecall;
    procedure put_SelectedPressedForeground(value: IBrush); safecall;
    function get_SelectedDisabledForeground: IBrush; safecall;
    procedure put_SelectedDisabledForeground(value: IBrush); safecall;
    function get_OutOfScopeForeground: IBrush; safecall;
    procedure put_OutOfScopeForeground(value: IBrush); safecall;
    function get_OutOfScopeHoverForeground: IBrush; safecall;
    procedure put_OutOfScopeHoverForeground(value: IBrush); safecall;
    function get_OutOfScopePressedForeground: IBrush; safecall;
    procedure put_OutOfScopePressedForeground(value: IBrush); safecall;
    function get_CalendarItemForeground: IBrush; safecall;
    procedure put_CalendarItemForeground(value: IBrush); safecall;
    function get_DisabledForeground: IBrush; safecall;
    procedure put_DisabledForeground(value: IBrush); safecall;
    function get_DayItemFontFamily: IFontFamily; safecall;
    procedure put_DayItemFontFamily(value: IFontFamily); safecall;
    function get_DayItemFontSize: Double; safecall;
    procedure put_DayItemFontSize(value: Double); safecall;
    function get_DayItemFontStyle: FontStyle; safecall;
    procedure put_DayItemFontStyle(value: FontStyle); safecall;
    function get_DayItemFontWeight: FontWeight; safecall;
    procedure put_DayItemFontWeight(value: FontWeight); safecall;
    function get_TodayFontWeight: FontWeight; safecall;
    procedure put_TodayFontWeight(value: FontWeight); safecall;
    function get_FirstOfMonthLabelFontFamily: IFontFamily; safecall;
    procedure put_FirstOfMonthLabelFontFamily(value: IFontFamily); safecall;
    function get_FirstOfMonthLabelFontSize: Double; safecall;
    procedure put_FirstOfMonthLabelFontSize(value: Double); safecall;
    function get_FirstOfMonthLabelFontStyle: FontStyle; safecall;
    procedure put_FirstOfMonthLabelFontStyle(value: FontStyle); safecall;
    function get_FirstOfMonthLabelFontWeight: FontWeight; safecall;
    procedure put_FirstOfMonthLabelFontWeight(value: FontWeight); safecall;
    function get_MonthYearItemFontFamily: IFontFamily; safecall;
    procedure put_MonthYearItemFontFamily(value: IFontFamily); safecall;
    function get_MonthYearItemFontSize: Double; safecall;
    procedure put_MonthYearItemFontSize(value: Double); safecall;
    function get_MonthYearItemFontStyle: FontStyle; safecall;
    procedure put_MonthYearItemFontStyle(value: FontStyle); safecall;
    function get_MonthYearItemFontWeight: FontWeight; safecall;
    procedure put_MonthYearItemFontWeight(value: FontWeight); safecall;
    function get_FirstOfYearDecadeLabelFontFamily: IFontFamily; safecall;
    procedure put_FirstOfYearDecadeLabelFontFamily(value: IFontFamily); safecall;
    function get_FirstOfYearDecadeLabelFontSize: Double; safecall;
    procedure put_FirstOfYearDecadeLabelFontSize(value: Double); safecall;
    function get_FirstOfYearDecadeLabelFontStyle: FontStyle; safecall;
    procedure put_FirstOfYearDecadeLabelFontStyle(value: FontStyle); safecall;
    function get_FirstOfYearDecadeLabelFontWeight: FontWeight; safecall;
    procedure put_FirstOfYearDecadeLabelFontWeight(value: FontWeight); safecall;
    function get_DayItemMargin: Thickness; safecall;
    procedure put_DayItemMargin(value: Thickness); safecall;
    function get_MonthYearItemMargin: Thickness; safecall;
    procedure put_MonthYearItemMargin(value: Thickness); safecall;
    function get_FirstOfMonthLabelMargin: Thickness; safecall;
    procedure put_FirstOfMonthLabelMargin(value: Thickness); safecall;
    function get_FirstOfYearDecadeLabelMargin: Thickness; safecall;
    procedure put_FirstOfYearDecadeLabelMargin(value: Thickness); safecall;
    function get_HorizontalDayItemAlignment: HorizontalAlignment; safecall;
    procedure put_HorizontalDayItemAlignment(value: HorizontalAlignment); safecall;
    function get_VerticalDayItemAlignment: VerticalAlignment; safecall;
    procedure put_VerticalDayItemAlignment(value: VerticalAlignment); safecall;
    function get_HorizontalFirstOfMonthLabelAlignment: HorizontalAlignment; safecall;
    procedure put_HorizontalFirstOfMonthLabelAlignment(value: HorizontalAlignment); safecall;
    function get_VerticalFirstOfMonthLabelAlignment: VerticalAlignment; safecall;
    procedure put_VerticalFirstOfMonthLabelAlignment(value: VerticalAlignment); safecall;
    function get_CalendarItemBorderThickness: Thickness; safecall;
    procedure put_CalendarItemBorderThickness(value: Thickness); safecall;
    function get_CalendarViewDayItemStyle: IStyle; safecall;
    procedure put_CalendarViewDayItemStyle(value: IStyle); safecall;
    function get_CalendarItemCornerRadius: CornerRadius; safecall;
    procedure put_CalendarItemCornerRadius(value: CornerRadius); safecall;
    function add_CalendarViewDayItemChanging(handler: TypedEventHandler_2__ICalendarView__ICalendarViewDayItemChangingEventArgs): EventRegistrationToken; safecall;
    procedure remove_CalendarViewDayItemChanging(token: EventRegistrationToken); safecall;
    function add_SelectedDatesChanged(handler: TypedEventHandler_2__ICalendarView__ICalendarViewSelectedDatesChangedEventArgs): EventRegistrationToken; safecall;
    procedure remove_SelectedDatesChanged(token: EventRegistrationToken); safecall;
    procedure SetDisplayDate(date: DateTime); safecall;
    procedure SetYearDecadeDisplayDimensions(columns: Integer; rows: Integer); safecall;
    property BlackoutBackground: IBrush read get_BlackoutBackground write put_BlackoutBackground;
    property BlackoutForeground: IBrush read get_BlackoutForeground write put_BlackoutForeground;
    property BlackoutStrikethroughBrush: IBrush read get_BlackoutStrikethroughBrush write put_BlackoutStrikethroughBrush;
    property CalendarIdentifier: HSTRING read get_CalendarIdentifier write put_CalendarIdentifier;
    property CalendarItemBackground: IBrush read get_CalendarItemBackground write put_CalendarItemBackground;
    property CalendarItemBorderBrush: IBrush read get_CalendarItemBorderBrush write put_CalendarItemBorderBrush;
    property CalendarItemBorderThickness: Thickness read get_CalendarItemBorderThickness write put_CalendarItemBorderThickness;
    property CalendarItemCornerRadius: CornerRadius read get_CalendarItemCornerRadius write put_CalendarItemCornerRadius;
    property CalendarItemDisabledBackground: IBrush read get_CalendarItemDisabledBackground write put_CalendarItemDisabledBackground;
    property CalendarItemForeground: IBrush read get_CalendarItemForeground write put_CalendarItemForeground;
    property CalendarItemHoverBackground: IBrush read get_CalendarItemHoverBackground write put_CalendarItemHoverBackground;
    property CalendarItemPressedBackground: IBrush read get_CalendarItemPressedBackground write put_CalendarItemPressedBackground;
    property CalendarViewDayItemStyle: IStyle read get_CalendarViewDayItemStyle write put_CalendarViewDayItemStyle;
    property DayItemFontFamily: IFontFamily read get_DayItemFontFamily write put_DayItemFontFamily;
    property DayItemFontSize: Double read get_DayItemFontSize write put_DayItemFontSize;
    property DayItemFontStyle: FontStyle read get_DayItemFontStyle write put_DayItemFontStyle;
    property DayItemFontWeight: FontWeight read get_DayItemFontWeight write put_DayItemFontWeight;
    property DayItemMargin: Thickness read get_DayItemMargin write put_DayItemMargin;
    property DayOfWeekFormat: HSTRING read get_DayOfWeekFormat write put_DayOfWeekFormat;
    property DisabledForeground: IBrush read get_DisabledForeground write put_DisabledForeground;
    property DisplayMode: CalendarViewDisplayMode read get_DisplayMode write put_DisplayMode;
    property FirstDayOfWeek: DayOfWeek read get_FirstDayOfWeek write put_FirstDayOfWeek;
    property FirstOfMonthLabelFontFamily: IFontFamily read get_FirstOfMonthLabelFontFamily write put_FirstOfMonthLabelFontFamily;
    property FirstOfMonthLabelFontSize: Double read get_FirstOfMonthLabelFontSize write put_FirstOfMonthLabelFontSize;
    property FirstOfMonthLabelFontStyle: FontStyle read get_FirstOfMonthLabelFontStyle write put_FirstOfMonthLabelFontStyle;
    property FirstOfMonthLabelFontWeight: FontWeight read get_FirstOfMonthLabelFontWeight write put_FirstOfMonthLabelFontWeight;
    property FirstOfMonthLabelMargin: Thickness read get_FirstOfMonthLabelMargin write put_FirstOfMonthLabelMargin;
    property FirstOfYearDecadeLabelFontFamily: IFontFamily read get_FirstOfYearDecadeLabelFontFamily write put_FirstOfYearDecadeLabelFontFamily;
    property FirstOfYearDecadeLabelFontSize: Double read get_FirstOfYearDecadeLabelFontSize write put_FirstOfYearDecadeLabelFontSize;
    property FirstOfYearDecadeLabelFontStyle: FontStyle read get_FirstOfYearDecadeLabelFontStyle write put_FirstOfYearDecadeLabelFontStyle;
    property FirstOfYearDecadeLabelFontWeight: FontWeight read get_FirstOfYearDecadeLabelFontWeight write put_FirstOfYearDecadeLabelFontWeight;
    property FirstOfYearDecadeLabelMargin: Thickness read get_FirstOfYearDecadeLabelMargin write put_FirstOfYearDecadeLabelMargin;
    property FocusBorderBrush: IBrush read get_FocusBorderBrush write put_FocusBorderBrush;
    property HorizontalDayItemAlignment: HorizontalAlignment read get_HorizontalDayItemAlignment write put_HorizontalDayItemAlignment;
    property HorizontalFirstOfMonthLabelAlignment: HorizontalAlignment read get_HorizontalFirstOfMonthLabelAlignment write put_HorizontalFirstOfMonthLabelAlignment;
    property HoverBorderBrush: IBrush read get_HoverBorderBrush write put_HoverBorderBrush;
    property IsGroupLabelVisible: Boolean read get_IsGroupLabelVisible write put_IsGroupLabelVisible;
    property IsOutOfScopeEnabled: Boolean read get_IsOutOfScopeEnabled write put_IsOutOfScopeEnabled;
    property IsTodayHighlighted: Boolean read get_IsTodayHighlighted write put_IsTodayHighlighted;
    property MaxDate: DateTime read get_MaxDate write put_MaxDate;
    property MinDate: DateTime read get_MinDate write put_MinDate;
    property MonthYearItemFontFamily: IFontFamily read get_MonthYearItemFontFamily write put_MonthYearItemFontFamily;
    property MonthYearItemFontSize: Double read get_MonthYearItemFontSize write put_MonthYearItemFontSize;
    property MonthYearItemFontStyle: FontStyle read get_MonthYearItemFontStyle write put_MonthYearItemFontStyle;
    property MonthYearItemFontWeight: FontWeight read get_MonthYearItemFontWeight write put_MonthYearItemFontWeight;
    property MonthYearItemMargin: Thickness read get_MonthYearItemMargin write put_MonthYearItemMargin;
    property NumberOfWeeksInView: Integer read get_NumberOfWeeksInView write put_NumberOfWeeksInView;
    property OutOfScopeBackground: IBrush read get_OutOfScopeBackground write put_OutOfScopeBackground;
    property OutOfScopeForeground: IBrush read get_OutOfScopeForeground write put_OutOfScopeForeground;
    property OutOfScopeHoverForeground: IBrush read get_OutOfScopeHoverForeground write put_OutOfScopeHoverForeground;
    property OutOfScopePressedForeground: IBrush read get_OutOfScopePressedForeground write put_OutOfScopePressedForeground;
    property PressedBorderBrush: IBrush read get_PressedBorderBrush write put_PressedBorderBrush;
    property PressedForeground: IBrush read get_PressedForeground write put_PressedForeground;
    property SelectedBorderBrush: IBrush read get_SelectedBorderBrush write put_SelectedBorderBrush;
    property SelectedDates: IVector_1__DateTime read get_SelectedDates;
    property SelectedDisabledBorderBrush: IBrush read get_SelectedDisabledBorderBrush write put_SelectedDisabledBorderBrush;
    property SelectedDisabledForeground: IBrush read get_SelectedDisabledForeground write put_SelectedDisabledForeground;
    property SelectedForeground: IBrush read get_SelectedForeground write put_SelectedForeground;
    property SelectedHoverBorderBrush: IBrush read get_SelectedHoverBorderBrush write put_SelectedHoverBorderBrush;
    property SelectedHoverForeground: IBrush read get_SelectedHoverForeground write put_SelectedHoverForeground;
    property SelectedPressedBorderBrush: IBrush read get_SelectedPressedBorderBrush write put_SelectedPressedBorderBrush;
    property SelectedPressedForeground: IBrush read get_SelectedPressedForeground write put_SelectedPressedForeground;
    property SelectionMode: CalendarViewSelectionMode read get_SelectionMode write put_SelectionMode;
    property TemplateSettings: Primitives_ICalendarViewTemplateSettings read get_TemplateSettings;
    property TodayBackground: IBrush read get_TodayBackground write put_TodayBackground;
    property TodayBlackoutBackground: IBrush read get_TodayBlackoutBackground write put_TodayBlackoutBackground;
    property TodayBlackoutForeground: IBrush read get_TodayBlackoutForeground write put_TodayBlackoutForeground;
    property TodayDisabledBackground: IBrush read get_TodayDisabledBackground write put_TodayDisabledBackground;
    property TodayFontWeight: FontWeight read get_TodayFontWeight write put_TodayFontWeight;
    property TodayForeground: IBrush read get_TodayForeground write put_TodayForeground;
    property TodayHoverBackground: IBrush read get_TodayHoverBackground write put_TodayHoverBackground;
    property TodayPressedBackground: IBrush read get_TodayPressedBackground write put_TodayPressedBackground;
    property TodaySelectedInnerBorderBrush: IBrush read get_TodaySelectedInnerBorderBrush write put_TodaySelectedInnerBorderBrush;
    property VerticalDayItemAlignment: VerticalAlignment read get_VerticalDayItemAlignment write put_VerticalDayItemAlignment;
    property VerticalFirstOfMonthLabelAlignment: VerticalAlignment read get_VerticalFirstOfMonthLabelAlignment write put_VerticalFirstOfMonthLabelAlignment;
  end;

  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.CalendarViewDayItemChangingEventHandler
  CalendarViewDayItemChangingEventHandler = interface(IUnknown)
  ['{AB8075FD-7A4B-504E-8A63-D7F35570BD86}']
    procedure Invoke(sender: ICalendarView; e: ICalendarViewDayItemChangingEventArgs); safecall;
  end;

  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.ICalendarDatePickerDateChangedEventArgs
  ICalendarDatePickerDateChangedEventArgs = interface(IInspectable)
  ['{57C212D7-C2F2-54A0-9D41-F263B1E5106E}']
    function get_NewDate: IReference_1__DateTime; safecall;
    function get_OldDate: IReference_1__DateTime; safecall;
    property NewDate: IReference_1__DateTime read get_NewDate;
    property OldDate: IReference_1__DateTime read get_OldDate;
  end;

  // Generic Delegate for:
  // Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.Controls.ICalendarDatePicker,Microsoft.UI.Xaml.Controls.ICalendarDatePickerDateChangedEventArgs>
  TypedEventHandler_2__ICalendarDatePicker__ICalendarDatePickerDateChangedEventArgs_Delegate_Base = interface(IUnknown)
  ['{5D3644B8-8D51-54C4-B685-42F16EE42DEE}']
    procedure Invoke(sender: ICalendarDatePicker; args: ICalendarDatePickerDateChangedEventArgs); safecall;
  end;
  // UsedAPI Interface
  // Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.Controls.ICalendarDatePicker,Microsoft.UI.Xaml.Controls.ICalendarDatePickerDateChangedEventArgs>
  TypedEventHandler_2__ICalendarDatePicker__ICalendarDatePickerDateChangedEventArgs = interface(TypedEventHandler_2__ICalendarDatePicker__ICalendarDatePickerDateChangedEventArgs_Delegate_Base)
  ['{AAF13214-4E6A-53F7-A5E0-5021DE92E389}']
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.ICalendarDatePicker
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_CalendarDatePicker)]
  ICalendarDatePicker = interface(IInspectable)
  ['{E3D9FAA1-0FD0-5932-A6DB-FF00C003AC21}']
    function get_Date: IReference_1__DateTime; safecall;
    procedure put_Date(value: IReference_1__DateTime); safecall;
    function get_IsCalendarOpen: Boolean; safecall;
    procedure put_IsCalendarOpen(value: Boolean); safecall;
    function get_DateFormat: HSTRING; safecall;
    procedure put_DateFormat(value: HSTRING); safecall;
    function get_PlaceholderText: HSTRING; safecall;
    procedure put_PlaceholderText(value: HSTRING); safecall;
    function get_Header: IInspectable; safecall;
    procedure put_Header(value: IInspectable); safecall;
    function get_HeaderTemplate: IDataTemplate; safecall;
    procedure put_HeaderTemplate(value: IDataTemplate); safecall;
    function get_CalendarViewStyle: IStyle; safecall;
    procedure put_CalendarViewStyle(value: IStyle); safecall;
    function get_LightDismissOverlayMode: LightDismissOverlayMode; safecall;
    procedure put_LightDismissOverlayMode(value: LightDismissOverlayMode); safecall;
    function get_Description: IInspectable; safecall;
    procedure put_Description(value: IInspectable); safecall;
    function get_MinDate: DateTime; safecall;
    procedure put_MinDate(value: DateTime); safecall;
    function get_MaxDate: DateTime; safecall;
    procedure put_MaxDate(value: DateTime); safecall;
    function get_IsTodayHighlighted: Boolean; safecall;
    procedure put_IsTodayHighlighted(value: Boolean); safecall;
    function get_DisplayMode: CalendarViewDisplayMode; safecall;
    procedure put_DisplayMode(value: CalendarViewDisplayMode); safecall;
    function get_FirstDayOfWeek: DayOfWeek; safecall;
    procedure put_FirstDayOfWeek(value: DayOfWeek); safecall;
    function get_DayOfWeekFormat: HSTRING; safecall;
    procedure put_DayOfWeekFormat(value: HSTRING); safecall;
    function get_CalendarIdentifier: HSTRING; safecall;
    procedure put_CalendarIdentifier(value: HSTRING); safecall;
    function get_IsOutOfScopeEnabled: Boolean; safecall;
    procedure put_IsOutOfScopeEnabled(value: Boolean); safecall;
    function get_IsGroupLabelVisible: Boolean; safecall;
    procedure put_IsGroupLabelVisible(value: Boolean); safecall;
    function add_CalendarViewDayItemChanging(handler: CalendarViewDayItemChangingEventHandler): EventRegistrationToken; safecall;
    procedure remove_CalendarViewDayItemChanging(token: EventRegistrationToken); safecall;
    function add_DateChanged(handler: TypedEventHandler_2__ICalendarDatePicker__ICalendarDatePickerDateChangedEventArgs): EventRegistrationToken; safecall;
    procedure remove_DateChanged(token: EventRegistrationToken); safecall;
    function add_Opened(handler: EventHandler_1__IInspectable): EventRegistrationToken; safecall;
    procedure remove_Opened(token: EventRegistrationToken); safecall;
    function add_Closed(handler: EventHandler_1__IInspectable): EventRegistrationToken; safecall;
    procedure remove_Closed(token: EventRegistrationToken); safecall;
    procedure SetDisplayDate(date: DateTime); safecall;
    procedure SetYearDecadeDisplayDimensions(columns: Integer; rows: Integer); safecall;
    property CalendarIdentifier: HSTRING read get_CalendarIdentifier write put_CalendarIdentifier;
    property CalendarViewStyle: IStyle read get_CalendarViewStyle write put_CalendarViewStyle;
    property Date: IReference_1__DateTime read get_Date write put_Date;
    property DateFormat: HSTRING read get_DateFormat write put_DateFormat;
    property DayOfWeekFormat: HSTRING read get_DayOfWeekFormat write put_DayOfWeekFormat;
    property Description: IInspectable read get_Description write put_Description;
    property DisplayMode: CalendarViewDisplayMode read get_DisplayMode write put_DisplayMode;
    property FirstDayOfWeek: DayOfWeek read get_FirstDayOfWeek write put_FirstDayOfWeek;
    property Header: IInspectable read get_Header write put_Header;
    property HeaderTemplate: IDataTemplate read get_HeaderTemplate write put_HeaderTemplate;
    property IsCalendarOpen: Boolean read get_IsCalendarOpen write put_IsCalendarOpen;
    property IsGroupLabelVisible: Boolean read get_IsGroupLabelVisible write put_IsGroupLabelVisible;
    property IsOutOfScopeEnabled: Boolean read get_IsOutOfScopeEnabled write put_IsOutOfScopeEnabled;
    property IsTodayHighlighted: Boolean read get_IsTodayHighlighted write put_IsTodayHighlighted;
    property LightDismissOverlayMode_: LightDismissOverlayMode read get_LightDismissOverlayMode write put_LightDismissOverlayMode;
    property MaxDate: DateTime read get_MaxDate write put_MaxDate;
    property MinDate: DateTime read get_MinDate write put_MinDate;
    property PlaceholderText: HSTRING read get_PlaceholderText write put_PlaceholderText;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.ICheckBox
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_CheckBox)]
  ICheckBox = interface(IInspectable)
  ['{C5830000-4C9D-5FDD-9346-674C71CD80C5}']
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.Primitives.IColorPickerSlider
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_Primitives_ColorPickerSlider)]
  Primitives_IColorPickerSlider = interface(IInspectable)
  ['{456231BB-5A4C-564B-9B3D-2F157061A0F8}']
    function get_ColorChannel: ColorPickerHsvChannel; safecall;
    procedure put_ColorChannel(value: ColorPickerHsvChannel); safecall;
    property ColorChannel: ColorPickerHsvChannel read get_ColorChannel write put_ColorChannel;
  end;

  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IColorChangedEventArgs
  IColorChangedEventArgs = interface(IInspectable)
  ['{148D57A2-B1CB-5F5D-B6B5-512805D71761}']
    function get_OldColor: Color; safecall;
    function get_NewColor: Color; safecall;
    property NewColor: Color read get_NewColor;
    property OldColor: Color read get_OldColor;
  end;

  // Generic Delegate for:
  // Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.Controls.Primitives.IColorSpectrum,Microsoft.UI.Xaml.Controls.IColorChangedEventArgs>
  TypedEventHandler_2__Primitives_IColorSpectrum__IColorChangedEventArgs_Delegate_Base = interface(IUnknown)
  ['{0D0CD229-EAA3-57D4-8CEF-A2026B779791}']
    procedure Invoke(sender: Primitives_IColorSpectrum; args: IColorChangedEventArgs); safecall;
  end;
  // UsedAPI Interface
  // Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.Controls.Primitives.IColorSpectrum,Microsoft.UI.Xaml.Controls.IColorChangedEventArgs>
  TypedEventHandler_2__Primitives_IColorSpectrum__IColorChangedEventArgs = interface(TypedEventHandler_2__Primitives_IColorSpectrum__IColorChangedEventArgs_Delegate_Base)
  ['{8902E768-8FDF-5A66-B5F6-A30CA5E84A51}']
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.Primitives.IColorSpectrum
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_Primitives_ColorSpectrum)]
  Primitives_IColorSpectrum = interface(IInspectable)
  ['{75305916-882D-5667-BFD0-0AF72D502D72}']
    function get_Color: Color; safecall;
    procedure put_Color(value: Color); safecall;
    function get_HsvColor: Numerics_Vector4; safecall;
    procedure put_HsvColor(value: Numerics_Vector4); safecall;
    function get_MinHue: Integer; safecall;
    procedure put_MinHue(value: Integer); safecall;
    function get_MaxHue: Integer; safecall;
    procedure put_MaxHue(value: Integer); safecall;
    function get_MinSaturation: Integer; safecall;
    procedure put_MinSaturation(value: Integer); safecall;
    function get_MaxSaturation: Integer; safecall;
    procedure put_MaxSaturation(value: Integer); safecall;
    function get_MinValue: Integer; safecall;
    procedure put_MinValue(value: Integer); safecall;
    function get_MaxValue: Integer; safecall;
    procedure put_MaxValue(value: Integer); safecall;
    function get_Shape: ColorSpectrumShape; safecall;
    procedure put_Shape(value: ColorSpectrumShape); safecall;
    function get_Components: ColorSpectrumComponents; safecall;
    procedure put_Components(value: ColorSpectrumComponents); safecall;
    function add_ColorChanged(handler: TypedEventHandler_2__Primitives_IColorSpectrum__IColorChangedEventArgs): EventRegistrationToken; safecall;
    procedure remove_ColorChanged(token: EventRegistrationToken); safecall;
    property Color_: Color read get_Color write put_Color;
    property Components: ColorSpectrumComponents read get_Components write put_Components;
    property HsvColor: Numerics_Vector4 read get_HsvColor write put_HsvColor;
    property MaxHue: Integer read get_MaxHue write put_MaxHue;
    property MaxSaturation: Integer read get_MaxSaturation write put_MaxSaturation;
    property MaxValue: Integer read get_MaxValue write put_MaxValue;
    property MinHue: Integer read get_MinHue write put_MinHue;
    property MinSaturation: Integer read get_MinSaturation write put_MinSaturation;
    property MinValue: Integer read get_MinValue write put_MinValue;
    property Shape: ColorSpectrumShape read get_Shape write put_Shape;
  end;

  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.Primitives.IComboBoxTemplateSettings
  Primitives_IComboBoxTemplateSettings = interface(IInspectable)
  ['{F2DC5E7F-8D3F-5C20-B356-AF6F1FF8242A}']
    function get_DropDownOpenedHeight: Double; safecall;
    function get_DropDownClosedHeight: Double; safecall;
    function get_DropDownOffset: Double; safecall;
    function get_SelectedItemDirection: Primitives_AnimationDirection; safecall;
    function get_DropDownContentMinWidth: Double; safecall;
    property DropDownClosedHeight: Double read get_DropDownClosedHeight;
    property DropDownContentMinWidth: Double read get_DropDownContentMinWidth;
    property DropDownOffset: Double read get_DropDownOffset;
    property DropDownOpenedHeight: Double read get_DropDownOpenedHeight;
    property SelectedItemDirection: Primitives_AnimationDirection read get_SelectedItemDirection;
  end;

  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IComboBoxTextSubmittedEventArgs
  IComboBoxTextSubmittedEventArgs = interface(IInspectable)
  ['{0D7A9794-73B5-585E-BFBB-DE6DF7EB9FCF}']
    function get_Text: HSTRING; safecall;
    function get_Handled: Boolean; safecall;
    procedure put_Handled(value: Boolean); safecall;
    property Handled: Boolean read get_Handled write put_Handled;
    property Text: HSTRING read get_Text;
  end;

  // Generic Delegate for:
  // Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.Controls.IComboBox,Microsoft.UI.Xaml.Controls.IComboBoxTextSubmittedEventArgs>
  TypedEventHandler_2__IComboBox__IComboBoxTextSubmittedEventArgs_Delegate_Base = interface(IUnknown)
  ['{C3F72FD0-AE09-5809-B5B1-5719C28C0DD3}']
    procedure Invoke(sender: IComboBox; args: IComboBoxTextSubmittedEventArgs); safecall;
  end;
  // UsedAPI Interface
  // Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.Controls.IComboBox,Microsoft.UI.Xaml.Controls.IComboBoxTextSubmittedEventArgs>
  TypedEventHandler_2__IComboBox__IComboBoxTextSubmittedEventArgs = interface(TypedEventHandler_2__IComboBox__IComboBoxTextSubmittedEventArgs_Delegate_Base)
  ['{DAF332BD-ADF2-5E75-8AB4-FA0D4D6AD0BF}']
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IComboBox
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_ComboBox)]
  IComboBox = interface(IInspectable)
  ['{C77DA58B-4FD7-51E0-A431-F84658A83E9E}']
    function get_IsDropDownOpen: Boolean; safecall;
    procedure put_IsDropDownOpen(value: Boolean); safecall;
    function get_IsEditable: Boolean; safecall;
    procedure put_IsEditable(value: Boolean); safecall;
    function get_IsSelectionBoxHighlighted: Boolean; safecall;
    function get_MaxDropDownHeight: Double; safecall;
    procedure put_MaxDropDownHeight(value: Double); safecall;
    function get_SelectionBoxItem: IInspectable; safecall;
    function get_SelectionBoxItemTemplate: IDataTemplate; safecall;
    function get_TemplateSettings: Primitives_IComboBoxTemplateSettings; safecall;
    function get_Header: IInspectable; safecall;
    procedure put_Header(value: IInspectable); safecall;
    function get_HeaderTemplate: IDataTemplate; safecall;
    procedure put_HeaderTemplate(value: IDataTemplate); safecall;
    function get_PlaceholderText: HSTRING; safecall;
    procedure put_PlaceholderText(value: HSTRING); safecall;
    function get_LightDismissOverlayMode: LightDismissOverlayMode; safecall;
    procedure put_LightDismissOverlayMode(value: LightDismissOverlayMode); safecall;
    function get_IsTextSearchEnabled: Boolean; safecall;
    procedure put_IsTextSearchEnabled(value: Boolean); safecall;
    function get_SelectionChangedTrigger: ComboBoxSelectionChangedTrigger; safecall;
    procedure put_SelectionChangedTrigger(value: ComboBoxSelectionChangedTrigger); safecall;
    function get_PlaceholderForeground: IBrush; safecall;
    procedure put_PlaceholderForeground(value: IBrush); safecall;
    function get_Text: HSTRING; safecall;
    procedure put_Text(value: HSTRING); safecall;
    function get_TextBoxStyle: IStyle; safecall;
    procedure put_TextBoxStyle(value: IStyle); safecall;
    function get_Description: IInspectable; safecall;
    procedure put_Description(value: IInspectable); safecall;
    function add_DropDownClosed(handler: EventHandler_1__IInspectable): EventRegistrationToken; safecall;
    procedure remove_DropDownClosed(token: EventRegistrationToken); safecall;
    function add_DropDownOpened(handler: EventHandler_1__IInspectable): EventRegistrationToken; safecall;
    procedure remove_DropDownOpened(token: EventRegistrationToken); safecall;
    function add_TextSubmitted(handler: TypedEventHandler_2__IComboBox__IComboBoxTextSubmittedEventArgs): EventRegistrationToken; safecall;
    procedure remove_TextSubmitted(token: EventRegistrationToken); safecall;
    property Description: IInspectable read get_Description write put_Description;
    property Header: IInspectable read get_Header write put_Header;
    property HeaderTemplate: IDataTemplate read get_HeaderTemplate write put_HeaderTemplate;
    property IsDropDownOpen: Boolean read get_IsDropDownOpen write put_IsDropDownOpen;
    property IsEditable: Boolean read get_IsEditable write put_IsEditable;
    property IsSelectionBoxHighlighted: Boolean read get_IsSelectionBoxHighlighted;
    property IsTextSearchEnabled: Boolean read get_IsTextSearchEnabled write put_IsTextSearchEnabled;
    property LightDismissOverlayMode_: LightDismissOverlayMode read get_LightDismissOverlayMode write put_LightDismissOverlayMode;
    property MaxDropDownHeight: Double read get_MaxDropDownHeight write put_MaxDropDownHeight;
    property PlaceholderForeground: IBrush read get_PlaceholderForeground write put_PlaceholderForeground;
    property PlaceholderText: HSTRING read get_PlaceholderText write put_PlaceholderText;
    property SelectionBoxItem: IInspectable read get_SelectionBoxItem;
    property SelectionBoxItemTemplate: IDataTemplate read get_SelectionBoxItemTemplate;
    property SelectionChangedTrigger: ComboBoxSelectionChangedTrigger read get_SelectionChangedTrigger write put_SelectionChangedTrigger;
    property TemplateSettings: Primitives_IComboBoxTemplateSettings read get_TemplateSettings;
    property Text: HSTRING read get_Text write put_Text;
    property TextBoxStyle: IStyle read get_TextBoxStyle write put_TextBoxStyle;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IComboBoxItem
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_ComboBoxItem)]
  IComboBoxItem = interface(IInspectable)
  ['{DF65F6F4-863F-558D-BC4E-82C12F28062F}']
  end;

  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IDatePickerValueChangedEventArgs
  IDatePickerValueChangedEventArgs = interface(IInspectable)
  ['{BD4E36CA-F6AB-57CF-84F0-75D024084F20}']
    function get_OldDate: DateTime; safecall;
    function get_NewDate: DateTime; safecall;
    property NewDate: DateTime read get_NewDate;
    property OldDate: DateTime read get_OldDate;
  end;

  // Generic Delegate for:
  // Windows.Foundation.EventHandler`1<Microsoft.UI.Xaml.Controls.IDatePickerValueChangedEventArgs>
  EventHandler_1__IDatePickerValueChangedEventArgs_Delegate_Base = interface(IUnknown)
  ['{974932E0-EA3B-5640-8DC7-93E9AA64FF7A}']
    procedure Invoke(sender: IInspectable; args: IDatePickerValueChangedEventArgs); safecall;
  end;
  // UsedAPI Interface
  // Windows.Foundation.EventHandler`1<Microsoft.UI.Xaml.Controls.IDatePickerValueChangedEventArgs>
  EventHandler_1__IDatePickerValueChangedEventArgs = interface(EventHandler_1__IDatePickerValueChangedEventArgs_Delegate_Base)
  ['{C698BF14-0019-59BD-B702-1582B787B05E}']
  end;

  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IDatePickerSelectedValueChangedEventArgs
  IDatePickerSelectedValueChangedEventArgs = interface(IInspectable)
  ['{305ED436-370F-5E82-ACF2-F1413E8F9EC4}']
    function get_OldDate: IReference_1__DateTime; safecall;
    function get_NewDate: IReference_1__DateTime; safecall;
    property NewDate: IReference_1__DateTime read get_NewDate;
    property OldDate: IReference_1__DateTime read get_OldDate;
  end;

  // Generic Delegate for:
  // Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.Controls.IDatePicker,Microsoft.UI.Xaml.Controls.IDatePickerSelectedValueChangedEventArgs>
  TypedEventHandler_2__IDatePicker__IDatePickerSelectedValueChangedEventArgs_Delegate_Base = interface(IUnknown)
  ['{749C07E7-8B0C-5CDE-BD77-56DD1CD41D28}']
    procedure Invoke(sender: IDatePicker; args: IDatePickerSelectedValueChangedEventArgs); safecall;
  end;
  // UsedAPI Interface
  // Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.Controls.IDatePicker,Microsoft.UI.Xaml.Controls.IDatePickerSelectedValueChangedEventArgs>
  TypedEventHandler_2__IDatePicker__IDatePickerSelectedValueChangedEventArgs = interface(TypedEventHandler_2__IDatePicker__IDatePickerSelectedValueChangedEventArgs_Delegate_Base)
  ['{D52C5C87-DA89-5E62-8039-245EAAED657E}']
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IDatePicker
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_DatePicker)]
  IDatePicker = interface(IInspectable)
  ['{CA1DC351-3AE3-5247-8263-16BD516C6E72}']
    function get_Header: IInspectable; safecall;
    procedure put_Header(value: IInspectable); safecall;
    function get_HeaderTemplate: IDataTemplate; safecall;
    procedure put_HeaderTemplate(value: IDataTemplate); safecall;
    function get_CalendarIdentifier: HSTRING; safecall;
    procedure put_CalendarIdentifier(value: HSTRING); safecall;
    function get_Date: DateTime; safecall;
    procedure put_Date(value: DateTime); safecall;
    function get_DayVisible: Boolean; safecall;
    procedure put_DayVisible(value: Boolean); safecall;
    function get_MonthVisible: Boolean; safecall;
    procedure put_MonthVisible(value: Boolean); safecall;
    function get_YearVisible: Boolean; safecall;
    procedure put_YearVisible(value: Boolean); safecall;
    function get_DayFormat: HSTRING; safecall;
    procedure put_DayFormat(value: HSTRING); safecall;
    function get_MonthFormat: HSTRING; safecall;
    procedure put_MonthFormat(value: HSTRING); safecall;
    function get_YearFormat: HSTRING; safecall;
    procedure put_YearFormat(value: HSTRING); safecall;
    function get_MinYear: DateTime; safecall;
    procedure put_MinYear(value: DateTime); safecall;
    function get_MaxYear: DateTime; safecall;
    procedure put_MaxYear(value: DateTime); safecall;
    function get_Orientation: Orientation; safecall;
    procedure put_Orientation(value: Orientation); safecall;
    function get_LightDismissOverlayMode: LightDismissOverlayMode; safecall;
    procedure put_LightDismissOverlayMode(value: LightDismissOverlayMode); safecall;
    function get_SelectedDate: IReference_1__DateTime; safecall;
    procedure put_SelectedDate(value: IReference_1__DateTime); safecall;
    function add_DateChanged(handler: EventHandler_1__IDatePickerValueChangedEventArgs): EventRegistrationToken; safecall;
    procedure remove_DateChanged(token: EventRegistrationToken); safecall;
    function add_SelectedDateChanged(handler: TypedEventHandler_2__IDatePicker__IDatePickerSelectedValueChangedEventArgs): EventRegistrationToken; safecall;
    procedure remove_SelectedDateChanged(token: EventRegistrationToken); safecall;
    property CalendarIdentifier: HSTRING read get_CalendarIdentifier write put_CalendarIdentifier;
    property Date: DateTime read get_Date write put_Date;
    property DayFormat: HSTRING read get_DayFormat write put_DayFormat;
    property DayVisible: Boolean read get_DayVisible write put_DayVisible;
    property Header: IInspectable read get_Header write put_Header;
    property HeaderTemplate: IDataTemplate read get_HeaderTemplate write put_HeaderTemplate;
    property LightDismissOverlayMode_: LightDismissOverlayMode read get_LightDismissOverlayMode write put_LightDismissOverlayMode;
    property MaxYear: DateTime read get_MaxYear write put_MaxYear;
    property MinYear: DateTime read get_MinYear write put_MinYear;
    property MonthFormat: HSTRING read get_MonthFormat write put_MonthFormat;
    property MonthVisible: Boolean read get_MonthVisible write put_MonthVisible;
    property Orientation_: Orientation read get_Orientation write put_Orientation;
    property SelectedDate: IReference_1__DateTime read get_SelectedDate write put_SelectedDate;
    property YearFormat: HSTRING read get_YearFormat write put_YearFormat;
    property YearVisible: Boolean read get_YearVisible write put_YearVisible;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IDropDownButton
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_DropDownButton)]
  IDropDownButton = interface(IInspectable)
  ['{C1E9FA91-4F95-5796-8A7B-3B7594A12C69}']
  end;

  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IExpanderExpandingEventArgs
  IExpanderExpandingEventArgs = interface(IInspectable)
  ['{433F2E36-19E7-579C-B4CE-9CE5D510D001}']
  end;

  // Generic Delegate for:
  // Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.Controls.IExpander,Microsoft.UI.Xaml.Controls.IExpanderExpandingEventArgs>
  TypedEventHandler_2__IExpander__IExpanderExpandingEventArgs_Delegate_Base = interface(IUnknown)
  ['{DF5FDF60-BF19-5B7D-B44B-0B5096CF5680}']
    procedure Invoke(sender: IExpander; args: IExpanderExpandingEventArgs); safecall;
  end;
  // UsedAPI Interface
  // Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.Controls.IExpander,Microsoft.UI.Xaml.Controls.IExpanderExpandingEventArgs>
  TypedEventHandler_2__IExpander__IExpanderExpandingEventArgs = interface(TypedEventHandler_2__IExpander__IExpanderExpandingEventArgs_Delegate_Base)
  ['{5F18369D-9755-5D99-8D65-599BE5907D1C}']
  end;

  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IExpanderCollapsedEventArgs
  IExpanderCollapsedEventArgs = interface(IInspectable)
  ['{968A6870-7426-535E-A526-279E6EEDECD0}']
  end;

  // Generic Delegate for:
  // Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.Controls.IExpander,Microsoft.UI.Xaml.Controls.IExpanderCollapsedEventArgs>
  TypedEventHandler_2__IExpander__IExpanderCollapsedEventArgs_Delegate_Base = interface(IUnknown)
  ['{5B4E420C-48ED-5F5E-A5FC-D658469E3E79}']
    procedure Invoke(sender: IExpander; args: IExpanderCollapsedEventArgs); safecall;
  end;
  // UsedAPI Interface
  // Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.Controls.IExpander,Microsoft.UI.Xaml.Controls.IExpanderCollapsedEventArgs>
  TypedEventHandler_2__IExpander__IExpanderCollapsedEventArgs = interface(TypedEventHandler_2__IExpander__IExpanderCollapsedEventArgs_Delegate_Base)
  ['{38218B77-08A1-593F-ABC7-5C97A0E7A72E}']
  end;

  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IExpanderTemplateSettings
  IExpanderTemplateSettings = interface(IInspectable)
  ['{8F959018-F6B8-5C02-BE08-CD196C9FCD2D}']
    function get_ContentHeight: Double; safecall;
    function get_NegativeContentHeight: Double; safecall;
    property ContentHeight: Double read get_ContentHeight;
    property NegativeContentHeight: Double read get_NegativeContentHeight;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IExpander
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_Expander)]
  IExpander = interface(IInspectable)
  ['{CA633942-E584-55C2-B7EE-CFFC73C8127A}']
    function get_Header: IInspectable; safecall;
    procedure put_Header(value: IInspectable); safecall;
    function get_HeaderTemplate: IDataTemplate; safecall;
    procedure put_HeaderTemplate(value: IDataTemplate); safecall;
    function get_HeaderTemplateSelector: IDataTemplateSelector; safecall;
    procedure put_HeaderTemplateSelector(value: IDataTemplateSelector); safecall;
    function get_IsExpanded: Boolean; safecall;
    procedure put_IsExpanded(value: Boolean); safecall;
    function get_ExpandDirection: ExpandDirection; safecall;
    procedure put_ExpandDirection(value: ExpandDirection); safecall;
    function add_Expanding(handler: TypedEventHandler_2__IExpander__IExpanderExpandingEventArgs): EventRegistrationToken; safecall;
    procedure remove_Expanding(token: EventRegistrationToken); safecall;
    function add_Collapsed(handler: TypedEventHandler_2__IExpander__IExpanderCollapsedEventArgs): EventRegistrationToken; safecall;
    procedure remove_Collapsed(token: EventRegistrationToken); safecall;
    function get_TemplateSettings: IExpanderTemplateSettings; safecall;
    property ExpandDirection_: ExpandDirection read get_ExpandDirection write put_ExpandDirection;
    property Header: IInspectable read get_Header write put_Header;
    property HeaderTemplate: IDataTemplate read get_HeaderTemplate write put_HeaderTemplate;
    property HeaderTemplateSelector: IDataTemplateSelector read get_HeaderTemplateSelector write put_HeaderTemplateSelector;
    property IsExpanded: Boolean read get_IsExpanded write put_IsExpanded;
    property TemplateSettings: IExpanderTemplateSettings read get_TemplateSettings;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IFlipView
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_FlipView)]
  IFlipView = interface(IInspectable)
  ['{96C35E7F-CC48-5ACC-B3B4-8AB4BDF1FE17}']
    function get_UseTouchAnimationsForAllNavigation: Boolean; safecall;
    procedure put_UseTouchAnimationsForAllNavigation(value: Boolean); safecall;
    property UseTouchAnimationsForAllNavigation: Boolean read get_UseTouchAnimationsForAllNavigation write put_UseTouchAnimationsForAllNavigation;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IFlipViewItem
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_FlipViewItem)]
  IFlipViewItem = interface(IInspectable)
  ['{516F2058-AF67-5EB3-B796-E75B34F3FD92}']
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IFlyoutPresenter
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_FlyoutPresenter)]
  IFlyoutPresenter = interface(IInspectable)
  ['{70259825-7F56-5107-917E-7194B1EF1B81}']
    function get_IsDefaultShadowEnabled: Boolean; safecall;
    procedure put_IsDefaultShadowEnabled(value: Boolean); safecall;
    property IsDefaultShadowEnabled: Boolean read get_IsDefaultShadowEnabled write put_IsDefaultShadowEnabled;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IGridView
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_GridView)]
  IGridView = interface(IInspectable)
  ['{D495F2FA-594D-5170-B1E8-8629A179F9FB}']
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IGridViewHeaderItem
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_GridViewHeaderItem)]
  IGridViewHeaderItem = interface(IInspectable)
  ['{2C90C3E0-3245-55D6-9D98-0FD9540E920F}']
  end;

  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.Primitives.IGridViewItemTemplateSettings
  Primitives_IGridViewItemTemplateSettings = interface(IInspectable)
  ['{7033E884-2117-56E7-AFB8-B7F5B8B64C70}']
    function get_DragItemsCount: Integer; safecall;
    property DragItemsCount: Integer read get_DragItemsCount;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IGridViewItem
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_GridViewItem)]
  IGridViewItem = interface(IInspectable)
  ['{9DEBB4A5-E7B7-5A41-A1EE-F77D8A7B0023}']
    function get_TemplateSettings: Primitives_IGridViewItemTemplateSettings; safecall;
    property TemplateSettings: Primitives_IGridViewItemTemplateSettings read get_TemplateSettings;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IGroupItem
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_GroupItem)]
  IGroupItem = interface(IInspectable)
  ['{60E5A62B-9DF9-5DBD-9551-1D9E0F6CC3C3}']
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IHubSection
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_HubSection)]
  IHubSection = interface(IInspectable)
  ['{9904A65B-89FF-5644-8961-9ADBD0135324}']
    function get_Header: IInspectable; safecall;
    procedure put_Header(value: IInspectable); safecall;
    function get_HeaderTemplate: IDataTemplate; safecall;
    procedure put_HeaderTemplate(value: IDataTemplate); safecall;
    function get_ContentTemplate: IDataTemplate; safecall;
    procedure put_ContentTemplate(value: IDataTemplate); safecall;
    function get_IsHeaderInteractive: Boolean; safecall;
    procedure put_IsHeaderInteractive(value: Boolean); safecall;
    property ContentTemplate: IDataTemplate read get_ContentTemplate write put_ContentTemplate;
    property Header: IInspectable read get_Header write put_Header;
    property HeaderTemplate: IDataTemplate read get_HeaderTemplate write put_HeaderTemplate;
    property IsHeaderInteractive: Boolean read get_IsHeaderInteractive write put_IsHeaderInteractive;
  end;

  // Generic Ancestor for:
  // Windows.Foundation.Collections.IIterator`1<Microsoft.UI.Xaml.Controls.IHubSection>
  IIterator_1__IHubSection_Base = interface(IInspectable)
  ['{D3576470-FAE8-513A-AC27-F9DA12E0FA8D}']
    function get_Current: IHubSection; safecall;
    function get_HasCurrent: Boolean; safecall;
    function MoveNext: Boolean; safecall;
    function GetMany(itemsSize: Cardinal; items: PIHubSection): Cardinal; safecall;
    property Current: IHubSection read get_Current;
    property HasCurrent: Boolean read get_HasCurrent;
  end;
  // Windows.Foundation.Collections.IIterator`1<Microsoft.UI.Xaml.Controls.IHubSection>
  IIterator_1__IHubSection = interface(IIterator_1__IHubSection_Base)
  ['{BA2DF2CE-2193-58AB-9DA2-561F676977CF}']
  end;

  // Generic Ancestor for:
  // Windows.Foundation.Collections.IIterable`1<Microsoft.UI.Xaml.Controls.IHubSection>
  IIterable_1__IHubSection_Base = interface(IInspectable)
  ['{0B1F4A4A-D9F8-5C47-86D7-2686222BD70F}']
    function First: IIterator_1__IHubSection; safecall;
  end;
  // Windows.Foundation.Collections.IIterable`1<Microsoft.UI.Xaml.Controls.IHubSection>
  IIterable_1__IHubSection = interface(IIterable_1__IHubSection_Base)
  ['{CE2A58BA-3CF5-5A05-8252-5859391B25EB}']
  end;

  // UsedAPI Interface
  // Windows.Foundation.Collections.IVectorView`1<Microsoft.UI.Xaml.Controls.IHubSection>
  IVectorView_1__IHubSection = interface(IInspectable)
  ['{7A397FB8-6130-5DCA-A542-3B08EC24C4AB}']
    function GetAt(index: Cardinal): IHubSection; safecall;
    function get_Size: Cardinal; safecall;
    function IndexOf(value: IHubSection; out index: Cardinal): Boolean; safecall;
    function GetMany(startIndex: Cardinal; itemsSize: Cardinal; items: PIHubSection): Cardinal; safecall;
    property Size: Cardinal read get_Size;
  end;

  // Generic Ancestor for:
  // Windows.Foundation.Collections.IVector`1<Microsoft.UI.Xaml.Controls.IHubSection>
  IVector_1__IHubSection_Base = interface(IInspectable)
  ['{A58A47DF-14C0-58D8-AE0C-ED2DB20AA05F}']
    function GetAt(index: Cardinal): IHubSection; safecall;
    function get_Size: Cardinal; safecall;
    function GetView: IVectorView_1__IHubSection; safecall;
    function IndexOf(value: IHubSection; out index: Cardinal): Boolean; safecall;
    procedure SetAt(index: Cardinal; value: IHubSection); safecall;
    procedure InsertAt(index: Cardinal; value: IHubSection); safecall;
    procedure RemoveAt(index: Cardinal); safecall;
    procedure Append(value: IHubSection); safecall;
    procedure RemoveAtEnd; safecall;
    procedure Clear; safecall;
    function GetMany(startIndex: Cardinal; itemsSize: Cardinal; items: PIHubSection): Cardinal; safecall;
    procedure ReplaceAll(itemsSize: Cardinal; items: PIHubSection); safecall;
    property Size: Cardinal read get_Size;
  end;
  // UsedAPI Interface
  // Windows.Foundation.Collections.IVector`1<Microsoft.UI.Xaml.Controls.IHubSection>
  IVector_1__IHubSection = interface(IVector_1__IHubSection_Base)
  ['{2222CE0D-DE05-5E97-85FE-560BCAA28CDD}']
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IHubSectionHeaderClickEventArgs
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_HubSectionHeaderClickEventArgs)]
  IHubSectionHeaderClickEventArgs = interface(IInspectable)
  ['{B5343AAB-37B2-5CDC-9543-118E3ACE48B2}']
    function get_Section: IHubSection; safecall;
    property Section: IHubSection read get_Section;
  end;

  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.HubSectionHeaderClickEventHandler
  HubSectionHeaderClickEventHandler = interface(IUnknown)
  ['{F69971DA-162F-51EC-9FD9-37F9B57A68F9}']
    procedure Invoke(sender: IInspectable; e: IHubSectionHeaderClickEventArgs); safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.ISectionsInViewChangedEventArgs
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_SectionsInViewChangedEventArgs)]
  ISectionsInViewChangedEventArgs = interface(IInspectable)
  ['{5E727DA0-B909-536C-8656-28017B48F5A5}']
    function get_AddedSections: IVector_1__IHubSection; safecall;
    function get_RemovedSections: IVector_1__IHubSection; safecall;
    property AddedSections: IVector_1__IHubSection read get_AddedSections;
    property RemovedSections: IVector_1__IHubSection read get_RemovedSections;
  end;

  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.SectionsInViewChangedEventHandler
  SectionsInViewChangedEventHandler = interface(IUnknown)
  ['{830D582C-80FB-5AEA-BCB2-F151740FF792}']
    procedure Invoke(sender: IInspectable; e: ISectionsInViewChangedEventArgs); safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IHub
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_Hub)]
  IHub = interface(IInspectable)
  ['{B867E995-0F2E-51A6-A090-E0BE2E7CF3EC}']
    function get_Header: IInspectable; safecall;
    procedure put_Header(value: IInspectable); safecall;
    function get_HeaderTemplate: IDataTemplate; safecall;
    procedure put_HeaderTemplate(value: IDataTemplate); safecall;
    function get_Orientation: Orientation; safecall;
    procedure put_Orientation(value: Orientation); safecall;
    function get_DefaultSectionIndex: Integer; safecall;
    procedure put_DefaultSectionIndex(value: Integer); safecall;
    function get_Sections: IVector_1__IHubSection; safecall;
    function get_SectionsInView: IVector_1__IHubSection; safecall;
    function get_SectionHeaders: IObservableVector_1__IInspectable; safecall;
    function add_SectionHeaderClick(handler: HubSectionHeaderClickEventHandler): EventRegistrationToken; safecall;
    procedure remove_SectionHeaderClick(token: EventRegistrationToken); safecall;
    function add_SectionsInViewChanged(handler: SectionsInViewChangedEventHandler): EventRegistrationToken; safecall;
    procedure remove_SectionsInViewChanged(token: EventRegistrationToken); safecall;
    procedure ScrollToSection(section: IHubSection); safecall;
    property DefaultSectionIndex: Integer read get_DefaultSectionIndex write put_DefaultSectionIndex;
    property Header: IInspectable read get_Header write put_Header;
    property HeaderTemplate: IDataTemplate read get_HeaderTemplate write put_HeaderTemplate;
    property Orientation_: Orientation read get_Orientation write put_Orientation;
    property SectionHeaders: IObservableVector_1__IInspectable read get_SectionHeaders;
    property Sections: IVector_1__IHubSection read get_Sections;
    property SectionsInView: IVector_1__IHubSection read get_SectionsInView;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IHyperlinkButton
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_HyperlinkButton)]
  IHyperlinkButton = interface(IInspectable)
  ['{6DBEE605-8DF0-50CC-9A42-250EB138F0C6}']
    function get_NavigateUri: IUriRuntimeClass; safecall;
    procedure put_NavigateUri(value: IUriRuntimeClass); safecall;
    property NavigateUri: IUriRuntimeClass read get_NavigateUri write put_NavigateUri;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IImage
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_Image)]
  IImage = interface(IInspectable)
  ['{220D3D8D-66DE-53A1-A215-BA9C165565AB}']
    function get_Source: IImageSource; safecall;
    procedure put_Source(value: IImageSource); safecall;
    function get_Stretch: Stretch; safecall;
    procedure put_Stretch(value: Stretch); safecall;
    function get_NineGrid: Thickness; safecall;
    procedure put_NineGrid(value: Thickness); safecall;
    function add_ImageFailed(handler: ExceptionRoutedEventHandler): EventRegistrationToken; safecall;
    procedure remove_ImageFailed(token: EventRegistrationToken); safecall;
    function add_ImageOpened(handler: RoutedEventHandler): EventRegistrationToken; safecall;
    procedure remove_ImageOpened(token: EventRegistrationToken); safecall;
    function GetAsCastingSource: Casting_ICastingSource; safecall;
    function GetAlphaMask: ICompositionBrush; safecall;
    property NineGrid: Thickness read get_NineGrid write put_NineGrid;
    property Source: IImageSource read get_Source write put_Source;
    property Stretch_: Stretch read get_Stretch write put_Stretch;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IItemsPanelTemplate
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_ItemsPanelTemplate)]
  IItemsPanelTemplate = interface(IInspectable)
  ['{6153AF2F-F095-5E8C-89D4-9E03203B9CC2}']
  end;

  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IUIElementCollection
  IUIElementCollection = interface(IInspectable)
  ['{23050CB1-DB88-54ED-9083-5ECFB12512FD}']
    procedure Move(oldIndex: Cardinal; newIndex: Cardinal); safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IPanel
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_Panel)]
  IPanel = interface(IInspectable)
  ['{27A1B418-56F3-525E-B883-CEFED905EED3}']
    function get_Children: IUIElementCollection; safecall;
    function get_Background: IBrush; safecall;
    procedure put_Background(value: IBrush); safecall;
    function get_IsItemsHost: Boolean; safecall;
    function get_ChildrenTransitions: IVector_1__Animation_ITransition; safecall;
    procedure put_ChildrenTransitions(value: IVector_1__Animation_ITransition); safecall;
    function get_BackgroundTransition: IBrushTransition; safecall;
    procedure put_BackgroundTransition(value: IBrushTransition); safecall;
    property Background: IBrush read get_Background write put_Background;
    property BackgroundTransition: IBrushTransition read get_BackgroundTransition write put_BackgroundTransition;
    property Children: IUIElementCollection read get_Children;
    property ChildrenTransitions: IVector_1__Animation_ITransition read get_ChildrenTransitions write put_ChildrenTransitions;
    property IsItemsHost: Boolean read get_IsItemsHost;
  end;

  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.Primitives.IItemsChangedEventArgs
  Primitives_IItemsChangedEventArgs = interface(IInspectable)
  ['{B2BA1610-0E96-538A-978F-EC0B37193228}']
    function get_Action: Integer; safecall;
    function get_Position: Primitives_GeneratorPosition; safecall;
    function get_OldPosition: Primitives_GeneratorPosition; safecall;
    function get_ItemCount: Integer; safecall;
    function get_ItemUICount: Integer; safecall;
    property Action: Integer read get_Action;
    property ItemCount: Integer read get_ItemCount;
    property ItemUICount: Integer read get_ItemUICount;
    property OldPosition: Primitives_GeneratorPosition read get_OldPosition;
    property Position: Primitives_GeneratorPosition read get_Position;
  end;

  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.Primitives.ItemsChangedEventHandler
  Primitives_ItemsChangedEventHandler = interface(IUnknown)
  ['{8E15E39E-23F7-5FCF-B04B-D1B7891DCCC4}']
    procedure Invoke(sender: IInspectable; e: Primitives_IItemsChangedEventArgs); safecall;
  end;

  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IItemContainerGenerator
  IItemContainerGenerator = interface(IInspectable)
  ['{C4C5D5AE-ED98-510F-AFAE-8A0AC6067A3B}']
    function add_ItemsChanged(handler: Primitives_ItemsChangedEventHandler): EventRegistrationToken; safecall;
    procedure remove_ItemsChanged(token: EventRegistrationToken); safecall;
    function ItemFromContainer(container: IDependencyObject): IInspectable; safecall;
    function ContainerFromItem(item: IInspectable): IDependencyObject; safecall;
    function IndexFromContainer(container: IDependencyObject): Integer; safecall;
    function ContainerFromIndex(index: Integer): IDependencyObject; safecall;
    function GetItemContainerGeneratorForPanel(panel: IPanel): IItemContainerGenerator; safecall;
    procedure StartAt(position: Primitives_GeneratorPosition; direction: Primitives_GeneratorDirection; allowStartAtRealizedItem: Boolean); safecall;
    procedure Stop; safecall;
    function GenerateNext(out isNewlyRealized: Boolean): IDependencyObject; safecall;
    procedure PrepareItemContainer(container: IDependencyObject); safecall;
    procedure RemoveAll; safecall;
    procedure Remove(position: Primitives_GeneratorPosition; count: Integer); safecall;
    function GeneratorPositionFromIndex(itemIndex: Integer): Primitives_GeneratorPosition; safecall;
    function IndexFromGeneratorPosition(position: Primitives_GeneratorPosition): Integer; safecall;
    procedure Recycle(position: Primitives_GeneratorPosition; count: Integer); safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IGroupStyle
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_GroupStyle)]
  IGroupStyle = interface(IInspectable)
  ['{A77D937E-0188-584C-AB1D-9DF1916EDC75}']
    function get_Panel: IItemsPanelTemplate; safecall;
    procedure put_Panel(value: IItemsPanelTemplate); safecall;
    function get_ContainerStyle: IStyle; safecall;
    procedure put_ContainerStyle(value: IStyle); safecall;
    function get_HeaderContainerStyle: IStyle; safecall;
    procedure put_HeaderContainerStyle(value: IStyle); safecall;
    function get_ContainerStyleSelector: IStyleSelector; safecall;
    procedure put_ContainerStyleSelector(value: IStyleSelector); safecall;
    function get_HeaderTemplate: IDataTemplate; safecall;
    procedure put_HeaderTemplate(value: IDataTemplate); safecall;
    function get_HeaderTemplateSelector: IDataTemplateSelector; safecall;
    procedure put_HeaderTemplateSelector(value: IDataTemplateSelector); safecall;
    function get_HidesIfEmpty: Boolean; safecall;
    procedure put_HidesIfEmpty(value: Boolean); safecall;
    property ContainerStyle: IStyle read get_ContainerStyle write put_ContainerStyle;
    property ContainerStyleSelector: IStyleSelector read get_ContainerStyleSelector write put_ContainerStyleSelector;
    property HeaderContainerStyle: IStyle read get_HeaderContainerStyle write put_HeaderContainerStyle;
    property HeaderTemplate: IDataTemplate read get_HeaderTemplate write put_HeaderTemplate;
    property HeaderTemplateSelector: IDataTemplateSelector read get_HeaderTemplateSelector write put_HeaderTemplateSelector;
    property HidesIfEmpty: Boolean read get_HidesIfEmpty write put_HidesIfEmpty;
    property Panel: IItemsPanelTemplate read get_Panel write put_Panel;
  end;

  // Generic Ancestor for:
  // Windows.Foundation.Collections.IIterator`1<Microsoft.UI.Xaml.Controls.IGroupStyle>
  IIterator_1__IGroupStyle_Base = interface(IInspectable)
  ['{862E10BB-08BE-5A33-84EA-DA757EA28D59}']
    function get_Current: IGroupStyle; safecall;
    function get_HasCurrent: Boolean; safecall;
    function MoveNext: Boolean; safecall;
    function GetMany(itemsSize: Cardinal; items: PIGroupStyle): Cardinal; safecall;
    property Current: IGroupStyle read get_Current;
    property HasCurrent: Boolean read get_HasCurrent;
  end;
  // Windows.Foundation.Collections.IIterator`1<Microsoft.UI.Xaml.Controls.IGroupStyle>
  IIterator_1__IGroupStyle = interface(IIterator_1__IGroupStyle_Base)
  ['{108D7BC2-2CE8-569A-A420-F32DA7C78A1C}']
  end;

  // Generic Ancestor for:
  // Windows.Foundation.Collections.IIterable`1<Microsoft.UI.Xaml.Controls.IGroupStyle>
  IIterable_1__IGroupStyle_Base = interface(IInspectable)
  ['{0E43BAF0-60AD-547C-BBC4-E511036A3915}']
    function First: IIterator_1__IGroupStyle; safecall;
  end;
  // Windows.Foundation.Collections.IIterable`1<Microsoft.UI.Xaml.Controls.IGroupStyle>
  IIterable_1__IGroupStyle = interface(IIterable_1__IGroupStyle_Base)
  ['{F092A859-E119-5685-9ED1-612D33506B23}']
  end;

  // Windows.Foundation.Collections.IVectorView`1<Microsoft.UI.Xaml.Controls.IGroupStyle>
  IVectorView_1__IGroupStyle = interface(IInspectable)
  ['{27191335-61F6-5B12-A0DA-4587F3016330}']
    function GetAt(index: Cardinal): IGroupStyle; safecall;
    function get_Size: Cardinal; safecall;
    function IndexOf(value: IGroupStyle; out index: Cardinal): Boolean; safecall;
    function GetMany(startIndex: Cardinal; itemsSize: Cardinal; items: PIGroupStyle): Cardinal; safecall;
    property Size: Cardinal read get_Size;
  end;

  // Generic Ancestor for:
  // Windows.Foundation.Collections.IVector`1<Microsoft.UI.Xaml.Controls.IGroupStyle>
  IVector_1__IGroupStyle_Base = interface(IInspectable)
  ['{8FBA608E-F076-5F2A-8972-4F97D92CA845}']
    function GetAt(index: Cardinal): IGroupStyle; safecall;
    function get_Size: Cardinal; safecall;
    function GetView: IVectorView_1__IGroupStyle; safecall;
    function IndexOf(value: IGroupStyle; out index: Cardinal): Boolean; safecall;
    procedure SetAt(index: Cardinal; value: IGroupStyle); safecall;
    procedure InsertAt(index: Cardinal; value: IGroupStyle); safecall;
    procedure RemoveAt(index: Cardinal); safecall;
    procedure Append(value: IGroupStyle); safecall;
    procedure RemoveAtEnd; safecall;
    procedure Clear; safecall;
    function GetMany(startIndex: Cardinal; itemsSize: Cardinal; items: PIGroupStyle): Cardinal; safecall;
    procedure ReplaceAll(itemsSize: Cardinal; items: PIGroupStyle); safecall;
    property Size: Cardinal read get_Size;
  end;
  // Windows.Foundation.Collections.IVector`1<Microsoft.UI.Xaml.Controls.IGroupStyle>
  IVector_1__IGroupStyle = interface(IVector_1__IGroupStyle_Base)
  ['{72037158-EAFC-5100-BE98-48F2941A8DCF}']
  end;

  // Generic Delegate for:
  // Windows.Foundation.Collections.VectorChangedEventHandler`1<Microsoft.UI.Xaml.Controls.IGroupStyle>
  VectorChangedEventHandler_1__IGroupStyle_Delegate_Base = interface(IUnknown)
  ['{936AF50F-C851-51CD-B07C-A2AC10F084A3}']
    procedure Invoke(sender: IObservableVector_1__IGroupStyle; event: IVectorChangedEventArgs); safecall;
  end;
  // UsedAPI Interface
  // Windows.Foundation.Collections.VectorChangedEventHandler`1<Microsoft.UI.Xaml.Controls.IGroupStyle>
  VectorChangedEventHandler_1__IGroupStyle = interface(VectorChangedEventHandler_1__IGroupStyle_Delegate_Base)
  ['{5ED95A87-EF89-50E5-A1E8-1538114A24C8}']
  end;

  // UsedAPI Interface
  // Windows.Foundation.Collections.IObservableVector`1<Microsoft.UI.Xaml.Controls.IGroupStyle>
  IObservableVector_1__IGroupStyle = interface(IInspectable)
  ['{DF85BD35-843D-5FC7-87F7-A2AED0228B48}']
    function add_VectorChanged(vhnd: VectorChangedEventHandler_1__IGroupStyle): EventRegistrationToken; safecall;
    procedure remove_VectorChanged(token: EventRegistrationToken); safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IGroupStyleSelector
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_GroupStyleSelector)]
  IGroupStyleSelector = interface(IInspectable)
  ['{524F5086-3E02-5B71-BE7C-8A8FA0FEAA2C}']
    function SelectGroupStyle(group: IInspectable; level: Cardinal): IGroupStyle; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IItemsControl
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_ItemsControl)]
  IItemsControl = interface(IInspectable)
  ['{BF1CCB54-83E2-5B98-ACBC-736F876C3D35}']
    function get_ItemsSource: IInspectable; safecall;
    procedure put_ItemsSource(value: IInspectable); safecall;
    function get_Items: IObservableVector_1__IInspectable; safecall;
    function get_ItemTemplate: IDataTemplate; safecall;
    procedure put_ItemTemplate(value: IDataTemplate); safecall;
    function get_ItemTemplateSelector: IDataTemplateSelector; safecall;
    procedure put_ItemTemplateSelector(value: IDataTemplateSelector); safecall;
    function get_ItemsPanel: IItemsPanelTemplate; safecall;
    procedure put_ItemsPanel(value: IItemsPanelTemplate); safecall;
    function get_DisplayMemberPath: HSTRING; safecall;
    procedure put_DisplayMemberPath(value: HSTRING); safecall;
    function get_ItemsPanelRoot: IPanel; safecall;
    function get_ItemContainerStyle: IStyle; safecall;
    procedure put_ItemContainerStyle(value: IStyle); safecall;
    function get_ItemContainerStyleSelector: IStyleSelector; safecall;
    procedure put_ItemContainerStyleSelector(value: IStyleSelector); safecall;
    function get_ItemContainerGenerator: IItemContainerGenerator; safecall;
    function get_ItemContainerTransitions: IVector_1__Animation_ITransition; safecall;
    procedure put_ItemContainerTransitions(value: IVector_1__Animation_ITransition); safecall;
    function get_GroupStyle: IObservableVector_1__IGroupStyle; safecall;
    function get_GroupStyleSelector: IGroupStyleSelector; safecall;
    procedure put_GroupStyleSelector(value: IGroupStyleSelector); safecall;
    function get_IsGrouping: Boolean; safecall;
    function GroupHeaderContainerFromItemContainer(itemContainer: IDependencyObject): IDependencyObject; safecall;
    property DisplayMemberPath: HSTRING read get_DisplayMemberPath write put_DisplayMemberPath;
    property GroupStyle: IObservableVector_1__IGroupStyle read get_GroupStyle;
    property GroupStyleSelector: IGroupStyleSelector read get_GroupStyleSelector write put_GroupStyleSelector;
    property IsGrouping: Boolean read get_IsGrouping;
    property ItemContainerGenerator: IItemContainerGenerator read get_ItemContainerGenerator;
    property ItemContainerStyle: IStyle read get_ItemContainerStyle write put_ItemContainerStyle;
    property ItemContainerStyleSelector: IStyleSelector read get_ItemContainerStyleSelector write put_ItemContainerStyleSelector;
    property ItemContainerTransitions: IVector_1__Animation_ITransition read get_ItemContainerTransitions write put_ItemContainerTransitions;
    property ItemTemplate: IDataTemplate read get_ItemTemplate write put_ItemTemplate;
    property ItemTemplateSelector: IDataTemplateSelector read get_ItemTemplateSelector write put_ItemTemplateSelector;
    property Items: IObservableVector_1__IInspectable read get_Items;
    property ItemsPanel: IItemsPanelTemplate read get_ItemsPanel write put_ItemsPanel;
    property ItemsPanelRoot: IPanel read get_ItemsPanelRoot;
    property ItemsSource: IInspectable read get_ItemsSource write put_ItemsSource;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IListBox
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_ListBox)]
  IListBox = interface(IInspectable)
  ['{F3E7DEDF-7A3C-59F1-9E05-AE5026B54293}']
    function get_SelectedItems: IVector_1__IInspectable; safecall;
    function get_SelectionMode: SelectionMode; safecall;
    procedure put_SelectionMode(value: SelectionMode); safecall;
    function get_SingleSelectionFollowsFocus: Boolean; safecall;
    procedure put_SingleSelectionFollowsFocus(value: Boolean); safecall;
    procedure ScrollIntoView(item: IInspectable); safecall;
    procedure SelectAll; safecall;
    property SelectedItems: IVector_1__IInspectable read get_SelectedItems;
    property SelectionMode_: SelectionMode read get_SelectionMode write put_SelectionMode;
    property SingleSelectionFollowsFocus: Boolean read get_SingleSelectionFollowsFocus write put_SingleSelectionFollowsFocus;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IListBoxItem
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_ListBoxItem)]
  IListBoxItem = interface(IInspectable)
  ['{CC67FB35-04F1-5EAD-96C5-B2EA67B225C6}']
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IListView
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_ListView)]
  IListView = interface(IInspectable)
  ['{F6015DB1-DF63-52FD-A164-0DF44715EE0A}']
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IListViewHeaderItem
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_ListViewHeaderItem)]
  IListViewHeaderItem = interface(IInspectable)
  ['{E94366C8-64F5-5930-A325-B23AACDBCE89}']
  end;

  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.Primitives.IListViewItemTemplateSettings
  Primitives_IListViewItemTemplateSettings = interface(IInspectable)
  ['{6E302714-2955-5961-94ED-5D0C0C1D0B07}']
    function get_DragItemsCount: Integer; safecall;
    property DragItemsCount: Integer read get_DragItemsCount;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IListViewItem
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_ListViewItem)]
  IListViewItem = interface(IInspectable)
  ['{05FE41C2-0451-5D38-9C55-5D10CFD08889}']
    function get_TemplateSettings: Primitives_IListViewItemTemplateSettings; safecall;
    property TemplateSettings: Primitives_IListViewItemTemplateSettings read get_TemplateSettings;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IMediaPlayerElement
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_MediaPlayerElement)]
  IMediaPlayerElement = interface(IInspectable)
  ['{C314A38C-780C-558A-98CD-0A8DEB467FCF}']
    function get_Source: Playback_IMediaPlaybackSource; safecall;
    procedure put_Source(value: Playback_IMediaPlaybackSource); safecall;
    function get_TransportControls: IMediaTransportControls; safecall;
    procedure put_TransportControls(value: IMediaTransportControls); safecall;
    function get_AreTransportControlsEnabled: Boolean; safecall;
    procedure put_AreTransportControlsEnabled(value: Boolean); safecall;
    function get_PosterSource: IImageSource; safecall;
    procedure put_PosterSource(value: IImageSource); safecall;
    function get_Stretch: Stretch; safecall;
    procedure put_Stretch(value: Stretch); safecall;
    function get_AutoPlay: Boolean; safecall;
    procedure put_AutoPlay(value: Boolean); safecall;
    function get_IsFullWindow: Boolean; safecall;
    procedure put_IsFullWindow(value: Boolean); safecall;
    function get_MediaPlayer: Playback_IMediaPlayer; safecall;
    procedure SetMediaPlayer(mediaPlayer: Playback_IMediaPlayer); safecall;
    property AreTransportControlsEnabled: Boolean read get_AreTransportControlsEnabled write put_AreTransportControlsEnabled;
    property AutoPlay: Boolean read get_AutoPlay write put_AutoPlay;
    property IsFullWindow: Boolean read get_IsFullWindow write put_IsFullWindow;
    property MediaPlayer: Playback_IMediaPlayer read get_MediaPlayer;
    property PosterSource: IImageSource read get_PosterSource write put_PosterSource;
    property Source: Playback_IMediaPlaybackSource read get_Source write put_Source;
    property Stretch_: Stretch read get_Stretch write put_Stretch;
    property TransportControls: IMediaTransportControls read get_TransportControls write put_TransportControls;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IMenuFlyoutItemBase
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_MenuFlyoutItemBase)]
  IMenuFlyoutItemBase = interface(IInspectable)
  ['{4BEE2715-44A1-5F94-86E8-02DDBE3DC6B9}']
  end;

  // Generic Ancestor for:
  // Windows.Foundation.Collections.IIterator`1<Microsoft.UI.Xaml.Controls.IMenuFlyoutItemBase>
  IIterator_1__IMenuFlyoutItemBase_Base = interface(IInspectable)
  ['{64DC6E15-7649-563F-9ABC-053E010BC9AF}']
    function get_Current: IMenuFlyoutItemBase; safecall;
    function get_HasCurrent: Boolean; safecall;
    function MoveNext: Boolean; safecall;
    function GetMany(itemsSize: Cardinal; items: PIMenuFlyoutItemBase): Cardinal; safecall;
    property Current: IMenuFlyoutItemBase read get_Current;
    property HasCurrent: Boolean read get_HasCurrent;
  end;
  // Windows.Foundation.Collections.IIterator`1<Microsoft.UI.Xaml.Controls.IMenuFlyoutItemBase>
  IIterator_1__IMenuFlyoutItemBase = interface(IIterator_1__IMenuFlyoutItemBase_Base)
  ['{E7E4E72A-D42B-5734-AB18-F87D1D65D2C4}']
  end;

  // Generic Ancestor for:
  // Windows.Foundation.Collections.IIterable`1<Microsoft.UI.Xaml.Controls.IMenuFlyoutItemBase>
  IIterable_1__IMenuFlyoutItemBase_Base = interface(IInspectable)
  ['{E7F6D650-84AD-5559-AD9D-692CECADDF59}']
    function First: IIterator_1__IMenuFlyoutItemBase; safecall;
  end;
  // Windows.Foundation.Collections.IIterable`1<Microsoft.UI.Xaml.Controls.IMenuFlyoutItemBase>
  IIterable_1__IMenuFlyoutItemBase = interface(IIterable_1__IMenuFlyoutItemBase_Base)
  ['{DD8408BF-913B-5F75-95FF-CB6691903E55}']
  end;

  // UsedAPI Interface
  // Windows.Foundation.Collections.IVectorView`1<Microsoft.UI.Xaml.Controls.IMenuFlyoutItemBase>
  IVectorView_1__IMenuFlyoutItemBase = interface(IInspectable)
  ['{39043E01-3514-5A68-BE60-287803DE2CD5}']
    function GetAt(index: Cardinal): IMenuFlyoutItemBase; safecall;
    function get_Size: Cardinal; safecall;
    function IndexOf(value: IMenuFlyoutItemBase; out index: Cardinal): Boolean; safecall;
    function GetMany(startIndex: Cardinal; itemsSize: Cardinal; items: PIMenuFlyoutItemBase): Cardinal; safecall;
    property Size: Cardinal read get_Size;
  end;

  // Generic Ancestor for:
  // Windows.Foundation.Collections.IVector`1<Microsoft.UI.Xaml.Controls.IMenuFlyoutItemBase>
  IVector_1__IMenuFlyoutItemBase_Base = interface(IInspectable)
  ['{EBE273F7-4731-5AC8-8513-DE764868FB9B}']
    function GetAt(index: Cardinal): IMenuFlyoutItemBase; safecall;
    function get_Size: Cardinal; safecall;
    function GetView: IVectorView_1__IMenuFlyoutItemBase; safecall;
    function IndexOf(value: IMenuFlyoutItemBase; out index: Cardinal): Boolean; safecall;
    procedure SetAt(index: Cardinal; value: IMenuFlyoutItemBase); safecall;
    procedure InsertAt(index: Cardinal; value: IMenuFlyoutItemBase); safecall;
    procedure RemoveAt(index: Cardinal); safecall;
    procedure Append(value: IMenuFlyoutItemBase); safecall;
    procedure RemoveAtEnd; safecall;
    procedure Clear; safecall;
    function GetMany(startIndex: Cardinal; itemsSize: Cardinal; items: PIMenuFlyoutItemBase): Cardinal; safecall;
    procedure ReplaceAll(itemsSize: Cardinal; items: PIMenuFlyoutItemBase); safecall;
    property Size: Cardinal read get_Size;
  end;
  // UsedAPI Interface
  // Windows.Foundation.Collections.IVector`1<Microsoft.UI.Xaml.Controls.IMenuFlyoutItemBase>
  IVector_1__IMenuFlyoutItemBase = interface(IVector_1__IMenuFlyoutItemBase_Base)
  ['{AB401ACD-E62B-552E-83FB-9D130B3577E8}']
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IMenuBarItem
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_MenuBarItem)]
  IMenuBarItem = interface(IInspectable)
  ['{A7900980-51CC-531D-97C5-356B13573398}']
    function get_Title: HSTRING; safecall;
    procedure put_Title(value: HSTRING); safecall;
    function get_Items: IVector_1__IMenuFlyoutItemBase; safecall;
    property Items: IVector_1__IMenuFlyoutItemBase read get_Items;
    property Title: HSTRING read get_Title write put_Title;
  end;

  // Generic Ancestor for:
  // Windows.Foundation.Collections.IIterator`1<Microsoft.UI.Xaml.Controls.IMenuBarItem>
  IIterator_1__IMenuBarItem_Base = interface(IInspectable)
  ['{1637D07E-B223-5F2F-A375-F094BA90970B}']
    function get_Current: IMenuBarItem; safecall;
    function get_HasCurrent: Boolean; safecall;
    function MoveNext: Boolean; safecall;
    function GetMany(itemsSize: Cardinal; items: PIMenuBarItem): Cardinal; safecall;
    property Current: IMenuBarItem read get_Current;
    property HasCurrent: Boolean read get_HasCurrent;
  end;
  // Windows.Foundation.Collections.IIterator`1<Microsoft.UI.Xaml.Controls.IMenuBarItem>
  IIterator_1__IMenuBarItem = interface(IIterator_1__IMenuBarItem_Base)
  ['{39314135-26C9-5A85-8F96-B5179F5ABCFE}']
  end;

  // Generic Ancestor for:
  // Windows.Foundation.Collections.IIterable`1<Microsoft.UI.Xaml.Controls.IMenuBarItem>
  IIterable_1__IMenuBarItem_Base = interface(IInspectable)
  ['{941F98AD-AB6E-5CAA-A776-83E42CA7A06D}']
    function First: IIterator_1__IMenuBarItem; safecall;
  end;
  // Windows.Foundation.Collections.IIterable`1<Microsoft.UI.Xaml.Controls.IMenuBarItem>
  IIterable_1__IMenuBarItem = interface(IIterable_1__IMenuBarItem_Base)
  ['{E902253E-BEE3-5A60-A1CD-0544CFCA2D4C}']
  end;

  // UsedAPI Interface
  // Windows.Foundation.Collections.IVectorView`1<Microsoft.UI.Xaml.Controls.IMenuBarItem>
  IVectorView_1__IMenuBarItem = interface(IInspectable)
  ['{DD7C2F60-62C1-5CF2-9209-6CC3003F8E67}']
    function GetAt(index: Cardinal): IMenuBarItem; safecall;
    function get_Size: Cardinal; safecall;
    function IndexOf(value: IMenuBarItem; out index: Cardinal): Boolean; safecall;
    function GetMany(startIndex: Cardinal; itemsSize: Cardinal; items: PIMenuBarItem): Cardinal; safecall;
    property Size: Cardinal read get_Size;
  end;

  // Generic Ancestor for:
  // Windows.Foundation.Collections.IVector`1<Microsoft.UI.Xaml.Controls.IMenuBarItem>
  IVector_1__IMenuBarItem_Base = interface(IInspectable)
  ['{94C4DFCF-1AF2-5621-8B99-4E5643D1B52F}']
    function GetAt(index: Cardinal): IMenuBarItem; safecall;
    function get_Size: Cardinal; safecall;
    function GetView: IVectorView_1__IMenuBarItem; safecall;
    function IndexOf(value: IMenuBarItem; out index: Cardinal): Boolean; safecall;
    procedure SetAt(index: Cardinal; value: IMenuBarItem); safecall;
    procedure InsertAt(index: Cardinal; value: IMenuBarItem); safecall;
    procedure RemoveAt(index: Cardinal); safecall;
    procedure Append(value: IMenuBarItem); safecall;
    procedure RemoveAtEnd; safecall;
    procedure Clear; safecall;
    function GetMany(startIndex: Cardinal; itemsSize: Cardinal; items: PIMenuBarItem): Cardinal; safecall;
    procedure ReplaceAll(itemsSize: Cardinal; items: PIMenuBarItem); safecall;
    property Size: Cardinal read get_Size;
  end;
  // UsedAPI Interface
  // Windows.Foundation.Collections.IVector`1<Microsoft.UI.Xaml.Controls.IMenuBarItem>
  IVector_1__IMenuBarItem = interface(IVector_1__IMenuBarItem_Base)
  ['{C1053E30-DE76-5113-BCC8-CECA2ABFE8D5}']
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IMenuBar
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_MenuBar)]
  IMenuBar = interface(IInspectable)
  ['{BA97F337-8F1E-5141-B53F-E77A8BA3EBBD}']
    function get_Items: IVector_1__IMenuBarItem; safecall;
    property Items: IVector_1__IMenuBarItem read get_Items;
  end;

  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.Primitives.IMenuFlyoutItemTemplateSettings
  Primitives_IMenuFlyoutItemTemplateSettings = interface(IInspectable)
  ['{FA7B8B1F-020D-58EC-8658-F2CE97310051}']
    function get_KeyboardAcceleratorTextMinWidth: Double; safecall;
    property KeyboardAcceleratorTextMinWidth: Double read get_KeyboardAcceleratorTextMinWidth;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IMenuFlyoutItem
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_MenuFlyoutItem)]
  IMenuFlyoutItem = interface(IInspectable)
  ['{4252DF5A-44F9-5EE8-B1CC-53DE9AAA4095}']
    function get_Text: HSTRING; safecall;
    procedure put_Text(value: HSTRING); safecall;
    function get_Command: Input_ICommand; safecall;
    procedure put_Command(value: Input_ICommand); safecall;
    function get_CommandParameter: IInspectable; safecall;
    procedure put_CommandParameter(value: IInspectable); safecall;
    function get_Icon: IIconElement; safecall;
    procedure put_Icon(value: IIconElement); safecall;
    function get_KeyboardAcceleratorTextOverride: HSTRING; safecall;
    procedure put_KeyboardAcceleratorTextOverride(value: HSTRING); safecall;
    function get_TemplateSettings: Primitives_IMenuFlyoutItemTemplateSettings; safecall;
    function add_Click(handler: RoutedEventHandler): EventRegistrationToken; safecall;
    procedure remove_Click(token: EventRegistrationToken); safecall;
    property Command: Input_ICommand read get_Command write put_Command;
    property CommandParameter: IInspectable read get_CommandParameter write put_CommandParameter;
    property Icon: IIconElement read get_Icon write put_Icon;
    property KeyboardAcceleratorTextOverride: HSTRING read get_KeyboardAcceleratorTextOverride write put_KeyboardAcceleratorTextOverride;
    property TemplateSettings: Primitives_IMenuFlyoutItemTemplateSettings read get_TemplateSettings;
    property Text: HSTRING read get_Text write put_Text;
  end;

  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.Primitives.IMenuFlyoutPresenterTemplateSettings
  Primitives_IMenuFlyoutPresenterTemplateSettings = interface(IInspectable)
  ['{2BFCFA7E-483C-5FC9-B070-FBB58E6E974D}']
    function get_FlyoutContentMinWidth: Double; safecall;
    property FlyoutContentMinWidth: Double read get_FlyoutContentMinWidth;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IMenuFlyoutPresenter
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_MenuFlyoutPresenter)]
  IMenuFlyoutPresenter = interface(IInspectable)
  ['{5C9B4644-E292-5436-86EC-1C0E29F94C2D}']
    function get_TemplateSettings: Primitives_IMenuFlyoutPresenterTemplateSettings; safecall;
    function get_IsDefaultShadowEnabled: Boolean; safecall;
    procedure put_IsDefaultShadowEnabled(value: Boolean); safecall;
    property IsDefaultShadowEnabled: Boolean read get_IsDefaultShadowEnabled write put_IsDefaultShadowEnabled;
    property TemplateSettings: Primitives_IMenuFlyoutPresenterTemplateSettings read get_TemplateSettings;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.INavigationViewItem
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_NavigationViewItem)]
  INavigationViewItem = interface(IInspectable)
  ['{3AB3D503-A37C-5836-8ADB-2882062E73A1}']
    function get_Icon: IIconElement; safecall;
    procedure put_Icon(value: IIconElement); safecall;
    function get_CompactPaneLength: Double; safecall;
    property CompactPaneLength: Double read get_CompactPaneLength;
    property Icon: IIconElement read get_Icon write put_Icon;
  end;

  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.INumberBoxValueChangedEventArgs
  INumberBoxValueChangedEventArgs = interface(IInspectable)
  ['{C66CF16E-7C8A-532E-9D23-058C1C98DD50}']
    function get_OldValue: Double; safecall;
    function get_NewValue: Double; safecall;
    property NewValue: Double read get_NewValue;
    property OldValue: Double read get_OldValue;
  end;

  // Generic Delegate for:
  // Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.Controls.INumberBox,Microsoft.UI.Xaml.Controls.INumberBoxValueChangedEventArgs>
  TypedEventHandler_2__INumberBox__INumberBoxValueChangedEventArgs_Delegate_Base = interface(IUnknown)
  ['{3AFD17AC-1AC8-5E8C-9D28-35576EAC9A94}']
    procedure Invoke(sender: INumberBox; args: INumberBoxValueChangedEventArgs); safecall;
  end;
  // UsedAPI Interface
  // Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.Controls.INumberBox,Microsoft.UI.Xaml.Controls.INumberBoxValueChangedEventArgs>
  TypedEventHandler_2__INumberBox__INumberBoxValueChangedEventArgs = interface(TypedEventHandler_2__INumberBox__INumberBoxValueChangedEventArgs_Delegate_Base)
  ['{1D59B731-1791-5925-978F-A222F358C553}']
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.INumberBox
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_NumberBox)]
  INumberBox = interface(IInspectable)
  ['{C18EB0E9-29FB-525D-ABBC-D6B2110F542E}']
    function get_Minimum: Double; safecall;
    procedure put_Minimum(value: Double); safecall;
    function get_Maximum: Double; safecall;
    procedure put_Maximum(value: Double); safecall;
    function get_Value: Double; safecall;
    procedure put_Value(value: Double); safecall;
    function get_SmallChange: Double; safecall;
    procedure put_SmallChange(value: Double); safecall;
    function get_LargeChange: Double; safecall;
    procedure put_LargeChange(value: Double); safecall;
    function get_Text: HSTRING; safecall;
    procedure put_Text(value: HSTRING); safecall;
    function get_Header: IInspectable; safecall;
    procedure put_Header(value: IInspectable); safecall;
    function get_HeaderTemplate: IDataTemplate; safecall;
    procedure put_HeaderTemplate(value: IDataTemplate); safecall;
    function get_PlaceholderText: HSTRING; safecall;
    procedure put_PlaceholderText(value: HSTRING); safecall;
    function get_SelectionFlyout: Primitives_IFlyoutBase; safecall;
    procedure put_SelectionFlyout(value: Primitives_IFlyoutBase); safecall;
    function get_SelectionHighlightColor: ISolidColorBrush; safecall;
    procedure put_SelectionHighlightColor(value: ISolidColorBrush); safecall;
    function get_TextReadingOrder: TextReadingOrder; safecall;
    procedure put_TextReadingOrder(value: TextReadingOrder); safecall;
    function get_PreventKeyboardDisplayOnProgrammaticFocus: Boolean; safecall;
    procedure put_PreventKeyboardDisplayOnProgrammaticFocus(value: Boolean); safecall;
    function get_Description: IInspectable; safecall;
    procedure put_Description(value: IInspectable); safecall;
    function get_ValidationMode: NumberBoxValidationMode; safecall;
    procedure put_ValidationMode(value: NumberBoxValidationMode); safecall;
    function get_SpinButtonPlacementMode: NumberBoxSpinButtonPlacementMode; safecall;
    procedure put_SpinButtonPlacementMode(value: NumberBoxSpinButtonPlacementMode); safecall;
    function get_IsWrapEnabled: Boolean; safecall;
    procedure put_IsWrapEnabled(value: Boolean); safecall;
    function get_AcceptsExpression: Boolean; safecall;
    procedure put_AcceptsExpression(value: Boolean); safecall;
    function get_NumberFormatter: NumberFormatting_INumberFormatter2; safecall;
    procedure put_NumberFormatter(value: NumberFormatting_INumberFormatter2); safecall;
    function add_ValueChanged(handler: TypedEventHandler_2__INumberBox__INumberBoxValueChangedEventArgs): EventRegistrationToken; safecall;
    procedure remove_ValueChanged(token: EventRegistrationToken); safecall;
    property AcceptsExpression: Boolean read get_AcceptsExpression write put_AcceptsExpression;
    property Description: IInspectable read get_Description write put_Description;
    property Header: IInspectable read get_Header write put_Header;
    property HeaderTemplate: IDataTemplate read get_HeaderTemplate write put_HeaderTemplate;
    property IsWrapEnabled: Boolean read get_IsWrapEnabled write put_IsWrapEnabled;
    property LargeChange: Double read get_LargeChange write put_LargeChange;
    property Maximum: Double read get_Maximum write put_Maximum;
    property Minimum: Double read get_Minimum write put_Minimum;
    property NumberFormatter: NumberFormatting_INumberFormatter2 read get_NumberFormatter write put_NumberFormatter;
    property PlaceholderText: HSTRING read get_PlaceholderText write put_PlaceholderText;
    property PreventKeyboardDisplayOnProgrammaticFocus: Boolean read get_PreventKeyboardDisplayOnProgrammaticFocus write put_PreventKeyboardDisplayOnProgrammaticFocus;
    property SelectionFlyout: Primitives_IFlyoutBase read get_SelectionFlyout write put_SelectionFlyout;
    property SelectionHighlightColor: ISolidColorBrush read get_SelectionHighlightColor write put_SelectionHighlightColor;
    property SmallChange: Double read get_SmallChange write put_SmallChange;
    property SpinButtonPlacementMode: NumberBoxSpinButtonPlacementMode read get_SpinButtonPlacementMode write put_SpinButtonPlacementMode;
    property Text: HSTRING read get_Text write put_Text;
    property TextReadingOrder_: TextReadingOrder read get_TextReadingOrder write put_TextReadingOrder;
    property ValidationMode: NumberBoxValidationMode read get_ValidationMode write put_ValidationMode;
    property Value: Double read get_Value write put_Value;
  end;

  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IContextMenuEventArgs
  IContextMenuEventArgs = interface(IInspectable)
  ['{65637BB3-E279-5507-BD16-6F7BA6705F31}']
    function get_Handled: Boolean; safecall;
    procedure put_Handled(value: Boolean); safecall;
    function get_CursorLeft: Double; safecall;
    function get_CursorTop: Double; safecall;
    property CursorLeft: Double read get_CursorLeft;
    property CursorTop: Double read get_CursorTop;
    property Handled: Boolean read get_Handled write put_Handled;
  end;

  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.ContextMenuOpeningEventHandler
  ContextMenuOpeningEventHandler = interface(IUnknown)
  ['{D010FF61-4067-526A-95A3-517577BC5273}']
    procedure Invoke(sender: IInspectable; e: IContextMenuEventArgs); safecall;
  end;

  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.ITextControlPasteEventArgs
  ITextControlPasteEventArgs = interface(IInspectable)
  ['{FC5E567E-3AA9-5C57-88D4-834AD3B62E9E}']
    function get_Handled: Boolean; safecall;
    procedure put_Handled(value: Boolean); safecall;
    property Handled: Boolean read get_Handled write put_Handled;
  end;

  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.TextControlPasteEventHandler
  TextControlPasteEventHandler = interface(IUnknown)
  ['{DDF3A6C0-5AB1-5D74-8289-892C0614658F}']
    procedure Invoke(sender: IInspectable; e: ITextControlPasteEventArgs); safecall;
  end;

  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IPasswordBoxPasswordChangingEventArgs
  IPasswordBoxPasswordChangingEventArgs = interface(IInspectable)
  ['{9A2F3B79-C00C-5D27-BB67-92CAB3DB0477}']
    function get_IsContentChanging: Boolean; safecall;
    property IsContentChanging: Boolean read get_IsContentChanging;
  end;

  // Generic Delegate for:
  // Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.Controls.IPasswordBox,Microsoft.UI.Xaml.Controls.IPasswordBoxPasswordChangingEventArgs>
  TypedEventHandler_2__IPasswordBox__IPasswordBoxPasswordChangingEventArgs_Delegate_Base = interface(IUnknown)
  ['{F4C4589B-AD02-52A8-A13E-A93C5D24B1FE}']
    procedure Invoke(sender: IPasswordBox; args: IPasswordBoxPasswordChangingEventArgs); safecall;
  end;
  // UsedAPI Interface
  // Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.Controls.IPasswordBox,Microsoft.UI.Xaml.Controls.IPasswordBoxPasswordChangingEventArgs>
  TypedEventHandler_2__IPasswordBox__IPasswordBoxPasswordChangingEventArgs = interface(TypedEventHandler_2__IPasswordBox__IPasswordBoxPasswordChangingEventArgs_Delegate_Base)
  ['{A12BB312-441F-57FA-A62E-833A2A6455BC}']
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IPasswordBox
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_PasswordBox)]
  IPasswordBox = interface(IInspectable)
  ['{6D3CCFF7-AAEE-5ADC-8298-33300FA119DA}']
    function get_Password: HSTRING; safecall;
    procedure put_Password(value: HSTRING); safecall;
    function get_PasswordChar: HSTRING; safecall;
    procedure put_PasswordChar(value: HSTRING); safecall;
    function get_IsPasswordRevealButtonEnabled: Boolean; safecall;
    procedure put_IsPasswordRevealButtonEnabled(value: Boolean); safecall;
    function get_MaxLength: Integer; safecall;
    procedure put_MaxLength(value: Integer); safecall;
    function get_Header: IInspectable; safecall;
    procedure put_Header(value: IInspectable); safecall;
    function get_HeaderTemplate: IDataTemplate; safecall;
    procedure put_HeaderTemplate(value: IDataTemplate); safecall;
    function get_PlaceholderText: HSTRING; safecall;
    procedure put_PlaceholderText(value: HSTRING); safecall;
    function get_SelectionHighlightColor: ISolidColorBrush; safecall;
    procedure put_SelectionHighlightColor(value: ISolidColorBrush); safecall;
    function get_PreventKeyboardDisplayOnProgrammaticFocus: Boolean; safecall;
    procedure put_PreventKeyboardDisplayOnProgrammaticFocus(value: Boolean); safecall;
    function get_PasswordRevealMode: PasswordRevealMode; safecall;
    procedure put_PasswordRevealMode(value: PasswordRevealMode); safecall;
    function get_TextReadingOrder: TextReadingOrder; safecall;
    procedure put_TextReadingOrder(value: TextReadingOrder); safecall;
    function get_InputScope: Input_IInputScope; safecall;
    procedure put_InputScope(value: Input_IInputScope); safecall;
    function get_CanPasteClipboardContent: Boolean; safecall;
    function get_SelectionFlyout: Primitives_IFlyoutBase; safecall;
    procedure put_SelectionFlyout(value: Primitives_IFlyoutBase); safecall;
    function get_Description: IInspectable; safecall;
    procedure put_Description(value: IInspectable); safecall;
    function add_PasswordChanged(handler: RoutedEventHandler): EventRegistrationToken; safecall;
    procedure remove_PasswordChanged(token: EventRegistrationToken); safecall;
    function add_ContextMenuOpening(handler: ContextMenuOpeningEventHandler): EventRegistrationToken; safecall;
    procedure remove_ContextMenuOpening(token: EventRegistrationToken); safecall;
    function add_Paste(handler: TextControlPasteEventHandler): EventRegistrationToken; safecall;
    procedure remove_Paste(token: EventRegistrationToken); safecall;
    function add_PasswordChanging(handler: TypedEventHandler_2__IPasswordBox__IPasswordBoxPasswordChangingEventArgs): EventRegistrationToken; safecall;
    procedure remove_PasswordChanging(token: EventRegistrationToken); safecall;
    procedure SelectAll; safecall;
    procedure PasteFromClipboard; safecall;
    property CanPasteClipboardContent: Boolean read get_CanPasteClipboardContent;
    property Description: IInspectable read get_Description write put_Description;
    property Header: IInspectable read get_Header write put_Header;
    property HeaderTemplate: IDataTemplate read get_HeaderTemplate write put_HeaderTemplate;
    property InputScope: Input_IInputScope read get_InputScope write put_InputScope;
    property IsPasswordRevealButtonEnabled: Boolean read get_IsPasswordRevealButtonEnabled write put_IsPasswordRevealButtonEnabled;
    property MaxLength: Integer read get_MaxLength write put_MaxLength;
    property Password: HSTRING read get_Password write put_Password;
    property PasswordChar: HSTRING read get_PasswordChar write put_PasswordChar;
    property PasswordRevealMode_: PasswordRevealMode read get_PasswordRevealMode write put_PasswordRevealMode;
    property PlaceholderText: HSTRING read get_PlaceholderText write put_PlaceholderText;
    property PreventKeyboardDisplayOnProgrammaticFocus: Boolean read get_PreventKeyboardDisplayOnProgrammaticFocus write put_PreventKeyboardDisplayOnProgrammaticFocus;
    property SelectionFlyout: Primitives_IFlyoutBase read get_SelectionFlyout write put_SelectionFlyout;
    property SelectionHighlightColor: ISolidColorBrush read get_SelectionHighlightColor write put_SelectionHighlightColor;
    property TextReadingOrder_: TextReadingOrder read get_TextReadingOrder write put_TextReadingOrder;
  end;

  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IPersonPictureTemplateSettings
  IPersonPictureTemplateSettings = interface(IInspectable)
  ['{E16DF12F-C3C0-5F26-A381-08F2DF052F29}']
    function get_ActualInitials: HSTRING; safecall;
    function get_ActualImageBrush: IImageBrush; safecall;
    property ActualImageBrush: IImageBrush read get_ActualImageBrush;
    property ActualInitials: HSTRING read get_ActualInitials;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IPersonPicture
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_PersonPicture)]
  IPersonPicture = interface(IInspectable)
  ['{30EC982C-0EFA-5538-A356-E9EBD5AA363C}']
    function get_BadgeNumber: Integer; safecall;
    procedure put_BadgeNumber(value: Integer); safecall;
    function get_BadgeGlyph: HSTRING; safecall;
    procedure put_BadgeGlyph(value: HSTRING); safecall;
    function get_BadgeImageSource: IImageSource; safecall;
    procedure put_BadgeImageSource(value: IImageSource); safecall;
    function get_BadgeText: HSTRING; safecall;
    procedure put_BadgeText(value: HSTRING); safecall;
    function get_IsGroup: Boolean; safecall;
    procedure put_IsGroup(value: Boolean); safecall;
    function get_Contact: IContact; safecall;
    procedure put_Contact(value: IContact); safecall;
    function get_DisplayName: HSTRING; safecall;
    procedure put_DisplayName(value: HSTRING); safecall;
    function get_Initials: HSTRING; safecall;
    procedure put_Initials(value: HSTRING); safecall;
    function get_PreferSmallImage: Boolean; safecall;
    procedure put_PreferSmallImage(value: Boolean); safecall;
    function get_ProfilePicture: IImageSource; safecall;
    procedure put_ProfilePicture(value: IImageSource); safecall;
    function get_TemplateSettings: IPersonPictureTemplateSettings; safecall;
    property BadgeGlyph: HSTRING read get_BadgeGlyph write put_BadgeGlyph;
    property BadgeImageSource: IImageSource read get_BadgeImageSource write put_BadgeImageSource;
    property BadgeNumber: Integer read get_BadgeNumber write put_BadgeNumber;
    property BadgeText: HSTRING read get_BadgeText write put_BadgeText;
    property Contact: IContact read get_Contact write put_Contact;
    property DisplayName: HSTRING read get_DisplayName write put_DisplayName;
    property Initials: HSTRING read get_Initials write put_Initials;
    property IsGroup: Boolean read get_IsGroup write put_IsGroup;
    property PreferSmallImage: Boolean read get_PreferSmallImage write put_PreferSmallImage;
    property ProfilePicture: IImageSource read get_ProfilePicture write put_ProfilePicture;
    property TemplateSettings: IPersonPictureTemplateSettings read get_TemplateSettings;
  end;

  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IPipsPagerSelectedIndexChangedEventArgs
  IPipsPagerSelectedIndexChangedEventArgs = interface(IInspectable)
  ['{6C2CE4FC-BF52-5CA6-9DA4-B0BD5B928D97}']
  end;

  // Generic Delegate for:
  // Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.Controls.IPipsPager,Microsoft.UI.Xaml.Controls.IPipsPagerSelectedIndexChangedEventArgs>
  TypedEventHandler_2__IPipsPager__IPipsPagerSelectedIndexChangedEventArgs_Delegate_Base = interface(IUnknown)
  ['{F33917AD-6D13-5F8F-B839-89CB495BA2BE}']
    procedure Invoke(sender: IPipsPager; args: IPipsPagerSelectedIndexChangedEventArgs); safecall;
  end;
  // UsedAPI Interface
  // Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.Controls.IPipsPager,Microsoft.UI.Xaml.Controls.IPipsPagerSelectedIndexChangedEventArgs>
  TypedEventHandler_2__IPipsPager__IPipsPagerSelectedIndexChangedEventArgs = interface(TypedEventHandler_2__IPipsPager__IPipsPagerSelectedIndexChangedEventArgs_Delegate_Base)
  ['{334B141C-B954-5C99-AEED-83F03597E65F}']
  end;

  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IPipsPagerTemplateSettings
  IPipsPagerTemplateSettings = interface(IInspectable)
  ['{9D8C1252-56C5-57AF-9A3A-08E9B947E5FA}']
    function get_PipsPagerItems: IVector_1__Integer; safecall;
    property PipsPagerItems: IVector_1__Integer read get_PipsPagerItems;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IPipsPager
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_PipsPager)]
  IPipsPager = interface(IInspectable)
  ['{DE7FC5D5-9446-5693-BBF3-FD7F943A567C}']
    function get_NumberOfPages: Integer; safecall;
    procedure put_NumberOfPages(value: Integer); safecall;
    function get_SelectedPageIndex: Integer; safecall;
    procedure put_SelectedPageIndex(value: Integer); safecall;
    function get_MaxVisiblePips: Integer; safecall;
    procedure put_MaxVisiblePips(value: Integer); safecall;
    function get_Orientation: Orientation; safecall;
    procedure put_Orientation(value: Orientation); safecall;
    function get_PreviousButtonVisibility: PipsPagerButtonVisibility; safecall;
    procedure put_PreviousButtonVisibility(value: PipsPagerButtonVisibility); safecall;
    function get_NextButtonVisibility: PipsPagerButtonVisibility; safecall;
    procedure put_NextButtonVisibility(value: PipsPagerButtonVisibility); safecall;
    function get_PreviousButtonStyle: IStyle; safecall;
    procedure put_PreviousButtonStyle(value: IStyle); safecall;
    function get_NextButtonStyle: IStyle; safecall;
    procedure put_NextButtonStyle(value: IStyle); safecall;
    function get_SelectedPipStyle: IStyle; safecall;
    procedure put_SelectedPipStyle(value: IStyle); safecall;
    function get_NormalPipStyle: IStyle; safecall;
    procedure put_NormalPipStyle(value: IStyle); safecall;
    function add_SelectedIndexChanged(handler: TypedEventHandler_2__IPipsPager__IPipsPagerSelectedIndexChangedEventArgs): EventRegistrationToken; safecall;
    procedure remove_SelectedIndexChanged(token: EventRegistrationToken); safecall;
    function get_TemplateSettings: IPipsPagerTemplateSettings; safecall;
    property MaxVisiblePips: Integer read get_MaxVisiblePips write put_MaxVisiblePips;
    property NextButtonStyle: IStyle read get_NextButtonStyle write put_NextButtonStyle;
    property NextButtonVisibility: PipsPagerButtonVisibility read get_NextButtonVisibility write put_NextButtonVisibility;
    property NormalPipStyle: IStyle read get_NormalPipStyle write put_NormalPipStyle;
    property NumberOfPages: Integer read get_NumberOfPages write put_NumberOfPages;
    property Orientation_: Orientation read get_Orientation write put_Orientation;
    property PreviousButtonStyle: IStyle read get_PreviousButtonStyle write put_PreviousButtonStyle;
    property PreviousButtonVisibility: PipsPagerButtonVisibility read get_PreviousButtonVisibility write put_PreviousButtonVisibility;
    property SelectedPageIndex: Integer read get_SelectedPageIndex write put_SelectedPageIndex;
    property SelectedPipStyle: IStyle read get_SelectedPipStyle write put_SelectedPipStyle;
    property TemplateSettings: IPipsPagerTemplateSettings read get_TemplateSettings;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IPivotItem
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_PivotItem)]
  IPivotItem = interface(IInspectable)
  ['{8108C195-63F5-5DF9-ABCF-418FA2DBFBEC}']
    function get_Header: IInspectable; safecall;
    procedure put_Header(value: IInspectable); safecall;
    property Header: IInspectable read get_Header write put_Header;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IPivotItemEventArgs
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_PivotItemEventArgs)]
  IPivotItemEventArgs = interface(IInspectable)
  ['{E42C62C2-0CB9-5E5B-8148-8D80A3838DE9}']
    function get_Item: IPivotItem; safecall;
    procedure put_Item(value: IPivotItem); safecall;
    property Item: IPivotItem read get_Item write put_Item;
  end;

  // Generic Delegate for:
  // Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.Controls.IPivot,Microsoft.UI.Xaml.Controls.IPivotItemEventArgs>
  TypedEventHandler_2__IPivot__IPivotItemEventArgs_Delegate_Base = interface(IUnknown)
  ['{AE30C846-78D7-59A2-AA29-B433F35EED0B}']
    procedure Invoke(sender: IPivot; args: IPivotItemEventArgs); safecall;
  end;
  // UsedAPI Interface
  // Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.Controls.IPivot,Microsoft.UI.Xaml.Controls.IPivotItemEventArgs>
  TypedEventHandler_2__IPivot__IPivotItemEventArgs = interface(TypedEventHandler_2__IPivot__IPivotItemEventArgs_Delegate_Base)
  ['{6EB9C3FA-C0B9-5467-8E37-373560EA8B1F}']
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IPivot
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_Pivot)]
  IPivot = interface(IInspectable)
  ['{1C6438E5-ECAC-5FB6-8E8E-00DE7E922303}']
    function get_Title: IInspectable; safecall;
    procedure put_Title(value: IInspectable); safecall;
    function get_TitleTemplate: IDataTemplate; safecall;
    procedure put_TitleTemplate(value: IDataTemplate); safecall;
    function get_LeftHeader: IInspectable; safecall;
    procedure put_LeftHeader(value: IInspectable); safecall;
    function get_LeftHeaderTemplate: IDataTemplate; safecall;
    procedure put_LeftHeaderTemplate(value: IDataTemplate); safecall;
    function get_RightHeader: IInspectable; safecall;
    procedure put_RightHeader(value: IInspectable); safecall;
    function get_RightHeaderTemplate: IDataTemplate; safecall;
    procedure put_RightHeaderTemplate(value: IDataTemplate); safecall;
    function get_HeaderTemplate: IDataTemplate; safecall;
    procedure put_HeaderTemplate(value: IDataTemplate); safecall;
    function get_SelectedIndex: Integer; safecall;
    procedure put_SelectedIndex(value: Integer); safecall;
    function get_SelectedItem: IInspectable; safecall;
    procedure put_SelectedItem(value: IInspectable); safecall;
    function get_IsLocked: Boolean; safecall;
    procedure put_IsLocked(value: Boolean); safecall;
    function get_HeaderFocusVisualPlacement: PivotHeaderFocusVisualPlacement; safecall;
    procedure put_HeaderFocusVisualPlacement(value: PivotHeaderFocusVisualPlacement); safecall;
    function get_IsHeaderItemsCarouselEnabled: Boolean; safecall;
    procedure put_IsHeaderItemsCarouselEnabled(value: Boolean); safecall;
    function add_SelectionChanged(handler: SelectionChangedEventHandler): EventRegistrationToken; safecall;
    procedure remove_SelectionChanged(token: EventRegistrationToken); safecall;
    function add_PivotItemLoading(handler: TypedEventHandler_2__IPivot__IPivotItemEventArgs): EventRegistrationToken; safecall;
    procedure remove_PivotItemLoading(token: EventRegistrationToken); safecall;
    function add_PivotItemLoaded(handler: TypedEventHandler_2__IPivot__IPivotItemEventArgs): EventRegistrationToken; safecall;
    procedure remove_PivotItemLoaded(token: EventRegistrationToken); safecall;
    function add_PivotItemUnloading(handler: TypedEventHandler_2__IPivot__IPivotItemEventArgs): EventRegistrationToken; safecall;
    procedure remove_PivotItemUnloading(token: EventRegistrationToken); safecall;
    function add_PivotItemUnloaded(handler: TypedEventHandler_2__IPivot__IPivotItemEventArgs): EventRegistrationToken; safecall;
    procedure remove_PivotItemUnloaded(token: EventRegistrationToken); safecall;
    property HeaderFocusVisualPlacement: PivotHeaderFocusVisualPlacement read get_HeaderFocusVisualPlacement write put_HeaderFocusVisualPlacement;
    property HeaderTemplate: IDataTemplate read get_HeaderTemplate write put_HeaderTemplate;
    property IsHeaderItemsCarouselEnabled: Boolean read get_IsHeaderItemsCarouselEnabled write put_IsHeaderItemsCarouselEnabled;
    property IsLocked: Boolean read get_IsLocked write put_IsLocked;
    property LeftHeader: IInspectable read get_LeftHeader write put_LeftHeader;
    property LeftHeaderTemplate: IDataTemplate read get_LeftHeaderTemplate write put_LeftHeaderTemplate;
    property RightHeader: IInspectable read get_RightHeader write put_RightHeader;
    property RightHeaderTemplate: IDataTemplate read get_RightHeaderTemplate write put_RightHeaderTemplate;
    property SelectedIndex: Integer read get_SelectedIndex write put_SelectedIndex;
    property SelectedItem: IInspectable read get_SelectedItem write put_SelectedItem;
    property Title: IInspectable read get_Title write put_Title;
    property TitleTemplate: IDataTemplate read get_TitleTemplate write put_TitleTemplate;
  end;

  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IProgressBarTemplateSettings
  IProgressBarTemplateSettings = interface(IInspectable)
  ['{FBEA95C9-9EF9-5E79-AF54-44DED28035D5}']
    function get_ContainerAnimationStartPosition: Double; safecall;
    function get_ContainerAnimationEndPosition: Double; safecall;
    function get_Container2AnimationStartPosition: Double; safecall;
    function get_Container2AnimationEndPosition: Double; safecall;
    function get_ContainerAnimationMidPosition: Double; safecall;
    function get_IndicatorLengthDelta: Double; safecall;
    function get_ClipRect: IRectangleGeometry; safecall;
    function get_EllipseAnimationEndPosition: Double; safecall;
    function get_EllipseAnimationWellPosition: Double; safecall;
    function get_EllipseDiameter: Double; safecall;
    function get_EllipseOffset: Double; safecall;
    property ClipRect: IRectangleGeometry read get_ClipRect;
    property Container2AnimationEndPosition: Double read get_Container2AnimationEndPosition;
    property Container2AnimationStartPosition: Double read get_Container2AnimationStartPosition;
    property ContainerAnimationEndPosition: Double read get_ContainerAnimationEndPosition;
    property ContainerAnimationMidPosition: Double read get_ContainerAnimationMidPosition;
    property ContainerAnimationStartPosition: Double read get_ContainerAnimationStartPosition;
    property EllipseAnimationEndPosition: Double read get_EllipseAnimationEndPosition;
    property EllipseAnimationWellPosition: Double read get_EllipseAnimationWellPosition;
    property EllipseDiameter: Double read get_EllipseDiameter;
    property EllipseOffset: Double read get_EllipseOffset;
    property IndicatorLengthDelta: Double read get_IndicatorLengthDelta;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IProgressBar
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_ProgressBar)]
  IProgressBar = interface(IInspectable)
  ['{87555C8C-0AAF-52C1-8390-0DB17F40438E}']
    function get_IsIndeterminate: Boolean; safecall;
    procedure put_IsIndeterminate(value: Boolean); safecall;
    function get_ShowError: Boolean; safecall;
    procedure put_ShowError(value: Boolean); safecall;
    function get_ShowPaused: Boolean; safecall;
    procedure put_ShowPaused(value: Boolean); safecall;
    function get_TemplateSettings: IProgressBarTemplateSettings; safecall;
    property IsIndeterminate: Boolean read get_IsIndeterminate write put_IsIndeterminate;
    property ShowError: Boolean read get_ShowError write put_ShowError;
    property ShowPaused: Boolean read get_ShowPaused write put_ShowPaused;
    property TemplateSettings: IProgressBarTemplateSettings read get_TemplateSettings;
  end;

  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IProgressRingTemplateSettings
  IProgressRingTemplateSettings = interface(IInspectable)
  ['{34020D86-E1C1-5D7C-B223-ACD7F862FFD5}']
    function get_EllipseDiameter: Double; safecall;
    function get_EllipseOffset: Thickness; safecall;
    function get_MaxSideLength: Double; safecall;
    property EllipseDiameter: Double read get_EllipseDiameter;
    property EllipseOffset: Thickness read get_EllipseOffset;
    property MaxSideLength: Double read get_MaxSideLength;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IProgressRing
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_ProgressRing)]
  IProgressRing = interface(IInspectable)
  ['{2670D03F-E28C-5652-BEE2-B5212EBDF7FF}']
    function get_IsActive: Boolean; safecall;
    procedure put_IsActive(value: Boolean); safecall;
    function get_IsIndeterminate: Boolean; safecall;
    procedure put_IsIndeterminate(value: Boolean); safecall;
    function get_TemplateSettings: IProgressRingTemplateSettings; safecall;
    function get_Value: Double; safecall;
    procedure put_Value(value: Double); safecall;
    function get_Minimum: Double; safecall;
    procedure put_Minimum(value: Double); safecall;
    function get_Maximum: Double; safecall;
    procedure put_Maximum(value: Double); safecall;
    property IsActive: Boolean read get_IsActive write put_IsActive;
    property IsIndeterminate: Boolean read get_IsIndeterminate write put_IsIndeterminate;
    property Maximum: Double read get_Maximum write put_Maximum;
    property Minimum: Double read get_Minimum write put_Minimum;
    property TemplateSettings: IProgressRingTemplateSettings read get_TemplateSettings;
    property Value: Double read get_Value write put_Value;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IRadioButton
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_RadioButton)]
  IRadioButton = interface(IInspectable)
  ['{38F30CEE-E75A-5BA1-AE64-4474A3ABEAC7}']
    function get_GroupName: HSTRING; safecall;
    procedure put_GroupName(value: HSTRING); safecall;
    property GroupName: HSTRING read get_GroupName write put_GroupName;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IRadioButtons
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_RadioButtons)]
  IRadioButtons = interface(IInspectable)
  ['{966DAF80-EE85-5D90-B6B3-80BEC9134673}']
    function get_ItemsSource: IInspectable; safecall;
    procedure put_ItemsSource(value: IInspectable); safecall;
    function get_Items: IVector_1__IInspectable; safecall;
    function get_ItemTemplate: IInspectable; safecall;
    procedure put_ItemTemplate(value: IInspectable); safecall;
    function ContainerFromIndex(index: Integer): IUIElement; safecall;
    function get_SelectedIndex: Integer; safecall;
    procedure put_SelectedIndex(value: Integer); safecall;
    function get_SelectedItem: IInspectable; safecall;
    procedure put_SelectedItem(value: IInspectable); safecall;
    function add_SelectionChanged(handler: SelectionChangedEventHandler): EventRegistrationToken; safecall;
    procedure remove_SelectionChanged(token: EventRegistrationToken); safecall;
    function get_MaxColumns: Integer; safecall;
    procedure put_MaxColumns(value: Integer); safecall;
    function get_Header: IInspectable; safecall;
    procedure put_Header(value: IInspectable); safecall;
    function get_HeaderTemplate: IDataTemplate; safecall;
    procedure put_HeaderTemplate(value: IDataTemplate); safecall;
    property Header: IInspectable read get_Header write put_Header;
    property HeaderTemplate: IDataTemplate read get_HeaderTemplate write put_HeaderTemplate;
    property ItemTemplate: IInspectable read get_ItemTemplate write put_ItemTemplate;
    property Items: IVector_1__IInspectable read get_Items;
    property ItemsSource: IInspectable read get_ItemsSource write put_ItemsSource;
    property MaxColumns: Integer read get_MaxColumns write put_MaxColumns;
    property SelectedIndex: Integer read get_SelectedIndex write put_SelectedIndex;
    property SelectedItem: IInspectable read get_SelectedItem write put_SelectedItem;
  end;

  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.Primitives.IRangeBaseValueChangedEventArgs
  Primitives_IRangeBaseValueChangedEventArgs = interface(IInspectable)
  ['{B0181692-9578-51C7-9D1C-ADFCF8945AA9}']
    function get_OldValue: Double; safecall;
    function get_NewValue: Double; safecall;
    property NewValue: Double read get_NewValue;
    property OldValue: Double read get_OldValue;
  end;

  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.Primitives.RangeBaseValueChangedEventHandler
  Primitives_RangeBaseValueChangedEventHandler = interface(IUnknown)
  ['{23F0E209-9455-54CB-B8BC-0B49553C7DCC}']
    procedure Invoke(sender: IInspectable; e: Primitives_IRangeBaseValueChangedEventArgs); safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.Primitives.IRangeBase
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_Primitives_RangeBase)]
  Primitives_IRangeBase = interface(IInspectable)
  ['{540D6D61-8FAC-5D5C-B5B0-E172A7DDE103}']
    function get_Minimum: Double; safecall;
    procedure put_Minimum(value: Double); safecall;
    function get_Maximum: Double; safecall;
    procedure put_Maximum(value: Double); safecall;
    function get_SmallChange: Double; safecall;
    procedure put_SmallChange(value: Double); safecall;
    function get_LargeChange: Double; safecall;
    procedure put_LargeChange(value: Double); safecall;
    function get_Value: Double; safecall;
    procedure put_Value(value: Double); safecall;
    function add_ValueChanged(handler: Primitives_RangeBaseValueChangedEventHandler): EventRegistrationToken; safecall;
    procedure remove_ValueChanged(token: EventRegistrationToken); safecall;
    property LargeChange: Double read get_LargeChange write put_LargeChange;
    property Maximum: Double read get_Maximum write put_Maximum;
    property Minimum: Double read get_Minimum write put_Minimum;
    property SmallChange: Double read get_SmallChange write put_SmallChange;
    property Value: Double read get_Value write put_Value;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.Primitives.IRepeatButton
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_Primitives_RepeatButton)]
  Primitives_IRepeatButton = interface(IInspectable)
  ['{97F4C728-4A94-56B5-91E4-E7C6F6A1251A}']
    function get_Delay: Integer; safecall;
    procedure put_Delay(value: Integer); safecall;
    function get_Interval: Integer; safecall;
    procedure put_Interval(value: Integer); safecall;
    property Delay: Integer read get_Delay write put_Delay;
    property Interval: Integer read get_Interval write put_Interval;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IItemsSourceView
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_ItemsSourceView)]
  IItemsSourceView = interface(IInspectable)
  ['{F7F802DE-E79C-5C5F-ABF8-CCBD486B89D6}']
    function get_Count: Integer; safecall;
    function GetAt(index: Integer): IInspectable; safecall;
    function get_HasKeyIndexMapping: Boolean; safecall;
    function KeyFromIndex(index: Integer): HSTRING; safecall;
    function IndexFromKey(key: HSTRING): Integer; safecall;
    function IndexOf(item: IInspectable): Integer; safecall;
    property Count: Integer read get_Count;
    property HasKeyIndexMapping: Boolean read get_HasKeyIndexMapping;
  end;

  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IItemsRepeaterElementPreparedEventArgs
  IItemsRepeaterElementPreparedEventArgs = interface(IInspectable)
  ['{612DB572-C2E7-58FC-948A-B7DC0E1FC13A}']
    function get_Element: IUIElement; safecall;
    function get_Index: Integer; safecall;
    property Element: IUIElement read get_Element;
    property Index: Integer read get_Index;
  end;

  // Generic Delegate for:
  // Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.Controls.IItemsRepeater,Microsoft.UI.Xaml.Controls.IItemsRepeaterElementPreparedEventArgs>
  TypedEventHandler_2__IItemsRepeater__IItemsRepeaterElementPreparedEventArgs_Delegate_Base = interface(IUnknown)
  ['{C2B914EE-CBE0-59F4-841F-EBA2DC7C67CD}']
    procedure Invoke(sender: IItemsRepeater; args: IItemsRepeaterElementPreparedEventArgs); safecall;
  end;
  // UsedAPI Interface
  // Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.Controls.IItemsRepeater,Microsoft.UI.Xaml.Controls.IItemsRepeaterElementPreparedEventArgs>
  TypedEventHandler_2__IItemsRepeater__IItemsRepeaterElementPreparedEventArgs = interface(TypedEventHandler_2__IItemsRepeater__IItemsRepeaterElementPreparedEventArgs_Delegate_Base)
  ['{64CABD33-D465-53B3-97C8-2A226912A18B}']
  end;

  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IItemsRepeaterElementClearingEventArgs
  IItemsRepeaterElementClearingEventArgs = interface(IInspectable)
  ['{8F394A59-07C6-54CE-80D1-BB0B71DAEFA0}']
    function get_Element: IUIElement; safecall;
    property Element: IUIElement read get_Element;
  end;

  // Generic Delegate for:
  // Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.Controls.IItemsRepeater,Microsoft.UI.Xaml.Controls.IItemsRepeaterElementClearingEventArgs>
  TypedEventHandler_2__IItemsRepeater__IItemsRepeaterElementClearingEventArgs_Delegate_Base = interface(IUnknown)
  ['{2BDFF000-0D97-5331-AE3F-B3700601D87D}']
    procedure Invoke(sender: IItemsRepeater; args: IItemsRepeaterElementClearingEventArgs); safecall;
  end;
  // UsedAPI Interface
  // Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.Controls.IItemsRepeater,Microsoft.UI.Xaml.Controls.IItemsRepeaterElementClearingEventArgs>
  TypedEventHandler_2__IItemsRepeater__IItemsRepeaterElementClearingEventArgs = interface(TypedEventHandler_2__IItemsRepeater__IItemsRepeaterElementClearingEventArgs_Delegate_Base)
  ['{736EC84C-3CAE-5D30-8AA0-A54A975E9911}']
  end;

  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IItemsRepeaterElementIndexChangedEventArgs
  IItemsRepeaterElementIndexChangedEventArgs = interface(IInspectable)
  ['{38E3D613-48FB-5906-BF18-F7130301FCC3}']
    function get_Element: IUIElement; safecall;
    function get_OldIndex: Integer; safecall;
    function get_NewIndex: Integer; safecall;
    property Element: IUIElement read get_Element;
    property NewIndex: Integer read get_NewIndex;
    property OldIndex: Integer read get_OldIndex;
  end;

  // Generic Delegate for:
  // Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.Controls.IItemsRepeater,Microsoft.UI.Xaml.Controls.IItemsRepeaterElementIndexChangedEventArgs>
  TypedEventHandler_2__IItemsRepeater__IItemsRepeaterElementIndexChangedEventArgs_Delegate_Base = interface(IUnknown)
  ['{46069E49-7948-5A91-906D-AEF022FE5C50}']
    procedure Invoke(sender: IItemsRepeater; args: IItemsRepeaterElementIndexChangedEventArgs); safecall;
  end;
  // UsedAPI Interface
  // Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.Controls.IItemsRepeater,Microsoft.UI.Xaml.Controls.IItemsRepeaterElementIndexChangedEventArgs>
  TypedEventHandler_2__IItemsRepeater__IItemsRepeaterElementIndexChangedEventArgs = interface(TypedEventHandler_2__IItemsRepeater__IItemsRepeaterElementIndexChangedEventArgs_Delegate_Base)
  ['{3F707F26-1554-5148-BDB3-3D21C9F1C291}']
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IItemsRepeater
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_ItemsRepeater)]
  IItemsRepeater = interface(IInspectable)
  ['{9DABAC84-FE81-53D1-A041-7A3BEFEA505F}']
    function get_ItemsSource: IInspectable; safecall;
    procedure put_ItemsSource(value: IInspectable); safecall;
    function get_ItemsSourceView: IItemsSourceView; safecall;
    function get_ItemTemplate: IInspectable; safecall;
    procedure put_ItemTemplate(value: IInspectable); safecall;
    function get_Layout: ILayout; safecall;
    procedure put_Layout(value: ILayout); safecall;
    function get_HorizontalCacheLength: Double; safecall;
    procedure put_HorizontalCacheLength(value: Double); safecall;
    function get_VerticalCacheLength: Double; safecall;
    procedure put_VerticalCacheLength(value: Double); safecall;
    function get_Background: IBrush; safecall;
    procedure put_Background(value: IBrush); safecall;
    function GetElementIndex(element: IUIElement): Integer; safecall;
    function TryGetElement(index: Integer): IUIElement; safecall;
    function GetOrCreateElement(index: Integer): IUIElement; safecall;
    function add_ElementPrepared(handler: TypedEventHandler_2__IItemsRepeater__IItemsRepeaterElementPreparedEventArgs): EventRegistrationToken; safecall;
    procedure remove_ElementPrepared(token: EventRegistrationToken); safecall;
    function add_ElementClearing(handler: TypedEventHandler_2__IItemsRepeater__IItemsRepeaterElementClearingEventArgs): EventRegistrationToken; safecall;
    procedure remove_ElementClearing(token: EventRegistrationToken); safecall;
    function add_ElementIndexChanged(handler: TypedEventHandler_2__IItemsRepeater__IItemsRepeaterElementIndexChangedEventArgs): EventRegistrationToken; safecall;
    procedure remove_ElementIndexChanged(token: EventRegistrationToken); safecall;
    property Background: IBrush read get_Background write put_Background;
    property HorizontalCacheLength: Double read get_HorizontalCacheLength write put_HorizontalCacheLength;
    property ItemTemplate: IInspectable read get_ItemTemplate write put_ItemTemplate;
    property ItemsSource: IInspectable read get_ItemsSource write put_ItemsSource;
    property ItemsSourceView: IItemsSourceView read get_ItemsSourceView;
    property Layout: ILayout read get_Layout write put_Layout;
    property VerticalCacheLength: Double read get_VerticalCacheLength write put_VerticalCacheLength;
  end;

  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.ITextCompositionStartedEventArgs
  ITextCompositionStartedEventArgs = interface(IInspectable)
  ['{A604FF71-5D44-5859-8D71-72030ED78BC8}']
    function get_StartIndex: Integer; safecall;
    function get_Length: Integer; safecall;
    property Length: Integer read get_Length;
    property StartIndex: Integer read get_StartIndex;
  end;

  // Generic Delegate for:
  // Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.Controls.IRichEditBox,Microsoft.UI.Xaml.Controls.ITextCompositionStartedEventArgs>
  TypedEventHandler_2__IRichEditBox__ITextCompositionStartedEventArgs_Delegate_Base = interface(IUnknown)
  ['{26EB5376-EDA7-52E4-8BDF-34823E0D7728}']
    procedure Invoke(sender: IRichEditBox; args: ITextCompositionStartedEventArgs); safecall;
  end;
  // UsedAPI Interface
  // Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.Controls.IRichEditBox,Microsoft.UI.Xaml.Controls.ITextCompositionStartedEventArgs>
  TypedEventHandler_2__IRichEditBox__ITextCompositionStartedEventArgs = interface(TypedEventHandler_2__IRichEditBox__ITextCompositionStartedEventArgs_Delegate_Base)
  ['{06931C04-7F62-57CE-BCDD-69D04D4EC58F}']
  end;

  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.ITextCompositionChangedEventArgs
  ITextCompositionChangedEventArgs = interface(IInspectable)
  ['{04F420D2-BA9C-5F59-B8AC-0D8AA50A9240}']
    function get_StartIndex: Integer; safecall;
    function get_Length: Integer; safecall;
    property Length: Integer read get_Length;
    property StartIndex: Integer read get_StartIndex;
  end;

  // Generic Delegate for:
  // Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.Controls.IRichEditBox,Microsoft.UI.Xaml.Controls.ITextCompositionChangedEventArgs>
  TypedEventHandler_2__IRichEditBox__ITextCompositionChangedEventArgs_Delegate_Base = interface(IUnknown)
  ['{B7450DE6-4A02-5473-86B6-D5F7F3A3D97B}']
    procedure Invoke(sender: IRichEditBox; args: ITextCompositionChangedEventArgs); safecall;
  end;
  // UsedAPI Interface
  // Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.Controls.IRichEditBox,Microsoft.UI.Xaml.Controls.ITextCompositionChangedEventArgs>
  TypedEventHandler_2__IRichEditBox__ITextCompositionChangedEventArgs = interface(TypedEventHandler_2__IRichEditBox__ITextCompositionChangedEventArgs_Delegate_Base)
  ['{F50B5B90-CE35-5847-8E3C-EDDB62F359E3}']
  end;

  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.ITextCompositionEndedEventArgs
  ITextCompositionEndedEventArgs = interface(IInspectable)
  ['{19D0A5C5-8D0F-5118-8C30-E709326F1283}']
    function get_StartIndex: Integer; safecall;
    function get_Length: Integer; safecall;
    property Length: Integer read get_Length;
    property StartIndex: Integer read get_StartIndex;
  end;

  // Generic Delegate for:
  // Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.Controls.IRichEditBox,Microsoft.UI.Xaml.Controls.ITextCompositionEndedEventArgs>
  TypedEventHandler_2__IRichEditBox__ITextCompositionEndedEventArgs_Delegate_Base = interface(IUnknown)
  ['{BC259913-43F6-5B60-96ED-D5F4E4C21B3D}']
    procedure Invoke(sender: IRichEditBox; args: ITextCompositionEndedEventArgs); safecall;
  end;
  // UsedAPI Interface
  // Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.Controls.IRichEditBox,Microsoft.UI.Xaml.Controls.ITextCompositionEndedEventArgs>
  TypedEventHandler_2__IRichEditBox__ITextCompositionEndedEventArgs = interface(TypedEventHandler_2__IRichEditBox__ITextCompositionEndedEventArgs_Delegate_Base)
  ['{669E7F42-83F2-5429-AB66-A091BB314EC4}']
  end;

  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.ITextControlCopyingToClipboardEventArgs
  ITextControlCopyingToClipboardEventArgs = interface(IInspectable)
  ['{1DAAC6D5-8DB5-5D9F-9382-1E644F9AA437}']
    function get_Handled: Boolean; safecall;
    procedure put_Handled(value: Boolean); safecall;
    property Handled: Boolean read get_Handled write put_Handled;
  end;

  // Generic Delegate for:
  // Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.Controls.IRichEditBox,Microsoft.UI.Xaml.Controls.ITextControlCopyingToClipboardEventArgs>
  TypedEventHandler_2__IRichEditBox__ITextControlCopyingToClipboardEventArgs_Delegate_Base = interface(IUnknown)
  ['{F5ED0F43-B73D-57D3-9097-BD19FD0FBB0E}']
    procedure Invoke(sender: IRichEditBox; args: ITextControlCopyingToClipboardEventArgs); safecall;
  end;
  // UsedAPI Interface
  // Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.Controls.IRichEditBox,Microsoft.UI.Xaml.Controls.ITextControlCopyingToClipboardEventArgs>
  TypedEventHandler_2__IRichEditBox__ITextControlCopyingToClipboardEventArgs = interface(TypedEventHandler_2__IRichEditBox__ITextControlCopyingToClipboardEventArgs_Delegate_Base)
  ['{DBDDA8F6-5394-5C69-9420-58B8AD4A083F}']
  end;

  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.ITextControlCuttingToClipboardEventArgs
  ITextControlCuttingToClipboardEventArgs = interface(IInspectable)
  ['{9D73671F-EA30-555D-8129-5A96AEC73A14}']
    function get_Handled: Boolean; safecall;
    procedure put_Handled(value: Boolean); safecall;
    property Handled: Boolean read get_Handled write put_Handled;
  end;

  // Generic Delegate for:
  // Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.Controls.IRichEditBox,Microsoft.UI.Xaml.Controls.ITextControlCuttingToClipboardEventArgs>
  TypedEventHandler_2__IRichEditBox__ITextControlCuttingToClipboardEventArgs_Delegate_Base = interface(IUnknown)
  ['{A3A213D9-1939-58E8-9FAE-E48517853D5F}']
    procedure Invoke(sender: IRichEditBox; args: ITextControlCuttingToClipboardEventArgs); safecall;
  end;
  // UsedAPI Interface
  // Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.Controls.IRichEditBox,Microsoft.UI.Xaml.Controls.ITextControlCuttingToClipboardEventArgs>
  TypedEventHandler_2__IRichEditBox__ITextControlCuttingToClipboardEventArgs = interface(TypedEventHandler_2__IRichEditBox__ITextControlCuttingToClipboardEventArgs_Delegate_Base)
  ['{2E0F5A7A-6CAE-5B4B-AB35-603C2AFD6D9B}']
  end;

  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IRichEditBoxSelectionChangingEventArgs
  IRichEditBoxSelectionChangingEventArgs = interface(IInspectable)
  ['{5DBADBE1-0515-5045-9A6F-6859237301AC}']
    function get_SelectionStart: Integer; safecall;
    function get_SelectionLength: Integer; safecall;
    function get_Cancel: Boolean; safecall;
    procedure put_Cancel(value: Boolean); safecall;
    property Cancel: Boolean read get_Cancel write put_Cancel;
    property SelectionLength: Integer read get_SelectionLength;
    property SelectionStart: Integer read get_SelectionStart;
  end;

  // Generic Delegate for:
  // Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.Controls.IRichEditBox,Microsoft.UI.Xaml.Controls.IRichEditBoxSelectionChangingEventArgs>
  TypedEventHandler_2__IRichEditBox__IRichEditBoxSelectionChangingEventArgs_Delegate_Base = interface(IUnknown)
  ['{A6F49D3D-74B8-5BEB-8847-E26069CC11D7}']
    procedure Invoke(sender: IRichEditBox; args: IRichEditBoxSelectionChangingEventArgs); safecall;
  end;
  // UsedAPI Interface
  // Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.Controls.IRichEditBox,Microsoft.UI.Xaml.Controls.IRichEditBoxSelectionChangingEventArgs>
  TypedEventHandler_2__IRichEditBox__IRichEditBoxSelectionChangingEventArgs = interface(TypedEventHandler_2__IRichEditBox__IRichEditBoxSelectionChangingEventArgs_Delegate_Base)
  ['{6C14D801-BBCC-5EEA-8D1B-1A095777EC6B}']
  end;

  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.ICandidateWindowBoundsChangedEventArgs
  ICandidateWindowBoundsChangedEventArgs = interface(IInspectable)
  ['{B76FAF94-3172-5C50-9507-26CD873815A1}']
    function get_Bounds: TRectF; safecall;
    property Bounds: TRectF read get_Bounds;
  end;

  // Generic Delegate for:
  // Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.Controls.IRichEditBox,Microsoft.UI.Xaml.Controls.ICandidateWindowBoundsChangedEventArgs>
  TypedEventHandler_2__IRichEditBox__ICandidateWindowBoundsChangedEventArgs_Delegate_Base = interface(IUnknown)
  ['{BBB0C339-618D-50B0-AC00-B8BC7627E1C5}']
    procedure Invoke(sender: IRichEditBox; args: ICandidateWindowBoundsChangedEventArgs); safecall;
  end;
  // UsedAPI Interface
  // Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.Controls.IRichEditBox,Microsoft.UI.Xaml.Controls.ICandidateWindowBoundsChangedEventArgs>
  TypedEventHandler_2__IRichEditBox__ICandidateWindowBoundsChangedEventArgs = interface(TypedEventHandler_2__IRichEditBox__ICandidateWindowBoundsChangedEventArgs_Delegate_Base)
  ['{E2563810-A706-503D-B884-757C8A0A0E7F}']
  end;

  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IRichEditBoxTextChangingEventArgs
  IRichEditBoxTextChangingEventArgs = interface(IInspectable)
  ['{E887B29A-1551-5868-A5DC-3FCFE7452E6B}']
    function get_IsContentChanging: Boolean; safecall;
    property IsContentChanging: Boolean read get_IsContentChanging;
  end;

  // Generic Delegate for:
  // Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.Controls.IRichEditBox,Microsoft.UI.Xaml.Controls.IRichEditBoxTextChangingEventArgs>
  TypedEventHandler_2__IRichEditBox__IRichEditBoxTextChangingEventArgs_Delegate_Base = interface(IUnknown)
  ['{61038725-A2E8-5F3F-8E3B-819D494F4EBB}']
    procedure Invoke(sender: IRichEditBox; args: IRichEditBoxTextChangingEventArgs); safecall;
  end;
  // UsedAPI Interface
  // Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.Controls.IRichEditBox,Microsoft.UI.Xaml.Controls.IRichEditBoxTextChangingEventArgs>
  TypedEventHandler_2__IRichEditBox__IRichEditBoxTextChangingEventArgs = interface(TypedEventHandler_2__IRichEditBox__IRichEditBoxTextChangingEventArgs_Delegate_Base)
  ['{21F7D7D4-9C3C-579A-B51B-3AE1A5E10C91}']
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IRichEditBox
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_RichEditBox)]
  IRichEditBox = interface(IInspectable)
  ['{699163DB-723D-5514-A8C9-2C64D99E1EA6}']
    function get_IsReadOnly: Boolean; safecall;
    procedure put_IsReadOnly(value: Boolean); safecall;
    function get_AcceptsReturn: Boolean; safecall;
    procedure put_AcceptsReturn(value: Boolean); safecall;
    function get_TextAlignment: TextAlignment; safecall;
    procedure put_TextAlignment(value: TextAlignment); safecall;
    function get_TextWrapping: TextWrapping; safecall;
    procedure put_TextWrapping(value: TextWrapping); safecall;
    function get_IsSpellCheckEnabled: Boolean; safecall;
    procedure put_IsSpellCheckEnabled(value: Boolean); safecall;
    function get_IsTextPredictionEnabled: Boolean; safecall;
    procedure put_IsTextPredictionEnabled(value: Boolean); safecall;
    function get_Document: ITextDocument; safecall;
    function get_InputScope: Input_IInputScope; safecall;
    procedure put_InputScope(value: Input_IInputScope); safecall;
    function get_Header: IInspectable; safecall;
    procedure put_Header(value: IInspectable); safecall;
    function get_HeaderTemplate: IDataTemplate; safecall;
    procedure put_HeaderTemplate(value: IDataTemplate); safecall;
    function get_PlaceholderText: HSTRING; safecall;
    procedure put_PlaceholderText(value: HSTRING); safecall;
    function get_SelectionHighlightColor: ISolidColorBrush; safecall;
    procedure put_SelectionHighlightColor(value: ISolidColorBrush); safecall;
    function get_PreventKeyboardDisplayOnProgrammaticFocus: Boolean; safecall;
    procedure put_PreventKeyboardDisplayOnProgrammaticFocus(value: Boolean); safecall;
    function get_IsColorFontEnabled: Boolean; safecall;
    procedure put_IsColorFontEnabled(value: Boolean); safecall;
    function get_SelectionHighlightColorWhenNotFocused: ISolidColorBrush; safecall;
    procedure put_SelectionHighlightColorWhenNotFocused(value: ISolidColorBrush); safecall;
    function get_MaxLength: Integer; safecall;
    procedure put_MaxLength(value: Integer); safecall;
    function get_HorizontalTextAlignment: TextAlignment; safecall;
    procedure put_HorizontalTextAlignment(value: TextAlignment); safecall;
    function get_CharacterCasing: CharacterCasing; safecall;
    procedure put_CharacterCasing(value: CharacterCasing); safecall;
    function get_DisabledFormattingAccelerators: DisabledFormattingAccelerators; safecall;
    procedure put_DisabledFormattingAccelerators(value: DisabledFormattingAccelerators); safecall;
    function get_TextDocument: ITextDocument; safecall;
    function get_SelectionFlyout: Primitives_IFlyoutBase; safecall;
    procedure put_SelectionFlyout(value: Primitives_IFlyoutBase); safecall;
    function get_ProofingMenuFlyout: Primitives_IFlyoutBase; safecall;
    function get_Description: IInspectable; safecall;
    procedure put_Description(value: IInspectable); safecall;
    function add_TextChanged(handler: RoutedEventHandler): EventRegistrationToken; safecall;
    procedure remove_TextChanged(token: EventRegistrationToken); safecall;
    function add_SelectionChanged(handler: RoutedEventHandler): EventRegistrationToken; safecall;
    procedure remove_SelectionChanged(token: EventRegistrationToken); safecall;
    function add_ContextMenuOpening(handler: ContextMenuOpeningEventHandler): EventRegistrationToken; safecall;
    procedure remove_ContextMenuOpening(token: EventRegistrationToken); safecall;
    function add_Paste(handler: TextControlPasteEventHandler): EventRegistrationToken; safecall;
    procedure remove_Paste(token: EventRegistrationToken); safecall;
    function add_TextCompositionStarted(handler: TypedEventHandler_2__IRichEditBox__ITextCompositionStartedEventArgs): EventRegistrationToken; safecall;
    procedure remove_TextCompositionStarted(token: EventRegistrationToken); safecall;
    function add_TextCompositionChanged(handler: TypedEventHandler_2__IRichEditBox__ITextCompositionChangedEventArgs): EventRegistrationToken; safecall;
    procedure remove_TextCompositionChanged(token: EventRegistrationToken); safecall;
    function add_TextCompositionEnded(handler: TypedEventHandler_2__IRichEditBox__ITextCompositionEndedEventArgs): EventRegistrationToken; safecall;
    procedure remove_TextCompositionEnded(token: EventRegistrationToken); safecall;
    function add_CopyingToClipboard(handler: TypedEventHandler_2__IRichEditBox__ITextControlCopyingToClipboardEventArgs): EventRegistrationToken; safecall;
    procedure remove_CopyingToClipboard(token: EventRegistrationToken); safecall;
    function add_CuttingToClipboard(handler: TypedEventHandler_2__IRichEditBox__ITextControlCuttingToClipboardEventArgs): EventRegistrationToken; safecall;
    procedure remove_CuttingToClipboard(token: EventRegistrationToken); safecall;
    function add_SelectionChanging(handler: TypedEventHandler_2__IRichEditBox__IRichEditBoxSelectionChangingEventArgs): EventRegistrationToken; safecall;
    procedure remove_SelectionChanging(token: EventRegistrationToken); safecall;
    function GetLinguisticAlternativesAsync: IAsyncOperation_1__IVectorView_1__HSTRING; safecall;
    function get_TextReadingOrder: TextReadingOrder; safecall;
    procedure put_TextReadingOrder(value: TextReadingOrder); safecall;
    function get_ClipboardCopyFormat: RichEditClipboardFormat; safecall;
    procedure put_ClipboardCopyFormat(value: RichEditClipboardFormat); safecall;
    function get_DesiredCandidateWindowAlignment: CandidateWindowAlignment; safecall;
    procedure put_DesiredCandidateWindowAlignment(value: CandidateWindowAlignment); safecall;
    function add_CandidateWindowBoundsChanged(handler: TypedEventHandler_2__IRichEditBox__ICandidateWindowBoundsChangedEventArgs): EventRegistrationToken; safecall;
    procedure remove_CandidateWindowBoundsChanged(token: EventRegistrationToken); safecall;
    function add_TextChanging(handler: TypedEventHandler_2__IRichEditBox__IRichEditBoxTextChangingEventArgs): EventRegistrationToken; safecall;
    procedure remove_TextChanging(token: EventRegistrationToken); safecall;
    property AcceptsReturn: Boolean read get_AcceptsReturn write put_AcceptsReturn;
    property CharacterCasing_: CharacterCasing read get_CharacterCasing write put_CharacterCasing;
    property ClipboardCopyFormat: RichEditClipboardFormat read get_ClipboardCopyFormat write put_ClipboardCopyFormat;
    property Description: IInspectable read get_Description write put_Description;
    property DesiredCandidateWindowAlignment: CandidateWindowAlignment read get_DesiredCandidateWindowAlignment write put_DesiredCandidateWindowAlignment;
    property DisabledFormattingAccelerators_: DisabledFormattingAccelerators read get_DisabledFormattingAccelerators write put_DisabledFormattingAccelerators;
    property Document: ITextDocument read get_Document;
    property Header: IInspectable read get_Header write put_Header;
    property HeaderTemplate: IDataTemplate read get_HeaderTemplate write put_HeaderTemplate;
    property HorizontalTextAlignment: TextAlignment read get_HorizontalTextAlignment write put_HorizontalTextAlignment;
    property InputScope: Input_IInputScope read get_InputScope write put_InputScope;
    property IsColorFontEnabled: Boolean read get_IsColorFontEnabled write put_IsColorFontEnabled;
    property IsReadOnly: Boolean read get_IsReadOnly write put_IsReadOnly;
    property IsSpellCheckEnabled: Boolean read get_IsSpellCheckEnabled write put_IsSpellCheckEnabled;
    property IsTextPredictionEnabled: Boolean read get_IsTextPredictionEnabled write put_IsTextPredictionEnabled;
    property MaxLength: Integer read get_MaxLength write put_MaxLength;
    property PlaceholderText: HSTRING read get_PlaceholderText write put_PlaceholderText;
    property PreventKeyboardDisplayOnProgrammaticFocus: Boolean read get_PreventKeyboardDisplayOnProgrammaticFocus write put_PreventKeyboardDisplayOnProgrammaticFocus;
    property ProofingMenuFlyout: Primitives_IFlyoutBase read get_ProofingMenuFlyout;
    property SelectionFlyout: Primitives_IFlyoutBase read get_SelectionFlyout write put_SelectionFlyout;
    property SelectionHighlightColor: ISolidColorBrush read get_SelectionHighlightColor write put_SelectionHighlightColor;
    property SelectionHighlightColorWhenNotFocused: ISolidColorBrush read get_SelectionHighlightColorWhenNotFocused write put_SelectionHighlightColorWhenNotFocused;
    property TextAlignment_: TextAlignment read get_TextAlignment write put_TextAlignment;
    property TextDocument: ITextDocument read get_TextDocument;
    property TextReadingOrder_: TextReadingOrder read get_TextReadingOrder write put_TextReadingOrder;
    property TextWrapping_: TextWrapping read get_TextWrapping write put_TextWrapping;
  end;

  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IIsTextTrimmedChangedEventArgs
  IIsTextTrimmedChangedEventArgs = interface(IInspectable)
  ['{3C709B2F-16BA-55D2-B6F6-DFC54A1ED021}']
  end;

  // Generic Delegate for:
  // Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.Controls.IRichTextBlockOverflow,Microsoft.UI.Xaml.Controls.IIsTextTrimmedChangedEventArgs>
  TypedEventHandler_2__IRichTextBlockOverflow__IIsTextTrimmedChangedEventArgs_Delegate_Base = interface(IUnknown)
  ['{8F639766-1032-5BA7-9B72-2EEDE73C0D79}']
    procedure Invoke(sender: IRichTextBlockOverflow; args: IIsTextTrimmedChangedEventArgs); safecall;
  end;
  // UsedAPI Interface
  // Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.Controls.IRichTextBlockOverflow,Microsoft.UI.Xaml.Controls.IIsTextTrimmedChangedEventArgs>
  TypedEventHandler_2__IRichTextBlockOverflow__IIsTextTrimmedChangedEventArgs = interface(TypedEventHandler_2__IRichTextBlockOverflow__IIsTextTrimmedChangedEventArgs_Delegate_Base)
  ['{32339513-CE24-58F0-A52C-22AC20A48388}']
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IRichTextBlockOverflow
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_RichTextBlockOverflow)]
  IRichTextBlockOverflow = interface(IInspectable)
  ['{015C2522-0646-5C71-9F54-3C38C7235A62}']
    function get_OverflowContentTarget: IRichTextBlockOverflow; safecall;
    procedure put_OverflowContentTarget(value: IRichTextBlockOverflow); safecall;
    function get_Padding: Thickness; safecall;
    procedure put_Padding(value: Thickness); safecall;
    function get_ContentSource: IRichTextBlock; safecall;
    function get_HasOverflowContent: Boolean; safecall;
    function get_ContentStart: Documents_ITextPointer; safecall;
    function get_ContentEnd: Documents_ITextPointer; safecall;
    function get_BaselineOffset: Double; safecall;
    function get_MaxLines: Integer; safecall;
    procedure put_MaxLines(value: Integer); safecall;
    function get_IsTextTrimmed: Boolean; safecall;
    function add_IsTextTrimmedChanged(handler: TypedEventHandler_2__IRichTextBlockOverflow__IIsTextTrimmedChangedEventArgs): EventRegistrationToken; safecall;
    procedure remove_IsTextTrimmedChanged(token: EventRegistrationToken); safecall;
    function GetPositionFromPoint(point: TPointF): Documents_ITextPointer; safecall;
    property BaselineOffset: Double read get_BaselineOffset;
    property ContentEnd: Documents_ITextPointer read get_ContentEnd;
    property ContentSource: IRichTextBlock read get_ContentSource;
    property ContentStart: Documents_ITextPointer read get_ContentStart;
    property HasOverflowContent: Boolean read get_HasOverflowContent;
    property IsTextTrimmed: Boolean read get_IsTextTrimmed;
    property MaxLines: Integer read get_MaxLines write put_MaxLines;
    property OverflowContentTarget: IRichTextBlockOverflow read get_OverflowContentTarget write put_OverflowContentTarget;
    property Padding: Thickness read get_Padding write put_Padding;
  end;

  // Generic Delegate for:
  // Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.Controls.IRichTextBlock,Microsoft.UI.Xaml.Controls.IIsTextTrimmedChangedEventArgs>
  TypedEventHandler_2__IRichTextBlock__IIsTextTrimmedChangedEventArgs_Delegate_Base = interface(IUnknown)
  ['{CB07AFAA-4A56-595A-B434-39ABAEECC5BF}']
    procedure Invoke(sender: IRichTextBlock; args: IIsTextTrimmedChangedEventArgs); safecall;
  end;
  // UsedAPI Interface
  // Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.Controls.IRichTextBlock,Microsoft.UI.Xaml.Controls.IIsTextTrimmedChangedEventArgs>
  TypedEventHandler_2__IRichTextBlock__IIsTextTrimmedChangedEventArgs = interface(TypedEventHandler_2__IRichTextBlock__IIsTextTrimmedChangedEventArgs_Delegate_Base)
  ['{8A4B63C7-E269-5F83-892B-6050DE1F2CFE}']
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IRichTextBlock
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_RichTextBlock)]
  IRichTextBlock = interface(IInspectable)
  ['{D766E4DB-A684-50B7-A202-C8E91FA26FF3}']
    function get_FontSize: Double; safecall;
    procedure put_FontSize(value: Double); safecall;
    function get_FontFamily: IFontFamily; safecall;
    procedure put_FontFamily(value: IFontFamily); safecall;
    function get_FontWeight: FontWeight; safecall;
    procedure put_FontWeight(value: FontWeight); safecall;
    function get_FontStyle: FontStyle; safecall;
    procedure put_FontStyle(value: FontStyle); safecall;
    function get_FontStretch: FontStretch; safecall;
    procedure put_FontStretch(value: FontStretch); safecall;
    function get_Foreground: IBrush; safecall;
    procedure put_Foreground(value: IBrush); safecall;
    function get_TextWrapping: TextWrapping; safecall;
    procedure put_TextWrapping(value: TextWrapping); safecall;
    function get_TextTrimming: TextTrimming; safecall;
    procedure put_TextTrimming(value: TextTrimming); safecall;
    function get_TextAlignment: TextAlignment; safecall;
    procedure put_TextAlignment(value: TextAlignment); safecall;
    function get_Blocks: IVector_1__Documents_IBlock; safecall;
    function get_Padding: Thickness; safecall;
    procedure put_Padding(value: Thickness); safecall;
    function get_LineHeight: Double; safecall;
    procedure put_LineHeight(value: Double); safecall;
    function get_LineStackingStrategy: LineStackingStrategy; safecall;
    procedure put_LineStackingStrategy(value: LineStackingStrategy); safecall;
    function get_CharacterSpacing: Integer; safecall;
    procedure put_CharacterSpacing(value: Integer); safecall;
    function get_OverflowContentTarget: IRichTextBlockOverflow; safecall;
    procedure put_OverflowContentTarget(value: IRichTextBlockOverflow); safecall;
    function get_IsTextSelectionEnabled: Boolean; safecall;
    procedure put_IsTextSelectionEnabled(value: Boolean); safecall;
    function get_HasOverflowContent: Boolean; safecall;
    function get_SelectedText: HSTRING; safecall;
    function get_ContentStart: Documents_ITextPointer; safecall;
    function get_ContentEnd: Documents_ITextPointer; safecall;
    function get_SelectionStart: Documents_ITextPointer; safecall;
    function get_SelectionEnd: Documents_ITextPointer; safecall;
    function get_BaselineOffset: Double; safecall;
    function get_MaxLines: Integer; safecall;
    procedure put_MaxLines(value: Integer); safecall;
    function get_TextLineBounds: TextLineBounds; safecall;
    procedure put_TextLineBounds(value: TextLineBounds); safecall;
    function get_SelectionHighlightColor: ISolidColorBrush; safecall;
    procedure put_SelectionHighlightColor(value: ISolidColorBrush); safecall;
    function get_OpticalMarginAlignment: OpticalMarginAlignment; safecall;
    procedure put_OpticalMarginAlignment(value: OpticalMarginAlignment); safecall;
    function get_IsColorFontEnabled: Boolean; safecall;
    procedure put_IsColorFontEnabled(value: Boolean); safecall;
    function get_TextReadingOrder: TextReadingOrder; safecall;
    procedure put_TextReadingOrder(value: TextReadingOrder); safecall;
    function get_IsTextScaleFactorEnabled: Boolean; safecall;
    procedure put_IsTextScaleFactorEnabled(value: Boolean); safecall;
    function get_TextDecorations: TextDecorations; safecall;
    procedure put_TextDecorations(value: TextDecorations); safecall;
    function get_IsTextTrimmed: Boolean; safecall;
    function get_HorizontalTextAlignment: TextAlignment; safecall;
    procedure put_HorizontalTextAlignment(value: TextAlignment); safecall;
    function get_TextHighlighters: IVector_1__Documents_ITextHighlighter; safecall;
    function get_SelectionFlyout: Primitives_IFlyoutBase; safecall;
    procedure put_SelectionFlyout(value: Primitives_IFlyoutBase); safecall;
    function add_SelectionChanged(handler: RoutedEventHandler): EventRegistrationToken; safecall;
    procedure remove_SelectionChanged(token: EventRegistrationToken); safecall;
    function add_ContextMenuOpening(handler: ContextMenuOpeningEventHandler): EventRegistrationToken; safecall;
    procedure remove_ContextMenuOpening(token: EventRegistrationToken); safecall;
    function add_IsTextTrimmedChanged(handler: TypedEventHandler_2__IRichTextBlock__IIsTextTrimmedChangedEventArgs): EventRegistrationToken; safecall;
    procedure remove_IsTextTrimmedChanged(token: EventRegistrationToken); safecall;
    procedure SelectAll; safecall;
    procedure Select(start: Documents_ITextPointer; &end: Documents_ITextPointer); safecall;
    function GetPositionFromPoint(point: TPointF): Documents_ITextPointer; safecall;
    procedure CopySelectionToClipboard; safecall;
    function get_TextIndent: Double; safecall;
    procedure put_TextIndent(value: Double); safecall;
    property BaselineOffset: Double read get_BaselineOffset;
    property Blocks: IVector_1__Documents_IBlock read get_Blocks;
    property CharacterSpacing: Integer read get_CharacterSpacing write put_CharacterSpacing;
    property ContentEnd: Documents_ITextPointer read get_ContentEnd;
    property ContentStart: Documents_ITextPointer read get_ContentStart;
    property FontFamily: IFontFamily read get_FontFamily write put_FontFamily;
    property FontSize: Double read get_FontSize write put_FontSize;
    property FontStretch_: FontStretch read get_FontStretch write put_FontStretch;
    property FontStyle_: FontStyle read get_FontStyle write put_FontStyle;
    property FontWeight_: FontWeight read get_FontWeight write put_FontWeight;
    property Foreground: IBrush read get_Foreground write put_Foreground;
    property HasOverflowContent: Boolean read get_HasOverflowContent;
    property HorizontalTextAlignment: TextAlignment read get_HorizontalTextAlignment write put_HorizontalTextAlignment;
    property IsColorFontEnabled: Boolean read get_IsColorFontEnabled write put_IsColorFontEnabled;
    property IsTextScaleFactorEnabled: Boolean read get_IsTextScaleFactorEnabled write put_IsTextScaleFactorEnabled;
    property IsTextSelectionEnabled: Boolean read get_IsTextSelectionEnabled write put_IsTextSelectionEnabled;
    property IsTextTrimmed: Boolean read get_IsTextTrimmed;
    property LineHeight: Double read get_LineHeight write put_LineHeight;
    property LineStackingStrategy_: LineStackingStrategy read get_LineStackingStrategy write put_LineStackingStrategy;
    property MaxLines: Integer read get_MaxLines write put_MaxLines;
    property OpticalMarginAlignment_: OpticalMarginAlignment read get_OpticalMarginAlignment write put_OpticalMarginAlignment;
    property OverflowContentTarget: IRichTextBlockOverflow read get_OverflowContentTarget write put_OverflowContentTarget;
    property Padding: Thickness read get_Padding write put_Padding;
    property SelectedText: HSTRING read get_SelectedText;
    property SelectionEnd: Documents_ITextPointer read get_SelectionEnd;
    property SelectionFlyout: Primitives_IFlyoutBase read get_SelectionFlyout write put_SelectionFlyout;
    property SelectionHighlightColor: ISolidColorBrush read get_SelectionHighlightColor write put_SelectionHighlightColor;
    property SelectionStart: Documents_ITextPointer read get_SelectionStart;
    property TextAlignment_: TextAlignment read get_TextAlignment write put_TextAlignment;
    property TextDecorations_: TextDecorations read get_TextDecorations write put_TextDecorations;
    property TextHighlighters: IVector_1__Documents_ITextHighlighter read get_TextHighlighters;
    property TextIndent: Double read get_TextIndent write put_TextIndent;
    property TextLineBounds_: TextLineBounds read get_TextLineBounds write put_TextLineBounds;
    property TextReadingOrder_: TextReadingOrder read get_TextReadingOrder write put_TextReadingOrder;
    property TextTrimming_: TextTrimming read get_TextTrimming write put_TextTrimming;
    property TextWrapping_: TextWrapping read get_TextWrapping write put_TextWrapping;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.Primitives.IScrollEventArgs
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_Primitives_ScrollEventArgs)]
  Primitives_IScrollEventArgs = interface(IInspectable)
  ['{DBD27F11-F937-5AD0-9F75-B962C33254CF}']
    function get_NewValue: Double; safecall;
    function get_ScrollEventType: Primitives_ScrollEventType; safecall;
    property NewValue: Double read get_NewValue;
    property ScrollEventType: Primitives_ScrollEventType read get_ScrollEventType;
  end;

  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.Primitives.ScrollEventHandler
  Primitives_ScrollEventHandler = interface(IUnknown)
  ['{FF661BA9-8C06-5785-A23C-30D6B31631E8}']
    procedure Invoke(sender: IInspectable; e: Primitives_IScrollEventArgs); safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.Primitives.IScrollBar
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_Primitives_ScrollBar)]
  Primitives_IScrollBar = interface(IInspectable)
  ['{568CBF41-F741-5F05-8E08-C0A50AC17C8C}']
    function get_Orientation: Orientation; safecall;
    procedure put_Orientation(value: Orientation); safecall;
    function get_ViewportSize: Double; safecall;
    procedure put_ViewportSize(value: Double); safecall;
    function get_IndicatorMode: Primitives_ScrollingIndicatorMode; safecall;
    procedure put_IndicatorMode(value: Primitives_ScrollingIndicatorMode); safecall;
    function add_Scroll(handler: Primitives_ScrollEventHandler): EventRegistrationToken; safecall;
    procedure remove_Scroll(token: EventRegistrationToken); safecall;
    property IndicatorMode: Primitives_ScrollingIndicatorMode read get_IndicatorMode write put_IndicatorMode;
    property Orientation_: Orientation read get_Orientation write put_Orientation;
    property ViewportSize: Double read get_ViewportSize write put_ViewportSize;
  end;

  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IAnchorRequestedEventArgs
  IAnchorRequestedEventArgs = interface(IInspectable)
  ['{D5645E80-D4D3-5DF8-A3AC-1F9BEEB2BCEF}']
    function get_Anchor: IUIElement; safecall;
    procedure put_Anchor(value: IUIElement); safecall;
    function get_AnchorCandidates: IVector_1__IUIElement; safecall;
    property Anchor: IUIElement read get_Anchor write put_Anchor;
    property AnchorCandidates: IVector_1__IUIElement read get_AnchorCandidates;
  end;

  // Generic Delegate for:
  // Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.Controls.IScrollViewer,Microsoft.UI.Xaml.Controls.IAnchorRequestedEventArgs>
  TypedEventHandler_2__IScrollViewer__IAnchorRequestedEventArgs_Delegate_Base = interface(IUnknown)
  ['{A2843936-E9FA-5646-ADF8-01089024959E}']
    procedure Invoke(sender: IScrollViewer; args: IAnchorRequestedEventArgs); safecall;
  end;
  // UsedAPI Interface
  // Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.Controls.IScrollViewer,Microsoft.UI.Xaml.Controls.IAnchorRequestedEventArgs>
  TypedEventHandler_2__IScrollViewer__IAnchorRequestedEventArgs = interface(TypedEventHandler_2__IScrollViewer__IAnchorRequestedEventArgs_Delegate_Base)
  ['{6DEED131-3D27-5B1A-AC0B-748C01D7D4A3}']
  end;

  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IScrollViewerView
  IScrollViewerView = interface(IInspectable)
  ['{1E9F68EE-6CE5-5CBF-BBFE-B8CD284B9C23}']
    function get_HorizontalOffset: Double; safecall;
    function get_VerticalOffset: Double; safecall;
    function get_ZoomFactor: Single; safecall;
    property HorizontalOffset: Double read get_HorizontalOffset;
    property VerticalOffset: Double read get_VerticalOffset;
    property ZoomFactor: Single read get_ZoomFactor;
  end;

  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IScrollViewerViewChangingEventArgs
  IScrollViewerViewChangingEventArgs = interface(IInspectable)
  ['{AEE37D7C-4696-55F1-96CA-656832FC0FD2}']
    function get_NextView: IScrollViewerView; safecall;
    function get_FinalView: IScrollViewerView; safecall;
    function get_IsInertial: Boolean; safecall;
    property FinalView: IScrollViewerView read get_FinalView;
    property IsInertial: Boolean read get_IsInertial;
    property NextView: IScrollViewerView read get_NextView;
  end;

  // Generic Delegate for:
  // Windows.Foundation.EventHandler`1<Microsoft.UI.Xaml.Controls.IScrollViewerViewChangingEventArgs>
  EventHandler_1__IScrollViewerViewChangingEventArgs_Delegate_Base = interface(IUnknown)
  ['{28965C4D-0A6E-5639-986B-A8ACE10F5DA1}']
    procedure Invoke(sender: IInspectable; args: IScrollViewerViewChangingEventArgs); safecall;
  end;
  // UsedAPI Interface
  // Windows.Foundation.EventHandler`1<Microsoft.UI.Xaml.Controls.IScrollViewerViewChangingEventArgs>
  EventHandler_1__IScrollViewerViewChangingEventArgs = interface(EventHandler_1__IScrollViewerViewChangingEventArgs_Delegate_Base)
  ['{FF784AAD-7013-5467-BB89-0EC55A17CB34}']
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IScrollViewerViewChangedEventArgs
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_ScrollViewerViewChangedEventArgs)]
  IScrollViewerViewChangedEventArgs = interface(IInspectable)
  ['{BF7BB85B-1D46-5004-A370-ECB626630588}']
    function get_IsIntermediate: Boolean; safecall;
    property IsIntermediate: Boolean read get_IsIntermediate;
  end;

  // Generic Delegate for:
  // Windows.Foundation.EventHandler`1<Microsoft.UI.Xaml.Controls.IScrollViewerViewChangedEventArgs>
  EventHandler_1__IScrollViewerViewChangedEventArgs_Delegate_Base = interface(IUnknown)
  ['{D792E426-9F8E-544A-9A21-9836AABE896B}']
    procedure Invoke(sender: IInspectable; args: IScrollViewerViewChangedEventArgs); safecall;
  end;
  // UsedAPI Interface
  // Windows.Foundation.EventHandler`1<Microsoft.UI.Xaml.Controls.IScrollViewerViewChangedEventArgs>
  EventHandler_1__IScrollViewerViewChangedEventArgs = interface(EventHandler_1__IScrollViewerViewChangedEventArgs_Delegate_Base)
  ['{87A93D1F-83D4-5277-8DCE-689464D212E9}']
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IScrollViewer
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_ScrollViewer)]
  IScrollViewer = interface(IInspectable)
  ['{1DC28C2E-996C-5394-89C3-4DC656B4AD46}']
    function get_HorizontalScrollBarVisibility: ScrollBarVisibility; safecall;
    procedure put_HorizontalScrollBarVisibility(value: ScrollBarVisibility); safecall;
    function get_VerticalScrollBarVisibility: ScrollBarVisibility; safecall;
    procedure put_VerticalScrollBarVisibility(value: ScrollBarVisibility); safecall;
    function get_IsHorizontalRailEnabled: Boolean; safecall;
    procedure put_IsHorizontalRailEnabled(value: Boolean); safecall;
    function get_IsVerticalRailEnabled: Boolean; safecall;
    procedure put_IsVerticalRailEnabled(value: Boolean); safecall;
    function get_IsHorizontalScrollChainingEnabled: Boolean; safecall;
    procedure put_IsHorizontalScrollChainingEnabled(value: Boolean); safecall;
    function get_IsVerticalScrollChainingEnabled: Boolean; safecall;
    procedure put_IsVerticalScrollChainingEnabled(value: Boolean); safecall;
    function get_IsZoomChainingEnabled: Boolean; safecall;
    procedure put_IsZoomChainingEnabled(value: Boolean); safecall;
    function get_IsScrollInertiaEnabled: Boolean; safecall;
    procedure put_IsScrollInertiaEnabled(value: Boolean); safecall;
    function get_IsZoomInertiaEnabled: Boolean; safecall;
    procedure put_IsZoomInertiaEnabled(value: Boolean); safecall;
    function get_HorizontalScrollMode: ScrollMode; safecall;
    procedure put_HorizontalScrollMode(value: ScrollMode); safecall;
    function get_VerticalScrollMode: ScrollMode; safecall;
    procedure put_VerticalScrollMode(value: ScrollMode); safecall;
    function get_ZoomMode: ZoomMode; safecall;
    procedure put_ZoomMode(value: ZoomMode); safecall;
    function get_HorizontalSnapPointsAlignment: Primitives_SnapPointsAlignment; safecall;
    procedure put_HorizontalSnapPointsAlignment(value: Primitives_SnapPointsAlignment); safecall;
    function get_VerticalSnapPointsAlignment: Primitives_SnapPointsAlignment; safecall;
    procedure put_VerticalSnapPointsAlignment(value: Primitives_SnapPointsAlignment); safecall;
    function get_HorizontalSnapPointsType: SnapPointsType; safecall;
    procedure put_HorizontalSnapPointsType(value: SnapPointsType); safecall;
    function get_VerticalSnapPointsType: SnapPointsType; safecall;
    procedure put_VerticalSnapPointsType(value: SnapPointsType); safecall;
    function get_ZoomSnapPointsType: SnapPointsType; safecall;
    procedure put_ZoomSnapPointsType(value: SnapPointsType); safecall;
    function get_HorizontalOffset: Double; safecall;
    function get_ViewportWidth: Double; safecall;
    function get_ScrollableWidth: Double; safecall;
    function get_ComputedHorizontalScrollBarVisibility: Visibility; safecall;
    function get_ExtentWidth: Double; safecall;
    function get_VerticalOffset: Double; safecall;
    function get_ViewportHeight: Double; safecall;
    function get_ScrollableHeight: Double; safecall;
    function get_ComputedVerticalScrollBarVisibility: Visibility; safecall;
    function get_ExtentHeight: Double; safecall;
    function get_MinZoomFactor: Single; safecall;
    procedure put_MinZoomFactor(value: Single); safecall;
    function get_MaxZoomFactor: Single; safecall;
    procedure put_MaxZoomFactor(value: Single); safecall;
    function get_ZoomFactor: Single; safecall;
    function get_ZoomSnapPoints: IVector_1__Single; safecall;
    function get_TopLeftHeader: IUIElement; safecall;
    procedure put_TopLeftHeader(value: IUIElement); safecall;
    function get_LeftHeader: IUIElement; safecall;
    procedure put_LeftHeader(value: IUIElement); safecall;
    function get_TopHeader: IUIElement; safecall;
    procedure put_TopHeader(value: IUIElement); safecall;
    function get_ReduceViewportForCoreInputViewOcclusions: Boolean; safecall;
    procedure put_ReduceViewportForCoreInputViewOcclusions(value: Boolean); safecall;
    function get_HorizontalAnchorRatio: Double; safecall;
    procedure put_HorizontalAnchorRatio(value: Double); safecall;
    function get_VerticalAnchorRatio: Double; safecall;
    procedure put_VerticalAnchorRatio(value: Double); safecall;
    function get_CanContentRenderOutsideBounds: Boolean; safecall;
    procedure put_CanContentRenderOutsideBounds(value: Boolean); safecall;
    function add_AnchorRequested(handler: TypedEventHandler_2__IScrollViewer__IAnchorRequestedEventArgs): EventRegistrationToken; safecall;
    procedure remove_AnchorRequested(token: EventRegistrationToken); safecall;
    function add_ViewChanging(handler: EventHandler_1__IScrollViewerViewChangingEventArgs): EventRegistrationToken; safecall;
    procedure remove_ViewChanging(token: EventRegistrationToken); safecall;
    function add_ViewChanged(handler: EventHandler_1__IScrollViewerViewChangedEventArgs): EventRegistrationToken; safecall;
    procedure remove_ViewChanged(token: EventRegistrationToken); safecall;
    function add_DirectManipulationStarted(handler: EventHandler_1__IInspectable): EventRegistrationToken; safecall;
    procedure remove_DirectManipulationStarted(token: EventRegistrationToken); safecall;
    function add_DirectManipulationCompleted(handler: EventHandler_1__IInspectable): EventRegistrationToken; safecall;
    procedure remove_DirectManipulationCompleted(token: EventRegistrationToken); safecall;
    procedure ScrollToHorizontalOffset(offset: Double); safecall;
    procedure ScrollToVerticalOffset(offset: Double); safecall;
    procedure ZoomToFactor(factor: Single); safecall;
    function ChangeView(horizontalOffset: IReference_1__Double; verticalOffset: IReference_1__Double; zoomFactor: IReference_1__Single): Boolean; overload; safecall;
    function ChangeView(horizontalOffset: IReference_1__Double; verticalOffset: IReference_1__Double; zoomFactor: IReference_1__Single; disableAnimation: Boolean): Boolean; overload; safecall;
    procedure InvalidateScrollInfo; safecall;
    function get_IsDeferredScrollingEnabled: Boolean; safecall;
    procedure put_IsDeferredScrollingEnabled(value: Boolean); safecall;
    function get_BringIntoViewOnFocusChange: Boolean; safecall;
    procedure put_BringIntoViewOnFocusChange(value: Boolean); safecall;
    property BringIntoViewOnFocusChange: Boolean read get_BringIntoViewOnFocusChange write put_BringIntoViewOnFocusChange;
    property CanContentRenderOutsideBounds: Boolean read get_CanContentRenderOutsideBounds write put_CanContentRenderOutsideBounds;
    property ComputedHorizontalScrollBarVisibility: Visibility read get_ComputedHorizontalScrollBarVisibility;
    property ComputedVerticalScrollBarVisibility: Visibility read get_ComputedVerticalScrollBarVisibility;
    property ExtentHeight: Double read get_ExtentHeight;
    property ExtentWidth: Double read get_ExtentWidth;
    property HorizontalAnchorRatio: Double read get_HorizontalAnchorRatio write put_HorizontalAnchorRatio;
    property HorizontalOffset: Double read get_HorizontalOffset;
    property HorizontalScrollBarVisibility: ScrollBarVisibility read get_HorizontalScrollBarVisibility write put_HorizontalScrollBarVisibility;
    property HorizontalScrollMode: ScrollMode read get_HorizontalScrollMode write put_HorizontalScrollMode;
    property HorizontalSnapPointsAlignment: Primitives_SnapPointsAlignment read get_HorizontalSnapPointsAlignment write put_HorizontalSnapPointsAlignment;
    property HorizontalSnapPointsType: SnapPointsType read get_HorizontalSnapPointsType write put_HorizontalSnapPointsType;
    property IsDeferredScrollingEnabled: Boolean read get_IsDeferredScrollingEnabled write put_IsDeferredScrollingEnabled;
    property IsHorizontalRailEnabled: Boolean read get_IsHorizontalRailEnabled write put_IsHorizontalRailEnabled;
    property IsHorizontalScrollChainingEnabled: Boolean read get_IsHorizontalScrollChainingEnabled write put_IsHorizontalScrollChainingEnabled;
    property IsScrollInertiaEnabled: Boolean read get_IsScrollInertiaEnabled write put_IsScrollInertiaEnabled;
    property IsVerticalRailEnabled: Boolean read get_IsVerticalRailEnabled write put_IsVerticalRailEnabled;
    property IsVerticalScrollChainingEnabled: Boolean read get_IsVerticalScrollChainingEnabled write put_IsVerticalScrollChainingEnabled;
    property IsZoomChainingEnabled: Boolean read get_IsZoomChainingEnabled write put_IsZoomChainingEnabled;
    property IsZoomInertiaEnabled: Boolean read get_IsZoomInertiaEnabled write put_IsZoomInertiaEnabled;
    property LeftHeader: IUIElement read get_LeftHeader write put_LeftHeader;
    property MaxZoomFactor: Single read get_MaxZoomFactor write put_MaxZoomFactor;
    property MinZoomFactor: Single read get_MinZoomFactor write put_MinZoomFactor;
    property ReduceViewportForCoreInputViewOcclusions: Boolean read get_ReduceViewportForCoreInputViewOcclusions write put_ReduceViewportForCoreInputViewOcclusions;
    property ScrollableHeight: Double read get_ScrollableHeight;
    property ScrollableWidth: Double read get_ScrollableWidth;
    property TopHeader: IUIElement read get_TopHeader write put_TopHeader;
    property TopLeftHeader: IUIElement read get_TopLeftHeader write put_TopLeftHeader;
    property VerticalAnchorRatio: Double read get_VerticalAnchorRatio write put_VerticalAnchorRatio;
    property VerticalOffset: Double read get_VerticalOffset;
    property VerticalScrollBarVisibility: ScrollBarVisibility read get_VerticalScrollBarVisibility write put_VerticalScrollBarVisibility;
    property VerticalScrollMode: ScrollMode read get_VerticalScrollMode write put_VerticalScrollMode;
    property VerticalSnapPointsAlignment: Primitives_SnapPointsAlignment read get_VerticalSnapPointsAlignment write put_VerticalSnapPointsAlignment;
    property VerticalSnapPointsType: SnapPointsType read get_VerticalSnapPointsType write put_VerticalSnapPointsType;
    property ViewportHeight: Double read get_ViewportHeight;
    property ViewportWidth: Double read get_ViewportWidth;
    property ZoomFactor: Single read get_ZoomFactor;
    property ZoomMode_: ZoomMode read get_ZoomMode write put_ZoomMode;
    property ZoomSnapPoints: IVector_1__Single read get_ZoomSnapPoints;
    property ZoomSnapPointsType: SnapPointsType read get_ZoomSnapPointsType write put_ZoomSnapPointsType;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.Primitives.ISelector
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_Primitives_Selector)]
  Primitives_ISelector = interface(IInspectable)
  ['{8F7E2159-E61D-576F-8476-F83FDE3D689E}']
    function get_SelectedIndex: Integer; safecall;
    procedure put_SelectedIndex(value: Integer); safecall;
    function get_SelectedItem: IInspectable; safecall;
    procedure put_SelectedItem(value: IInspectable); safecall;
    function get_SelectedValue: IInspectable; safecall;
    procedure put_SelectedValue(value: IInspectable); safecall;
    function get_SelectedValuePath: HSTRING; safecall;
    procedure put_SelectedValuePath(value: HSTRING); safecall;
    function get_IsSynchronizedWithCurrentItem: IReference_1__Boolean; safecall;
    procedure put_IsSynchronizedWithCurrentItem(value: IReference_1__Boolean); safecall;
    function add_SelectionChanged(handler: SelectionChangedEventHandler): EventRegistrationToken; safecall;
    procedure remove_SelectionChanged(token: EventRegistrationToken); safecall;
    property IsSynchronizedWithCurrentItem: IReference_1__Boolean read get_IsSynchronizedWithCurrentItem write put_IsSynchronizedWithCurrentItem;
    property SelectedIndex: Integer read get_SelectedIndex write put_SelectedIndex;
    property SelectedItem: IInspectable read get_SelectedItem write put_SelectedItem;
    property SelectedValue: IInspectable read get_SelectedValue write put_SelectedValue;
    property SelectedValuePath: HSTRING read get_SelectedValuePath write put_SelectedValuePath;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.ISemanticZoomLocation
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_SemanticZoomLocation)]
  ISemanticZoomLocation = interface(IInspectable)
  ['{41C1DEC7-F34F-51DB-9525-5C149B05A527}']
    function get_Item: IInspectable; safecall;
    procedure put_Item(value: IInspectable); safecall;
    function get_Bounds: TRectF; safecall;
    procedure put_Bounds(value: TRectF); safecall;
    property Bounds: TRectF read get_Bounds write put_Bounds;
    property Item: IInspectable read get_Item write put_Item;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.ISemanticZoomInformation
  ISemanticZoomInformation = interface(IInspectable)
  ['{12D62B04-BB13-50F2-9D8B-E57C02B4BDE4}']
    function get_SemanticZoomOwner: ISemanticZoom; safecall;
    procedure put_SemanticZoomOwner(value: ISemanticZoom); safecall;
    function get_IsActiveView: Boolean; safecall;
    procedure put_IsActiveView(value: Boolean); safecall;
    function get_IsZoomedInView: Boolean; safecall;
    procedure put_IsZoomedInView(value: Boolean); safecall;
    procedure InitializeViewChange; safecall;
    procedure CompleteViewChange; safecall;
    procedure MakeVisible(item: ISemanticZoomLocation); safecall;
    procedure StartViewChangeFrom(source: ISemanticZoomLocation; destination: ISemanticZoomLocation); safecall;
    procedure StartViewChangeTo(source: ISemanticZoomLocation; destination: ISemanticZoomLocation); safecall;
    procedure CompleteViewChangeFrom(source: ISemanticZoomLocation; destination: ISemanticZoomLocation); safecall;
    procedure CompleteViewChangeTo(source: ISemanticZoomLocation; destination: ISemanticZoomLocation); safecall;
    property IsActiveView: Boolean read get_IsActiveView write put_IsActiveView;
    property IsZoomedInView: Boolean read get_IsZoomedInView write put_IsZoomedInView;
    property SemanticZoomOwner: ISemanticZoom read get_SemanticZoomOwner write put_SemanticZoomOwner;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.ISemanticZoomViewChangedEventArgs
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_SemanticZoomViewChangedEventArgs)]
  ISemanticZoomViewChangedEventArgs = interface(IInspectable)
  ['{CF62D53D-97D3-5CEF-96F3-1C413F524ECA}']
    function get_IsSourceZoomedInView: Boolean; safecall;
    procedure put_IsSourceZoomedInView(value: Boolean); safecall;
    function get_SourceItem: ISemanticZoomLocation; safecall;
    procedure put_SourceItem(value: ISemanticZoomLocation); safecall;
    function get_DestinationItem: ISemanticZoomLocation; safecall;
    procedure put_DestinationItem(value: ISemanticZoomLocation); safecall;
    property DestinationItem: ISemanticZoomLocation read get_DestinationItem write put_DestinationItem;
    property IsSourceZoomedInView: Boolean read get_IsSourceZoomedInView write put_IsSourceZoomedInView;
    property SourceItem: ISemanticZoomLocation read get_SourceItem write put_SourceItem;
  end;

  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.SemanticZoomViewChangedEventHandler
  SemanticZoomViewChangedEventHandler = interface(IUnknown)
  ['{4CC95C52-8A54-53B7-9251-0B3EFA605398}']
    procedure Invoke(sender: IInspectable; e: ISemanticZoomViewChangedEventArgs); safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.ISemanticZoom
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_SemanticZoom)]
  ISemanticZoom = interface(IInspectable)
  ['{7E14616D-55EF-548C-A997-C923E302718F}']
    function get_ZoomedInView: ISemanticZoomInformation; safecall;
    procedure put_ZoomedInView(value: ISemanticZoomInformation); safecall;
    function get_ZoomedOutView: ISemanticZoomInformation; safecall;
    procedure put_ZoomedOutView(value: ISemanticZoomInformation); safecall;
    function get_IsZoomedInViewActive: Boolean; safecall;
    procedure put_IsZoomedInViewActive(value: Boolean); safecall;
    function get_CanChangeViews: Boolean; safecall;
    procedure put_CanChangeViews(value: Boolean); safecall;
    function add_ViewChangeStarted(handler: SemanticZoomViewChangedEventHandler): EventRegistrationToken; safecall;
    procedure remove_ViewChangeStarted(token: EventRegistrationToken); safecall;
    function add_ViewChangeCompleted(handler: SemanticZoomViewChangedEventHandler): EventRegistrationToken; safecall;
    procedure remove_ViewChangeCompleted(token: EventRegistrationToken); safecall;
    procedure ToggleActiveView; safecall;
    function get_IsZoomOutButtonEnabled: Boolean; safecall;
    procedure put_IsZoomOutButtonEnabled(value: Boolean); safecall;
    property CanChangeViews: Boolean read get_CanChangeViews write put_CanChangeViews;
    property IsZoomOutButtonEnabled: Boolean read get_IsZoomOutButtonEnabled write put_IsZoomOutButtonEnabled;
    property IsZoomedInViewActive: Boolean read get_IsZoomedInViewActive write put_IsZoomedInViewActive;
    property ZoomedInView: ISemanticZoomInformation read get_ZoomedInView write put_ZoomedInView;
    property ZoomedOutView: ISemanticZoomInformation read get_ZoomedOutView write put_ZoomedOutView;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.ISlider
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_Slider)]
  ISlider = interface(IInspectable)
  ['{F7418ECF-7C35-5216-8BF1-D82D47CCE5DF}']
    function get_IntermediateValue: Double; safecall;
    procedure put_IntermediateValue(value: Double); safecall;
    function get_StepFrequency: Double; safecall;
    procedure put_StepFrequency(value: Double); safecall;
    function get_SnapsTo: Primitives_SliderSnapsTo; safecall;
    procedure put_SnapsTo(value: Primitives_SliderSnapsTo); safecall;
    function get_TickFrequency: Double; safecall;
    procedure put_TickFrequency(value: Double); safecall;
    function get_TickPlacement: Primitives_TickPlacement; safecall;
    procedure put_TickPlacement(value: Primitives_TickPlacement); safecall;
    function get_Orientation: Orientation; safecall;
    procedure put_Orientation(value: Orientation); safecall;
    function get_IsDirectionReversed: Boolean; safecall;
    procedure put_IsDirectionReversed(value: Boolean); safecall;
    function get_IsThumbToolTipEnabled: Boolean; safecall;
    procedure put_IsThumbToolTipEnabled(value: Boolean); safecall;
    function get_ThumbToolTipValueConverter: Data_IValueConverter; safecall;
    procedure put_ThumbToolTipValueConverter(value: Data_IValueConverter); safecall;
    function get_Header: IInspectable; safecall;
    procedure put_Header(value: IInspectable); safecall;
    function get_HeaderTemplate: IDataTemplate; safecall;
    procedure put_HeaderTemplate(value: IDataTemplate); safecall;
    property Header: IInspectable read get_Header write put_Header;
    property HeaderTemplate: IDataTemplate read get_HeaderTemplate write put_HeaderTemplate;
    property IntermediateValue: Double read get_IntermediateValue write put_IntermediateValue;
    property IsDirectionReversed: Boolean read get_IsDirectionReversed write put_IsDirectionReversed;
    property IsThumbToolTipEnabled: Boolean read get_IsThumbToolTipEnabled write put_IsThumbToolTipEnabled;
    property Orientation_: Orientation read get_Orientation write put_Orientation;
    property SnapsTo: Primitives_SliderSnapsTo read get_SnapsTo write put_SnapsTo;
    property StepFrequency: Double read get_StepFrequency write put_StepFrequency;
    property ThumbToolTipValueConverter: Data_IValueConverter read get_ThumbToolTipValueConverter write put_ThumbToolTipValueConverter;
    property TickFrequency: Double read get_TickFrequency write put_TickFrequency;
    property TickPlacement: Primitives_TickPlacement read get_TickPlacement write put_TickPlacement;
  end;

  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.ISplitButtonClickEventArgs
  ISplitButtonClickEventArgs = interface(IInspectable)
  ['{6AF896C2-E65A-5998-9C82-2AF8F3E0741F}']
  end;

  // Generic Delegate for:
  // Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.Controls.ISplitButton,Microsoft.UI.Xaml.Controls.ISplitButtonClickEventArgs>
  TypedEventHandler_2__ISplitButton__ISplitButtonClickEventArgs_Delegate_Base = interface(IUnknown)
  ['{5D54F7AB-75F6-5D96-8BBE-C08E29E81EA8}']
    procedure Invoke(sender: ISplitButton; args: ISplitButtonClickEventArgs); safecall;
  end;
  // UsedAPI Interface
  // Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.Controls.ISplitButton,Microsoft.UI.Xaml.Controls.ISplitButtonClickEventArgs>
  TypedEventHandler_2__ISplitButton__ISplitButtonClickEventArgs = interface(TypedEventHandler_2__ISplitButton__ISplitButtonClickEventArgs_Delegate_Base)
  ['{5A2D3D9A-D9EA-5E99-A3E1-65259C8E7BBB}']
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.ISplitButton
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_SplitButton)]
  ISplitButton = interface(IInspectable)
  ['{F627202D-D2D7-5FF6-BB05-8C48EB6B1FC6}']
    function get_Flyout: Primitives_IFlyoutBase; safecall;
    procedure put_Flyout(value: Primitives_IFlyoutBase); safecall;
    function get_Command: Input_ICommand; safecall;
    procedure put_Command(value: Input_ICommand); safecall;
    function get_CommandParameter: IInspectable; safecall;
    procedure put_CommandParameter(value: IInspectable); safecall;
    function add_Click(handler: TypedEventHandler_2__ISplitButton__ISplitButtonClickEventArgs): EventRegistrationToken; safecall;
    procedure remove_Click(token: EventRegistrationToken); safecall;
    property Command: Input_ICommand read get_Command write put_Command;
    property CommandParameter: IInspectable read get_CommandParameter write put_CommandParameter;
    property Flyout: Primitives_IFlyoutBase read get_Flyout write put_Flyout;
  end;

  // Generic Delegate for:
  // Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.Controls.ITextBlock,Microsoft.UI.Xaml.Controls.IIsTextTrimmedChangedEventArgs>
  TypedEventHandler_2__ITextBlock__IIsTextTrimmedChangedEventArgs_Delegate_Base = interface(IUnknown)
  ['{376BF900-BA70-54B5-ABAF-0DAF51F99E60}']
    procedure Invoke(sender: ITextBlock; args: IIsTextTrimmedChangedEventArgs); safecall;
  end;
  // UsedAPI Interface
  // Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.Controls.ITextBlock,Microsoft.UI.Xaml.Controls.IIsTextTrimmedChangedEventArgs>
  TypedEventHandler_2__ITextBlock__IIsTextTrimmedChangedEventArgs = interface(TypedEventHandler_2__ITextBlock__IIsTextTrimmedChangedEventArgs_Delegate_Base)
  ['{61EDD200-DAF8-5B04-9C82-F76D4BAF7E6C}']
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.ITextBlock
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_TextBlock)]
  ITextBlock = interface(IInspectable)
  ['{1AC8D84F-392C-5C7E-83F5-A53E3BF0ABB0}']
    function get_FontSize: Double; safecall;
    procedure put_FontSize(value: Double); safecall;
    function get_FontFamily: IFontFamily; safecall;
    procedure put_FontFamily(value: IFontFamily); safecall;
    function get_FontWeight: FontWeight; safecall;
    procedure put_FontWeight(value: FontWeight); safecall;
    function get_FontStyle: FontStyle; safecall;
    procedure put_FontStyle(value: FontStyle); safecall;
    function get_FontStretch: FontStretch; safecall;
    procedure put_FontStretch(value: FontStretch); safecall;
    function get_CharacterSpacing: Integer; safecall;
    procedure put_CharacterSpacing(value: Integer); safecall;
    function get_Foreground: IBrush; safecall;
    procedure put_Foreground(value: IBrush); safecall;
    function get_TextWrapping: TextWrapping; safecall;
    procedure put_TextWrapping(value: TextWrapping); safecall;
    function get_TextTrimming: TextTrimming; safecall;
    procedure put_TextTrimming(value: TextTrimming); safecall;
    function get_TextAlignment: TextAlignment; safecall;
    procedure put_TextAlignment(value: TextAlignment); safecall;
    function get_Text: HSTRING; safecall;
    procedure put_Text(value: HSTRING); safecall;
    function get_Inlines: IVector_1__Documents_IInline; safecall;
    function get_Padding: Thickness; safecall;
    procedure put_Padding(value: Thickness); safecall;
    function get_LineHeight: Double; safecall;
    procedure put_LineHeight(value: Double); safecall;
    function get_LineStackingStrategy: LineStackingStrategy; safecall;
    procedure put_LineStackingStrategy(value: LineStackingStrategy); safecall;
    function get_IsTextSelectionEnabled: Boolean; safecall;
    procedure put_IsTextSelectionEnabled(value: Boolean); safecall;
    function get_SelectedText: HSTRING; safecall;
    function get_ContentStart: Documents_ITextPointer; safecall;
    function get_ContentEnd: Documents_ITextPointer; safecall;
    function get_SelectionStart: Documents_ITextPointer; safecall;
    function get_SelectionEnd: Documents_ITextPointer; safecall;
    function get_BaselineOffset: Double; safecall;
    function get_SelectionHighlightColor: ISolidColorBrush; safecall;
    procedure put_SelectionHighlightColor(value: ISolidColorBrush); safecall;
    function get_MaxLines: Integer; safecall;
    procedure put_MaxLines(value: Integer); safecall;
    function get_TextLineBounds: TextLineBounds; safecall;
    procedure put_TextLineBounds(value: TextLineBounds); safecall;
    function get_OpticalMarginAlignment: OpticalMarginAlignment; safecall;
    procedure put_OpticalMarginAlignment(value: OpticalMarginAlignment); safecall;
    function get_IsColorFontEnabled: Boolean; safecall;
    procedure put_IsColorFontEnabled(value: Boolean); safecall;
    function get_TextReadingOrder: TextReadingOrder; safecall;
    procedure put_TextReadingOrder(value: TextReadingOrder); safecall;
    function get_IsTextScaleFactorEnabled: Boolean; safecall;
    procedure put_IsTextScaleFactorEnabled(value: Boolean); safecall;
    function get_TextDecorations: TextDecorations; safecall;
    procedure put_TextDecorations(value: TextDecorations); safecall;
    function get_IsTextTrimmed: Boolean; safecall;
    function get_HorizontalTextAlignment: TextAlignment; safecall;
    procedure put_HorizontalTextAlignment(value: TextAlignment); safecall;
    function get_TextHighlighters: IVector_1__Documents_ITextHighlighter; safecall;
    function get_SelectionFlyout: Primitives_IFlyoutBase; safecall;
    procedure put_SelectionFlyout(value: Primitives_IFlyoutBase); safecall;
    function add_SelectionChanged(handler: RoutedEventHandler): EventRegistrationToken; safecall;
    procedure remove_SelectionChanged(token: EventRegistrationToken); safecall;
    function add_ContextMenuOpening(handler: ContextMenuOpeningEventHandler): EventRegistrationToken; safecall;
    procedure remove_ContextMenuOpening(token: EventRegistrationToken); safecall;
    function add_IsTextTrimmedChanged(handler: TypedEventHandler_2__ITextBlock__IIsTextTrimmedChangedEventArgs): EventRegistrationToken; safecall;
    procedure remove_IsTextTrimmedChanged(token: EventRegistrationToken); safecall;
    procedure SelectAll; safecall;
    procedure Select(start: Documents_ITextPointer; &end: Documents_ITextPointer); safecall;
    function GetAlphaMask: ICompositionBrush; safecall;
    procedure CopySelectionToClipboard; safecall;
    property BaselineOffset: Double read get_BaselineOffset;
    property CharacterSpacing: Integer read get_CharacterSpacing write put_CharacterSpacing;
    property ContentEnd: Documents_ITextPointer read get_ContentEnd;
    property ContentStart: Documents_ITextPointer read get_ContentStart;
    property FontFamily: IFontFamily read get_FontFamily write put_FontFamily;
    property FontSize: Double read get_FontSize write put_FontSize;
    property FontStretch_: FontStretch read get_FontStretch write put_FontStretch;
    property FontStyle_: FontStyle read get_FontStyle write put_FontStyle;
    property FontWeight_: FontWeight read get_FontWeight write put_FontWeight;
    property Foreground: IBrush read get_Foreground write put_Foreground;
    property HorizontalTextAlignment: TextAlignment read get_HorizontalTextAlignment write put_HorizontalTextAlignment;
    property Inlines: IVector_1__Documents_IInline read get_Inlines;
    property IsColorFontEnabled: Boolean read get_IsColorFontEnabled write put_IsColorFontEnabled;
    property IsTextScaleFactorEnabled: Boolean read get_IsTextScaleFactorEnabled write put_IsTextScaleFactorEnabled;
    property IsTextSelectionEnabled: Boolean read get_IsTextSelectionEnabled write put_IsTextSelectionEnabled;
    property IsTextTrimmed: Boolean read get_IsTextTrimmed;
    property LineHeight: Double read get_LineHeight write put_LineHeight;
    property LineStackingStrategy_: LineStackingStrategy read get_LineStackingStrategy write put_LineStackingStrategy;
    property MaxLines: Integer read get_MaxLines write put_MaxLines;
    property OpticalMarginAlignment_: OpticalMarginAlignment read get_OpticalMarginAlignment write put_OpticalMarginAlignment;
    property Padding: Thickness read get_Padding write put_Padding;
    property SelectedText: HSTRING read get_SelectedText;
    property SelectionEnd: Documents_ITextPointer read get_SelectionEnd;
    property SelectionFlyout: Primitives_IFlyoutBase read get_SelectionFlyout write put_SelectionFlyout;
    property SelectionHighlightColor: ISolidColorBrush read get_SelectionHighlightColor write put_SelectionHighlightColor;
    property SelectionStart: Documents_ITextPointer read get_SelectionStart;
    property Text: HSTRING read get_Text write put_Text;
    property TextAlignment_: TextAlignment read get_TextAlignment write put_TextAlignment;
    property TextDecorations_: TextDecorations read get_TextDecorations write put_TextDecorations;
    property TextHighlighters: IVector_1__Documents_ITextHighlighter read get_TextHighlighters;
    property TextLineBounds_: TextLineBounds read get_TextLineBounds write put_TextLineBounds;
    property TextReadingOrder_: TextReadingOrder read get_TextReadingOrder write put_TextReadingOrder;
    property TextTrimming_: TextTrimming read get_TextTrimming write put_TextTrimming;
    property TextWrapping_: TextWrapping read get_TextWrapping write put_TextWrapping;
  end;

  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.ITextChangedEventArgs
  ITextChangedEventArgs = interface(IInspectable)
  ['{71C37E43-7BE7-52FC-BF8C-9867F44BE5F4}']
  end;

  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.TextChangedEventHandler
  TextChangedEventHandler = interface(IUnknown)
  ['{5D8DDCFF-45D8-5E7C-9B8B-C41D2893C6A1}']
    procedure Invoke(sender: IInspectable; e: ITextChangedEventArgs); safecall;
  end;

  // Generic Delegate for:
  // Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.Controls.ITextBox,Microsoft.UI.Xaml.Controls.ITextCompositionStartedEventArgs>
  TypedEventHandler_2__ITextBox__ITextCompositionStartedEventArgs_Delegate_Base = interface(IUnknown)
  ['{BCC3CC9B-1608-5871-B582-E5C2247BA142}']
    procedure Invoke(sender: ITextBox; args: ITextCompositionStartedEventArgs); safecall;
  end;
  // UsedAPI Interface
  // Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.Controls.ITextBox,Microsoft.UI.Xaml.Controls.ITextCompositionStartedEventArgs>
  TypedEventHandler_2__ITextBox__ITextCompositionStartedEventArgs = interface(TypedEventHandler_2__ITextBox__ITextCompositionStartedEventArgs_Delegate_Base)
  ['{35267A5F-DAF4-5CD4-A07A-5019A0A5784A}']
  end;

  // Generic Delegate for:
  // Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.Controls.ITextBox,Microsoft.UI.Xaml.Controls.ITextCompositionChangedEventArgs>
  TypedEventHandler_2__ITextBox__ITextCompositionChangedEventArgs_Delegate_Base = interface(IUnknown)
  ['{34C56877-38E3-55D6-A250-53CE9E490DFC}']
    procedure Invoke(sender: ITextBox; args: ITextCompositionChangedEventArgs); safecall;
  end;
  // UsedAPI Interface
  // Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.Controls.ITextBox,Microsoft.UI.Xaml.Controls.ITextCompositionChangedEventArgs>
  TypedEventHandler_2__ITextBox__ITextCompositionChangedEventArgs = interface(TypedEventHandler_2__ITextBox__ITextCompositionChangedEventArgs_Delegate_Base)
  ['{558E3941-1CE2-54E9-9E7D-980FBDFD641B}']
  end;

  // Generic Delegate for:
  // Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.Controls.ITextBox,Microsoft.UI.Xaml.Controls.ITextCompositionEndedEventArgs>
  TypedEventHandler_2__ITextBox__ITextCompositionEndedEventArgs_Delegate_Base = interface(IUnknown)
  ['{BCC52F19-43DE-5469-8A77-A274DD3AE14E}']
    procedure Invoke(sender: ITextBox; args: ITextCompositionEndedEventArgs); safecall;
  end;
  // UsedAPI Interface
  // Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.Controls.ITextBox,Microsoft.UI.Xaml.Controls.ITextCompositionEndedEventArgs>
  TypedEventHandler_2__ITextBox__ITextCompositionEndedEventArgs = interface(TypedEventHandler_2__ITextBox__ITextCompositionEndedEventArgs_Delegate_Base)
  ['{0CA50504-C507-507E-8935-D56BD88D78A0}']
  end;

  // Generic Delegate for:
  // Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.Controls.ITextBox,Microsoft.UI.Xaml.Controls.ITextControlCopyingToClipboardEventArgs>
  TypedEventHandler_2__ITextBox__ITextControlCopyingToClipboardEventArgs_Delegate_Base = interface(IUnknown)
  ['{75B62795-49AB-5F82-B6B4-79D621E2C732}']
    procedure Invoke(sender: ITextBox; args: ITextControlCopyingToClipboardEventArgs); safecall;
  end;
  // UsedAPI Interface
  // Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.Controls.ITextBox,Microsoft.UI.Xaml.Controls.ITextControlCopyingToClipboardEventArgs>
  TypedEventHandler_2__ITextBox__ITextControlCopyingToClipboardEventArgs = interface(TypedEventHandler_2__ITextBox__ITextControlCopyingToClipboardEventArgs_Delegate_Base)
  ['{97BF9D08-1FA4-53B2-97A9-B47D893BD370}']
  end;

  // Generic Delegate for:
  // Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.Controls.ITextBox,Microsoft.UI.Xaml.Controls.ITextControlCuttingToClipboardEventArgs>
  TypedEventHandler_2__ITextBox__ITextControlCuttingToClipboardEventArgs_Delegate_Base = interface(IUnknown)
  ['{4D5A2B91-5E42-5E2F-8EAA-2102B387E22D}']
    procedure Invoke(sender: ITextBox; args: ITextControlCuttingToClipboardEventArgs); safecall;
  end;
  // UsedAPI Interface
  // Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.Controls.ITextBox,Microsoft.UI.Xaml.Controls.ITextControlCuttingToClipboardEventArgs>
  TypedEventHandler_2__ITextBox__ITextControlCuttingToClipboardEventArgs = interface(TypedEventHandler_2__ITextBox__ITextControlCuttingToClipboardEventArgs_Delegate_Base)
  ['{B863B9FF-823E-5DB1-8696-D0F8B3FE667A}']
  end;

  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.ITextBoxBeforeTextChangingEventArgs
  ITextBoxBeforeTextChangingEventArgs = interface(IInspectable)
  ['{BA46105B-9A16-5237-A20F-5DF750992A05}']
    function get_NewText: HSTRING; safecall;
    function get_Cancel: Boolean; safecall;
    procedure put_Cancel(value: Boolean); safecall;
    property Cancel: Boolean read get_Cancel write put_Cancel;
    property NewText: HSTRING read get_NewText;
  end;

  // Generic Delegate for:
  // Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.Controls.ITextBox,Microsoft.UI.Xaml.Controls.ITextBoxBeforeTextChangingEventArgs>
  TypedEventHandler_2__ITextBox__ITextBoxBeforeTextChangingEventArgs_Delegate_Base = interface(IUnknown)
  ['{E649E080-32DC-5977-A6E6-7FDE0A921413}']
    procedure Invoke(sender: ITextBox; args: ITextBoxBeforeTextChangingEventArgs); safecall;
  end;
  // UsedAPI Interface
  // Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.Controls.ITextBox,Microsoft.UI.Xaml.Controls.ITextBoxBeforeTextChangingEventArgs>
  TypedEventHandler_2__ITextBox__ITextBoxBeforeTextChangingEventArgs = interface(TypedEventHandler_2__ITextBox__ITextBoxBeforeTextChangingEventArgs_Delegate_Base)
  ['{88ACAA56-8A5B-5B8F-BBCF-88DBC80FB23B}']
  end;

  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.ITextBoxSelectionChangingEventArgs
  ITextBoxSelectionChangingEventArgs = interface(IInspectable)
  ['{6DCE20DB-894E-5FF6-825B-F9891AF79516}']
    function get_SelectionStart: Integer; safecall;
    function get_SelectionLength: Integer; safecall;
    function get_Cancel: Boolean; safecall;
    procedure put_Cancel(value: Boolean); safecall;
    property Cancel: Boolean read get_Cancel write put_Cancel;
    property SelectionLength: Integer read get_SelectionLength;
    property SelectionStart: Integer read get_SelectionStart;
  end;

  // Generic Delegate for:
  // Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.Controls.ITextBox,Microsoft.UI.Xaml.Controls.ITextBoxSelectionChangingEventArgs>
  TypedEventHandler_2__ITextBox__ITextBoxSelectionChangingEventArgs_Delegate_Base = interface(IUnknown)
  ['{AD407B5A-C7C6-5CE3-A678-987848458534}']
    procedure Invoke(sender: ITextBox; args: ITextBoxSelectionChangingEventArgs); safecall;
  end;
  // UsedAPI Interface
  // Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.Controls.ITextBox,Microsoft.UI.Xaml.Controls.ITextBoxSelectionChangingEventArgs>
  TypedEventHandler_2__ITextBox__ITextBoxSelectionChangingEventArgs = interface(TypedEventHandler_2__ITextBox__ITextBoxSelectionChangingEventArgs_Delegate_Base)
  ['{E40878C7-7D6B-5102-BD76-2A8552EB4B20}']
  end;

  // Generic Delegate for:
  // Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.Controls.ITextBox,Microsoft.UI.Xaml.Controls.ICandidateWindowBoundsChangedEventArgs>
  TypedEventHandler_2__ITextBox__ICandidateWindowBoundsChangedEventArgs_Delegate_Base = interface(IUnknown)
  ['{1904EBDE-F7B5-56B4-9DEC-7429484C06F2}']
    procedure Invoke(sender: ITextBox; args: ICandidateWindowBoundsChangedEventArgs); safecall;
  end;
  // UsedAPI Interface
  // Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.Controls.ITextBox,Microsoft.UI.Xaml.Controls.ICandidateWindowBoundsChangedEventArgs>
  TypedEventHandler_2__ITextBox__ICandidateWindowBoundsChangedEventArgs = interface(TypedEventHandler_2__ITextBox__ICandidateWindowBoundsChangedEventArgs_Delegate_Base)
  ['{5E0A10F9-3052-5781-A314-1995851E3B18}']
  end;

  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.ITextBoxTextChangingEventArgs
  ITextBoxTextChangingEventArgs = interface(IInspectable)
  ['{A1A08D48-E8C0-5379-B138-7EB3F8D5F5E6}']
    function get_IsContentChanging: Boolean; safecall;
    property IsContentChanging: Boolean read get_IsContentChanging;
  end;

  // Generic Delegate for:
  // Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.Controls.ITextBox,Microsoft.UI.Xaml.Controls.ITextBoxTextChangingEventArgs>
  TypedEventHandler_2__ITextBox__ITextBoxTextChangingEventArgs_Delegate_Base = interface(IUnknown)
  ['{FBB9DD7C-6CAE-56CF-8862-C460DFE772EE}']
    procedure Invoke(sender: ITextBox; args: ITextBoxTextChangingEventArgs); safecall;
  end;
  // UsedAPI Interface
  // Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.Controls.ITextBox,Microsoft.UI.Xaml.Controls.ITextBoxTextChangingEventArgs>
  TypedEventHandler_2__ITextBox__ITextBoxTextChangingEventArgs = interface(TypedEventHandler_2__ITextBox__ITextBoxTextChangingEventArgs_Delegate_Base)
  ['{EB2927A4-5C16-59AE-9313-53AFDA990E75}']
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.ITextBox
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_TextBox)]
  ITextBox = interface(IInspectable)
  ['{873AF7C2-AB89-5D76-8DBE-3D6325669DF5}']
    function get_Text: HSTRING; safecall;
    procedure put_Text(value: HSTRING); safecall;
    function get_SelectedText: HSTRING; safecall;
    procedure put_SelectedText(value: HSTRING); safecall;
    function get_SelectionLength: Integer; safecall;
    procedure put_SelectionLength(value: Integer); safecall;
    function get_SelectionStart: Integer; safecall;
    procedure put_SelectionStart(value: Integer); safecall;
    function get_MaxLength: Integer; safecall;
    procedure put_MaxLength(value: Integer); safecall;
    function get_IsReadOnly: Boolean; safecall;
    procedure put_IsReadOnly(value: Boolean); safecall;
    function get_AcceptsReturn: Boolean; safecall;
    procedure put_AcceptsReturn(value: Boolean); safecall;
    function get_TextAlignment: TextAlignment; safecall;
    procedure put_TextAlignment(value: TextAlignment); safecall;
    function get_TextWrapping: TextWrapping; safecall;
    procedure put_TextWrapping(value: TextWrapping); safecall;
    function get_IsSpellCheckEnabled: Boolean; safecall;
    procedure put_IsSpellCheckEnabled(value: Boolean); safecall;
    function get_IsTextPredictionEnabled: Boolean; safecall;
    procedure put_IsTextPredictionEnabled(value: Boolean); safecall;
    function get_InputScope: Input_IInputScope; safecall;
    procedure put_InputScope(value: Input_IInputScope); safecall;
    function get_Header: IInspectable; safecall;
    procedure put_Header(value: IInspectable); safecall;
    function get_HeaderTemplate: IDataTemplate; safecall;
    procedure put_HeaderTemplate(value: IDataTemplate); safecall;
    function get_PlaceholderText: HSTRING; safecall;
    procedure put_PlaceholderText(value: HSTRING); safecall;
    function get_SelectionHighlightColor: ISolidColorBrush; safecall;
    procedure put_SelectionHighlightColor(value: ISolidColorBrush); safecall;
    function get_PreventKeyboardDisplayOnProgrammaticFocus: Boolean; safecall;
    procedure put_PreventKeyboardDisplayOnProgrammaticFocus(value: Boolean); safecall;
    function get_IsColorFontEnabled: Boolean; safecall;
    procedure put_IsColorFontEnabled(value: Boolean); safecall;
    function get_SelectionHighlightColorWhenNotFocused: ISolidColorBrush; safecall;
    procedure put_SelectionHighlightColorWhenNotFocused(value: ISolidColorBrush); safecall;
    function get_HorizontalTextAlignment: TextAlignment; safecall;
    procedure put_HorizontalTextAlignment(value: TextAlignment); safecall;
    function get_CharacterCasing: CharacterCasing; safecall;
    procedure put_CharacterCasing(value: CharacterCasing); safecall;
    function get_PlaceholderForeground: IBrush; safecall;
    procedure put_PlaceholderForeground(value: IBrush); safecall;
    function get_CanPasteClipboardContent: Boolean; safecall;
    function get_CanUndo: Boolean; safecall;
    function get_CanRedo: Boolean; safecall;
    function get_SelectionFlyout: Primitives_IFlyoutBase; safecall;
    procedure put_SelectionFlyout(value: Primitives_IFlyoutBase); safecall;
    function get_ProofingMenuFlyout: Primitives_IFlyoutBase; safecall;
    function get_Description: IInspectable; safecall;
    procedure put_Description(value: IInspectable); safecall;
    function add_TextChanged(handler: TextChangedEventHandler): EventRegistrationToken; safecall;
    procedure remove_TextChanged(token: EventRegistrationToken); safecall;
    function add_SelectionChanged(handler: RoutedEventHandler): EventRegistrationToken; safecall;
    procedure remove_SelectionChanged(token: EventRegistrationToken); safecall;
    function add_ContextMenuOpening(handler: ContextMenuOpeningEventHandler): EventRegistrationToken; safecall;
    procedure remove_ContextMenuOpening(token: EventRegistrationToken); safecall;
    function add_Paste(handler: TextControlPasteEventHandler): EventRegistrationToken; safecall;
    procedure remove_Paste(token: EventRegistrationToken); safecall;
    function add_TextCompositionStarted(handler: TypedEventHandler_2__ITextBox__ITextCompositionStartedEventArgs): EventRegistrationToken; safecall;
    procedure remove_TextCompositionStarted(token: EventRegistrationToken); safecall;
    function add_TextCompositionChanged(handler: TypedEventHandler_2__ITextBox__ITextCompositionChangedEventArgs): EventRegistrationToken; safecall;
    procedure remove_TextCompositionChanged(token: EventRegistrationToken); safecall;
    function add_TextCompositionEnded(handler: TypedEventHandler_2__ITextBox__ITextCompositionEndedEventArgs): EventRegistrationToken; safecall;
    procedure remove_TextCompositionEnded(token: EventRegistrationToken); safecall;
    function add_CopyingToClipboard(handler: TypedEventHandler_2__ITextBox__ITextControlCopyingToClipboardEventArgs): EventRegistrationToken; safecall;
    procedure remove_CopyingToClipboard(token: EventRegistrationToken); safecall;
    function add_CuttingToClipboard(handler: TypedEventHandler_2__ITextBox__ITextControlCuttingToClipboardEventArgs): EventRegistrationToken; safecall;
    procedure remove_CuttingToClipboard(token: EventRegistrationToken); safecall;
    function add_BeforeTextChanging(handler: TypedEventHandler_2__ITextBox__ITextBoxBeforeTextChangingEventArgs): EventRegistrationToken; safecall;
    procedure remove_BeforeTextChanging(token: EventRegistrationToken); safecall;
    function add_SelectionChanging(handler: TypedEventHandler_2__ITextBox__ITextBoxSelectionChangingEventArgs): EventRegistrationToken; safecall;
    procedure remove_SelectionChanging(token: EventRegistrationToken); safecall;
    procedure Select(start: Integer; length: Integer); safecall;
    procedure SelectAll; safecall;
    function GetRectFromCharacterIndex(charIndex: Integer; trailingEdge: Boolean): TRectF; safecall;
    function GetLinguisticAlternativesAsync: IAsyncOperation_1__IVectorView_1__HSTRING; safecall;
    procedure Undo; safecall;
    procedure Redo; safecall;
    procedure PasteFromClipboard; safecall;
    procedure CopySelectionToClipboard; safecall;
    procedure CutSelectionToClipboard; safecall;
    procedure ClearUndoRedoHistory; safecall;
    function get_TextReadingOrder: TextReadingOrder; safecall;
    procedure put_TextReadingOrder(value: TextReadingOrder); safecall;
    function get_DesiredCandidateWindowAlignment: CandidateWindowAlignment; safecall;
    procedure put_DesiredCandidateWindowAlignment(value: CandidateWindowAlignment); safecall;
    function add_CandidateWindowBoundsChanged(handler: TypedEventHandler_2__ITextBox__ICandidateWindowBoundsChangedEventArgs): EventRegistrationToken; safecall;
    procedure remove_CandidateWindowBoundsChanged(token: EventRegistrationToken); safecall;
    function add_TextChanging(handler: TypedEventHandler_2__ITextBox__ITextBoxTextChangingEventArgs): EventRegistrationToken; safecall;
    procedure remove_TextChanging(token: EventRegistrationToken); safecall;
    property AcceptsReturn: Boolean read get_AcceptsReturn write put_AcceptsReturn;
    property CanPasteClipboardContent: Boolean read get_CanPasteClipboardContent;
    property CanRedo: Boolean read get_CanRedo;
    property CanUndo: Boolean read get_CanUndo;
    property CharacterCasing_: CharacterCasing read get_CharacterCasing write put_CharacterCasing;
    property Description: IInspectable read get_Description write put_Description;
    property DesiredCandidateWindowAlignment: CandidateWindowAlignment read get_DesiredCandidateWindowAlignment write put_DesiredCandidateWindowAlignment;
    property Header: IInspectable read get_Header write put_Header;
    property HeaderTemplate: IDataTemplate read get_HeaderTemplate write put_HeaderTemplate;
    property HorizontalTextAlignment: TextAlignment read get_HorizontalTextAlignment write put_HorizontalTextAlignment;
    property InputScope: Input_IInputScope read get_InputScope write put_InputScope;
    property IsColorFontEnabled: Boolean read get_IsColorFontEnabled write put_IsColorFontEnabled;
    property IsReadOnly: Boolean read get_IsReadOnly write put_IsReadOnly;
    property IsSpellCheckEnabled: Boolean read get_IsSpellCheckEnabled write put_IsSpellCheckEnabled;
    property IsTextPredictionEnabled: Boolean read get_IsTextPredictionEnabled write put_IsTextPredictionEnabled;
    property MaxLength: Integer read get_MaxLength write put_MaxLength;
    property PlaceholderForeground: IBrush read get_PlaceholderForeground write put_PlaceholderForeground;
    property PlaceholderText: HSTRING read get_PlaceholderText write put_PlaceholderText;
    property PreventKeyboardDisplayOnProgrammaticFocus: Boolean read get_PreventKeyboardDisplayOnProgrammaticFocus write put_PreventKeyboardDisplayOnProgrammaticFocus;
    property ProofingMenuFlyout: Primitives_IFlyoutBase read get_ProofingMenuFlyout;
    property SelectedText: HSTRING read get_SelectedText write put_SelectedText;
    property SelectionFlyout: Primitives_IFlyoutBase read get_SelectionFlyout write put_SelectionFlyout;
    property SelectionHighlightColor: ISolidColorBrush read get_SelectionHighlightColor write put_SelectionHighlightColor;
    property SelectionHighlightColorWhenNotFocused: ISolidColorBrush read get_SelectionHighlightColorWhenNotFocused write put_SelectionHighlightColorWhenNotFocused;
    property SelectionLength: Integer read get_SelectionLength write put_SelectionLength;
    property SelectionStart: Integer read get_SelectionStart write put_SelectionStart;
    property Text: HSTRING read get_Text write put_Text;
    property TextAlignment_: TextAlignment read get_TextAlignment write put_TextAlignment;
    property TextReadingOrder_: TextReadingOrder read get_TextReadingOrder write put_TextReadingOrder;
    property TextWrapping_: TextWrapping read get_TextWrapping write put_TextWrapping;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.Primitives.IDragStartedEventArgs
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_Primitives_DragStartedEventArgs)]
  Primitives_IDragStartedEventArgs = interface(IInspectable)
  ['{AA27AEE4-2BDD-5D9A-8A1C-B37480A2012B}']
    function get_HorizontalOffset: Double; safecall;
    function get_VerticalOffset: Double; safecall;
    property HorizontalOffset: Double read get_HorizontalOffset;
    property VerticalOffset: Double read get_VerticalOffset;
  end;

  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.Primitives.DragStartedEventHandler
  Primitives_DragStartedEventHandler = interface(IUnknown)
  ['{13191F6D-A651-5870-B3A1-221550003512}']
    procedure Invoke(sender: IInspectable; e: Primitives_IDragStartedEventArgs); safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.Primitives.IDragDeltaEventArgs
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_Primitives_DragDeltaEventArgs)]
  Primitives_IDragDeltaEventArgs = interface(IInspectable)
  ['{BC405765-ED94-5697-8506-A8F3D15272F9}']
    function get_HorizontalChange: Double; safecall;
    function get_VerticalChange: Double; safecall;
    property HorizontalChange: Double read get_HorizontalChange;
    property VerticalChange: Double read get_VerticalChange;
  end;

  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.Primitives.DragDeltaEventHandler
  Primitives_DragDeltaEventHandler = interface(IUnknown)
  ['{49CA91D0-FC43-56B1-98BD-68E2E1E24DE9}']
    procedure Invoke(sender: IInspectable; e: Primitives_IDragDeltaEventArgs); safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.Primitives.IDragCompletedEventArgs
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_Primitives_DragCompletedEventArgs)]
  Primitives_IDragCompletedEventArgs = interface(IInspectable)
  ['{ACD47547-3784-51FF-8EEB-7B212439974B}']
    function get_HorizontalChange: Double; safecall;
    function get_VerticalChange: Double; safecall;
    function get_Canceled: Boolean; safecall;
    property Canceled: Boolean read get_Canceled;
    property HorizontalChange: Double read get_HorizontalChange;
    property VerticalChange: Double read get_VerticalChange;
  end;

  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.Primitives.DragCompletedEventHandler
  Primitives_DragCompletedEventHandler = interface(IUnknown)
  ['{A27012CB-923F-5992-ADE2-878F7C794EF5}']
    procedure Invoke(sender: IInspectable; e: Primitives_IDragCompletedEventArgs); safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.Primitives.IThumb
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_Primitives_Thumb)]
  Primitives_IThumb = interface(IInspectable)
  ['{9B540AE4-98ED-5A19-9512-A56878C52FEE}']
    function get_IsDragging: Boolean; safecall;
    function add_DragStarted(handler: Primitives_DragStartedEventHandler): EventRegistrationToken; safecall;
    procedure remove_DragStarted(token: EventRegistrationToken); safecall;
    function add_DragDelta(handler: Primitives_DragDeltaEventHandler): EventRegistrationToken; safecall;
    procedure remove_DragDelta(token: EventRegistrationToken); safecall;
    function add_DragCompleted(handler: Primitives_DragCompletedEventHandler): EventRegistrationToken; safecall;
    procedure remove_DragCompleted(token: EventRegistrationToken); safecall;
    procedure CancelDrag; safecall;
    property IsDragging: Boolean read get_IsDragging;
  end;

  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.ITimePickerValueChangedEventArgs
  ITimePickerValueChangedEventArgs = interface(IInspectable)
  ['{7B98953F-C24A-53C6-8A3A-520558508B08}']
    function get_OldTime: TimeSpan; safecall;
    function get_NewTime: TimeSpan; safecall;
    property NewTime: TimeSpan read get_NewTime;
    property OldTime: TimeSpan read get_OldTime;
  end;

  // Generic Delegate for:
  // Windows.Foundation.EventHandler`1<Microsoft.UI.Xaml.Controls.ITimePickerValueChangedEventArgs>
  EventHandler_1__ITimePickerValueChangedEventArgs_Delegate_Base = interface(IUnknown)
  ['{AD85B1DA-81E4-57C8-98DD-7062D49A9251}']
    procedure Invoke(sender: IInspectable; args: ITimePickerValueChangedEventArgs); safecall;
  end;
  // UsedAPI Interface
  // Windows.Foundation.EventHandler`1<Microsoft.UI.Xaml.Controls.ITimePickerValueChangedEventArgs>
  EventHandler_1__ITimePickerValueChangedEventArgs = interface(EventHandler_1__ITimePickerValueChangedEventArgs_Delegate_Base)
  ['{E3BDBB33-B340-5F93-B694-C048BE8F01C0}']
  end;

  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.ITimePickerSelectedValueChangedEventArgs
  ITimePickerSelectedValueChangedEventArgs = interface(IInspectable)
  ['{6ED7EDF1-9B0B-5E7B-9E10-F35660A29FD2}']
    function get_OldTime: IReference_1__TimeSpan; safecall;
    function get_NewTime: IReference_1__TimeSpan; safecall;
    property NewTime: IReference_1__TimeSpan read get_NewTime;
    property OldTime: IReference_1__TimeSpan read get_OldTime;
  end;

  // Generic Delegate for:
  // Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.Controls.ITimePicker,Microsoft.UI.Xaml.Controls.ITimePickerSelectedValueChangedEventArgs>
  TypedEventHandler_2__ITimePicker__ITimePickerSelectedValueChangedEventArgs_Delegate_Base = interface(IUnknown)
  ['{C88B9892-FC46-58C9-862A-7E0F8D1FC393}']
    procedure Invoke(sender: ITimePicker; args: ITimePickerSelectedValueChangedEventArgs); safecall;
  end;
  // UsedAPI Interface
  // Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.Controls.ITimePicker,Microsoft.UI.Xaml.Controls.ITimePickerSelectedValueChangedEventArgs>
  TypedEventHandler_2__ITimePicker__ITimePickerSelectedValueChangedEventArgs = interface(TypedEventHandler_2__ITimePicker__ITimePickerSelectedValueChangedEventArgs_Delegate_Base)
  ['{BEB00473-EF26-5BF9-A2CE-6707A869D98A}']
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.ITimePicker
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_TimePicker)]
  ITimePicker = interface(IInspectable)
  ['{ED4BAA33-C240-5934-9229-82D37B26F846}']
    function get_Header: IInspectable; safecall;
    procedure put_Header(value: IInspectable); safecall;
    function get_HeaderTemplate: IDataTemplate; safecall;
    procedure put_HeaderTemplate(value: IDataTemplate); safecall;
    function get_ClockIdentifier: HSTRING; safecall;
    procedure put_ClockIdentifier(value: HSTRING); safecall;
    function get_MinuteIncrement: Integer; safecall;
    procedure put_MinuteIncrement(value: Integer); safecall;
    function get_Time: TimeSpan; safecall;
    procedure put_Time(value: TimeSpan); safecall;
    function get_LightDismissOverlayMode: LightDismissOverlayMode; safecall;
    procedure put_LightDismissOverlayMode(value: LightDismissOverlayMode); safecall;
    function get_SelectedTime: IReference_1__TimeSpan; safecall;
    procedure put_SelectedTime(value: IReference_1__TimeSpan); safecall;
    function add_TimeChanged(handler: EventHandler_1__ITimePickerValueChangedEventArgs): EventRegistrationToken; safecall;
    procedure remove_TimeChanged(token: EventRegistrationToken); safecall;
    function add_SelectedTimeChanged(handler: TypedEventHandler_2__ITimePicker__ITimePickerSelectedValueChangedEventArgs): EventRegistrationToken; safecall;
    procedure remove_SelectedTimeChanged(token: EventRegistrationToken); safecall;
    property ClockIdentifier: HSTRING read get_ClockIdentifier write put_ClockIdentifier;
    property Header: IInspectable read get_Header write put_Header;
    property HeaderTemplate: IDataTemplate read get_HeaderTemplate write put_HeaderTemplate;
    property LightDismissOverlayMode_: LightDismissOverlayMode read get_LightDismissOverlayMode write put_LightDismissOverlayMode;
    property MinuteIncrement: Integer read get_MinuteIncrement write put_MinuteIncrement;
    property SelectedTime: IReference_1__TimeSpan read get_SelectedTime write put_SelectedTime;
    property Time: TimeSpan read get_Time write put_Time;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.Primitives.IToggleButton
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_Primitives_ToggleButton)]
  Primitives_IToggleButton = interface(IInspectable)
  ['{686FBAA4-C866-568B-8F75-481D8D545291}']
    function get_IsChecked: IReference_1__Boolean; safecall;
    procedure put_IsChecked(value: IReference_1__Boolean); safecall;
    function get_IsThreeState: Boolean; safecall;
    procedure put_IsThreeState(value: Boolean); safecall;
    function add_Checked(handler: RoutedEventHandler): EventRegistrationToken; safecall;
    procedure remove_Checked(token: EventRegistrationToken); safecall;
    function add_Unchecked(handler: RoutedEventHandler): EventRegistrationToken; safecall;
    procedure remove_Unchecked(token: EventRegistrationToken); safecall;
    function add_Indeterminate(handler: RoutedEventHandler): EventRegistrationToken; safecall;
    procedure remove_Indeterminate(token: EventRegistrationToken); safecall;
    property IsChecked: IReference_1__Boolean read get_IsChecked write put_IsChecked;
    property IsThreeState: Boolean read get_IsThreeState write put_IsThreeState;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IToggleMenuFlyoutItem
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_ToggleMenuFlyoutItem)]
  IToggleMenuFlyoutItem = interface(IInspectable)
  ['{1803F260-67E4-5BC1-A63A-123510167BB8}']
    function get_IsChecked: Boolean; safecall;
    procedure put_IsChecked(value: Boolean); safecall;
    property IsChecked: Boolean read get_IsChecked write put_IsChecked;
  end;

  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IToggleSplitButtonIsCheckedChangedEventArgs
  IToggleSplitButtonIsCheckedChangedEventArgs = interface(IInspectable)
  ['{6CAB1E15-C017-5760-828B-DAFC21D54EB2}']
  end;

  // Generic Delegate for:
  // Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.Controls.IToggleSplitButton,Microsoft.UI.Xaml.Controls.IToggleSplitButtonIsCheckedChangedEventArgs>
  TypedEventHandler_2__IToggleSplitButton__IToggleSplitButtonIsCheckedChangedEventArgs_Delegate_Base = interface(IUnknown)
  ['{81B28E20-A1B7-5F3F-BC21-9DB6FAA0C549}']
    procedure Invoke(sender: IToggleSplitButton; args: IToggleSplitButtonIsCheckedChangedEventArgs); safecall;
  end;
  // UsedAPI Interface
  // Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.Controls.IToggleSplitButton,Microsoft.UI.Xaml.Controls.IToggleSplitButtonIsCheckedChangedEventArgs>
  TypedEventHandler_2__IToggleSplitButton__IToggleSplitButtonIsCheckedChangedEventArgs = interface(TypedEventHandler_2__IToggleSplitButton__IToggleSplitButtonIsCheckedChangedEventArgs_Delegate_Base)
  ['{3F885D25-F8E3-5A8B-962E-4345451697D1}']
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IToggleSplitButton
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_ToggleSplitButton)]
  IToggleSplitButton = interface(IInspectable)
  ['{5C0F247B-BD00-5509-88A8-B09007AE22B0}']
    function get_IsChecked: Boolean; safecall;
    procedure put_IsChecked(value: Boolean); safecall;
    function add_IsCheckedChanged(handler: TypedEventHandler_2__IToggleSplitButton__IToggleSplitButtonIsCheckedChangedEventArgs): EventRegistrationToken; safecall;
    procedure remove_IsCheckedChanged(token: EventRegistrationToken); safecall;
    property IsChecked: Boolean read get_IsChecked write put_IsChecked;
  end;

  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.Primitives.IToggleSwitchTemplateSettings
  Primitives_IToggleSwitchTemplateSettings = interface(IInspectable)
  ['{8F9640A3-AA4E-52DA-A2C6-9167C800BABA}']
    function get_KnobCurrentToOnOffset: Double; safecall;
    function get_KnobCurrentToOffOffset: Double; safecall;
    function get_KnobOnToOffOffset: Double; safecall;
    function get_KnobOffToOnOffset: Double; safecall;
    function get_CurtainCurrentToOnOffset: Double; safecall;
    function get_CurtainCurrentToOffOffset: Double; safecall;
    function get_CurtainOnToOffOffset: Double; safecall;
    function get_CurtainOffToOnOffset: Double; safecall;
    property CurtainCurrentToOffOffset: Double read get_CurtainCurrentToOffOffset;
    property CurtainCurrentToOnOffset: Double read get_CurtainCurrentToOnOffset;
    property CurtainOffToOnOffset: Double read get_CurtainOffToOnOffset;
    property CurtainOnToOffOffset: Double read get_CurtainOnToOffOffset;
    property KnobCurrentToOffOffset: Double read get_KnobCurrentToOffOffset;
    property KnobCurrentToOnOffset: Double read get_KnobCurrentToOnOffset;
    property KnobOffToOnOffset: Double read get_KnobOffToOnOffset;
    property KnobOnToOffOffset: Double read get_KnobOnToOffOffset;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IToggleSwitch
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_ToggleSwitch)]
  IToggleSwitch = interface(IInspectable)
  ['{1B17EEB1-74BF-5A83-8161-A86F0FDCDF24}']
    function get_IsOn: Boolean; safecall;
    procedure put_IsOn(value: Boolean); safecall;
    function get_Header: IInspectable; safecall;
    procedure put_Header(value: IInspectable); safecall;
    function get_HeaderTemplate: IDataTemplate; safecall;
    procedure put_HeaderTemplate(value: IDataTemplate); safecall;
    function get_OnContent: IInspectable; safecall;
    procedure put_OnContent(value: IInspectable); safecall;
    function get_OnContentTemplate: IDataTemplate; safecall;
    procedure put_OnContentTemplate(value: IDataTemplate); safecall;
    function get_OffContent: IInspectable; safecall;
    procedure put_OffContent(value: IInspectable); safecall;
    function get_OffContentTemplate: IDataTemplate; safecall;
    procedure put_OffContentTemplate(value: IDataTemplate); safecall;
    function get_TemplateSettings: Primitives_IToggleSwitchTemplateSettings; safecall;
    function add_Toggled(handler: RoutedEventHandler): EventRegistrationToken; safecall;
    procedure remove_Toggled(token: EventRegistrationToken); safecall;
    property Header: IInspectable read get_Header write put_Header;
    property HeaderTemplate: IDataTemplate read get_HeaderTemplate write put_HeaderTemplate;
    property IsOn: Boolean read get_IsOn write put_IsOn;
    property OffContent: IInspectable read get_OffContent write put_OffContent;
    property OffContentTemplate: IDataTemplate read get_OffContentTemplate write put_OffContentTemplate;
    property OnContent: IInspectable read get_OnContent write put_OnContent;
    property OnContentTemplate: IDataTemplate read get_OnContentTemplate write put_OnContentTemplate;
    property TemplateSettings: Primitives_IToggleSwitchTemplateSettings read get_TemplateSettings;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.ITreeViewItemTemplateSettings
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_TreeViewItemTemplateSettings)]
  ITreeViewItemTemplateSettings = interface(IInspectable)
  ['{29B5DD9C-2BFB-5E1C-97CB-CDC3C34A365D}']
    function get_ExpandedGlyphVisibility: Visibility; safecall;
    function get_CollapsedGlyphVisibility: Visibility; safecall;
    function get_Indentation: Thickness; safecall;
    function get_DragItemsCount: Integer; safecall;
    property CollapsedGlyphVisibility: Visibility read get_CollapsedGlyphVisibility;
    property DragItemsCount: Integer read get_DragItemsCount;
    property ExpandedGlyphVisibility: Visibility read get_ExpandedGlyphVisibility;
    property Indentation: Thickness read get_Indentation;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.ITreeViewItem
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_TreeViewItem)]
  ITreeViewItem = interface(IInspectable)
  ['{70437A49-2999-5A97-B19D-354EF59D4F5C}']
    function get_GlyphOpacity: Double; safecall;
    procedure put_GlyphOpacity(value: Double); safecall;
    function get_GlyphBrush: IBrush; safecall;
    procedure put_GlyphBrush(value: IBrush); safecall;
    function get_ExpandedGlyph: HSTRING; safecall;
    procedure put_ExpandedGlyph(value: HSTRING); safecall;
    function get_CollapsedGlyph: HSTRING; safecall;
    procedure put_CollapsedGlyph(value: HSTRING); safecall;
    function get_GlyphSize: Double; safecall;
    procedure put_GlyphSize(value: Double); safecall;
    function get_IsExpanded: Boolean; safecall;
    procedure put_IsExpanded(value: Boolean); safecall;
    function get_TreeViewItemTemplateSettings: ITreeViewItemTemplateSettings; safecall;
    property CollapsedGlyph: HSTRING read get_CollapsedGlyph write put_CollapsedGlyph;
    property ExpandedGlyph: HSTRING read get_ExpandedGlyph write put_ExpandedGlyph;
    property GlyphBrush: IBrush read get_GlyphBrush write put_GlyphBrush;
    property GlyphOpacity: Double read get_GlyphOpacity write put_GlyphOpacity;
    property GlyphSize: Double read get_GlyphSize write put_GlyphSize;
    property IsExpanded: Boolean read get_IsExpanded write put_IsExpanded;
    property TreeViewItemTemplateSettings: ITreeViewItemTemplateSettings read get_TreeViewItemTemplateSettings;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.ITreeViewList
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_TreeViewList)]
  ITreeViewList = interface(IInspectable)
  ['{94CEE57B-7085-5A6A-AAC3-184509B8ECE0}']
  end;

  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.ICleanUpVirtualizedItemEventArgs
  ICleanUpVirtualizedItemEventArgs = interface(IInspectable)
  ['{76155AD9-E394-5313-832F-E21CF7B7FB0E}']
    function get_Value: IInspectable; safecall;
    function get_UIElement: IUIElement; safecall;
    function get_Cancel: Boolean; safecall;
    procedure put_Cancel(value: Boolean); safecall;
    property Cancel: Boolean read get_Cancel write put_Cancel;
    property UIElement: IUIElement read get_UIElement;
    property Value: IInspectable read get_Value;
  end;

  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.CleanUpVirtualizedItemEventHandler
  CleanUpVirtualizedItemEventHandler = interface(IUnknown)
  ['{DA6960DE-89FF-575F-932F-023F6FC1F992}']
    procedure Invoke(sender: IInspectable; e: ICleanUpVirtualizedItemEventArgs); safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IAnimatedVisualSource2
  IAnimatedVisualSource2 = interface(IInspectable)
  ['{1A3B53A7-A8FE-59A1-B544-43A4D9C81EF2}']
    function get_Markers: IMapView_2__HSTRING__Double; safecall;
    procedure SetColorProperty(propertyName: HSTRING; value: Color); safecall;
    property Markers: IMapView_2__HSTRING__Double read get_Markers;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IAnimatedIcon
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_AnimatedIcon)]
  IAnimatedIcon = interface(IInspectable)
  ['{F705DFDA-8196-56D0-8DCF-2B66C2AED791}']
    function get_Source: IAnimatedVisualSource2; safecall;
    procedure put_Source(value: IAnimatedVisualSource2); safecall;
    function get_FallbackIconSource: IIconSource; safecall;
    procedure put_FallbackIconSource(value: IIconSource); safecall;
    function get_MirroredWhenRightToLeft: Boolean; safecall;
    procedure put_MirroredWhenRightToLeft(value: Boolean); safecall;
    property FallbackIconSource: IIconSource read get_FallbackIconSource write put_FallbackIconSource;
    property MirroredWhenRightToLeft: Boolean read get_MirroredWhenRightToLeft write put_MirroredWhenRightToLeft;
    property Source: IAnimatedVisualSource2 read get_Source write put_Source;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IAnimatedIconFactory
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_AnimatedIcon)]
  IAnimatedIconFactory = interface(IInspectable)
  ['{3356E0D1-D82F-5FC1-8165-9B9D1B9D9514}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IAnimatedIcon; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IAnimatedIconSource
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_AnimatedIconSource)]
  IAnimatedIconSource = interface(IInspectable)
  ['{2846A198-731B-5379-85AC-8F28027F7183}']
    function get_Source: IAnimatedVisualSource2; safecall;
    procedure put_Source(value: IAnimatedVisualSource2); safecall;
    function get_FallbackIconSource: IIconSource; safecall;
    procedure put_FallbackIconSource(value: IIconSource); safecall;
    function get_MirroredWhenRightToLeft: Boolean; safecall;
    procedure put_MirroredWhenRightToLeft(value: Boolean); safecall;
    property FallbackIconSource: IIconSource read get_FallbackIconSource write put_FallbackIconSource;
    property MirroredWhenRightToLeft: Boolean read get_MirroredWhenRightToLeft write put_MirroredWhenRightToLeft;
    property Source: IAnimatedVisualSource2 read get_Source write put_Source;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IAnimatedIconSourceFactory
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_AnimatedIconSource)]
  IAnimatedIconSourceFactory = interface(IInspectable)
  ['{AE8FB7DE-7EC2-5AE2-B461-BEAD570420FA}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IAnimatedIconSource; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IAnimatedIconSourceStatics
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_AnimatedIconSource)]
  IAnimatedIconSourceStatics = interface(IInspectable)
  ['{8E4919FC-E8AA-5428-9779-6FE7168AFA1C}']
    function get_SourceProperty: IDependencyProperty; safecall;
    function get_FallbackIconSourceProperty: IDependencyProperty; safecall;
    function get_MirroredWhenRightToLeftProperty: IDependencyProperty; safecall;
    property FallbackIconSourceProperty: IDependencyProperty read get_FallbackIconSourceProperty;
    property MirroredWhenRightToLeftProperty: IDependencyProperty read get_MirroredWhenRightToLeftProperty;
    property SourceProperty: IDependencyProperty read get_SourceProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IAnimatedIconStatics
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_AnimatedIcon)]
  IAnimatedIconStatics = interface(IInspectable)
  ['{51CC5230-A001-55FF-9FC8-BD51B2A3277B}']
    function get_StateProperty: IDependencyProperty; safecall;
    procedure SetState(&object: IDependencyObject; value: HSTRING); safecall;
    function GetState(&object: IDependencyObject): HSTRING; safecall;
    function get_SourceProperty: IDependencyProperty; safecall;
    function get_FallbackIconSourceProperty: IDependencyProperty; safecall;
    function get_MirroredWhenRightToLeftProperty: IDependencyProperty; safecall;
    property FallbackIconSourceProperty: IDependencyProperty read get_FallbackIconSourceProperty;
    property MirroredWhenRightToLeftProperty: IDependencyProperty read get_MirroredWhenRightToLeftProperty;
    property SourceProperty: IDependencyProperty read get_SourceProperty;
    property StateProperty: IDependencyProperty read get_StateProperty;
  end;

  // Microsoft.UI.Xaml.Controls.IAnimatedVisual2
  IAnimatedVisual2 = interface(IInspectable)
  ['{763A3F0B-95CC-59EF-9890-147868599DE9}']
    procedure CreateAnimations; safecall;
    procedure DestroyAnimations; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IAnimatedVisualPlayer2
  IAnimatedVisualPlayer2 = interface(IInspectable)
  ['{DB33DB95-9404-5385-AE32-673E7C358AD3}']
    function get_AnimationOptimization: PlayerAnimationOptimization; safecall;
    procedure put_AnimationOptimization(value: PlayerAnimationOptimization); safecall;
    property AnimationOptimization: PlayerAnimationOptimization read get_AnimationOptimization write put_AnimationOptimization;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IAnimatedVisualPlayerFactory
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_AnimatedVisualPlayer)]
  IAnimatedVisualPlayerFactory = interface(IInspectable)
  ['{EBC0C6E6-C91A-5025-B4A4-E786D83BE1D8}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IAnimatedVisualPlayer; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IAnimatedVisualPlayerStatics
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_AnimatedVisualPlayer)]
  IAnimatedVisualPlayerStatics = interface(IInspectable)
  ['{E3D18D97-C98B-5B91-80DB-D70C436AA44A}']
    function get_AutoPlayProperty: IDependencyProperty; safecall;
    function get_DiagnosticsProperty: IDependencyProperty; safecall;
    function get_DurationProperty: IDependencyProperty; safecall;
    function get_FallbackContentProperty: IDependencyProperty; safecall;
    function get_IsAnimatedVisualLoadedProperty: IDependencyProperty; safecall;
    function get_IsPlayingProperty: IDependencyProperty; safecall;
    function get_PlaybackRateProperty: IDependencyProperty; safecall;
    function get_SourceProperty: IDependencyProperty; safecall;
    function get_StretchProperty: IDependencyProperty; safecall;
    property AutoPlayProperty: IDependencyProperty read get_AutoPlayProperty;
    property DiagnosticsProperty: IDependencyProperty read get_DiagnosticsProperty;
    property DurationProperty: IDependencyProperty read get_DurationProperty;
    property FallbackContentProperty: IDependencyProperty read get_FallbackContentProperty;
    property IsAnimatedVisualLoadedProperty: IDependencyProperty read get_IsAnimatedVisualLoadedProperty;
    property IsPlayingProperty: IDependencyProperty read get_IsPlayingProperty;
    property PlaybackRateProperty: IDependencyProperty read get_PlaybackRateProperty;
    property SourceProperty: IDependencyProperty read get_SourceProperty;
    property StretchProperty: IDependencyProperty read get_StretchProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IAnimatedVisualPlayerStatics2
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_AnimatedVisualPlayer)]
  IAnimatedVisualPlayerStatics2 = interface(IInspectable)
  ['{559A4F35-AA2D-54E3-A7FF-9E8357C10254}']
    function get_AnimationOptimizationProperty: IDependencyProperty; safecall;
    property AnimationOptimizationProperty: IDependencyProperty read get_AnimationOptimizationProperty;
  end;

  // Microsoft.UI.Xaml.Controls.IAnimatedVisualSource3
  IAnimatedVisualSource3 = interface(IInspectable)
  ['{A152F00D-B7CF-5A8F-AEE7-EA1B97C21639}']
    function TryCreateAnimatedVisual(compositor: ICompositor; out diagnostics: IInspectable; createAnimations: Boolean): IAnimatedVisual2; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IAppBarButtonFactory
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_AppBarButton)]
  IAppBarButtonFactory = interface(IInspectable)
  ['{4168A40A-D11F-5AEB-974E-BB43A6E7F9B2}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IAppBarButton; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IAppBarButtonStatics
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_AppBarButton)]
  IAppBarButtonStatics = interface(IInspectable)
  ['{74327A2A-18FA-59C3-8268-EC3732A4D272}']
    function get_LabelProperty: IDependencyProperty; safecall;
    function get_IconProperty: IDependencyProperty; safecall;
    function get_LabelPositionProperty: IDependencyProperty; safecall;
    function get_KeyboardAcceleratorTextOverrideProperty: IDependencyProperty; safecall;
    function get_IsCompactProperty: IDependencyProperty; safecall;
    function get_IsInOverflowProperty: IDependencyProperty; safecall;
    function get_DynamicOverflowOrderProperty: IDependencyProperty; safecall;
    property DynamicOverflowOrderProperty: IDependencyProperty read get_DynamicOverflowOrderProperty;
    property IconProperty: IDependencyProperty read get_IconProperty;
    property IsCompactProperty: IDependencyProperty read get_IsCompactProperty;
    property IsInOverflowProperty: IDependencyProperty read get_IsInOverflowProperty;
    property KeyboardAcceleratorTextOverrideProperty: IDependencyProperty read get_KeyboardAcceleratorTextOverrideProperty;
    property LabelPositionProperty: IDependencyProperty read get_LabelPositionProperty;
    property LabelProperty: IDependencyProperty read get_LabelProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IAppBarElementContainer
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_AppBarElementContainer)]
  IAppBarElementContainer = interface(IInspectable)
  ['{55D90715-70BC-5B2B-BD12-A940297F935F}']
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IAppBarElementContainerFactory
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_AppBarElementContainer)]
  IAppBarElementContainerFactory = interface(IInspectable)
  ['{0664BF62-1FAB-5873-9608-117C3B4483FF}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IAppBarElementContainer; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IAppBarElementContainerStatics
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_AppBarElementContainer)]
  IAppBarElementContainerStatics = interface(IInspectable)
  ['{50C068DE-72D0-52BA-BB42-ADA6527B392F}']
    function get_IsCompactProperty: IDependencyProperty; safecall;
    function get_IsInOverflowProperty: IDependencyProperty; safecall;
    function get_DynamicOverflowOrderProperty: IDependencyProperty; safecall;
    property DynamicOverflowOrderProperty: IDependencyProperty read get_DynamicOverflowOrderProperty;
    property IsCompactProperty: IDependencyProperty read get_IsCompactProperty;
    property IsInOverflowProperty: IDependencyProperty read get_IsInOverflowProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IAppBarFactory
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_AppBar)]
  IAppBarFactory = interface(IInspectable)
  ['{66B96B53-755B-5472-B2C4-8624E977D65B}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IAppBar; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IAppBarOverrides
  IAppBarOverrides = interface(IInspectable)
  ['{67F17798-E281-5E53-8EDF-42C29C354D63}']
    procedure OnClosed(e: IInspectable); safecall;
    procedure OnOpened(e: IInspectable); safecall;
    procedure OnClosing(e: IInspectable); safecall;
    procedure OnOpening(e: IInspectable); safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IAppBarSeparator
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_AppBarSeparator)]
  IAppBarSeparator = interface(IInspectable)
  ['{57BB94A3-1E56-5EBE-8A57-3A243C491D67}']
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IAppBarSeparatorFactory
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_AppBarSeparator)]
  IAppBarSeparatorFactory = interface(IInspectable)
  ['{6497D326-FB55-5CF5-8CC4-C556B1A958FB}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IAppBarSeparator; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IAppBarSeparatorStatics
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_AppBarSeparator)]
  IAppBarSeparatorStatics = interface(IInspectable)
  ['{DDA9A3D2-D3B9-5BE1-ABF7-DBA1EAAFE0F7}']
    function get_IsCompactProperty: IDependencyProperty; safecall;
    function get_IsInOverflowProperty: IDependencyProperty; safecall;
    function get_DynamicOverflowOrderProperty: IDependencyProperty; safecall;
    property DynamicOverflowOrderProperty: IDependencyProperty read get_DynamicOverflowOrderProperty;
    property IsCompactProperty: IDependencyProperty read get_IsCompactProperty;
    property IsInOverflowProperty: IDependencyProperty read get_IsInOverflowProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IAppBarStatics
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_AppBar)]
  IAppBarStatics = interface(IInspectable)
  ['{0DC7172C-A03D-5AE4-9538-FFD804823BCE}']
    function get_IsOpenProperty: IDependencyProperty; safecall;
    function get_IsStickyProperty: IDependencyProperty; safecall;
    function get_ClosedDisplayModeProperty: IDependencyProperty; safecall;
    function get_LightDismissOverlayModeProperty: IDependencyProperty; safecall;
    property ClosedDisplayModeProperty: IDependencyProperty read get_ClosedDisplayModeProperty;
    property IsOpenProperty: IDependencyProperty read get_IsOpenProperty;
    property IsStickyProperty: IDependencyProperty read get_IsStickyProperty;
    property LightDismissOverlayModeProperty: IDependencyProperty read get_LightDismissOverlayModeProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IAppBarToggleButtonFactory
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_AppBarToggleButton)]
  IAppBarToggleButtonFactory = interface(IInspectable)
  ['{07BFB2D6-23B9-57A2-9122-006294BFA92F}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IAppBarToggleButton; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IAppBarToggleButtonStatics
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_AppBarToggleButton)]
  IAppBarToggleButtonStatics = interface(IInspectable)
  ['{70021504-3FE8-53BC-ABD6-D69762F4BC87}']
    function get_LabelProperty: IDependencyProperty; safecall;
    function get_IconProperty: IDependencyProperty; safecall;
    function get_LabelPositionProperty: IDependencyProperty; safecall;
    function get_KeyboardAcceleratorTextOverrideProperty: IDependencyProperty; safecall;
    function get_IsCompactProperty: IDependencyProperty; safecall;
    function get_IsInOverflowProperty: IDependencyProperty; safecall;
    function get_DynamicOverflowOrderProperty: IDependencyProperty; safecall;
    property DynamicOverflowOrderProperty: IDependencyProperty read get_DynamicOverflowOrderProperty;
    property IconProperty: IDependencyProperty read get_IconProperty;
    property IsCompactProperty: IDependencyProperty read get_IsCompactProperty;
    property IsInOverflowProperty: IDependencyProperty read get_IsInOverflowProperty;
    property KeyboardAcceleratorTextOverrideProperty: IDependencyProperty read get_KeyboardAcceleratorTextOverrideProperty;
    property LabelPositionProperty: IDependencyProperty read get_LabelPositionProperty;
    property LabelProperty: IDependencyProperty read get_LabelProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IAutoSuggestBoxStatics
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_AutoSuggestBox)]
  IAutoSuggestBoxStatics = interface(IInspectable)
  ['{9DFA2FF9-1094-54A8-BEEE-B345FA3EE089}']
    function get_MaxSuggestionListHeightProperty: IDependencyProperty; safecall;
    function get_IsSuggestionListOpenProperty: IDependencyProperty; safecall;
    function get_TextMemberPathProperty: IDependencyProperty; safecall;
    function get_TextProperty: IDependencyProperty; safecall;
    function get_UpdateTextOnSelectProperty: IDependencyProperty; safecall;
    function get_PlaceholderTextProperty: IDependencyProperty; safecall;
    function get_HeaderProperty: IDependencyProperty; safecall;
    function get_AutoMaximizeSuggestionAreaProperty: IDependencyProperty; safecall;
    function get_TextBoxStyleProperty: IDependencyProperty; safecall;
    function get_QueryIconProperty: IDependencyProperty; safecall;
    function get_LightDismissOverlayModeProperty: IDependencyProperty; safecall;
    function get_DescriptionProperty: IDependencyProperty; safecall;
    property AutoMaximizeSuggestionAreaProperty: IDependencyProperty read get_AutoMaximizeSuggestionAreaProperty;
    property DescriptionProperty: IDependencyProperty read get_DescriptionProperty;
    property HeaderProperty: IDependencyProperty read get_HeaderProperty;
    property IsSuggestionListOpenProperty: IDependencyProperty read get_IsSuggestionListOpenProperty;
    property LightDismissOverlayModeProperty: IDependencyProperty read get_LightDismissOverlayModeProperty;
    property MaxSuggestionListHeightProperty: IDependencyProperty read get_MaxSuggestionListHeightProperty;
    property PlaceholderTextProperty: IDependencyProperty read get_PlaceholderTextProperty;
    property QueryIconProperty: IDependencyProperty read get_QueryIconProperty;
    property TextBoxStyleProperty: IDependencyProperty read get_TextBoxStyleProperty;
    property TextMemberPathProperty: IDependencyProperty read get_TextMemberPathProperty;
    property TextProperty: IDependencyProperty read get_TextProperty;
    property UpdateTextOnSelectProperty: IDependencyProperty read get_UpdateTextOnSelectProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IAutoSuggestBoxTextChangedEventArgsStatics
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_AutoSuggestBoxTextChangedEventArgs)]
  IAutoSuggestBoxTextChangedEventArgsStatics = interface(IInspectable)
  ['{40155FB9-253B-5624-A17A-294BE7A07F87}']
    function get_ReasonProperty: IDependencyProperty; safecall;
    property ReasonProperty: IDependencyProperty read get_ReasonProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IBitmapIcon
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_BitmapIcon)]
  IBitmapIcon = interface(IInspectable)
  ['{C370BC29-805B-5BAD-B615-EC640E579DBB}']
    function get_UriSource: IUriRuntimeClass; safecall;
    procedure put_UriSource(value: IUriRuntimeClass); safecall;
    function get_ShowAsMonochrome: Boolean; safecall;
    procedure put_ShowAsMonochrome(value: Boolean); safecall;
    property ShowAsMonochrome: Boolean read get_ShowAsMonochrome write put_ShowAsMonochrome;
    property UriSource: IUriRuntimeClass read get_UriSource write put_UriSource;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IBitmapIconFactory
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_BitmapIcon)]
  IBitmapIconFactory = interface(IInspectable)
  ['{B43B5DDC-CDB5-5AD6-8AC1-2FCCA33BE39E}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IBitmapIcon; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IBitmapIconSource
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_BitmapIconSource)]
  IBitmapIconSource = interface(IInspectable)
  ['{A6B6CCCC-EA8F-53CA-831F-2ABE85CD6D8C}']
    function get_UriSource: IUriRuntimeClass; safecall;
    procedure put_UriSource(value: IUriRuntimeClass); safecall;
    function get_ShowAsMonochrome: Boolean; safecall;
    procedure put_ShowAsMonochrome(value: Boolean); safecall;
    property ShowAsMonochrome: Boolean read get_ShowAsMonochrome write put_ShowAsMonochrome;
    property UriSource: IUriRuntimeClass read get_UriSource write put_UriSource;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IBitmapIconSourceFactory
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_BitmapIconSource)]
  IBitmapIconSourceFactory = interface(IInspectable)
  ['{7D484C14-F5F6-5E39-B4E4-B6108D2EE095}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IBitmapIconSource; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IBitmapIconSourceStatics
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_BitmapIconSource)]
  IBitmapIconSourceStatics = interface(IInspectable)
  ['{F4BA77BD-E13F-583B-B9F6-862E73753517}']
    function get_UriSourceProperty: IDependencyProperty; safecall;
    function get_ShowAsMonochromeProperty: IDependencyProperty; safecall;
    property ShowAsMonochromeProperty: IDependencyProperty read get_ShowAsMonochromeProperty;
    property UriSourceProperty: IDependencyProperty read get_UriSourceProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IBitmapIconStatics
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_BitmapIcon)]
  IBitmapIconStatics = interface(IInspectable)
  ['{01C67EB2-327E-5C4E-AFB4-38B02ED12886}']
    function get_UriSourceProperty: IDependencyProperty; safecall;
    function get_ShowAsMonochromeProperty: IDependencyProperty; safecall;
    property ShowAsMonochromeProperty: IDependencyProperty read get_ShowAsMonochromeProperty;
    property UriSourceProperty: IDependencyProperty read get_UriSourceProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IBorder
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_Border)]
  IBorder = interface(IInspectable)
  ['{1CA13B47-FF5C-5ABC-A411-A177DF9482A9}']
    function get_BorderBrush: IBrush; safecall;
    procedure put_BorderBrush(value: IBrush); safecall;
    function get_BorderThickness: Thickness; safecall;
    procedure put_BorderThickness(value: Thickness); safecall;
    function get_Background: IBrush; safecall;
    procedure put_Background(value: IBrush); safecall;
    function get_BackgroundSizing: BackgroundSizing; safecall;
    procedure put_BackgroundSizing(value: BackgroundSizing); safecall;
    function get_CornerRadius: CornerRadius; safecall;
    procedure put_CornerRadius(value: CornerRadius); safecall;
    function get_Padding: Thickness; safecall;
    procedure put_Padding(value: Thickness); safecall;
    function get_Child: IUIElement; safecall;
    procedure put_Child(value: IUIElement); safecall;
    function get_ChildTransitions: IVector_1__Animation_ITransition; safecall;
    procedure put_ChildTransitions(value: IVector_1__Animation_ITransition); safecall;
    function get_BackgroundTransition: IBrushTransition; safecall;
    procedure put_BackgroundTransition(value: IBrushTransition); safecall;
    property Background: IBrush read get_Background write put_Background;
    property BackgroundSizing_: BackgroundSizing read get_BackgroundSizing write put_BackgroundSizing;
    property BackgroundTransition: IBrushTransition read get_BackgroundTransition write put_BackgroundTransition;
    property BorderBrush: IBrush read get_BorderBrush write put_BorderBrush;
    property BorderThickness: Thickness read get_BorderThickness write put_BorderThickness;
    property Child: IUIElement read get_Child write put_Child;
    property ChildTransitions: IVector_1__Animation_ITransition read get_ChildTransitions write put_ChildTransitions;
    property CornerRadius_: CornerRadius read get_CornerRadius write put_CornerRadius;
    property Padding: Thickness read get_Padding write put_Padding;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IBorderStatics
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_Border)]
  IBorderStatics = interface(IInspectable)
  ['{9385CD66-C178-5176-B4A5-160E00E93935}']
    function get_BorderBrushProperty: IDependencyProperty; safecall;
    function get_BorderThicknessProperty: IDependencyProperty; safecall;
    function get_BackgroundProperty: IDependencyProperty; safecall;
    function get_BackgroundSizingProperty: IDependencyProperty; safecall;
    function get_CornerRadiusProperty: IDependencyProperty; safecall;
    function get_PaddingProperty: IDependencyProperty; safecall;
    function get_ChildTransitionsProperty: IDependencyProperty; safecall;
    property BackgroundProperty: IDependencyProperty read get_BackgroundProperty;
    property BackgroundSizingProperty: IDependencyProperty read get_BackgroundSizingProperty;
    property BorderBrushProperty: IDependencyProperty read get_BorderBrushProperty;
    property BorderThicknessProperty: IDependencyProperty read get_BorderThicknessProperty;
    property ChildTransitionsProperty: IDependencyProperty read get_ChildTransitionsProperty;
    property CornerRadiusProperty: IDependencyProperty read get_CornerRadiusProperty;
    property PaddingProperty: IDependencyProperty read get_PaddingProperty;
  end;

  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IBreadcrumbBarItemClickedEventArgs
  IBreadcrumbBarItemClickedEventArgs = interface(IInspectable)
  ['{1CEEA503-365E-580D-BCD4-E9AD0248F6B5}']
    function get_Index: Integer; safecall;
    function get_Item: IInspectable; safecall;
    property Index: Integer read get_Index;
    property Item: IInspectable read get_Item;
  end;

  // Generic Delegate for:
  // Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.Controls.IBreadcrumbBar,Microsoft.UI.Xaml.Controls.IBreadcrumbBarItemClickedEventArgs>
  TypedEventHandler_2__IBreadcrumbBar__IBreadcrumbBarItemClickedEventArgs_Delegate_Base = interface(IUnknown)
  ['{6CB13A38-F812-5123-9A9B-55DF094531EF}']
    procedure Invoke(sender: IBreadcrumbBar; args: IBreadcrumbBarItemClickedEventArgs); safecall;
  end;
  // UsedAPI Interface
  // Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.Controls.IBreadcrumbBar,Microsoft.UI.Xaml.Controls.IBreadcrumbBarItemClickedEventArgs>
  TypedEventHandler_2__IBreadcrumbBar__IBreadcrumbBarItemClickedEventArgs = interface(TypedEventHandler_2__IBreadcrumbBar__IBreadcrumbBarItemClickedEventArgs_Delegate_Base)
  ['{EAB23FDC-A3B1-5ECC-BA2F-09E51415059B}']
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IBreadcrumbBar
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_BreadcrumbBar)]
  IBreadcrumbBar = interface(IInspectable)
  ['{2E47B7D6-5FBD-54C7-B0B1-CEFF4A19C744}']
    function get_ItemsSource: IInspectable; safecall;
    procedure put_ItemsSource(value: IInspectable); safecall;
    function get_ItemTemplate: IInspectable; safecall;
    procedure put_ItemTemplate(value: IInspectable); safecall;
    function add_ItemClicked(handler: TypedEventHandler_2__IBreadcrumbBar__IBreadcrumbBarItemClickedEventArgs): EventRegistrationToken; safecall;
    procedure remove_ItemClicked(token: EventRegistrationToken); safecall;
    property ItemTemplate: IInspectable read get_ItemTemplate write put_ItemTemplate;
    property ItemsSource: IInspectable read get_ItemsSource write put_ItemsSource;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IBreadcrumbBarFactory
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_BreadcrumbBar)]
  IBreadcrumbBarFactory = interface(IInspectable)
  ['{D5B6A6D9-3148-5CBC-A6AE-0F44CDE41952}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IBreadcrumbBar; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IBreadcrumbBarItemFactory
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_BreadcrumbBarItem)]
  IBreadcrumbBarItemFactory = interface(IInspectable)
  ['{186C3BD3-7008-5544-8D3A-65AF8FE9FE69}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IBreadcrumbBarItem; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IBreadcrumbBarStatics
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_BreadcrumbBar)]
  IBreadcrumbBarStatics = interface(IInspectable)
  ['{4ABF3FB5-6F69-54E2-A68F-E5F904F79F38}']
    function get_ItemsSourceProperty: IDependencyProperty; safecall;
    function get_ItemTemplateProperty: IDependencyProperty; safecall;
    property ItemTemplateProperty: IDependencyProperty read get_ItemTemplateProperty;
    property ItemsSourceProperty: IDependencyProperty read get_ItemsSourceProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IButtonFactory
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_Button)]
  IButtonFactory = interface(IInspectable)
  ['{FE393422-D91C-57B1-9A9C-2C7E3F41F77C}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IButton; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IButtonStatics
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_Button)]
  IButtonStatics = interface(IInspectable)
  ['{57823D25-B26A-5E0F-94F6-BBAE70683DC5}']
    function get_FlyoutProperty: IDependencyProperty; safecall;
    property FlyoutProperty: IDependencyProperty read get_FlyoutProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.ICalendarDatePickerFactory
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_CalendarDatePicker)]
  ICalendarDatePickerFactory = interface(IInspectable)
  ['{B00C7818-955A-5524-B451-93868230892F}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): ICalendarDatePicker; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.ICalendarDatePickerStatics
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_CalendarDatePicker)]
  ICalendarDatePickerStatics = interface(IInspectable)
  ['{E74EB740-1AEB-591F-B84A-EF881C3B527E}']
    function get_DateProperty: IDependencyProperty; safecall;
    function get_IsCalendarOpenProperty: IDependencyProperty; safecall;
    function get_DateFormatProperty: IDependencyProperty; safecall;
    function get_PlaceholderTextProperty: IDependencyProperty; safecall;
    function get_HeaderProperty: IDependencyProperty; safecall;
    function get_HeaderTemplateProperty: IDependencyProperty; safecall;
    function get_CalendarViewStyleProperty: IDependencyProperty; safecall;
    function get_LightDismissOverlayModeProperty: IDependencyProperty; safecall;
    function get_DescriptionProperty: IDependencyProperty; safecall;
    function get_MinDateProperty: IDependencyProperty; safecall;
    function get_MaxDateProperty: IDependencyProperty; safecall;
    function get_IsTodayHighlightedProperty: IDependencyProperty; safecall;
    function get_DisplayModeProperty: IDependencyProperty; safecall;
    function get_FirstDayOfWeekProperty: IDependencyProperty; safecall;
    function get_DayOfWeekFormatProperty: IDependencyProperty; safecall;
    function get_CalendarIdentifierProperty: IDependencyProperty; safecall;
    function get_IsOutOfScopeEnabledProperty: IDependencyProperty; safecall;
    function get_IsGroupLabelVisibleProperty: IDependencyProperty; safecall;
    property CalendarIdentifierProperty: IDependencyProperty read get_CalendarIdentifierProperty;
    property CalendarViewStyleProperty: IDependencyProperty read get_CalendarViewStyleProperty;
    property DateFormatProperty: IDependencyProperty read get_DateFormatProperty;
    property DateProperty: IDependencyProperty read get_DateProperty;
    property DayOfWeekFormatProperty: IDependencyProperty read get_DayOfWeekFormatProperty;
    property DescriptionProperty: IDependencyProperty read get_DescriptionProperty;
    property DisplayModeProperty: IDependencyProperty read get_DisplayModeProperty;
    property FirstDayOfWeekProperty: IDependencyProperty read get_FirstDayOfWeekProperty;
    property HeaderProperty: IDependencyProperty read get_HeaderProperty;
    property HeaderTemplateProperty: IDependencyProperty read get_HeaderTemplateProperty;
    property IsCalendarOpenProperty: IDependencyProperty read get_IsCalendarOpenProperty;
    property IsGroupLabelVisibleProperty: IDependencyProperty read get_IsGroupLabelVisibleProperty;
    property IsOutOfScopeEnabledProperty: IDependencyProperty read get_IsOutOfScopeEnabledProperty;
    property IsTodayHighlightedProperty: IDependencyProperty read get_IsTodayHighlightedProperty;
    property LightDismissOverlayModeProperty: IDependencyProperty read get_LightDismissOverlayModeProperty;
    property MaxDateProperty: IDependencyProperty read get_MaxDateProperty;
    property MinDateProperty: IDependencyProperty read get_MinDateProperty;
    property PlaceholderTextProperty: IDependencyProperty read get_PlaceholderTextProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.ICalendarViewDayItemFactory
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_CalendarViewDayItem)]
  ICalendarViewDayItemFactory = interface(IInspectable)
  ['{E6159E51-1C48-5A77-A3A1-AEF59D6A8C4E}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): ICalendarViewDayItem; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.ICalendarViewDayItemStatics
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_CalendarViewDayItem)]
  ICalendarViewDayItemStatics = interface(IInspectable)
  ['{2B2C4006-57FA-5F0F-B8ED-26E21F910E3A}']
    function get_IsBlackoutProperty: IDependencyProperty; safecall;
    function get_DateProperty: IDependencyProperty; safecall;
    property DateProperty: IDependencyProperty read get_DateProperty;
    property IsBlackoutProperty: IDependencyProperty read get_IsBlackoutProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.ICalendarViewFactory
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_CalendarView)]
  ICalendarViewFactory = interface(IInspectable)
  ['{2F31D1EB-8229-517C-B3A6-5A5F28724E8F}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): ICalendarView; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.ICalendarViewStatics
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_CalendarView)]
  ICalendarViewStatics = interface(IInspectable)
  ['{9553E6FC-E4DA-57D4-9472-7F8ED5FF7219}']
    function get_CalendarIdentifierProperty: IDependencyProperty; safecall;
    function get_DayOfWeekFormatProperty: IDependencyProperty; safecall;
    function get_IsGroupLabelVisibleProperty: IDependencyProperty; safecall;
    function get_DisplayModeProperty: IDependencyProperty; safecall;
    function get_FirstDayOfWeekProperty: IDependencyProperty; safecall;
    function get_IsOutOfScopeEnabledProperty: IDependencyProperty; safecall;
    function get_IsTodayHighlightedProperty: IDependencyProperty; safecall;
    function get_MaxDateProperty: IDependencyProperty; safecall;
    function get_MinDateProperty: IDependencyProperty; safecall;
    function get_NumberOfWeeksInViewProperty: IDependencyProperty; safecall;
    function get_SelectedDatesProperty: IDependencyProperty; safecall;
    function get_SelectionModeProperty: IDependencyProperty; safecall;
    function get_TemplateSettingsProperty: IDependencyProperty; safecall;
    function get_FocusBorderBrushProperty: IDependencyProperty; safecall;
    function get_SelectedHoverBorderBrushProperty: IDependencyProperty; safecall;
    function get_SelectedPressedBorderBrushProperty: IDependencyProperty; safecall;
    function get_SelectedDisabledBorderBrushProperty: IDependencyProperty; safecall;
    function get_SelectedBorderBrushProperty: IDependencyProperty; safecall;
    function get_HoverBorderBrushProperty: IDependencyProperty; safecall;
    function get_PressedBorderBrushProperty: IDependencyProperty; safecall;
    function get_TodaySelectedInnerBorderBrushProperty: IDependencyProperty; safecall;
    function get_BlackoutStrikethroughBrushProperty: IDependencyProperty; safecall;
    function get_CalendarItemBorderBrushProperty: IDependencyProperty; safecall;
    function get_BlackoutBackgroundProperty: IDependencyProperty; safecall;
    function get_OutOfScopeBackgroundProperty: IDependencyProperty; safecall;
    function get_CalendarItemBackgroundProperty: IDependencyProperty; safecall;
    function get_CalendarItemHoverBackgroundProperty: IDependencyProperty; safecall;
    function get_CalendarItemPressedBackgroundProperty: IDependencyProperty; safecall;
    function get_CalendarItemDisabledBackgroundProperty: IDependencyProperty; safecall;
    function get_TodayBackgroundProperty: IDependencyProperty; safecall;
    function get_TodayBlackoutBackgroundProperty: IDependencyProperty; safecall;
    function get_TodayHoverBackgroundProperty: IDependencyProperty; safecall;
    function get_TodayPressedBackgroundProperty: IDependencyProperty; safecall;
    function get_TodayDisabledBackgroundProperty: IDependencyProperty; safecall;
    function get_PressedForegroundProperty: IDependencyProperty; safecall;
    function get_TodayForegroundProperty: IDependencyProperty; safecall;
    function get_BlackoutForegroundProperty: IDependencyProperty; safecall;
    function get_TodayBlackoutForegroundProperty: IDependencyProperty; safecall;
    function get_SelectedForegroundProperty: IDependencyProperty; safecall;
    function get_SelectedHoverForegroundProperty: IDependencyProperty; safecall;
    function get_SelectedPressedForegroundProperty: IDependencyProperty; safecall;
    function get_SelectedDisabledForegroundProperty: IDependencyProperty; safecall;
    function get_OutOfScopeForegroundProperty: IDependencyProperty; safecall;
    function get_OutOfScopeHoverForegroundProperty: IDependencyProperty; safecall;
    function get_OutOfScopePressedForegroundProperty: IDependencyProperty; safecall;
    function get_CalendarItemForegroundProperty: IDependencyProperty; safecall;
    function get_DisabledForegroundProperty: IDependencyProperty; safecall;
    function get_DayItemFontFamilyProperty: IDependencyProperty; safecall;
    function get_DayItemFontSizeProperty: IDependencyProperty; safecall;
    function get_DayItemFontStyleProperty: IDependencyProperty; safecall;
    function get_DayItemFontWeightProperty: IDependencyProperty; safecall;
    function get_TodayFontWeightProperty: IDependencyProperty; safecall;
    function get_FirstOfMonthLabelFontFamilyProperty: IDependencyProperty; safecall;
    function get_FirstOfMonthLabelFontSizeProperty: IDependencyProperty; safecall;
    function get_FirstOfMonthLabelFontStyleProperty: IDependencyProperty; safecall;
    function get_FirstOfMonthLabelFontWeightProperty: IDependencyProperty; safecall;
    function get_MonthYearItemFontFamilyProperty: IDependencyProperty; safecall;
    function get_MonthYearItemFontSizeProperty: IDependencyProperty; safecall;
    function get_MonthYearItemFontStyleProperty: IDependencyProperty; safecall;
    function get_MonthYearItemFontWeightProperty: IDependencyProperty; safecall;
    function get_FirstOfYearDecadeLabelFontFamilyProperty: IDependencyProperty; safecall;
    function get_FirstOfYearDecadeLabelFontSizeProperty: IDependencyProperty; safecall;
    function get_FirstOfYearDecadeLabelFontStyleProperty: IDependencyProperty; safecall;
    function get_FirstOfYearDecadeLabelFontWeightProperty: IDependencyProperty; safecall;
    function get_DayItemMarginProperty: IDependencyProperty; safecall;
    function get_MonthYearItemMarginProperty: IDependencyProperty; safecall;
    function get_FirstOfMonthLabelMarginProperty: IDependencyProperty; safecall;
    function get_FirstOfYearDecadeLabelMarginProperty: IDependencyProperty; safecall;
    function get_HorizontalDayItemAlignmentProperty: IDependencyProperty; safecall;
    function get_VerticalDayItemAlignmentProperty: IDependencyProperty; safecall;
    function get_HorizontalFirstOfMonthLabelAlignmentProperty: IDependencyProperty; safecall;
    function get_VerticalFirstOfMonthLabelAlignmentProperty: IDependencyProperty; safecall;
    function get_CalendarItemBorderThicknessProperty: IDependencyProperty; safecall;
    function get_CalendarViewDayItemStyleProperty: IDependencyProperty; safecall;
    function get_CalendarItemCornerRadiusProperty: IDependencyProperty; safecall;
    property BlackoutBackgroundProperty: IDependencyProperty read get_BlackoutBackgroundProperty;
    property BlackoutForegroundProperty: IDependencyProperty read get_BlackoutForegroundProperty;
    property BlackoutStrikethroughBrushProperty: IDependencyProperty read get_BlackoutStrikethroughBrushProperty;
    property CalendarIdentifierProperty: IDependencyProperty read get_CalendarIdentifierProperty;
    property CalendarItemBackgroundProperty: IDependencyProperty read get_CalendarItemBackgroundProperty;
    property CalendarItemBorderBrushProperty: IDependencyProperty read get_CalendarItemBorderBrushProperty;
    property CalendarItemBorderThicknessProperty: IDependencyProperty read get_CalendarItemBorderThicknessProperty;
    property CalendarItemCornerRadiusProperty: IDependencyProperty read get_CalendarItemCornerRadiusProperty;
    property CalendarItemDisabledBackgroundProperty: IDependencyProperty read get_CalendarItemDisabledBackgroundProperty;
    property CalendarItemForegroundProperty: IDependencyProperty read get_CalendarItemForegroundProperty;
    property CalendarItemHoverBackgroundProperty: IDependencyProperty read get_CalendarItemHoverBackgroundProperty;
    property CalendarItemPressedBackgroundProperty: IDependencyProperty read get_CalendarItemPressedBackgroundProperty;
    property CalendarViewDayItemStyleProperty: IDependencyProperty read get_CalendarViewDayItemStyleProperty;
    property DayItemFontFamilyProperty: IDependencyProperty read get_DayItemFontFamilyProperty;
    property DayItemFontSizeProperty: IDependencyProperty read get_DayItemFontSizeProperty;
    property DayItemFontStyleProperty: IDependencyProperty read get_DayItemFontStyleProperty;
    property DayItemFontWeightProperty: IDependencyProperty read get_DayItemFontWeightProperty;
    property DayItemMarginProperty: IDependencyProperty read get_DayItemMarginProperty;
    property DayOfWeekFormatProperty: IDependencyProperty read get_DayOfWeekFormatProperty;
    property DisabledForegroundProperty: IDependencyProperty read get_DisabledForegroundProperty;
    property DisplayModeProperty: IDependencyProperty read get_DisplayModeProperty;
    property FirstDayOfWeekProperty: IDependencyProperty read get_FirstDayOfWeekProperty;
    property FirstOfMonthLabelFontFamilyProperty: IDependencyProperty read get_FirstOfMonthLabelFontFamilyProperty;
    property FirstOfMonthLabelFontSizeProperty: IDependencyProperty read get_FirstOfMonthLabelFontSizeProperty;
    property FirstOfMonthLabelFontStyleProperty: IDependencyProperty read get_FirstOfMonthLabelFontStyleProperty;
    property FirstOfMonthLabelFontWeightProperty: IDependencyProperty read get_FirstOfMonthLabelFontWeightProperty;
    property FirstOfMonthLabelMarginProperty: IDependencyProperty read get_FirstOfMonthLabelMarginProperty;
    property FirstOfYearDecadeLabelFontFamilyProperty: IDependencyProperty read get_FirstOfYearDecadeLabelFontFamilyProperty;
    property FirstOfYearDecadeLabelFontSizeProperty: IDependencyProperty read get_FirstOfYearDecadeLabelFontSizeProperty;
    property FirstOfYearDecadeLabelFontStyleProperty: IDependencyProperty read get_FirstOfYearDecadeLabelFontStyleProperty;
    property FirstOfYearDecadeLabelFontWeightProperty: IDependencyProperty read get_FirstOfYearDecadeLabelFontWeightProperty;
    property FirstOfYearDecadeLabelMarginProperty: IDependencyProperty read get_FirstOfYearDecadeLabelMarginProperty;
    property FocusBorderBrushProperty: IDependencyProperty read get_FocusBorderBrushProperty;
    property HorizontalDayItemAlignmentProperty: IDependencyProperty read get_HorizontalDayItemAlignmentProperty;
    property HorizontalFirstOfMonthLabelAlignmentProperty: IDependencyProperty read get_HorizontalFirstOfMonthLabelAlignmentProperty;
    property HoverBorderBrushProperty: IDependencyProperty read get_HoverBorderBrushProperty;
    property IsGroupLabelVisibleProperty: IDependencyProperty read get_IsGroupLabelVisibleProperty;
    property IsOutOfScopeEnabledProperty: IDependencyProperty read get_IsOutOfScopeEnabledProperty;
    property IsTodayHighlightedProperty: IDependencyProperty read get_IsTodayHighlightedProperty;
    property MaxDateProperty: IDependencyProperty read get_MaxDateProperty;
    property MinDateProperty: IDependencyProperty read get_MinDateProperty;
    property MonthYearItemFontFamilyProperty: IDependencyProperty read get_MonthYearItemFontFamilyProperty;
    property MonthYearItemFontSizeProperty: IDependencyProperty read get_MonthYearItemFontSizeProperty;
    property MonthYearItemFontStyleProperty: IDependencyProperty read get_MonthYearItemFontStyleProperty;
    property MonthYearItemFontWeightProperty: IDependencyProperty read get_MonthYearItemFontWeightProperty;
    property MonthYearItemMarginProperty: IDependencyProperty read get_MonthYearItemMarginProperty;
    property NumberOfWeeksInViewProperty: IDependencyProperty read get_NumberOfWeeksInViewProperty;
    property OutOfScopeBackgroundProperty: IDependencyProperty read get_OutOfScopeBackgroundProperty;
    property OutOfScopeForegroundProperty: IDependencyProperty read get_OutOfScopeForegroundProperty;
    property OutOfScopeHoverForegroundProperty: IDependencyProperty read get_OutOfScopeHoverForegroundProperty;
    property OutOfScopePressedForegroundProperty: IDependencyProperty read get_OutOfScopePressedForegroundProperty;
    property PressedBorderBrushProperty: IDependencyProperty read get_PressedBorderBrushProperty;
    property PressedForegroundProperty: IDependencyProperty read get_PressedForegroundProperty;
    property SelectedBorderBrushProperty: IDependencyProperty read get_SelectedBorderBrushProperty;
    property SelectedDatesProperty: IDependencyProperty read get_SelectedDatesProperty;
    property SelectedDisabledBorderBrushProperty: IDependencyProperty read get_SelectedDisabledBorderBrushProperty;
    property SelectedDisabledForegroundProperty: IDependencyProperty read get_SelectedDisabledForegroundProperty;
    property SelectedForegroundProperty: IDependencyProperty read get_SelectedForegroundProperty;
    property SelectedHoverBorderBrushProperty: IDependencyProperty read get_SelectedHoverBorderBrushProperty;
    property SelectedHoverForegroundProperty: IDependencyProperty read get_SelectedHoverForegroundProperty;
    property SelectedPressedBorderBrushProperty: IDependencyProperty read get_SelectedPressedBorderBrushProperty;
    property SelectedPressedForegroundProperty: IDependencyProperty read get_SelectedPressedForegroundProperty;
    property SelectionModeProperty: IDependencyProperty read get_SelectionModeProperty;
    property TemplateSettingsProperty: IDependencyProperty read get_TemplateSettingsProperty;
    property TodayBackgroundProperty: IDependencyProperty read get_TodayBackgroundProperty;
    property TodayBlackoutBackgroundProperty: IDependencyProperty read get_TodayBlackoutBackgroundProperty;
    property TodayBlackoutForegroundProperty: IDependencyProperty read get_TodayBlackoutForegroundProperty;
    property TodayDisabledBackgroundProperty: IDependencyProperty read get_TodayDisabledBackgroundProperty;
    property TodayFontWeightProperty: IDependencyProperty read get_TodayFontWeightProperty;
    property TodayForegroundProperty: IDependencyProperty read get_TodayForegroundProperty;
    property TodayHoverBackgroundProperty: IDependencyProperty read get_TodayHoverBackgroundProperty;
    property TodayPressedBackgroundProperty: IDependencyProperty read get_TodayPressedBackgroundProperty;
    property TodaySelectedInnerBorderBrushProperty: IDependencyProperty read get_TodaySelectedInnerBorderBrushProperty;
    property VerticalDayItemAlignmentProperty: IDependencyProperty read get_VerticalDayItemAlignmentProperty;
    property VerticalFirstOfMonthLabelAlignmentProperty: IDependencyProperty read get_VerticalFirstOfMonthLabelAlignmentProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.ICanvas
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_Canvas)]
  ICanvas = interface(IInspectable)
  ['{457BA139-1146-51D2-807E-D9D65C927060}']
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.ICanvasFactory
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_Canvas)]
  ICanvasFactory = interface(IInspectable)
  ['{374C5050-3481-5557-9948-804C0B8EEA89}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): ICanvas; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.ICanvasStatics
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_Canvas)]
  ICanvasStatics = interface(IInspectable)
  ['{C00D5E0F-77E3-5C59-8FCD-86761F0C6607}']
    function get_LeftProperty: IDependencyProperty; safecall;
    function GetLeft(element: IUIElement): Double; safecall;
    procedure SetLeft(element: IUIElement; length: Double); safecall;
    function get_TopProperty: IDependencyProperty; safecall;
    function GetTop(element: IUIElement): Double; safecall;
    procedure SetTop(element: IUIElement; length: Double); safecall;
    function get_ZIndexProperty: IDependencyProperty; safecall;
    function GetZIndex(element: IUIElement): Integer; safecall;
    procedure SetZIndex(element: IUIElement; value: Integer); safecall;
    property LeftProperty: IDependencyProperty read get_LeftProperty;
    property TopProperty: IDependencyProperty read get_TopProperty;
    property ZIndexProperty: IDependencyProperty read get_ZIndexProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.ICheckBoxFactory
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_CheckBox)]
  ICheckBoxFactory = interface(IInspectable)
  ['{F43FF58D-31D5-5835-AF7B-375BC6A9BCF3}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): ICheckBox; safecall;
  end;

  // Generic Delegate for:
  // Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.Controls.IColorPicker,Microsoft.UI.Xaml.Controls.IColorChangedEventArgs>
  TypedEventHandler_2__IColorPicker__IColorChangedEventArgs_Delegate_Base = interface(IUnknown)
  ['{AA939F73-B4C3-5D22-8769-E6735AA593FC}']
    procedure Invoke(sender: IColorPicker; args: IColorChangedEventArgs); safecall;
  end;
  // UsedAPI Interface
  // Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.Controls.IColorPicker,Microsoft.UI.Xaml.Controls.IColorChangedEventArgs>
  TypedEventHandler_2__IColorPicker__IColorChangedEventArgs = interface(TypedEventHandler_2__IColorPicker__IColorChangedEventArgs_Delegate_Base)
  ['{15678BF7-D881-5CE0-A152-21454C19BD0D}']
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IColorPicker
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_ColorPicker)]
  IColorPicker = interface(IInspectable)
  ['{AE72B24B-F93F-5A19-8CE4-A18B73C3356D}']
    function get_Color: Color; safecall;
    procedure put_Color(value: Color); safecall;
    function get_PreviousColor: IReference_1__Color; safecall;
    procedure put_PreviousColor(value: IReference_1__Color); safecall;
    function get_IsAlphaEnabled: Boolean; safecall;
    procedure put_IsAlphaEnabled(value: Boolean); safecall;
    function get_IsColorSpectrumVisible: Boolean; safecall;
    procedure put_IsColorSpectrumVisible(value: Boolean); safecall;
    function get_IsColorPreviewVisible: Boolean; safecall;
    procedure put_IsColorPreviewVisible(value: Boolean); safecall;
    function get_IsColorSliderVisible: Boolean; safecall;
    procedure put_IsColorSliderVisible(value: Boolean); safecall;
    function get_IsAlphaSliderVisible: Boolean; safecall;
    procedure put_IsAlphaSliderVisible(value: Boolean); safecall;
    function get_IsMoreButtonVisible: Boolean; safecall;
    procedure put_IsMoreButtonVisible(value: Boolean); safecall;
    function get_IsColorChannelTextInputVisible: Boolean; safecall;
    procedure put_IsColorChannelTextInputVisible(value: Boolean); safecall;
    function get_IsAlphaTextInputVisible: Boolean; safecall;
    procedure put_IsAlphaTextInputVisible(value: Boolean); safecall;
    function get_IsHexInputVisible: Boolean; safecall;
    procedure put_IsHexInputVisible(value: Boolean); safecall;
    function get_MinHue: Integer; safecall;
    procedure put_MinHue(value: Integer); safecall;
    function get_MaxHue: Integer; safecall;
    procedure put_MaxHue(value: Integer); safecall;
    function get_MinSaturation: Integer; safecall;
    procedure put_MinSaturation(value: Integer); safecall;
    function get_MaxSaturation: Integer; safecall;
    procedure put_MaxSaturation(value: Integer); safecall;
    function get_MinValue: Integer; safecall;
    procedure put_MinValue(value: Integer); safecall;
    function get_MaxValue: Integer; safecall;
    procedure put_MaxValue(value: Integer); safecall;
    function get_ColorSpectrumShape: ColorSpectrumShape; safecall;
    procedure put_ColorSpectrumShape(value: ColorSpectrumShape); safecall;
    function get_ColorSpectrumComponents: ColorSpectrumComponents; safecall;
    procedure put_ColorSpectrumComponents(value: ColorSpectrumComponents); safecall;
    function add_ColorChanged(handler: TypedEventHandler_2__IColorPicker__IColorChangedEventArgs): EventRegistrationToken; safecall;
    procedure remove_ColorChanged(token: EventRegistrationToken); safecall;
    property Color_: Color read get_Color write put_Color;
    property ColorSpectrumComponents_: ColorSpectrumComponents read get_ColorSpectrumComponents write put_ColorSpectrumComponents;
    property ColorSpectrumShape_: ColorSpectrumShape read get_ColorSpectrumShape write put_ColorSpectrumShape;
    property IsAlphaEnabled: Boolean read get_IsAlphaEnabled write put_IsAlphaEnabled;
    property IsAlphaSliderVisible: Boolean read get_IsAlphaSliderVisible write put_IsAlphaSliderVisible;
    property IsAlphaTextInputVisible: Boolean read get_IsAlphaTextInputVisible write put_IsAlphaTextInputVisible;
    property IsColorChannelTextInputVisible: Boolean read get_IsColorChannelTextInputVisible write put_IsColorChannelTextInputVisible;
    property IsColorPreviewVisible: Boolean read get_IsColorPreviewVisible write put_IsColorPreviewVisible;
    property IsColorSliderVisible: Boolean read get_IsColorSliderVisible write put_IsColorSliderVisible;
    property IsColorSpectrumVisible: Boolean read get_IsColorSpectrumVisible write put_IsColorSpectrumVisible;
    property IsHexInputVisible: Boolean read get_IsHexInputVisible write put_IsHexInputVisible;
    property IsMoreButtonVisible: Boolean read get_IsMoreButtonVisible write put_IsMoreButtonVisible;
    property MaxHue: Integer read get_MaxHue write put_MaxHue;
    property MaxSaturation: Integer read get_MaxSaturation write put_MaxSaturation;
    property MaxValue: Integer read get_MaxValue write put_MaxValue;
    property MinHue: Integer read get_MinHue write put_MinHue;
    property MinSaturation: Integer read get_MinSaturation write put_MinSaturation;
    property MinValue: Integer read get_MinValue write put_MinValue;
    property PreviousColor: IReference_1__Color read get_PreviousColor write put_PreviousColor;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IColorPicker2
  IColorPicker2 = interface(IInspectable)
  ['{802E64C9-4608-5C4C-93CF-6C462E3C1068}']
    function get_Orientation: Orientation; safecall;
    procedure put_Orientation(value: Orientation); safecall;
    property Orientation_: Orientation read get_Orientation write put_Orientation;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IColorPickerFactory
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_ColorPicker)]
  IColorPickerFactory = interface(IInspectable)
  ['{72C350E2-0A20-5B9B-AC54-633B97D7FFDE}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IColorPicker; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IColorPickerStatics
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_ColorPicker)]
  IColorPickerStatics = interface(IInspectable)
  ['{920D2D62-172E-5771-B677-4069B5134574}']
    function get_ColorProperty: IDependencyProperty; safecall;
    function get_PreviousColorProperty: IDependencyProperty; safecall;
    function get_IsAlphaEnabledProperty: IDependencyProperty; safecall;
    function get_IsColorSpectrumVisibleProperty: IDependencyProperty; safecall;
    function get_IsColorPreviewVisibleProperty: IDependencyProperty; safecall;
    function get_IsColorSliderVisibleProperty: IDependencyProperty; safecall;
    function get_IsAlphaSliderVisibleProperty: IDependencyProperty; safecall;
    function get_IsMoreButtonVisibleProperty: IDependencyProperty; safecall;
    function get_IsColorChannelTextInputVisibleProperty: IDependencyProperty; safecall;
    function get_IsAlphaTextInputVisibleProperty: IDependencyProperty; safecall;
    function get_IsHexInputVisibleProperty: IDependencyProperty; safecall;
    function get_MinHueProperty: IDependencyProperty; safecall;
    function get_MaxHueProperty: IDependencyProperty; safecall;
    function get_MinSaturationProperty: IDependencyProperty; safecall;
    function get_MaxSaturationProperty: IDependencyProperty; safecall;
    function get_MinValueProperty: IDependencyProperty; safecall;
    function get_MaxValueProperty: IDependencyProperty; safecall;
    function get_ColorSpectrumShapeProperty: IDependencyProperty; safecall;
    function get_ColorSpectrumComponentsProperty: IDependencyProperty; safecall;
    property ColorProperty: IDependencyProperty read get_ColorProperty;
    property ColorSpectrumComponentsProperty: IDependencyProperty read get_ColorSpectrumComponentsProperty;
    property ColorSpectrumShapeProperty: IDependencyProperty read get_ColorSpectrumShapeProperty;
    property IsAlphaEnabledProperty: IDependencyProperty read get_IsAlphaEnabledProperty;
    property IsAlphaSliderVisibleProperty: IDependencyProperty read get_IsAlphaSliderVisibleProperty;
    property IsAlphaTextInputVisibleProperty: IDependencyProperty read get_IsAlphaTextInputVisibleProperty;
    property IsColorChannelTextInputVisibleProperty: IDependencyProperty read get_IsColorChannelTextInputVisibleProperty;
    property IsColorPreviewVisibleProperty: IDependencyProperty read get_IsColorPreviewVisibleProperty;
    property IsColorSliderVisibleProperty: IDependencyProperty read get_IsColorSliderVisibleProperty;
    property IsColorSpectrumVisibleProperty: IDependencyProperty read get_IsColorSpectrumVisibleProperty;
    property IsHexInputVisibleProperty: IDependencyProperty read get_IsHexInputVisibleProperty;
    property IsMoreButtonVisibleProperty: IDependencyProperty read get_IsMoreButtonVisibleProperty;
    property MaxHueProperty: IDependencyProperty read get_MaxHueProperty;
    property MaxSaturationProperty: IDependencyProperty read get_MaxSaturationProperty;
    property MaxValueProperty: IDependencyProperty read get_MaxValueProperty;
    property MinHueProperty: IDependencyProperty read get_MinHueProperty;
    property MinSaturationProperty: IDependencyProperty read get_MinSaturationProperty;
    property MinValueProperty: IDependencyProperty read get_MinValueProperty;
    property PreviousColorProperty: IDependencyProperty read get_PreviousColorProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IColorPickerStatics2
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_ColorPicker)]
  IColorPickerStatics2 = interface(IInspectable)
  ['{2F4AF95B-81CF-5304-9950-49EC934C1B35}']
    function get_OrientationProperty: IDependencyProperty; safecall;
    property OrientationProperty: IDependencyProperty read get_OrientationProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IColumnDefinition
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_ColumnDefinition)]
  IColumnDefinition = interface(IInspectable)
  ['{454CEA14-87EC-5890-BB62-F1D82A94758E}']
    function get_Width: GridLength; safecall;
    procedure put_Width(value: GridLength); safecall;
    function get_MaxWidth: Double; safecall;
    procedure put_MaxWidth(value: Double); safecall;
    function get_MinWidth: Double; safecall;
    procedure put_MinWidth(value: Double); safecall;
    function get_ActualWidth: Double; safecall;
    property ActualWidth: Double read get_ActualWidth;
    property MaxWidth: Double read get_MaxWidth write put_MaxWidth;
    property MinWidth: Double read get_MinWidth write put_MinWidth;
    property Width: GridLength read get_Width write put_Width;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IColumnDefinitionStatics
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_ColumnDefinition)]
  IColumnDefinitionStatics = interface(IInspectable)
  ['{ABA4B755-CA63-5ED7-AE31-45F9F91920B0}']
    function get_WidthProperty: IDependencyProperty; safecall;
    function get_MaxWidthProperty: IDependencyProperty; safecall;
    function get_MinWidthProperty: IDependencyProperty; safecall;
    property MaxWidthProperty: IDependencyProperty read get_MaxWidthProperty;
    property MinWidthProperty: IDependencyProperty read get_MinWidthProperty;
    property WidthProperty: IDependencyProperty read get_WidthProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IComboBoxFactory
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_ComboBox)]
  IComboBoxFactory = interface(IInspectable)
  ['{71C1014B-ACDF-5C03-B5ED-02871CAAEB6B}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IComboBox; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IComboBoxItemFactory
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_ComboBoxItem)]
  IComboBoxItemFactory = interface(IInspectable)
  ['{8540B906-C96B-592D-88D7-0C23A3386D93}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IComboBoxItem; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IComboBoxOverrides
  IComboBoxOverrides = interface(IInspectable)
  ['{A6AFBC7A-284F-5B9A-89FE-A334B613F895}']
    procedure OnDropDownClosed(e: IInspectable); safecall;
    procedure OnDropDownOpened(e: IInspectable); safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IComboBoxStatics
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_ComboBox)]
  IComboBoxStatics = interface(IInspectable)
  ['{7DA7CD09-E256-5238-9FED-02B2F3AFBA25}']
    function get_IsEditableProperty: IDependencyProperty; safecall;
    function get_IsDropDownOpenProperty: IDependencyProperty; safecall;
    function get_MaxDropDownHeightProperty: IDependencyProperty; safecall;
    function get_HeaderProperty: IDependencyProperty; safecall;
    function get_HeaderTemplateProperty: IDependencyProperty; safecall;
    function get_PlaceholderTextProperty: IDependencyProperty; safecall;
    function get_LightDismissOverlayModeProperty: IDependencyProperty; safecall;
    function get_IsTextSearchEnabledProperty: IDependencyProperty; safecall;
    function get_SelectionChangedTriggerProperty: IDependencyProperty; safecall;
    function get_PlaceholderForegroundProperty: IDependencyProperty; safecall;
    function get_TextProperty: IDependencyProperty; safecall;
    function get_TextBoxStyleProperty: IDependencyProperty; safecall;
    function get_DescriptionProperty: IDependencyProperty; safecall;
    property DescriptionProperty: IDependencyProperty read get_DescriptionProperty;
    property HeaderProperty: IDependencyProperty read get_HeaderProperty;
    property HeaderTemplateProperty: IDependencyProperty read get_HeaderTemplateProperty;
    property IsDropDownOpenProperty: IDependencyProperty read get_IsDropDownOpenProperty;
    property IsEditableProperty: IDependencyProperty read get_IsEditableProperty;
    property IsTextSearchEnabledProperty: IDependencyProperty read get_IsTextSearchEnabledProperty;
    property LightDismissOverlayModeProperty: IDependencyProperty read get_LightDismissOverlayModeProperty;
    property MaxDropDownHeightProperty: IDependencyProperty read get_MaxDropDownHeightProperty;
    property PlaceholderForegroundProperty: IDependencyProperty read get_PlaceholderForegroundProperty;
    property PlaceholderTextProperty: IDependencyProperty read get_PlaceholderTextProperty;
    property SelectionChangedTriggerProperty: IDependencyProperty read get_SelectionChangedTriggerProperty;
    property TextBoxStyleProperty: IDependencyProperty read get_TextBoxStyleProperty;
    property TextProperty: IDependencyProperty read get_TextProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.ICommandBarElement
  ICommandBarElement = interface(IInspectable)
  ['{F8EB20B4-373E-5327-9942-66A1EA21F5F9}']
    function get_IsCompact: Boolean; safecall;
    procedure put_IsCompact(value: Boolean); safecall;
    function get_IsInOverflow: Boolean; safecall;
    function get_DynamicOverflowOrder: Integer; safecall;
    procedure put_DynamicOverflowOrder(value: Integer); safecall;
    property DynamicOverflowOrder: Integer read get_DynamicOverflowOrder write put_DynamicOverflowOrder;
    property IsCompact: Boolean read get_IsCompact write put_IsCompact;
    property IsInOverflow: Boolean read get_IsInOverflow;
  end;

  // Windows.Foundation.Collections.IIterator`1<Microsoft.UI.Xaml.Controls.ICommandBarElement>
  IIterator_1__ICommandBarElement = interface(IInspectable)
  ['{904C0B66-6B98-5276-ABC2-775FFB489FF9}']
    function get_Current: ICommandBarElement; safecall;
    function get_HasCurrent: Boolean; safecall;
    function MoveNext: Boolean; safecall;
    function GetMany(itemsSize: Cardinal; items: PICommandBarElement): Cardinal; safecall;
    property Current: ICommandBarElement read get_Current;
    property HasCurrent: Boolean read get_HasCurrent;
  end;

  // Windows.Foundation.Collections.IIterable`1<Microsoft.UI.Xaml.Controls.ICommandBarElement>
  IIterable_1__ICommandBarElement = interface(IInspectable)
  ['{6F5CB2B8-4E7E-5B59-B58E-3981E782655A}']
    function First: IIterator_1__ICommandBarElement; safecall;
  end;

  // Windows.Foundation.Collections.IVectorView`1<Microsoft.UI.Xaml.Controls.ICommandBarElement>
  IVectorView_1__ICommandBarElement = interface(IInspectable)
  ['{8D22222F-BD3E-519F-B65D-FD2AE2214582}']
    function GetAt(index: Cardinal): ICommandBarElement; safecall;
    function get_Size: Cardinal; safecall;
    function IndexOf(value: ICommandBarElement; out index: Cardinal): Boolean; safecall;
    function GetMany(startIndex: Cardinal; itemsSize: Cardinal; items: PICommandBarElement): Cardinal; safecall;
    property Size: Cardinal read get_Size;
  end;

  // Windows.Foundation.Collections.IVector`1<Microsoft.UI.Xaml.Controls.ICommandBarElement>
  IVector_1__ICommandBarElement = interface(IInspectable)
  ['{45A61863-77E4-5FA9-BC53-30E5FE104FB8}']
    function GetAt(index: Cardinal): ICommandBarElement; safecall;
    function get_Size: Cardinal; safecall;
    function GetView: IVectorView_1__ICommandBarElement; safecall;
    function IndexOf(value: ICommandBarElement; out index: Cardinal): Boolean; safecall;
    procedure SetAt(index: Cardinal; value: ICommandBarElement); safecall;
    procedure InsertAt(index: Cardinal; value: ICommandBarElement); safecall;
    procedure RemoveAt(index: Cardinal); safecall;
    procedure Append(value: ICommandBarElement); safecall;
    procedure RemoveAtEnd; safecall;
    procedure Clear; safecall;
    function GetMany(startIndex: Cardinal; itemsSize: Cardinal; items: PICommandBarElement): Cardinal; safecall;
    procedure ReplaceAll(itemsSize: Cardinal; items: PICommandBarElement); safecall;
    property Size: Cardinal read get_Size;
  end;

  // UsedAPI Interface
  // Windows.Foundation.Collections.VectorChangedEventHandler`1<Microsoft.UI.Xaml.Controls.ICommandBarElement>
  VectorChangedEventHandler_1__ICommandBarElement = interface(IUnknown)
  ['{71EA1253-DD9C-5509-ACED-2EB045571D53}']
    procedure Invoke(sender: IObservableVector_1__ICommandBarElement; event: IVectorChangedEventArgs); safecall;
  end;

  // UsedAPI Interface
  // Windows.Foundation.Collections.IObservableVector`1<Microsoft.UI.Xaml.Controls.ICommandBarElement>
  IObservableVector_1__ICommandBarElement = interface(IInspectable)
  ['{4FC6CE4E-919E-5B90-A071-507B7CC3273C}']
    function add_VectorChanged(vhnd: VectorChangedEventHandler_1__ICommandBarElement): EventRegistrationToken; safecall;
    procedure remove_VectorChanged(token: EventRegistrationToken); safecall;
  end;

  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.Primitives.ICommandBarTemplateSettings
  Primitives_ICommandBarTemplateSettings = interface(IInspectable)
  ['{AE9535F6-1678-5066-90BF-147AA610C5DD}']
    function get_ContentHeight: Double; safecall;
    function get_OverflowContentClipRect: TRectF; safecall;
    function get_OverflowContentMinWidth: Double; safecall;
    function get_OverflowContentMaxWidth: Double; safecall;
    function get_OverflowContentMaxHeight: Double; safecall;
    function get_OverflowContentHorizontalOffset: Double; safecall;
    function get_OverflowContentHeight: Double; safecall;
    function get_NegativeOverflowContentHeight: Double; safecall;
    function get_EffectiveOverflowButtonVisibility: Visibility; safecall;
    function get_OverflowContentCompactYTranslation: Double; safecall;
    function get_OverflowContentMinimalYTranslation: Double; safecall;
    function get_OverflowContentHiddenYTranslation: Double; safecall;
    property ContentHeight: Double read get_ContentHeight;
    property EffectiveOverflowButtonVisibility: Visibility read get_EffectiveOverflowButtonVisibility;
    property NegativeOverflowContentHeight: Double read get_NegativeOverflowContentHeight;
    property OverflowContentClipRect: TRectF read get_OverflowContentClipRect;
    property OverflowContentCompactYTranslation: Double read get_OverflowContentCompactYTranslation;
    property OverflowContentHeight: Double read get_OverflowContentHeight;
    property OverflowContentHiddenYTranslation: Double read get_OverflowContentHiddenYTranslation;
    property OverflowContentHorizontalOffset: Double read get_OverflowContentHorizontalOffset;
    property OverflowContentMaxHeight: Double read get_OverflowContentMaxHeight;
    property OverflowContentMaxWidth: Double read get_OverflowContentMaxWidth;
    property OverflowContentMinWidth: Double read get_OverflowContentMinWidth;
    property OverflowContentMinimalYTranslation: Double read get_OverflowContentMinimalYTranslation;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IDynamicOverflowItemsChangingEventArgs
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_DynamicOverflowItemsChangingEventArgs)]
  IDynamicOverflowItemsChangingEventArgs = interface(IInspectable)
  ['{BF64C37F-6332-541D-80F1-876C5BB9B196}']
    function get_Action: CommandBarDynamicOverflowAction; safecall;
    property Action: CommandBarDynamicOverflowAction read get_Action;
  end;

  // Generic Delegate for:
  // Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.Controls.ICommandBar,Microsoft.UI.Xaml.Controls.IDynamicOverflowItemsChangingEventArgs>
  TypedEventHandler_2__ICommandBar__IDynamicOverflowItemsChangingEventArgs_Delegate_Base = interface(IUnknown)
  ['{A970A020-F829-5452-85E1-F77232DC7F80}']
    procedure Invoke(sender: ICommandBar; args: IDynamicOverflowItemsChangingEventArgs); safecall;
  end;
  // UsedAPI Interface
  // Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.Controls.ICommandBar,Microsoft.UI.Xaml.Controls.IDynamicOverflowItemsChangingEventArgs>
  TypedEventHandler_2__ICommandBar__IDynamicOverflowItemsChangingEventArgs = interface(TypedEventHandler_2__ICommandBar__IDynamicOverflowItemsChangingEventArgs_Delegate_Base)
  ['{B95C36F2-9B8A-5E3B-85C0-EB6D31991690}']
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.ICommandBar
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_CommandBar)]
  ICommandBar = interface(IInspectable)
  ['{B7CA8EE3-A07A-5F69-8AB8-BE4E3E4CF0C8}']
    function get_PrimaryCommands: IObservableVector_1__ICommandBarElement; safecall;
    function get_SecondaryCommands: IObservableVector_1__ICommandBarElement; safecall;
    function get_CommandBarOverflowPresenterStyle: IStyle; safecall;
    procedure put_CommandBarOverflowPresenterStyle(value: IStyle); safecall;
    function get_CommandBarTemplateSettings: Primitives_ICommandBarTemplateSettings; safecall;
    function get_DefaultLabelPosition: CommandBarDefaultLabelPosition; safecall;
    procedure put_DefaultLabelPosition(value: CommandBarDefaultLabelPosition); safecall;
    function get_OverflowButtonVisibility: CommandBarOverflowButtonVisibility; safecall;
    procedure put_OverflowButtonVisibility(value: CommandBarOverflowButtonVisibility); safecall;
    function get_IsDynamicOverflowEnabled: Boolean; safecall;
    procedure put_IsDynamicOverflowEnabled(value: Boolean); safecall;
    function add_DynamicOverflowItemsChanging(handler: TypedEventHandler_2__ICommandBar__IDynamicOverflowItemsChangingEventArgs): EventRegistrationToken; safecall;
    procedure remove_DynamicOverflowItemsChanging(token: EventRegistrationToken); safecall;
    property CommandBarOverflowPresenterStyle: IStyle read get_CommandBarOverflowPresenterStyle write put_CommandBarOverflowPresenterStyle;
    property CommandBarTemplateSettings: Primitives_ICommandBarTemplateSettings read get_CommandBarTemplateSettings;
    property DefaultLabelPosition: CommandBarDefaultLabelPosition read get_DefaultLabelPosition write put_DefaultLabelPosition;
    property IsDynamicOverflowEnabled: Boolean read get_IsDynamicOverflowEnabled write put_IsDynamicOverflowEnabled;
    property OverflowButtonVisibility: CommandBarOverflowButtonVisibility read get_OverflowButtonVisibility write put_OverflowButtonVisibility;
    property PrimaryCommands: IObservableVector_1__ICommandBarElement read get_PrimaryCommands;
    property SecondaryCommands: IObservableVector_1__ICommandBarElement read get_SecondaryCommands;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.ICommandBarFactory
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_CommandBar)]
  ICommandBarFactory = interface(IInspectable)
  ['{8D4079C3-FA0A-5BB1-B45D-499C378761B4}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): ICommandBar; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.ICommandBarFlyout
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_CommandBarFlyout)]
  ICommandBarFlyout = interface(IInspectable)
  ['{18E2CC40-09CB-5F20-A715-F0B2039C5E18}']
    function get_PrimaryCommands: IObservableVector_1__ICommandBarElement; safecall;
    function get_SecondaryCommands: IObservableVector_1__ICommandBarElement; safecall;
    property PrimaryCommands: IObservableVector_1__ICommandBarElement read get_PrimaryCommands;
    property SecondaryCommands: IObservableVector_1__ICommandBarElement read get_SecondaryCommands;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.ICommandBarFlyout2
  ICommandBarFlyout2 = interface(IInspectable)
  ['{5F81EC9E-A9D2-5F04-B5B1-013DAEF026DD}']
    function get_AlwaysExpanded: Boolean; safecall;
    procedure put_AlwaysExpanded(value: Boolean); safecall;
    property AlwaysExpanded: Boolean read get_AlwaysExpanded write put_AlwaysExpanded;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.ICommandBarFlyoutFactory
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_CommandBarFlyout)]
  ICommandBarFlyoutFactory = interface(IInspectable)
  ['{A194DBE6-4311-5BD2-A8EB-B49C4733A33C}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): ICommandBarFlyout; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.ICommandBarOverflowPresenter
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_CommandBarOverflowPresenter)]
  ICommandBarOverflowPresenter = interface(IInspectable)
  ['{5FF69946-9B27-583B-A3C0-D44244B1BD38}']
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.ICommandBarOverflowPresenterFactory
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_CommandBarOverflowPresenter)]
  ICommandBarOverflowPresenterFactory = interface(IInspectable)
  ['{D066ACF7-0EF5-591A-801E-52A084EEA6EB}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): ICommandBarOverflowPresenter; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.ICommandBarStatics
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_CommandBar)]
  ICommandBarStatics = interface(IInspectable)
  ['{4ED65848-4C67-588F-9666-11FF56D76F02}']
    function get_PrimaryCommandsProperty: IDependencyProperty; safecall;
    function get_SecondaryCommandsProperty: IDependencyProperty; safecall;
    function get_CommandBarOverflowPresenterStyleProperty: IDependencyProperty; safecall;
    function get_DefaultLabelPositionProperty: IDependencyProperty; safecall;
    function get_OverflowButtonVisibilityProperty: IDependencyProperty; safecall;
    function get_IsDynamicOverflowEnabledProperty: IDependencyProperty; safecall;
    property CommandBarOverflowPresenterStyleProperty: IDependencyProperty read get_CommandBarOverflowPresenterStyleProperty;
    property DefaultLabelPositionProperty: IDependencyProperty read get_DefaultLabelPositionProperty;
    property IsDynamicOverflowEnabledProperty: IDependencyProperty read get_IsDynamicOverflowEnabledProperty;
    property OverflowButtonVisibilityProperty: IDependencyProperty read get_OverflowButtonVisibilityProperty;
    property PrimaryCommandsProperty: IDependencyProperty read get_PrimaryCommandsProperty;
    property SecondaryCommandsProperty: IDependencyProperty read get_SecondaryCommandsProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IContentControl
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_ContentControl)]
  IContentControl = interface(IInspectable)
  ['{07E81761-11B2-52AE-8F8B-4D53D2B5900A}']
    function get_Content: IInspectable; safecall;
    procedure put_Content(value: IInspectable); safecall;
    function get_ContentTemplate: IDataTemplate; safecall;
    procedure put_ContentTemplate(value: IDataTemplate); safecall;
    function get_ContentTemplateSelector: IDataTemplateSelector; safecall;
    procedure put_ContentTemplateSelector(value: IDataTemplateSelector); safecall;
    function get_ContentTransitions: IVector_1__Animation_ITransition; safecall;
    procedure put_ContentTransitions(value: IVector_1__Animation_ITransition); safecall;
    function get_ContentTemplateRoot: IUIElement; safecall;
    property Content: IInspectable read get_Content write put_Content;
    property ContentTemplate: IDataTemplate read get_ContentTemplate write put_ContentTemplate;
    property ContentTemplateRoot: IUIElement read get_ContentTemplateRoot;
    property ContentTemplateSelector: IDataTemplateSelector read get_ContentTemplateSelector write put_ContentTemplateSelector;
    property ContentTransitions: IVector_1__Animation_ITransition read get_ContentTransitions write put_ContentTransitions;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IContentControlFactory
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_ContentControl)]
  IContentControlFactory = interface(IInspectable)
  ['{3DEA958E-5ACD-5F80-8938-38634F51493A}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IContentControl; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IContentControlOverrides
  IContentControlOverrides = interface(IInspectable)
  ['{2504174A-017E-5A2D-9C28-D97C66AE9937}']
    procedure OnContentChanged(oldContent: IInspectable; newContent: IInspectable); safecall;
    procedure OnContentTemplateChanged(oldContentTemplate: IDataTemplate; newContentTemplate: IDataTemplate); safecall;
    procedure OnContentTemplateSelectorChanged(oldContentTemplateSelector: IDataTemplateSelector; newContentTemplateSelector: IDataTemplateSelector); safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IContentControlStatics
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_ContentControl)]
  IContentControlStatics = interface(IInspectable)
  ['{F25484F4-2FED-5A0A-8864-7D6D4AC43EF8}']
    function get_ContentProperty: IDependencyProperty; safecall;
    function get_ContentTemplateProperty: IDependencyProperty; safecall;
    function get_ContentTemplateSelectorProperty: IDependencyProperty; safecall;
    function get_ContentTransitionsProperty: IDependencyProperty; safecall;
    property ContentProperty: IDependencyProperty read get_ContentProperty;
    property ContentTemplateProperty: IDependencyProperty read get_ContentTemplateProperty;
    property ContentTemplateSelectorProperty: IDependencyProperty read get_ContentTemplateSelectorProperty;
    property ContentTransitionsProperty: IDependencyProperty read get_ContentTransitionsProperty;
  end;

  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IContentDialogClosingDeferral
  IContentDialogClosingDeferral = interface(IInspectable)
  ['{9D74ECC1-67D3-5F02-9B30-56F3B2E8B0A6}']
    procedure Complete; safecall;
  end;

  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IContentDialogClosingEventArgs
  IContentDialogClosingEventArgs = interface(IInspectable)
  ['{12782103-3B80-511C-9128-12CB8CDAC444}']
    function get_Result: ContentDialogResult; safecall;
    function get_Cancel: Boolean; safecall;
    procedure put_Cancel(value: Boolean); safecall;
    function GetDeferral: IContentDialogClosingDeferral; safecall;
    property Cancel: Boolean read get_Cancel write put_Cancel;
    property Result: ContentDialogResult read get_Result;
  end;

  // Generic Delegate for:
  // Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.Controls.IContentDialog,Microsoft.UI.Xaml.Controls.IContentDialogClosingEventArgs>
  TypedEventHandler_2__IContentDialog__IContentDialogClosingEventArgs_Delegate_Base = interface(IUnknown)
  ['{EF348AEA-E353-5CD4-866A-D1FC93957424}']
    procedure Invoke(sender: IContentDialog; args: IContentDialogClosingEventArgs); safecall;
  end;
  // UsedAPI Interface
  // Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.Controls.IContentDialog,Microsoft.UI.Xaml.Controls.IContentDialogClosingEventArgs>
  TypedEventHandler_2__IContentDialog__IContentDialogClosingEventArgs = interface(TypedEventHandler_2__IContentDialog__IContentDialogClosingEventArgs_Delegate_Base)
  ['{F76F93BA-34A9-51A0-A668-5351B706D3EC}']
  end;

  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IContentDialogClosedEventArgs
  IContentDialogClosedEventArgs = interface(IInspectable)
  ['{9B84E681-1AB6-5485-88B2-D0D3C05B29F3}']
    function get_Result: ContentDialogResult; safecall;
    property Result: ContentDialogResult read get_Result;
  end;

  // Generic Delegate for:
  // Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.Controls.IContentDialog,Microsoft.UI.Xaml.Controls.IContentDialogClosedEventArgs>
  TypedEventHandler_2__IContentDialog__IContentDialogClosedEventArgs_Delegate_Base = interface(IUnknown)
  ['{AA8730EC-C9BD-50EA-8714-DA30C29590D9}']
    procedure Invoke(sender: IContentDialog; args: IContentDialogClosedEventArgs); safecall;
  end;
  // UsedAPI Interface
  // Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.Controls.IContentDialog,Microsoft.UI.Xaml.Controls.IContentDialogClosedEventArgs>
  TypedEventHandler_2__IContentDialog__IContentDialogClosedEventArgs = interface(TypedEventHandler_2__IContentDialog__IContentDialogClosedEventArgs_Delegate_Base)
  ['{7DE2B830-977D-5E15-B359-EBA98F1DD8E6}']
  end;

  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IContentDialogOpenedEventArgs
  IContentDialogOpenedEventArgs = interface(IInspectable)
  ['{D1355ED8-64ED-5BBC-9411-5F4DBCA7D93F}']
  end;

  // Generic Delegate for:
  // Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.Controls.IContentDialog,Microsoft.UI.Xaml.Controls.IContentDialogOpenedEventArgs>
  TypedEventHandler_2__IContentDialog__IContentDialogOpenedEventArgs_Delegate_Base = interface(IUnknown)
  ['{64992085-7DF0-5A0E-833F-98C7473BFEC5}']
    procedure Invoke(sender: IContentDialog; args: IContentDialogOpenedEventArgs); safecall;
  end;
  // UsedAPI Interface
  // Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.Controls.IContentDialog,Microsoft.UI.Xaml.Controls.IContentDialogOpenedEventArgs>
  TypedEventHandler_2__IContentDialog__IContentDialogOpenedEventArgs = interface(TypedEventHandler_2__IContentDialog__IContentDialogOpenedEventArgs_Delegate_Base)
  ['{89727FE8-C41D-595D-935D-AFCAC122EDAC}']
  end;

  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IContentDialogButtonClickDeferral
  IContentDialogButtonClickDeferral = interface(IInspectable)
  ['{DDCA6D2E-A81A-5F61-8B87-E4B6EC5FA398}']
    procedure Complete; safecall;
  end;

  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IContentDialogButtonClickEventArgs
  IContentDialogButtonClickEventArgs = interface(IInspectable)
  ['{BAE6261C-362F-5342-BA26-5F6990EF726C}']
    function get_Cancel: Boolean; safecall;
    procedure put_Cancel(value: Boolean); safecall;
    function GetDeferral: IContentDialogButtonClickDeferral; safecall;
    property Cancel: Boolean read get_Cancel write put_Cancel;
  end;

  // Generic Delegate for:
  // Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.Controls.IContentDialog,Microsoft.UI.Xaml.Controls.IContentDialogButtonClickEventArgs>
  TypedEventHandler_2__IContentDialog__IContentDialogButtonClickEventArgs_Delegate_Base = interface(IUnknown)
  ['{00E6D74A-B785-5F70-B181-8B5719F43922}']
    procedure Invoke(sender: IContentDialog; args: IContentDialogButtonClickEventArgs); safecall;
  end;
  // UsedAPI Interface
  // Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.Controls.IContentDialog,Microsoft.UI.Xaml.Controls.IContentDialogButtonClickEventArgs>
  TypedEventHandler_2__IContentDialog__IContentDialogButtonClickEventArgs = interface(TypedEventHandler_2__IContentDialog__IContentDialogButtonClickEventArgs_Delegate_Base)
  ['{BD0606D1-3FB8-5C71-9284-0DDAD30E6950}']
  end;

  // UsedAPI Interface
  // Windows.Foundation.AsyncOperationCompletedHandler`1<Microsoft.UI.Xaml.Controls.ContentDialogResult>
  AsyncOperationCompletedHandler_1__ContentDialogResult = interface(IUnknown)
  ['{C54CB0ED-A4D3-5F8E-B5BC-91F5098A267D}']
    procedure Invoke(asyncInfo: IAsyncOperation_1__ContentDialogResult; asyncStatus: AsyncStatus); safecall;
  end;

  // UsedAPI Interface
  // Windows.Foundation.IAsyncOperation`1<Microsoft.UI.Xaml.Controls.ContentDialogResult>
  IAsyncOperation_1__ContentDialogResult = interface(IInspectable)
  ['{D3AD3641-8227-59DE-BAC8-85D3795C6610}']
    procedure put_Completed(handler: AsyncOperationCompletedHandler_1__ContentDialogResult); safecall;
    function get_Completed: AsyncOperationCompletedHandler_1__ContentDialogResult; safecall;
    function GetResults: ContentDialogResult; safecall;
    property Completed: AsyncOperationCompletedHandler_1__ContentDialogResult read get_Completed write put_Completed;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IContentDialog
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_ContentDialog)]
  IContentDialog = interface(IInspectable)
  ['{AC2145A3-4A32-5305-A81D-47509515BFCE}']
    function get_Title: IInspectable; safecall;
    procedure put_Title(value: IInspectable); safecall;
    function get_TitleTemplate: IDataTemplate; safecall;
    procedure put_TitleTemplate(value: IDataTemplate); safecall;
    function get_FullSizeDesired: Boolean; safecall;
    procedure put_FullSizeDesired(value: Boolean); safecall;
    function get_PrimaryButtonText: HSTRING; safecall;
    procedure put_PrimaryButtonText(value: HSTRING); safecall;
    function get_SecondaryButtonText: HSTRING; safecall;
    procedure put_SecondaryButtonText(value: HSTRING); safecall;
    function get_CloseButtonText: HSTRING; safecall;
    procedure put_CloseButtonText(value: HSTRING); safecall;
    function get_PrimaryButtonCommand: Input_ICommand; safecall;
    procedure put_PrimaryButtonCommand(value: Input_ICommand); safecall;
    function get_SecondaryButtonCommand: Input_ICommand; safecall;
    procedure put_SecondaryButtonCommand(value: Input_ICommand); safecall;
    function get_CloseButtonCommand: Input_ICommand; safecall;
    procedure put_CloseButtonCommand(value: Input_ICommand); safecall;
    function get_PrimaryButtonCommandParameter: IInspectable; safecall;
    procedure put_PrimaryButtonCommandParameter(value: IInspectable); safecall;
    function get_SecondaryButtonCommandParameter: IInspectable; safecall;
    procedure put_SecondaryButtonCommandParameter(value: IInspectable); safecall;
    function get_CloseButtonCommandParameter: IInspectable; safecall;
    procedure put_CloseButtonCommandParameter(value: IInspectable); safecall;
    function get_IsPrimaryButtonEnabled: Boolean; safecall;
    procedure put_IsPrimaryButtonEnabled(value: Boolean); safecall;
    function get_IsSecondaryButtonEnabled: Boolean; safecall;
    procedure put_IsSecondaryButtonEnabled(value: Boolean); safecall;
    function get_PrimaryButtonStyle: IStyle; safecall;
    procedure put_PrimaryButtonStyle(value: IStyle); safecall;
    function get_SecondaryButtonStyle: IStyle; safecall;
    procedure put_SecondaryButtonStyle(value: IStyle); safecall;
    function get_CloseButtonStyle: IStyle; safecall;
    procedure put_CloseButtonStyle(value: IStyle); safecall;
    function get_DefaultButton: ContentDialogButton; safecall;
    procedure put_DefaultButton(value: ContentDialogButton); safecall;
    function add_Closing(handler: TypedEventHandler_2__IContentDialog__IContentDialogClosingEventArgs): EventRegistrationToken; safecall;
    procedure remove_Closing(token: EventRegistrationToken); safecall;
    function add_Closed(handler: TypedEventHandler_2__IContentDialog__IContentDialogClosedEventArgs): EventRegistrationToken; safecall;
    procedure remove_Closed(token: EventRegistrationToken); safecall;
    function add_Opened(handler: TypedEventHandler_2__IContentDialog__IContentDialogOpenedEventArgs): EventRegistrationToken; safecall;
    procedure remove_Opened(token: EventRegistrationToken); safecall;
    function add_PrimaryButtonClick(handler: TypedEventHandler_2__IContentDialog__IContentDialogButtonClickEventArgs): EventRegistrationToken; safecall;
    procedure remove_PrimaryButtonClick(token: EventRegistrationToken); safecall;
    function add_SecondaryButtonClick(handler: TypedEventHandler_2__IContentDialog__IContentDialogButtonClickEventArgs): EventRegistrationToken; safecall;
    procedure remove_SecondaryButtonClick(token: EventRegistrationToken); safecall;
    function add_CloseButtonClick(handler: TypedEventHandler_2__IContentDialog__IContentDialogButtonClickEventArgs): EventRegistrationToken; safecall;
    procedure remove_CloseButtonClick(token: EventRegistrationToken); safecall;
    procedure Hide; safecall;
    function ShowAsync: IAsyncOperation_1__ContentDialogResult; overload; safecall;
    function ShowAsync(placement: ContentDialogPlacement): IAsyncOperation_1__ContentDialogResult; overload; safecall;
    property CloseButtonCommand: Input_ICommand read get_CloseButtonCommand write put_CloseButtonCommand;
    property CloseButtonCommandParameter: IInspectable read get_CloseButtonCommandParameter write put_CloseButtonCommandParameter;
    property CloseButtonStyle: IStyle read get_CloseButtonStyle write put_CloseButtonStyle;
    property CloseButtonText: HSTRING read get_CloseButtonText write put_CloseButtonText;
    property DefaultButton: ContentDialogButton read get_DefaultButton write put_DefaultButton;
    property FullSizeDesired: Boolean read get_FullSizeDesired write put_FullSizeDesired;
    property IsPrimaryButtonEnabled: Boolean read get_IsPrimaryButtonEnabled write put_IsPrimaryButtonEnabled;
    property IsSecondaryButtonEnabled: Boolean read get_IsSecondaryButtonEnabled write put_IsSecondaryButtonEnabled;
    property PrimaryButtonCommand: Input_ICommand read get_PrimaryButtonCommand write put_PrimaryButtonCommand;
    property PrimaryButtonCommandParameter: IInspectable read get_PrimaryButtonCommandParameter write put_PrimaryButtonCommandParameter;
    property PrimaryButtonStyle: IStyle read get_PrimaryButtonStyle write put_PrimaryButtonStyle;
    property PrimaryButtonText: HSTRING read get_PrimaryButtonText write put_PrimaryButtonText;
    property SecondaryButtonCommand: Input_ICommand read get_SecondaryButtonCommand write put_SecondaryButtonCommand;
    property SecondaryButtonCommandParameter: IInspectable read get_SecondaryButtonCommandParameter write put_SecondaryButtonCommandParameter;
    property SecondaryButtonStyle: IStyle read get_SecondaryButtonStyle write put_SecondaryButtonStyle;
    property SecondaryButtonText: HSTRING read get_SecondaryButtonText write put_SecondaryButtonText;
    property Title: IInspectable read get_Title write put_Title;
    property TitleTemplate: IDataTemplate read get_TitleTemplate write put_TitleTemplate;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IContentDialogFactory
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_ContentDialog)]
  IContentDialogFactory = interface(IInspectable)
  ['{A05B3AD7-C60E-545A-9EE4-F098220ED816}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IContentDialog; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IContentDialogStatics
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_ContentDialog)]
  IContentDialogStatics = interface(IInspectable)
  ['{397B18DD-6964-5056-97C3-D69CD7716A4B}']
    function get_TitleProperty: IDependencyProperty; safecall;
    function get_TitleTemplateProperty: IDependencyProperty; safecall;
    function get_FullSizeDesiredProperty: IDependencyProperty; safecall;
    function get_PrimaryButtonTextProperty: IDependencyProperty; safecall;
    function get_SecondaryButtonTextProperty: IDependencyProperty; safecall;
    function get_CloseButtonTextProperty: IDependencyProperty; safecall;
    function get_PrimaryButtonCommandProperty: IDependencyProperty; safecall;
    function get_SecondaryButtonCommandProperty: IDependencyProperty; safecall;
    function get_CloseButtonCommandProperty: IDependencyProperty; safecall;
    function get_PrimaryButtonCommandParameterProperty: IDependencyProperty; safecall;
    function get_SecondaryButtonCommandParameterProperty: IDependencyProperty; safecall;
    function get_CloseButtonCommandParameterProperty: IDependencyProperty; safecall;
    function get_IsPrimaryButtonEnabledProperty: IDependencyProperty; safecall;
    function get_IsSecondaryButtonEnabledProperty: IDependencyProperty; safecall;
    function get_PrimaryButtonStyleProperty: IDependencyProperty; safecall;
    function get_SecondaryButtonStyleProperty: IDependencyProperty; safecall;
    function get_CloseButtonStyleProperty: IDependencyProperty; safecall;
    function get_DefaultButtonProperty: IDependencyProperty; safecall;
    property CloseButtonCommandParameterProperty: IDependencyProperty read get_CloseButtonCommandParameterProperty;
    property CloseButtonCommandProperty: IDependencyProperty read get_CloseButtonCommandProperty;
    property CloseButtonStyleProperty: IDependencyProperty read get_CloseButtonStyleProperty;
    property CloseButtonTextProperty: IDependencyProperty read get_CloseButtonTextProperty;
    property DefaultButtonProperty: IDependencyProperty read get_DefaultButtonProperty;
    property FullSizeDesiredProperty: IDependencyProperty read get_FullSizeDesiredProperty;
    property IsPrimaryButtonEnabledProperty: IDependencyProperty read get_IsPrimaryButtonEnabledProperty;
    property IsSecondaryButtonEnabledProperty: IDependencyProperty read get_IsSecondaryButtonEnabledProperty;
    property PrimaryButtonCommandParameterProperty: IDependencyProperty read get_PrimaryButtonCommandParameterProperty;
    property PrimaryButtonCommandProperty: IDependencyProperty read get_PrimaryButtonCommandProperty;
    property PrimaryButtonStyleProperty: IDependencyProperty read get_PrimaryButtonStyleProperty;
    property PrimaryButtonTextProperty: IDependencyProperty read get_PrimaryButtonTextProperty;
    property SecondaryButtonCommandParameterProperty: IDependencyProperty read get_SecondaryButtonCommandParameterProperty;
    property SecondaryButtonCommandProperty: IDependencyProperty read get_SecondaryButtonCommandProperty;
    property SecondaryButtonStyleProperty: IDependencyProperty read get_SecondaryButtonStyleProperty;
    property SecondaryButtonTextProperty: IDependencyProperty read get_SecondaryButtonTextProperty;
    property TitleProperty: IDependencyProperty read get_TitleProperty;
    property TitleTemplateProperty: IDependencyProperty read get_TitleTemplateProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IContentPresenter
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_ContentPresenter)]
  IContentPresenter = interface(IInspectable)
  ['{075E6CA8-DA46-5EC6-8C64-03B3DDEAF74F}']
    function get_Content: IInspectable; safecall;
    procedure put_Content(value: IInspectable); safecall;
    function get_ContentTemplate: IDataTemplate; safecall;
    procedure put_ContentTemplate(value: IDataTemplate); safecall;
    function get_ContentTemplateSelector: IDataTemplateSelector; safecall;
    procedure put_ContentTemplateSelector(value: IDataTemplateSelector); safecall;
    function get_ContentTransitions: IVector_1__Animation_ITransition; safecall;
    procedure put_ContentTransitions(value: IVector_1__Animation_ITransition); safecall;
    function get_FontSize: Double; safecall;
    procedure put_FontSize(value: Double); safecall;
    function get_FontFamily: IFontFamily; safecall;
    procedure put_FontFamily(value: IFontFamily); safecall;
    function get_FontWeight: FontWeight; safecall;
    procedure put_FontWeight(value: FontWeight); safecall;
    function get_FontStyle: FontStyle; safecall;
    procedure put_FontStyle(value: FontStyle); safecall;
    function get_FontStretch: FontStretch; safecall;
    procedure put_FontStretch(value: FontStretch); safecall;
    function get_CharacterSpacing: Integer; safecall;
    procedure put_CharacterSpacing(value: Integer); safecall;
    function get_Foreground: IBrush; safecall;
    procedure put_Foreground(value: IBrush); safecall;
    function get_OpticalMarginAlignment: OpticalMarginAlignment; safecall;
    procedure put_OpticalMarginAlignment(value: OpticalMarginAlignment); safecall;
    function get_TextLineBounds: TextLineBounds; safecall;
    procedure put_TextLineBounds(value: TextLineBounds); safecall;
    function get_IsTextScaleFactorEnabled: Boolean; safecall;
    procedure put_IsTextScaleFactorEnabled(value: Boolean); safecall;
    function get_BackgroundTransition: IBrushTransition; safecall;
    procedure put_BackgroundTransition(value: IBrushTransition); safecall;
    function get_TextWrapping: TextWrapping; safecall;
    procedure put_TextWrapping(value: TextWrapping); safecall;
    function get_MaxLines: Integer; safecall;
    procedure put_MaxLines(value: Integer); safecall;
    function get_LineStackingStrategy: LineStackingStrategy; safecall;
    procedure put_LineStackingStrategy(value: LineStackingStrategy); safecall;
    function get_LineHeight: Double; safecall;
    procedure put_LineHeight(value: Double); safecall;
    function get_BorderBrush: IBrush; safecall;
    procedure put_BorderBrush(value: IBrush); safecall;
    function get_BorderThickness: Thickness; safecall;
    procedure put_BorderThickness(value: Thickness); safecall;
    function get_CornerRadius: CornerRadius; safecall;
    procedure put_CornerRadius(value: CornerRadius); safecall;
    function get_Padding: Thickness; safecall;
    procedure put_Padding(value: Thickness); safecall;
    function get_Background: IBrush; safecall;
    procedure put_Background(value: IBrush); safecall;
    function get_BackgroundSizing: BackgroundSizing; safecall;
    procedure put_BackgroundSizing(value: BackgroundSizing); safecall;
    function get_HorizontalContentAlignment: HorizontalAlignment; safecall;
    procedure put_HorizontalContentAlignment(value: HorizontalAlignment); safecall;
    function get_VerticalContentAlignment: VerticalAlignment; safecall;
    procedure put_VerticalContentAlignment(value: VerticalAlignment); safecall;
    property Background: IBrush read get_Background write put_Background;
    property BackgroundSizing_: BackgroundSizing read get_BackgroundSizing write put_BackgroundSizing;
    property BackgroundTransition: IBrushTransition read get_BackgroundTransition write put_BackgroundTransition;
    property BorderBrush: IBrush read get_BorderBrush write put_BorderBrush;
    property BorderThickness: Thickness read get_BorderThickness write put_BorderThickness;
    property CharacterSpacing: Integer read get_CharacterSpacing write put_CharacterSpacing;
    property Content: IInspectable read get_Content write put_Content;
    property ContentTemplate: IDataTemplate read get_ContentTemplate write put_ContentTemplate;
    property ContentTemplateSelector: IDataTemplateSelector read get_ContentTemplateSelector write put_ContentTemplateSelector;
    property ContentTransitions: IVector_1__Animation_ITransition read get_ContentTransitions write put_ContentTransitions;
    property CornerRadius_: CornerRadius read get_CornerRadius write put_CornerRadius;
    property FontFamily: IFontFamily read get_FontFamily write put_FontFamily;
    property FontSize: Double read get_FontSize write put_FontSize;
    property FontStretch_: FontStretch read get_FontStretch write put_FontStretch;
    property FontStyle_: FontStyle read get_FontStyle write put_FontStyle;
    property FontWeight_: FontWeight read get_FontWeight write put_FontWeight;
    property Foreground: IBrush read get_Foreground write put_Foreground;
    property HorizontalContentAlignment: HorizontalAlignment read get_HorizontalContentAlignment write put_HorizontalContentAlignment;
    property IsTextScaleFactorEnabled: Boolean read get_IsTextScaleFactorEnabled write put_IsTextScaleFactorEnabled;
    property LineHeight: Double read get_LineHeight write put_LineHeight;
    property LineStackingStrategy_: LineStackingStrategy read get_LineStackingStrategy write put_LineStackingStrategy;
    property MaxLines: Integer read get_MaxLines write put_MaxLines;
    property OpticalMarginAlignment_: OpticalMarginAlignment read get_OpticalMarginAlignment write put_OpticalMarginAlignment;
    property Padding: Thickness read get_Padding write put_Padding;
    property TextLineBounds_: TextLineBounds read get_TextLineBounds write put_TextLineBounds;
    property TextWrapping_: TextWrapping read get_TextWrapping write put_TextWrapping;
    property VerticalContentAlignment: VerticalAlignment read get_VerticalContentAlignment write put_VerticalContentAlignment;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IContentPresenterFactory
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_ContentPresenter)]
  IContentPresenterFactory = interface(IInspectable)
  ['{730B1D5E-2540-5A3D-A6C7-888AA8614610}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IContentPresenter; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IContentPresenterOverrides
  IContentPresenterOverrides = interface(IInspectable)
  ['{00E96954-D6E0-510F-A2D2-38A032B96236}']
    procedure OnContentTemplateChanged(oldContentTemplate: IDataTemplate; newContentTemplate: IDataTemplate); safecall;
    procedure OnContentTemplateSelectorChanged(oldContentTemplateSelector: IDataTemplateSelector; newContentTemplateSelector: IDataTemplateSelector); safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IContentPresenterStatics
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_ContentPresenter)]
  IContentPresenterStatics = interface(IInspectable)
  ['{C3E55F6C-7ABE-568F-B67B-8EBD3274F33E}']
    function get_ContentProperty: IDependencyProperty; safecall;
    function get_ContentTemplateProperty: IDependencyProperty; safecall;
    function get_ContentTemplateSelectorProperty: IDependencyProperty; safecall;
    function get_ContentTransitionsProperty: IDependencyProperty; safecall;
    function get_FontSizeProperty: IDependencyProperty; safecall;
    function get_FontFamilyProperty: IDependencyProperty; safecall;
    function get_FontWeightProperty: IDependencyProperty; safecall;
    function get_FontStyleProperty: IDependencyProperty; safecall;
    function get_FontStretchProperty: IDependencyProperty; safecall;
    function get_CharacterSpacingProperty: IDependencyProperty; safecall;
    function get_ForegroundProperty: IDependencyProperty; safecall;
    function get_OpticalMarginAlignmentProperty: IDependencyProperty; safecall;
    function get_TextLineBoundsProperty: IDependencyProperty; safecall;
    function get_IsTextScaleFactorEnabledProperty: IDependencyProperty; safecall;
    function get_TextWrappingProperty: IDependencyProperty; safecall;
    function get_MaxLinesProperty: IDependencyProperty; safecall;
    function get_LineStackingStrategyProperty: IDependencyProperty; safecall;
    function get_LineHeightProperty: IDependencyProperty; safecall;
    function get_BorderBrushProperty: IDependencyProperty; safecall;
    function get_BorderThicknessProperty: IDependencyProperty; safecall;
    function get_CornerRadiusProperty: IDependencyProperty; safecall;
    function get_PaddingProperty: IDependencyProperty; safecall;
    function get_BackgroundProperty: IDependencyProperty; safecall;
    function get_BackgroundSizingProperty: IDependencyProperty; safecall;
    function get_HorizontalContentAlignmentProperty: IDependencyProperty; safecall;
    function get_VerticalContentAlignmentProperty: IDependencyProperty; safecall;
    property BackgroundProperty: IDependencyProperty read get_BackgroundProperty;
    property BackgroundSizingProperty: IDependencyProperty read get_BackgroundSizingProperty;
    property BorderBrushProperty: IDependencyProperty read get_BorderBrushProperty;
    property BorderThicknessProperty: IDependencyProperty read get_BorderThicknessProperty;
    property CharacterSpacingProperty: IDependencyProperty read get_CharacterSpacingProperty;
    property ContentProperty: IDependencyProperty read get_ContentProperty;
    property ContentTemplateProperty: IDependencyProperty read get_ContentTemplateProperty;
    property ContentTemplateSelectorProperty: IDependencyProperty read get_ContentTemplateSelectorProperty;
    property ContentTransitionsProperty: IDependencyProperty read get_ContentTransitionsProperty;
    property CornerRadiusProperty: IDependencyProperty read get_CornerRadiusProperty;
    property FontFamilyProperty: IDependencyProperty read get_FontFamilyProperty;
    property FontSizeProperty: IDependencyProperty read get_FontSizeProperty;
    property FontStretchProperty: IDependencyProperty read get_FontStretchProperty;
    property FontStyleProperty: IDependencyProperty read get_FontStyleProperty;
    property FontWeightProperty: IDependencyProperty read get_FontWeightProperty;
    property ForegroundProperty: IDependencyProperty read get_ForegroundProperty;
    property HorizontalContentAlignmentProperty: IDependencyProperty read get_HorizontalContentAlignmentProperty;
    property IsTextScaleFactorEnabledProperty: IDependencyProperty read get_IsTextScaleFactorEnabledProperty;
    property LineHeightProperty: IDependencyProperty read get_LineHeightProperty;
    property LineStackingStrategyProperty: IDependencyProperty read get_LineStackingStrategyProperty;
    property MaxLinesProperty: IDependencyProperty read get_MaxLinesProperty;
    property OpticalMarginAlignmentProperty: IDependencyProperty read get_OpticalMarginAlignmentProperty;
    property PaddingProperty: IDependencyProperty read get_PaddingProperty;
    property TextLineBoundsProperty: IDependencyProperty read get_TextLineBoundsProperty;
    property TextWrappingProperty: IDependencyProperty read get_TextWrappingProperty;
    property VerticalContentAlignmentProperty: IDependencyProperty read get_VerticalContentAlignmentProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IControlTemplate
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_ControlTemplate)]
  IControlTemplate = interface(IInspectable)
  ['{3A192751-2106-547A-ACA0-F15AE8926EA0}']
    function get_TargetType: Interop_TypeName; safecall;
    procedure put_TargetType(value: Interop_TypeName); safecall;
    property TargetType: Interop_TypeName read get_TargetType write put_TargetType;
  end;

  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IFocusEngagedEventArgs
  IFocusEngagedEventArgs = interface(IInspectable)
  ['{1E71E8E4-74B2-50A1-8F2B-42C0118AB0EA}']
    function get_Handled: Boolean; safecall;
    procedure put_Handled(value: Boolean); safecall;
    property Handled: Boolean read get_Handled write put_Handled;
  end;

  // Generic Delegate for:
  // Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.Controls.IControl,Microsoft.UI.Xaml.Controls.IFocusEngagedEventArgs>
  TypedEventHandler_2__IControl__IFocusEngagedEventArgs_Delegate_Base = interface(IUnknown)
  ['{4B2FE512-35FA-5C54-B687-9EFB709B68CD}']
    procedure Invoke(sender: IControl; args: IFocusEngagedEventArgs); safecall;
  end;
  // UsedAPI Interface
  // Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.Controls.IControl,Microsoft.UI.Xaml.Controls.IFocusEngagedEventArgs>
  TypedEventHandler_2__IControl__IFocusEngagedEventArgs = interface(TypedEventHandler_2__IControl__IFocusEngagedEventArgs_Delegate_Base)
  ['{BF0338E0-AB7A-5969-8C33-4B28F644DEE4}']
  end;

  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IFocusDisengagedEventArgs
  IFocusDisengagedEventArgs = interface(IInspectable)
  ['{C0B4B88C-C195-5064-84C7-33CB262CB240}']
  end;

  // Generic Delegate for:
  // Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.Controls.IControl,Microsoft.UI.Xaml.Controls.IFocusDisengagedEventArgs>
  TypedEventHandler_2__IControl__IFocusDisengagedEventArgs_Delegate_Base = interface(IUnknown)
  ['{9879511C-DCFD-56A5-9535-5DA86088092F}']
    procedure Invoke(sender: IControl; args: IFocusDisengagedEventArgs); safecall;
  end;
  // UsedAPI Interface
  // Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.Controls.IControl,Microsoft.UI.Xaml.Controls.IFocusDisengagedEventArgs>
  TypedEventHandler_2__IControl__IFocusDisengagedEventArgs = interface(TypedEventHandler_2__IControl__IFocusDisengagedEventArgs_Delegate_Base)
  ['{3376B66A-CAB5-53F6-9D29-8F451AC035C2}']
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IControl
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_Control)]
  IControl = interface(IInspectable)
  ['{857D6E8A-D45A-5C69-A99C-BF6A5C54FB38}']
    function get_IsFocusEngagementEnabled: Boolean; safecall;
    procedure put_IsFocusEngagementEnabled(value: Boolean); safecall;
    function get_IsFocusEngaged: Boolean; safecall;
    procedure put_IsFocusEngaged(value: Boolean); safecall;
    function get_RequiresPointer: RequiresPointer; safecall;
    procedure put_RequiresPointer(value: RequiresPointer); safecall;
    function get_FontSize: Double; safecall;
    procedure put_FontSize(value: Double); safecall;
    function get_FontFamily: IFontFamily; safecall;
    procedure put_FontFamily(value: IFontFamily); safecall;
    function get_FontWeight: FontWeight; safecall;
    procedure put_FontWeight(value: FontWeight); safecall;
    function get_FontStyle: FontStyle; safecall;
    procedure put_FontStyle(value: FontStyle); safecall;
    function get_FontStretch: FontStretch; safecall;
    procedure put_FontStretch(value: FontStretch); safecall;
    function get_CharacterSpacing: Integer; safecall;
    procedure put_CharacterSpacing(value: Integer); safecall;
    function get_Foreground: IBrush; safecall;
    procedure put_Foreground(value: IBrush); safecall;
    function get_IsTextScaleFactorEnabled: Boolean; safecall;
    procedure put_IsTextScaleFactorEnabled(value: Boolean); safecall;
    function get_IsEnabled: Boolean; safecall;
    procedure put_IsEnabled(value: Boolean); safecall;
    function get_TabNavigation: Input_KeyboardNavigationMode; safecall;
    procedure put_TabNavigation(value: Input_KeyboardNavigationMode); safecall;
    function get_Template: IControlTemplate; safecall;
    procedure put_Template(value: IControlTemplate); safecall;
    function get_Padding: Thickness; safecall;
    procedure put_Padding(value: Thickness); safecall;
    function get_HorizontalContentAlignment: HorizontalAlignment; safecall;
    procedure put_HorizontalContentAlignment(value: HorizontalAlignment); safecall;
    function get_VerticalContentAlignment: VerticalAlignment; safecall;
    procedure put_VerticalContentAlignment(value: VerticalAlignment); safecall;
    function get_Background: IBrush; safecall;
    procedure put_Background(value: IBrush); safecall;
    function get_BackgroundSizing: BackgroundSizing; safecall;
    procedure put_BackgroundSizing(value: BackgroundSizing); safecall;
    function get_BorderThickness: Thickness; safecall;
    procedure put_BorderThickness(value: Thickness); safecall;
    function get_BorderBrush: IBrush; safecall;
    procedure put_BorderBrush(value: IBrush); safecall;
    function get_DefaultStyleResourceUri: IUriRuntimeClass; safecall;
    procedure put_DefaultStyleResourceUri(value: IUriRuntimeClass); safecall;
    function get_ElementSoundMode: ElementSoundMode; safecall;
    procedure put_ElementSoundMode(value: ElementSoundMode); safecall;
    function get_CornerRadius: CornerRadius; safecall;
    procedure put_CornerRadius(value: CornerRadius); safecall;
    function add_FocusEngaged(handler: TypedEventHandler_2__IControl__IFocusEngagedEventArgs): EventRegistrationToken; safecall;
    procedure remove_FocusEngaged(token: EventRegistrationToken); safecall;
    function add_FocusDisengaged(handler: TypedEventHandler_2__IControl__IFocusDisengagedEventArgs): EventRegistrationToken; safecall;
    procedure remove_FocusDisengaged(token: EventRegistrationToken); safecall;
    function add_IsEnabledChanged(handler: DependencyPropertyChangedEventHandler): EventRegistrationToken; safecall;
    procedure remove_IsEnabledChanged(token: EventRegistrationToken); safecall;
    procedure RemoveFocusEngagement; safecall;
    function ApplyTemplate: Boolean; safecall;
    property Background: IBrush read get_Background write put_Background;
    property BackgroundSizing_: BackgroundSizing read get_BackgroundSizing write put_BackgroundSizing;
    property BorderBrush: IBrush read get_BorderBrush write put_BorderBrush;
    property BorderThickness: Thickness read get_BorderThickness write put_BorderThickness;
    property CharacterSpacing: Integer read get_CharacterSpacing write put_CharacterSpacing;
    property CornerRadius_: CornerRadius read get_CornerRadius write put_CornerRadius;
    property DefaultStyleResourceUri: IUriRuntimeClass read get_DefaultStyleResourceUri write put_DefaultStyleResourceUri;
    property ElementSoundMode_: ElementSoundMode read get_ElementSoundMode write put_ElementSoundMode;
    property FontFamily: IFontFamily read get_FontFamily write put_FontFamily;
    property FontSize: Double read get_FontSize write put_FontSize;
    property FontStretch_: FontStretch read get_FontStretch write put_FontStretch;
    property FontStyle_: FontStyle read get_FontStyle write put_FontStyle;
    property FontWeight_: FontWeight read get_FontWeight write put_FontWeight;
    property Foreground: IBrush read get_Foreground write put_Foreground;
    property HorizontalContentAlignment: HorizontalAlignment read get_HorizontalContentAlignment write put_HorizontalContentAlignment;
    property IsEnabled: Boolean read get_IsEnabled write put_IsEnabled;
    property IsFocusEngaged: Boolean read get_IsFocusEngaged write put_IsFocusEngaged;
    property IsFocusEngagementEnabled: Boolean read get_IsFocusEngagementEnabled write put_IsFocusEngagementEnabled;
    property IsTextScaleFactorEnabled: Boolean read get_IsTextScaleFactorEnabled write put_IsTextScaleFactorEnabled;
    property Padding: Thickness read get_Padding write put_Padding;
    property RequiresPointer_: RequiresPointer read get_RequiresPointer write put_RequiresPointer;
    property TabNavigation: Input_KeyboardNavigationMode read get_TabNavigation write put_TabNavigation;
    property Template: IControlTemplate read get_Template write put_Template;
    property VerticalContentAlignment: VerticalAlignment read get_VerticalContentAlignment write put_VerticalContentAlignment;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IControlFactory
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_Control)]
  IControlFactory = interface(IInspectable)
  ['{25159233-9438-5534-AEB9-00EB059CF73F}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IControl; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IControlOverrides
  IControlOverrides = interface(IInspectable)
  ['{5F644395-2177-5161-9F87-C6C749C73A03}']
    procedure OnPointerEntered(e: Input_IPointerRoutedEventArgs); safecall;
    procedure OnPointerPressed(e: Input_IPointerRoutedEventArgs); safecall;
    procedure OnPointerMoved(e: Input_IPointerRoutedEventArgs); safecall;
    procedure OnPointerReleased(e: Input_IPointerRoutedEventArgs); safecall;
    procedure OnPointerExited(e: Input_IPointerRoutedEventArgs); safecall;
    procedure OnPointerCaptureLost(e: Input_IPointerRoutedEventArgs); safecall;
    procedure OnPointerCanceled(e: Input_IPointerRoutedEventArgs); safecall;
    procedure OnPointerWheelChanged(e: Input_IPointerRoutedEventArgs); safecall;
    procedure OnTapped(e: Input_ITappedRoutedEventArgs); safecall;
    procedure OnDoubleTapped(e: Input_IDoubleTappedRoutedEventArgs); safecall;
    procedure OnHolding(e: Input_IHoldingRoutedEventArgs); safecall;
    procedure OnRightTapped(e: Input_IRightTappedRoutedEventArgs); safecall;
    procedure OnManipulationStarting(e: Input_IManipulationStartingRoutedEventArgs); safecall;
    procedure OnManipulationInertiaStarting(e: Input_IManipulationInertiaStartingRoutedEventArgs); safecall;
    procedure OnManipulationStarted(e: Input_IManipulationStartedRoutedEventArgs); safecall;
    procedure OnManipulationDelta(e: Input_IManipulationDeltaRoutedEventArgs); safecall;
    procedure OnManipulationCompleted(e: Input_IManipulationCompletedRoutedEventArgs); safecall;
    procedure OnKeyUp(e: Input_IKeyRoutedEventArgs); safecall;
    procedure OnKeyDown(e: Input_IKeyRoutedEventArgs); safecall;
    procedure OnPreviewKeyDown(e: Input_IKeyRoutedEventArgs); safecall;
    procedure OnPreviewKeyUp(e: Input_IKeyRoutedEventArgs); safecall;
    procedure OnGotFocus(e: IRoutedEventArgs); safecall;
    procedure OnLostFocus(e: IRoutedEventArgs); safecall;
    procedure OnCharacterReceived(e: Input_ICharacterReceivedRoutedEventArgs); safecall;
    procedure OnDragEnter(e: IDragEventArgs); safecall;
    procedure OnDragLeave(e: IDragEventArgs); safecall;
    procedure OnDragOver(e: IDragEventArgs); safecall;
    procedure OnDrop(e: IDragEventArgs); safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IControlProtected
  IControlProtected = interface(IInspectable)
  ['{5C750339-1789-5095-A214-DD9D0564E579}']
    function get_DefaultStyleKey: IInspectable; safecall;
    procedure put_DefaultStyleKey(value: IInspectable); safecall;
    function GetTemplateChild(childName: HSTRING): IDependencyObject; safecall;
    property DefaultStyleKey: IInspectable read get_DefaultStyleKey write put_DefaultStyleKey;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IControlStatics
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_Control)]
  IControlStatics = interface(IInspectable)
  ['{C3AE388D-AA36-5E10-ACAC-98415F47BCC7}']
    function get_IsFocusEngagementEnabledProperty: IDependencyProperty; safecall;
    function get_IsFocusEngagedProperty: IDependencyProperty; safecall;
    function get_RequiresPointerProperty: IDependencyProperty; safecall;
    function get_FontSizeProperty: IDependencyProperty; safecall;
    function get_FontFamilyProperty: IDependencyProperty; safecall;
    function get_FontWeightProperty: IDependencyProperty; safecall;
    function get_FontStyleProperty: IDependencyProperty; safecall;
    function get_FontStretchProperty: IDependencyProperty; safecall;
    function get_CharacterSpacingProperty: IDependencyProperty; safecall;
    function get_ForegroundProperty: IDependencyProperty; safecall;
    function get_IsTextScaleFactorEnabledProperty: IDependencyProperty; safecall;
    function get_IsEnabledProperty: IDependencyProperty; safecall;
    function get_TabNavigationProperty: IDependencyProperty; safecall;
    function get_TemplateProperty: IDependencyProperty; safecall;
    function get_PaddingProperty: IDependencyProperty; safecall;
    function get_HorizontalContentAlignmentProperty: IDependencyProperty; safecall;
    function get_VerticalContentAlignmentProperty: IDependencyProperty; safecall;
    function get_BackgroundProperty: IDependencyProperty; safecall;
    function get_BackgroundSizingProperty: IDependencyProperty; safecall;
    function get_BorderThicknessProperty: IDependencyProperty; safecall;
    function get_BorderBrushProperty: IDependencyProperty; safecall;
    function get_DefaultStyleKeyProperty: IDependencyProperty; safecall;
    function get_DefaultStyleResourceUriProperty: IDependencyProperty; safecall;
    function get_ElementSoundModeProperty: IDependencyProperty; safecall;
    function get_CornerRadiusProperty: IDependencyProperty; safecall;
    function get_IsTemplateFocusTargetProperty: IDependencyProperty; safecall;
    function GetIsTemplateFocusTarget(element: IFrameworkElement): Boolean; safecall;
    procedure SetIsTemplateFocusTarget(element: IFrameworkElement; value: Boolean); safecall;
    function get_IsTemplateKeyTipTargetProperty: IDependencyProperty; safecall;
    function GetIsTemplateKeyTipTarget(element: IDependencyObject): Boolean; safecall;
    procedure SetIsTemplateKeyTipTarget(element: IDependencyObject; value: Boolean); safecall;
    property BackgroundProperty: IDependencyProperty read get_BackgroundProperty;
    property BackgroundSizingProperty: IDependencyProperty read get_BackgroundSizingProperty;
    property BorderBrushProperty: IDependencyProperty read get_BorderBrushProperty;
    property BorderThicknessProperty: IDependencyProperty read get_BorderThicknessProperty;
    property CharacterSpacingProperty: IDependencyProperty read get_CharacterSpacingProperty;
    property CornerRadiusProperty: IDependencyProperty read get_CornerRadiusProperty;
    property DefaultStyleKeyProperty: IDependencyProperty read get_DefaultStyleKeyProperty;
    property DefaultStyleResourceUriProperty: IDependencyProperty read get_DefaultStyleResourceUriProperty;
    property ElementSoundModeProperty: IDependencyProperty read get_ElementSoundModeProperty;
    property FontFamilyProperty: IDependencyProperty read get_FontFamilyProperty;
    property FontSizeProperty: IDependencyProperty read get_FontSizeProperty;
    property FontStretchProperty: IDependencyProperty read get_FontStretchProperty;
    property FontStyleProperty: IDependencyProperty read get_FontStyleProperty;
    property FontWeightProperty: IDependencyProperty read get_FontWeightProperty;
    property ForegroundProperty: IDependencyProperty read get_ForegroundProperty;
    property HorizontalContentAlignmentProperty: IDependencyProperty read get_HorizontalContentAlignmentProperty;
    property IsEnabledProperty: IDependencyProperty read get_IsEnabledProperty;
    property IsFocusEngagedProperty: IDependencyProperty read get_IsFocusEngagedProperty;
    property IsFocusEngagementEnabledProperty: IDependencyProperty read get_IsFocusEngagementEnabledProperty;
    property IsTemplateFocusTargetProperty: IDependencyProperty read get_IsTemplateFocusTargetProperty;
    property IsTemplateKeyTipTargetProperty: IDependencyProperty read get_IsTemplateKeyTipTargetProperty;
    property IsTextScaleFactorEnabledProperty: IDependencyProperty read get_IsTextScaleFactorEnabledProperty;
    property PaddingProperty: IDependencyProperty read get_PaddingProperty;
    property RequiresPointerProperty: IDependencyProperty read get_RequiresPointerProperty;
    property TabNavigationProperty: IDependencyProperty read get_TabNavigationProperty;
    property TemplateProperty: IDependencyProperty read get_TemplateProperty;
    property VerticalContentAlignmentProperty: IDependencyProperty read get_VerticalContentAlignmentProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IDataTemplateSelectorFactory
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_DataTemplateSelector)]
  IDataTemplateSelectorFactory = interface(IInspectable)
  ['{43217EDA-6F7F-5B80-A70B-944511B354AB}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IDataTemplateSelector; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IDataTemplateSelectorOverrides
  IDataTemplateSelectorOverrides = interface(IInspectable)
  ['{980448CC-C114-5B89-8E09-61B0F264E592}']
    function SelectTemplateCore(item: IInspectable; container: IDependencyObject): IDataTemplate; overload; safecall;
    function SelectTemplateCore(item: IInspectable): IDataTemplate; overload; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IDatePickedEventArgs
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_DatePickedEventArgs)]
  IDatePickedEventArgs = interface(IInspectable)
  ['{001F5D4C-4AC2-5E0C-9673-E413C4BD60F3}']
    function get_OldDate: DateTime; safecall;
    function get_NewDate: DateTime; safecall;
    property NewDate: DateTime read get_NewDate;
    property OldDate: DateTime read get_OldDate;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IDatePickerFactory
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_DatePicker)]
  IDatePickerFactory = interface(IInspectable)
  ['{A16BEA02-B3E0-5FDC-B5BB-25F794DC483B}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IDatePicker; safecall;
  end;

  // Generic Delegate for:
  // Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.Controls.IDatePickerFlyout,Microsoft.UI.Xaml.Controls.IDatePickedEventArgs>
  TypedEventHandler_2__IDatePickerFlyout__IDatePickedEventArgs_Delegate_Base = interface(IUnknown)
  ['{836CC8A9-B66F-5F13-855D-DBA610944495}']
    procedure Invoke(sender: IDatePickerFlyout; args: IDatePickedEventArgs); safecall;
  end;
  // UsedAPI Interface
  // Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.Controls.IDatePickerFlyout,Microsoft.UI.Xaml.Controls.IDatePickedEventArgs>
  TypedEventHandler_2__IDatePickerFlyout__IDatePickedEventArgs = interface(TypedEventHandler_2__IDatePickerFlyout__IDatePickedEventArgs_Delegate_Base)
  ['{AC9DCF3B-DA47-537D-B7FE-3898E6AF7ADA}']
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IDatePickerFlyout
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_DatePickerFlyout)]
  IDatePickerFlyout = interface(IInspectable)
  ['{BA7ECF3C-EDB1-593B-A4AC-C09802EACE99}']
    function get_CalendarIdentifier: HSTRING; safecall;
    procedure put_CalendarIdentifier(value: HSTRING); safecall;
    function get_Date: DateTime; safecall;
    procedure put_Date(value: DateTime); safecall;
    function get_DayVisible: Boolean; safecall;
    procedure put_DayVisible(value: Boolean); safecall;
    function get_MonthVisible: Boolean; safecall;
    procedure put_MonthVisible(value: Boolean); safecall;
    function get_YearVisible: Boolean; safecall;
    procedure put_YearVisible(value: Boolean); safecall;
    function get_MinYear: DateTime; safecall;
    procedure put_MinYear(value: DateTime); safecall;
    function get_MaxYear: DateTime; safecall;
    procedure put_MaxYear(value: DateTime); safecall;
    function get_DayFormat: HSTRING; safecall;
    procedure put_DayFormat(value: HSTRING); safecall;
    function get_MonthFormat: HSTRING; safecall;
    procedure put_MonthFormat(value: HSTRING); safecall;
    function get_YearFormat: HSTRING; safecall;
    procedure put_YearFormat(value: HSTRING); safecall;
    function add_DatePicked(handler: TypedEventHandler_2__IDatePickerFlyout__IDatePickedEventArgs): EventRegistrationToken; safecall;
    procedure remove_DatePicked(token: EventRegistrationToken); safecall;
    function ShowAtAsync(target: IFrameworkElement): IAsyncOperation_1__IReference_1__DateTime; safecall;
    property CalendarIdentifier: HSTRING read get_CalendarIdentifier write put_CalendarIdentifier;
    property Date: DateTime read get_Date write put_Date;
    property DayFormat: HSTRING read get_DayFormat write put_DayFormat;
    property DayVisible: Boolean read get_DayVisible write put_DayVisible;
    property MaxYear: DateTime read get_MaxYear write put_MaxYear;
    property MinYear: DateTime read get_MinYear write put_MinYear;
    property MonthFormat: HSTRING read get_MonthFormat write put_MonthFormat;
    property MonthVisible: Boolean read get_MonthVisible write put_MonthVisible;
    property YearFormat: HSTRING read get_YearFormat write put_YearFormat;
    property YearVisible: Boolean read get_YearVisible write put_YearVisible;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IDatePickerFlyoutItem
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_DatePickerFlyoutItem)]
  IDatePickerFlyoutItem = interface(IInspectable)
  ['{EB7D591E-1314-5409-9231-5B8E3BE187A7}']
    function get_PrimaryText: HSTRING; safecall;
    procedure put_PrimaryText(value: HSTRING); safecall;
    function get_SecondaryText: HSTRING; safecall;
    procedure put_SecondaryText(value: HSTRING); safecall;
    property PrimaryText: HSTRING read get_PrimaryText write put_PrimaryText;
    property SecondaryText: HSTRING read get_SecondaryText write put_SecondaryText;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IDatePickerFlyoutItemStatics
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_DatePickerFlyoutItem)]
  IDatePickerFlyoutItemStatics = interface(IInspectable)
  ['{DA7140FC-5613-5AB2-9AAB-36CF396EF56C}']
    function get_PrimaryTextProperty: IDependencyProperty; safecall;
    function get_SecondaryTextProperty: IDependencyProperty; safecall;
    property PrimaryTextProperty: IDependencyProperty read get_PrimaryTextProperty;
    property SecondaryTextProperty: IDependencyProperty read get_SecondaryTextProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IDatePickerFlyoutPresenter
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_DatePickerFlyoutPresenter)]
  IDatePickerFlyoutPresenter = interface(IInspectable)
  ['{1ADFDA34-60F5-501B-B8E2-73A49CAD6712}']
    function get_IsDefaultShadowEnabled: Boolean; safecall;
    procedure put_IsDefaultShadowEnabled(value: Boolean); safecall;
    property IsDefaultShadowEnabled: Boolean read get_IsDefaultShadowEnabled write put_IsDefaultShadowEnabled;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IDatePickerFlyoutPresenterStatics
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_DatePickerFlyoutPresenter)]
  IDatePickerFlyoutPresenterStatics = interface(IInspectable)
  ['{611359B5-1AA8-528C-8E57-0378A9E71C57}']
    function get_IsDefaultShadowEnabledProperty: IDependencyProperty; safecall;
    property IsDefaultShadowEnabledProperty: IDependencyProperty read get_IsDefaultShadowEnabledProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IDatePickerFlyoutStatics
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_DatePickerFlyout)]
  IDatePickerFlyoutStatics = interface(IInspectable)
  ['{6A22EF58-7A7C-5883-8834-A6584585AF03}']
    function get_CalendarIdentifierProperty: IDependencyProperty; safecall;
    function get_DateProperty: IDependencyProperty; safecall;
    function get_DayVisibleProperty: IDependencyProperty; safecall;
    function get_MonthVisibleProperty: IDependencyProperty; safecall;
    function get_YearVisibleProperty: IDependencyProperty; safecall;
    function get_MinYearProperty: IDependencyProperty; safecall;
    function get_MaxYearProperty: IDependencyProperty; safecall;
    function get_DayFormatProperty: IDependencyProperty; safecall;
    function get_MonthFormatProperty: IDependencyProperty; safecall;
    function get_YearFormatProperty: IDependencyProperty; safecall;
    property CalendarIdentifierProperty: IDependencyProperty read get_CalendarIdentifierProperty;
    property DateProperty: IDependencyProperty read get_DateProperty;
    property DayFormatProperty: IDependencyProperty read get_DayFormatProperty;
    property DayVisibleProperty: IDependencyProperty read get_DayVisibleProperty;
    property MaxYearProperty: IDependencyProperty read get_MaxYearProperty;
    property MinYearProperty: IDependencyProperty read get_MinYearProperty;
    property MonthFormatProperty: IDependencyProperty read get_MonthFormatProperty;
    property MonthVisibleProperty: IDependencyProperty read get_MonthVisibleProperty;
    property YearFormatProperty: IDependencyProperty read get_YearFormatProperty;
    property YearVisibleProperty: IDependencyProperty read get_YearVisibleProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IDatePickerStatics
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_DatePicker)]
  IDatePickerStatics = interface(IInspectable)
  ['{4D810253-AAE7-5BE1-B7A8-AF451CA433E1}']
    function get_HeaderProperty: IDependencyProperty; safecall;
    function get_HeaderTemplateProperty: IDependencyProperty; safecall;
    function get_CalendarIdentifierProperty: IDependencyProperty; safecall;
    function get_DateProperty: IDependencyProperty; safecall;
    function get_DayVisibleProperty: IDependencyProperty; safecall;
    function get_MonthVisibleProperty: IDependencyProperty; safecall;
    function get_YearVisibleProperty: IDependencyProperty; safecall;
    function get_DayFormatProperty: IDependencyProperty; safecall;
    function get_MonthFormatProperty: IDependencyProperty; safecall;
    function get_YearFormatProperty: IDependencyProperty; safecall;
    function get_MinYearProperty: IDependencyProperty; safecall;
    function get_MaxYearProperty: IDependencyProperty; safecall;
    function get_OrientationProperty: IDependencyProperty; safecall;
    function get_LightDismissOverlayModeProperty: IDependencyProperty; safecall;
    function get_SelectedDateProperty: IDependencyProperty; safecall;
    property CalendarIdentifierProperty: IDependencyProperty read get_CalendarIdentifierProperty;
    property DateProperty: IDependencyProperty read get_DateProperty;
    property DayFormatProperty: IDependencyProperty read get_DayFormatProperty;
    property DayVisibleProperty: IDependencyProperty read get_DayVisibleProperty;
    property HeaderProperty: IDependencyProperty read get_HeaderProperty;
    property HeaderTemplateProperty: IDependencyProperty read get_HeaderTemplateProperty;
    property LightDismissOverlayModeProperty: IDependencyProperty read get_LightDismissOverlayModeProperty;
    property MaxYearProperty: IDependencyProperty read get_MaxYearProperty;
    property MinYearProperty: IDependencyProperty read get_MinYearProperty;
    property MonthFormatProperty: IDependencyProperty read get_MonthFormatProperty;
    property MonthVisibleProperty: IDependencyProperty read get_MonthVisibleProperty;
    property OrientationProperty: IDependencyProperty read get_OrientationProperty;
    property SelectedDateProperty: IDependencyProperty read get_SelectedDateProperty;
    property YearFormatProperty: IDependencyProperty read get_YearFormatProperty;
    property YearVisibleProperty: IDependencyProperty read get_YearVisibleProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IDropDownButtonFactory
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_DropDownButton)]
  IDropDownButtonFactory = interface(IInspectable)
  ['{7CF3E13B-668D-57E7-B5D6-F5CA3DBC80BD}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IDropDownButton; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IExpanderFactory
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_Expander)]
  IExpanderFactory = interface(IInspectable)
  ['{51A5AFC2-B16D-516E-83AE-5A10476B13AF}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IExpander; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IExpanderStatics
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_Expander)]
  IExpanderStatics = interface(IInspectable)
  ['{B742C27B-C023-5096-8C2A-717D324AFB7E}']
    function get_HeaderProperty: IDependencyProperty; safecall;
    function get_HeaderTemplateProperty: IDependencyProperty; safecall;
    function get_HeaderTemplateSelectorProperty: IDependencyProperty; safecall;
    function get_IsExpandedProperty: IDependencyProperty; safecall;
    function get_ExpandDirectionProperty: IDependencyProperty; safecall;
    property ExpandDirectionProperty: IDependencyProperty read get_ExpandDirectionProperty;
    property HeaderProperty: IDependencyProperty read get_HeaderProperty;
    property HeaderTemplateProperty: IDependencyProperty read get_HeaderTemplateProperty;
    property HeaderTemplateSelectorProperty: IDependencyProperty read get_HeaderTemplateSelectorProperty;
    property IsExpandedProperty: IDependencyProperty read get_IsExpandedProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IFlipViewFactory
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_FlipView)]
  IFlipViewFactory = interface(IInspectable)
  ['{F3A89BE6-81E3-53C4-9DC9-98A5A4E79B13}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IFlipView; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IFlipViewItemFactory
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_FlipViewItem)]
  IFlipViewItemFactory = interface(IInspectable)
  ['{DEB2CD5F-9D76-5678-B1CA-0267757C4FED}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IFlipViewItem; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IFlipViewStatics
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_FlipView)]
  IFlipViewStatics = interface(IInspectable)
  ['{1E98FC86-2BC1-5C89-8305-251AD56A9CDB}']
    function get_UseTouchAnimationsForAllNavigationProperty: IDependencyProperty; safecall;
    property UseTouchAnimationsForAllNavigationProperty: IDependencyProperty read get_UseTouchAnimationsForAllNavigationProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IFlyout
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_Flyout)]
  IFlyout = interface(IInspectable)
  ['{D4A1EB7D-59B8-5DF9-87C3-BD5E3856923F}']
    function get_Content: IUIElement; safecall;
    procedure put_Content(value: IUIElement); safecall;
    function get_FlyoutPresenterStyle: IStyle; safecall;
    procedure put_FlyoutPresenterStyle(value: IStyle); safecall;
    property Content: IUIElement read get_Content write put_Content;
    property FlyoutPresenterStyle: IStyle read get_FlyoutPresenterStyle write put_FlyoutPresenterStyle;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IFlyoutFactory
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_Flyout)]
  IFlyoutFactory = interface(IInspectable)
  ['{FD19002E-66B3-5656-B49C-B2ACA11E9602}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IFlyout; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IFlyoutPresenterFactory
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_FlyoutPresenter)]
  IFlyoutPresenterFactory = interface(IInspectable)
  ['{E9539A80-74ED-5158-9F93-893669CB046F}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IFlyoutPresenter; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IFlyoutPresenterStatics
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_FlyoutPresenter)]
  IFlyoutPresenterStatics = interface(IInspectable)
  ['{B415A2EC-1BDD-5F94-9500-257223646469}']
    function get_IsDefaultShadowEnabledProperty: IDependencyProperty; safecall;
    property IsDefaultShadowEnabledProperty: IDependencyProperty read get_IsDefaultShadowEnabledProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IFlyoutStatics
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_Flyout)]
  IFlyoutStatics = interface(IInspectable)
  ['{23AE001A-AAA6-5D19-9947-917ECBD883CA}']
    function get_ContentProperty: IDependencyProperty; safecall;
    function get_FlyoutPresenterStyleProperty: IDependencyProperty; safecall;
    property ContentProperty: IDependencyProperty read get_ContentProperty;
    property FlyoutPresenterStyleProperty: IDependencyProperty read get_FlyoutPresenterStyleProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IFontIcon
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_FontIcon)]
  IFontIcon = interface(IInspectable)
  ['{6EBA5ED9-D233-5F5E-91A8-F5134292658A}']
    function get_Glyph: HSTRING; safecall;
    procedure put_Glyph(value: HSTRING); safecall;
    function get_FontSize: Double; safecall;
    procedure put_FontSize(value: Double); safecall;
    function get_FontFamily: IFontFamily; safecall;
    procedure put_FontFamily(value: IFontFamily); safecall;
    function get_FontWeight: FontWeight; safecall;
    procedure put_FontWeight(value: FontWeight); safecall;
    function get_FontStyle: FontStyle; safecall;
    procedure put_FontStyle(value: FontStyle); safecall;
    function get_IsTextScaleFactorEnabled: Boolean; safecall;
    procedure put_IsTextScaleFactorEnabled(value: Boolean); safecall;
    function get_MirroredWhenRightToLeft: Boolean; safecall;
    procedure put_MirroredWhenRightToLeft(value: Boolean); safecall;
    property FontFamily: IFontFamily read get_FontFamily write put_FontFamily;
    property FontSize: Double read get_FontSize write put_FontSize;
    property FontStyle_: FontStyle read get_FontStyle write put_FontStyle;
    property FontWeight_: FontWeight read get_FontWeight write put_FontWeight;
    property Glyph: HSTRING read get_Glyph write put_Glyph;
    property IsTextScaleFactorEnabled: Boolean read get_IsTextScaleFactorEnabled write put_IsTextScaleFactorEnabled;
    property MirroredWhenRightToLeft: Boolean read get_MirroredWhenRightToLeft write put_MirroredWhenRightToLeft;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IFontIconFactory
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_FontIcon)]
  IFontIconFactory = interface(IInspectable)
  ['{AA9A24FE-BEF8-564A-B200-694CD6F6BA4E}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IFontIcon; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IFontIconSource
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_FontIconSource)]
  IFontIconSource = interface(IInspectable)
  ['{B89D614C-E9B5-5B6A-9BEC-AD78B1A14B74}']
    function get_Glyph: HSTRING; safecall;
    procedure put_Glyph(value: HSTRING); safecall;
    function get_FontSize: Double; safecall;
    procedure put_FontSize(value: Double); safecall;
    function get_FontFamily: IFontFamily; safecall;
    procedure put_FontFamily(value: IFontFamily); safecall;
    function get_FontWeight: FontWeight; safecall;
    procedure put_FontWeight(value: FontWeight); safecall;
    function get_FontStyle: FontStyle; safecall;
    procedure put_FontStyle(value: FontStyle); safecall;
    function get_IsTextScaleFactorEnabled: Boolean; safecall;
    procedure put_IsTextScaleFactorEnabled(value: Boolean); safecall;
    function get_MirroredWhenRightToLeft: Boolean; safecall;
    procedure put_MirroredWhenRightToLeft(value: Boolean); safecall;
    property FontFamily: IFontFamily read get_FontFamily write put_FontFamily;
    property FontSize: Double read get_FontSize write put_FontSize;
    property FontStyle_: FontStyle read get_FontStyle write put_FontStyle;
    property FontWeight_: FontWeight read get_FontWeight write put_FontWeight;
    property Glyph: HSTRING read get_Glyph write put_Glyph;
    property IsTextScaleFactorEnabled: Boolean read get_IsTextScaleFactorEnabled write put_IsTextScaleFactorEnabled;
    property MirroredWhenRightToLeft: Boolean read get_MirroredWhenRightToLeft write put_MirroredWhenRightToLeft;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IFontIconSourceFactory
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_FontIconSource)]
  IFontIconSourceFactory = interface(IInspectable)
  ['{BB40EEEE-64D1-5133-B1D6-AE13C21B6678}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IFontIconSource; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IFontIconSourceStatics
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_FontIconSource)]
  IFontIconSourceStatics = interface(IInspectable)
  ['{C309C231-F7BF-5C06-A2D2-56502CFD33E5}']
    function get_GlyphProperty: IDependencyProperty; safecall;
    function get_FontSizeProperty: IDependencyProperty; safecall;
    function get_FontFamilyProperty: IDependencyProperty; safecall;
    function get_FontWeightProperty: IDependencyProperty; safecall;
    function get_FontStyleProperty: IDependencyProperty; safecall;
    function get_IsTextScaleFactorEnabledProperty: IDependencyProperty; safecall;
    function get_MirroredWhenRightToLeftProperty: IDependencyProperty; safecall;
    property FontFamilyProperty: IDependencyProperty read get_FontFamilyProperty;
    property FontSizeProperty: IDependencyProperty read get_FontSizeProperty;
    property FontStyleProperty: IDependencyProperty read get_FontStyleProperty;
    property FontWeightProperty: IDependencyProperty read get_FontWeightProperty;
    property GlyphProperty: IDependencyProperty read get_GlyphProperty;
    property IsTextScaleFactorEnabledProperty: IDependencyProperty read get_IsTextScaleFactorEnabledProperty;
    property MirroredWhenRightToLeftProperty: IDependencyProperty read get_MirroredWhenRightToLeftProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IFontIconStatics
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_FontIcon)]
  IFontIconStatics = interface(IInspectable)
  ['{55564030-2F80-5BE5-8C2A-EBB6ECBA07E8}']
    function get_GlyphProperty: IDependencyProperty; safecall;
    function get_FontSizeProperty: IDependencyProperty; safecall;
    function get_FontFamilyProperty: IDependencyProperty; safecall;
    function get_FontWeightProperty: IDependencyProperty; safecall;
    function get_FontStyleProperty: IDependencyProperty; safecall;
    function get_IsTextScaleFactorEnabledProperty: IDependencyProperty; safecall;
    function get_MirroredWhenRightToLeftProperty: IDependencyProperty; safecall;
    property FontFamilyProperty: IDependencyProperty read get_FontFamilyProperty;
    property FontSizeProperty: IDependencyProperty read get_FontSizeProperty;
    property FontStyleProperty: IDependencyProperty read get_FontStyleProperty;
    property FontWeightProperty: IDependencyProperty read get_FontWeightProperty;
    property GlyphProperty: IDependencyProperty read get_GlyphProperty;
    property IsTextScaleFactorEnabledProperty: IDependencyProperty read get_IsTextScaleFactorEnabledProperty;
    property MirroredWhenRightToLeftProperty: IDependencyProperty read get_MirroredWhenRightToLeftProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IFrame
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_Frame)]
  IFrame = interface(IInspectable)
  ['{E6D50443-621E-5360-856A-75B01E1FCD22}']
    function get_CacheSize: Integer; safecall;
    procedure put_CacheSize(value: Integer); safecall;
    function get_CanGoBack: Boolean; safecall;
    function get_CanGoForward: Boolean; safecall;
    function get_CurrentSourcePageType: Interop_TypeName; safecall;
    function get_SourcePageType: Interop_TypeName; safecall;
    procedure put_SourcePageType(value: Interop_TypeName); safecall;
    function get_BackStackDepth: Integer; safecall;
    function get_BackStack: IVector_1__Navigation_IPageStackEntry; safecall;
    function get_ForwardStack: IVector_1__Navigation_IPageStackEntry; safecall;
    function get_IsNavigationStackEnabled: Boolean; safecall;
    procedure put_IsNavigationStackEnabled(value: Boolean); safecall;
    function add_Navigated(handler: Navigation_NavigatedEventHandler): EventRegistrationToken; safecall;
    procedure remove_Navigated(token: EventRegistrationToken); safecall;
    function add_Navigating(handler: Navigation_NavigatingCancelEventHandler): EventRegistrationToken; safecall;
    procedure remove_Navigating(token: EventRegistrationToken); safecall;
    function add_NavigationFailed(handler: Navigation_NavigationFailedEventHandler): EventRegistrationToken; safecall;
    procedure remove_NavigationFailed(token: EventRegistrationToken); safecall;
    function add_NavigationStopped(handler: Navigation_NavigationStoppedEventHandler): EventRegistrationToken; safecall;
    procedure remove_NavigationStopped(token: EventRegistrationToken); safecall;
    procedure GoBack; overload; safecall;
    procedure GoBack(transitionInfoOverride: Animation_INavigationTransitionInfo); overload; safecall;
    procedure GoForward; safecall;
    function Navigate(sourcePageType: Interop_TypeName; parameter: IInspectable): Boolean; overload; safecall;
    function Navigate(sourcePageType: Interop_TypeName; parameter: IInspectable; infoOverride: Animation_INavigationTransitionInfo): Boolean; overload; safecall;
    function NavigateToType(sourcePageType: Interop_TypeName; parameter: IInspectable; navigationOptions: Navigation_IFrameNavigationOptions): Boolean; safecall;
    function GetNavigationState: HSTRING; safecall;
    procedure SetNavigationState(navigationState: HSTRING); overload; safecall;
    procedure SetNavigationState(navigationState: HSTRING; suppressNavigate: Boolean); overload; safecall;
    property BackStack: IVector_1__Navigation_IPageStackEntry read get_BackStack;
    property BackStackDepth: Integer read get_BackStackDepth;
    property CacheSize: Integer read get_CacheSize write put_CacheSize;
    property CanGoBack: Boolean read get_CanGoBack;
    property CanGoForward: Boolean read get_CanGoForward;
    property CurrentSourcePageType: Interop_TypeName read get_CurrentSourcePageType;
    property ForwardStack: IVector_1__Navigation_IPageStackEntry read get_ForwardStack;
    property IsNavigationStackEnabled: Boolean read get_IsNavigationStackEnabled write put_IsNavigationStackEnabled;
    property SourcePageType: Interop_TypeName read get_SourcePageType write put_SourcePageType;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IFrameFactory
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_Frame)]
  IFrameFactory = interface(IInspectable)
  ['{53A3070F-19D9-59BC-BDD6-4DBF139E7DA5}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IFrame; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IFrameStatics
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_Frame)]
  IFrameStatics = interface(IInspectable)
  ['{8A974D00-8DA2-588A-A182-1F7621EE650B}']
    function get_CacheSizeProperty: IDependencyProperty; safecall;
    function get_CanGoBackProperty: IDependencyProperty; safecall;
    function get_CanGoForwardProperty: IDependencyProperty; safecall;
    function get_CurrentSourcePageTypeProperty: IDependencyProperty; safecall;
    function get_SourcePageTypeProperty: IDependencyProperty; safecall;
    function get_BackStackDepthProperty: IDependencyProperty; safecall;
    function get_BackStackProperty: IDependencyProperty; safecall;
    function get_ForwardStackProperty: IDependencyProperty; safecall;
    function get_IsNavigationStackEnabledProperty: IDependencyProperty; safecall;
    property BackStackDepthProperty: IDependencyProperty read get_BackStackDepthProperty;
    property BackStackProperty: IDependencyProperty read get_BackStackProperty;
    property CacheSizeProperty: IDependencyProperty read get_CacheSizeProperty;
    property CanGoBackProperty: IDependencyProperty read get_CanGoBackProperty;
    property CanGoForwardProperty: IDependencyProperty read get_CanGoForwardProperty;
    property CurrentSourcePageTypeProperty: IDependencyProperty read get_CurrentSourcePageTypeProperty;
    property ForwardStackProperty: IDependencyProperty read get_ForwardStackProperty;
    property IsNavigationStackEnabledProperty: IDependencyProperty read get_IsNavigationStackEnabledProperty;
    property SourcePageTypeProperty: IDependencyProperty read get_SourcePageTypeProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IRowDefinition
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_RowDefinition)]
  IRowDefinition = interface(IInspectable)
  ['{FE870F2F-89EF-5DAC-9F33-968D0DC577C3}']
    function get_Height: GridLength; safecall;
    procedure put_Height(value: GridLength); safecall;
    function get_MaxHeight: Double; safecall;
    procedure put_MaxHeight(value: Double); safecall;
    function get_MinHeight: Double; safecall;
    procedure put_MinHeight(value: Double); safecall;
    function get_ActualHeight: Double; safecall;
    property ActualHeight: Double read get_ActualHeight;
    property Height: GridLength read get_Height write put_Height;
    property MaxHeight: Double read get_MaxHeight write put_MaxHeight;
    property MinHeight: Double read get_MinHeight write put_MinHeight;
  end;

  // Generic Ancestor for:
  // Windows.Foundation.Collections.IIterator`1<Microsoft.UI.Xaml.Controls.IRowDefinition>
  IIterator_1__IRowDefinition_Base = interface(IInspectable)
  ['{78108CBA-FC4E-5B6C-800D-6C091B0A1C22}']
    function get_Current: IRowDefinition; safecall;
    function get_HasCurrent: Boolean; safecall;
    function MoveNext: Boolean; safecall;
    function GetMany(itemsSize: Cardinal; items: PIRowDefinition): Cardinal; safecall;
    property Current: IRowDefinition read get_Current;
    property HasCurrent: Boolean read get_HasCurrent;
  end;
  // Windows.Foundation.Collections.IIterator`1<Microsoft.UI.Xaml.Controls.IRowDefinition>
  IIterator_1__IRowDefinition = interface(IIterator_1__IRowDefinition_Base)
  ['{82C181EE-0778-5A13-A137-2C63679F7EA9}']
  end;

  // Generic Ancestor for:
  // Windows.Foundation.Collections.IIterable`1<Microsoft.UI.Xaml.Controls.IRowDefinition>
  IIterable_1__IRowDefinition_Base = interface(IInspectable)
  ['{B0B30930-7697-561E-BD6E-FBBB1AD17C50}']
    function First: IIterator_1__IRowDefinition; safecall;
  end;
  // Windows.Foundation.Collections.IIterable`1<Microsoft.UI.Xaml.Controls.IRowDefinition>
  IIterable_1__IRowDefinition = interface(IIterable_1__IRowDefinition_Base)
  ['{C7DF9E61-E0CF-5E95-9F8F-EFD73C7039CE}']
  end;

  // UsedAPI Interface
  // Windows.Foundation.Collections.IVectorView`1<Microsoft.UI.Xaml.Controls.IRowDefinition>
  IVectorView_1__IRowDefinition = interface(IInspectable)
  ['{8CC135F8-E362-5E3E-BFC6-2A20D6034666}']
    function GetAt(index: Cardinal): IRowDefinition; safecall;
    function get_Size: Cardinal; safecall;
    function IndexOf(value: IRowDefinition; out index: Cardinal): Boolean; safecall;
    function GetMany(startIndex: Cardinal; itemsSize: Cardinal; items: PIRowDefinition): Cardinal; safecall;
    property Size: Cardinal read get_Size;
  end;

  // Generic Ancestor for:
  // Windows.Foundation.Collections.IVector`1<Microsoft.UI.Xaml.Controls.IRowDefinition>
  IVector_1__IRowDefinition_Base = interface(IInspectable)
  ['{5DDD9577-3F94-567F-BEEF-540568522289}']
    function GetAt(index: Cardinal): IRowDefinition; safecall;
    function get_Size: Cardinal; safecall;
    function GetView: IVectorView_1__IRowDefinition; safecall;
    function IndexOf(value: IRowDefinition; out index: Cardinal): Boolean; safecall;
    procedure SetAt(index: Cardinal; value: IRowDefinition); safecall;
    procedure InsertAt(index: Cardinal; value: IRowDefinition); safecall;
    procedure RemoveAt(index: Cardinal); safecall;
    procedure Append(value: IRowDefinition); safecall;
    procedure RemoveAtEnd; safecall;
    procedure Clear; safecall;
    function GetMany(startIndex: Cardinal; itemsSize: Cardinal; items: PIRowDefinition): Cardinal; safecall;
    procedure ReplaceAll(itemsSize: Cardinal; items: PIRowDefinition); safecall;
    property Size: Cardinal read get_Size;
  end;
  // UsedAPI Interface
  // Windows.Foundation.Collections.IVector`1<Microsoft.UI.Xaml.Controls.IRowDefinition>
  IVector_1__IRowDefinition = interface(IVector_1__IRowDefinition_Base)
  ['{9C3BCE71-2F0F-50D8-936A-3C9F0AED9D03}']
  end;

  // Generic Ancestor for:
  // Windows.Foundation.Collections.IIterator`1<Microsoft.UI.Xaml.Controls.IColumnDefinition>
  IIterator_1__IColumnDefinition_Base = interface(IInspectable)
  ['{9309739C-A52F-5130-A02C-C9BCF705DF7A}']
    function get_Current: IColumnDefinition; safecall;
    function get_HasCurrent: Boolean; safecall;
    function MoveNext: Boolean; safecall;
    function GetMany(itemsSize: Cardinal; items: PIColumnDefinition): Cardinal; safecall;
    property Current: IColumnDefinition read get_Current;
    property HasCurrent: Boolean read get_HasCurrent;
  end;
  // Windows.Foundation.Collections.IIterator`1<Microsoft.UI.Xaml.Controls.IColumnDefinition>
  IIterator_1__IColumnDefinition = interface(IIterator_1__IColumnDefinition_Base)
  ['{265C78AF-1EAA-5AE2-92D0-A3C8DEEDA5C7}']
  end;

  // Generic Ancestor for:
  // Windows.Foundation.Collections.IIterable`1<Microsoft.UI.Xaml.Controls.IColumnDefinition>
  IIterable_1__IColumnDefinition_Base = interface(IInspectable)
  ['{80741C8F-A401-5C63-B6C4-15D165E541C7}']
    function First: IIterator_1__IColumnDefinition; safecall;
  end;
  // Windows.Foundation.Collections.IIterable`1<Microsoft.UI.Xaml.Controls.IColumnDefinition>
  IIterable_1__IColumnDefinition = interface(IIterable_1__IColumnDefinition_Base)
  ['{15A477BB-582D-552D-A2F6-1DBA2CD1D51C}']
  end;

  // UsedAPI Interface
  // Windows.Foundation.Collections.IVectorView`1<Microsoft.UI.Xaml.Controls.IColumnDefinition>
  IVectorView_1__IColumnDefinition = interface(IInspectable)
  ['{0566BA15-180A-5946-88D1-39D139D20213}']
    function GetAt(index: Cardinal): IColumnDefinition; safecall;
    function get_Size: Cardinal; safecall;
    function IndexOf(value: IColumnDefinition; out index: Cardinal): Boolean; safecall;
    function GetMany(startIndex: Cardinal; itemsSize: Cardinal; items: PIColumnDefinition): Cardinal; safecall;
    property Size: Cardinal read get_Size;
  end;

  // Generic Ancestor for:
  // Windows.Foundation.Collections.IVector`1<Microsoft.UI.Xaml.Controls.IColumnDefinition>
  IVector_1__IColumnDefinition_Base = interface(IInspectable)
  ['{749BC47C-1743-5C21-9CED-C8A1134C7BA7}']
    function GetAt(index: Cardinal): IColumnDefinition; safecall;
    function get_Size: Cardinal; safecall;
    function GetView: IVectorView_1__IColumnDefinition; safecall;
    function IndexOf(value: IColumnDefinition; out index: Cardinal): Boolean; safecall;
    procedure SetAt(index: Cardinal; value: IColumnDefinition); safecall;
    procedure InsertAt(index: Cardinal; value: IColumnDefinition); safecall;
    procedure RemoveAt(index: Cardinal); safecall;
    procedure Append(value: IColumnDefinition); safecall;
    procedure RemoveAtEnd; safecall;
    procedure Clear; safecall;
    function GetMany(startIndex: Cardinal; itemsSize: Cardinal; items: PIColumnDefinition): Cardinal; safecall;
    procedure ReplaceAll(itemsSize: Cardinal; items: PIColumnDefinition); safecall;
    property Size: Cardinal read get_Size;
  end;
  // UsedAPI Interface
  // Windows.Foundation.Collections.IVector`1<Microsoft.UI.Xaml.Controls.IColumnDefinition>
  IVector_1__IColumnDefinition = interface(IVector_1__IColumnDefinition_Base)
  ['{399B5339-8906-5751-9129-2F5B58DA71AC}']
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IGrid
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_Grid)]
  IGrid = interface(IInspectable)
  ['{C4496219-9014-58A1-B4AD-C5044913A5BB}']
    function get_RowDefinitions: IVector_1__IRowDefinition; safecall;
    function get_ColumnDefinitions: IVector_1__IColumnDefinition; safecall;
    function get_BackgroundSizing: BackgroundSizing; safecall;
    procedure put_BackgroundSizing(value: BackgroundSizing); safecall;
    function get_BorderBrush: IBrush; safecall;
    procedure put_BorderBrush(value: IBrush); safecall;
    function get_BorderThickness: Thickness; safecall;
    procedure put_BorderThickness(value: Thickness); safecall;
    function get_CornerRadius: CornerRadius; safecall;
    procedure put_CornerRadius(value: CornerRadius); safecall;
    function get_Padding: Thickness; safecall;
    procedure put_Padding(value: Thickness); safecall;
    function get_RowSpacing: Double; safecall;
    procedure put_RowSpacing(value: Double); safecall;
    function get_ColumnSpacing: Double; safecall;
    procedure put_ColumnSpacing(value: Double); safecall;
    property BackgroundSizing_: BackgroundSizing read get_BackgroundSizing write put_BackgroundSizing;
    property BorderBrush: IBrush read get_BorderBrush write put_BorderBrush;
    property BorderThickness: Thickness read get_BorderThickness write put_BorderThickness;
    property ColumnDefinitions: IVector_1__IColumnDefinition read get_ColumnDefinitions;
    property ColumnSpacing: Double read get_ColumnSpacing write put_ColumnSpacing;
    property CornerRadius_: CornerRadius read get_CornerRadius write put_CornerRadius;
    property Padding: Thickness read get_Padding write put_Padding;
    property RowDefinitions: IVector_1__IRowDefinition read get_RowDefinitions;
    property RowSpacing: Double read get_RowSpacing write put_RowSpacing;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IGridFactory
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_Grid)]
  IGridFactory = interface(IInspectable)
  ['{B16BF561-FC6C-57C6-8EBC-0B06CE4513AA}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IGrid; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IGridStatics
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_Grid)]
  IGridStatics = interface(IInspectable)
  ['{EF9CF81D-A431-50F4-ABF5-3023FE447704}']
    function get_BackgroundSizingProperty: IDependencyProperty; safecall;
    function get_BorderBrushProperty: IDependencyProperty; safecall;
    function get_BorderThicknessProperty: IDependencyProperty; safecall;
    function get_CornerRadiusProperty: IDependencyProperty; safecall;
    function get_PaddingProperty: IDependencyProperty; safecall;
    function get_RowSpacingProperty: IDependencyProperty; safecall;
    function get_ColumnSpacingProperty: IDependencyProperty; safecall;
    function get_RowProperty: IDependencyProperty; safecall;
    function GetRow(element: IFrameworkElement): Integer; safecall;
    procedure SetRow(element: IFrameworkElement; value: Integer); safecall;
    function get_ColumnProperty: IDependencyProperty; safecall;
    function GetColumn(element: IFrameworkElement): Integer; safecall;
    procedure SetColumn(element: IFrameworkElement; value: Integer); safecall;
    function get_RowSpanProperty: IDependencyProperty; safecall;
    function GetRowSpan(element: IFrameworkElement): Integer; safecall;
    procedure SetRowSpan(element: IFrameworkElement; value: Integer); safecall;
    function get_ColumnSpanProperty: IDependencyProperty; safecall;
    function GetColumnSpan(element: IFrameworkElement): Integer; safecall;
    procedure SetColumnSpan(element: IFrameworkElement; value: Integer); safecall;
    property BackgroundSizingProperty: IDependencyProperty read get_BackgroundSizingProperty;
    property BorderBrushProperty: IDependencyProperty read get_BorderBrushProperty;
    property BorderThicknessProperty: IDependencyProperty read get_BorderThicknessProperty;
    property ColumnProperty: IDependencyProperty read get_ColumnProperty;
    property ColumnSpacingProperty: IDependencyProperty read get_ColumnSpacingProperty;
    property ColumnSpanProperty: IDependencyProperty read get_ColumnSpanProperty;
    property CornerRadiusProperty: IDependencyProperty read get_CornerRadiusProperty;
    property PaddingProperty: IDependencyProperty read get_PaddingProperty;
    property RowProperty: IDependencyProperty read get_RowProperty;
    property RowSpacingProperty: IDependencyProperty read get_RowSpacingProperty;
    property RowSpanProperty: IDependencyProperty read get_RowSpanProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IGridViewFactory
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_GridView)]
  IGridViewFactory = interface(IInspectable)
  ['{892947EA-6B86-5F17-A9B8-2121B2251271}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IGridView; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IGridViewHeaderItemFactory
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_GridViewHeaderItem)]
  IGridViewHeaderItemFactory = interface(IInspectable)
  ['{2518F012-54DF-587E-92B3-BD86075B71CF}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IGridViewHeaderItem; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IGridViewItemFactory
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_GridViewItem)]
  IGridViewItemFactory = interface(IInspectable)
  ['{96A56215-230C-5EFB-8401-0CE01617C657}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IGridViewItem; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IGroupItemFactory
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_GroupItem)]
  IGroupItemFactory = interface(IInspectable)
  ['{7C1D5F85-12A6-5E54-8C3D-EF44DD40F1BD}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IGroupItem; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IGroupStyleFactory
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_GroupStyle)]
  IGroupStyleFactory = interface(IInspectable)
  ['{DC884AA2-E2A8-57AB-8CBC-B1D8EC540B0C}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IGroupStyle; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IGroupStyleSelectorFactory
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_GroupStyleSelector)]
  IGroupStyleSelectorFactory = interface(IInspectable)
  ['{0E0699BE-50C2-5C15-AED3-E7BD663E5FAD}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IGroupStyleSelector; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IGroupStyleSelectorOverrides
  IGroupStyleSelectorOverrides = interface(IInspectable)
  ['{80594304-EBEB-5A5D-A794-ACDC214CBC94}']
    function SelectGroupStyleCore(group: IInspectable; level: Cardinal): IGroupStyle; safecall;
  end;

  // Microsoft.UI.Xaml.Controls.IHasValidationErrorsChangedEventArgs
  IHasValidationErrorsChangedEventArgs = interface(IInspectable)
  ['{E1F0F2CF-B0EF-5F56-B597-F0771F5CFFD2}']
    function get_NewValue: Boolean; safecall;
    property NewValue: Boolean read get_NewValue;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IHubFactory
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_Hub)]
  IHubFactory = interface(IInspectable)
  ['{520D3572-F141-58BD-B2A7-3352630FC1E2}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IHub; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IHubSectionFactory
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_HubSection)]
  IHubSectionFactory = interface(IInspectable)
  ['{63CE16F2-FB52-5818-836F-C097AA9C072D}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IHubSection; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IHubSectionStatics
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_HubSection)]
  IHubSectionStatics = interface(IInspectable)
  ['{D22016D3-FB4A-5BD8-A108-E59F7C475927}']
    function get_HeaderProperty: IDependencyProperty; safecall;
    function get_HeaderTemplateProperty: IDependencyProperty; safecall;
    function get_ContentTemplateProperty: IDependencyProperty; safecall;
    function get_IsHeaderInteractiveProperty: IDependencyProperty; safecall;
    property ContentTemplateProperty: IDependencyProperty read get_ContentTemplateProperty;
    property HeaderProperty: IDependencyProperty read get_HeaderProperty;
    property HeaderTemplateProperty: IDependencyProperty read get_HeaderTemplateProperty;
    property IsHeaderInteractiveProperty: IDependencyProperty read get_IsHeaderInteractiveProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IHubStatics
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_Hub)]
  IHubStatics = interface(IInspectable)
  ['{2834E932-ABF1-5E07-AEAE-633B726B78CB}']
    function get_HeaderProperty: IDependencyProperty; safecall;
    function get_HeaderTemplateProperty: IDependencyProperty; safecall;
    function get_OrientationProperty: IDependencyProperty; safecall;
    function get_DefaultSectionIndexProperty: IDependencyProperty; safecall;
    function get_SemanticZoomOwnerProperty: IDependencyProperty; safecall;
    function get_IsActiveViewProperty: IDependencyProperty; safecall;
    function get_IsZoomedInViewProperty: IDependencyProperty; safecall;
    property DefaultSectionIndexProperty: IDependencyProperty read get_DefaultSectionIndexProperty;
    property HeaderProperty: IDependencyProperty read get_HeaderProperty;
    property HeaderTemplateProperty: IDependencyProperty read get_HeaderTemplateProperty;
    property IsActiveViewProperty: IDependencyProperty read get_IsActiveViewProperty;
    property IsZoomedInViewProperty: IDependencyProperty read get_IsZoomedInViewProperty;
    property OrientationProperty: IDependencyProperty read get_OrientationProperty;
    property SemanticZoomOwnerProperty: IDependencyProperty read get_SemanticZoomOwnerProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IHyperlinkButtonFactory
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_HyperlinkButton)]
  IHyperlinkButtonFactory = interface(IInspectable)
  ['{01F775EA-C5ED-514A-A23D-89C494A8F09D}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IHyperlinkButton; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IHyperlinkButtonStatics
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_HyperlinkButton)]
  IHyperlinkButtonStatics = interface(IInspectable)
  ['{AB5C7B77-7C4C-5B26-9C7C-763F8D95258E}']
    function get_NavigateUriProperty: IDependencyProperty; safecall;
    property NavigateUriProperty: IDependencyProperty read get_NavigateUriProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IIconElementFactory
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_IconElement)]
  IIconElementFactory = interface(IInspectable)
  ['{7161EEFF-2CC3-59C9-B355-F752EF2030FB}']
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IIconElementStatics
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_IconElement)]
  IIconElementStatics = interface(IInspectable)
  ['{4CCFDC81-9D9D-5A02-B95B-AD1ADD921750}']
    function get_ForegroundProperty: IDependencyProperty; safecall;
    property ForegroundProperty: IDependencyProperty read get_ForegroundProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IIconSourceElement
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_IconSourceElement)]
  IIconSourceElement = interface(IInspectable)
  ['{AB6F4473-1F6B-5B24-8259-1D38E90A110A}']
    function get_IconSource: IIconSource; safecall;
    procedure put_IconSource(value: IIconSource); safecall;
    property IconSource: IIconSource read get_IconSource write put_IconSource;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IIconSourceElementFactory
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_IconSourceElement)]
  IIconSourceElementFactory = interface(IInspectable)
  ['{13E1A240-AD47-51AE-9632-715F4B7EA52E}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IIconSourceElement; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IIconSourceElementStatics
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_IconSourceElement)]
  IIconSourceElementStatics = interface(IInspectable)
  ['{2CC2539F-69FC-5160-AB84-37E7E04E2691}']
    function get_IconSourceProperty: IDependencyProperty; safecall;
    property IconSourceProperty: IDependencyProperty read get_IconSourceProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IIconSourceFactory
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_IconSource)]
  IIconSourceFactory = interface(IInspectable)
  ['{E8BC19C6-9A64-5C54-9338-E18E076875BF}']
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IIconSourceOverrides
  IIconSourceOverrides = interface(IInspectable)
  ['{9A02D369-1C79-5A81-871B-0B90946BA7F0}']
    function CreateIconElementCore: IIconElement; safecall;
    function GetIconElementPropertyCore(iconSourceProperty: IDependencyProperty): IDependencyProperty; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IIconSourceStatics
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_IconSource)]
  IIconSourceStatics = interface(IInspectable)
  ['{EED55973-7E15-575F-AF8E-AE2B9B975DD7}']
    function get_ForegroundProperty: IDependencyProperty; safecall;
    property ForegroundProperty: IDependencyProperty read get_ForegroundProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IImageIcon
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_ImageIcon)]
  IImageIcon = interface(IInspectable)
  ['{78A7B526-E635-59C6-93A1-D7E3C2FAC6D5}']
    function get_Source: IImageSource; safecall;
    procedure put_Source(value: IImageSource); safecall;
    property Source: IImageSource read get_Source write put_Source;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IImageIconFactory
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_ImageIcon)]
  IImageIconFactory = interface(IInspectable)
  ['{235E0279-A7D0-5FDA-A308-9B7CB9C4C912}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IImageIcon; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IImageIconSource
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_ImageIconSource)]
  IImageIconSource = interface(IInspectable)
  ['{67F75BE0-C84D-57FF-9F68-039C81EA7896}']
    function get_ImageSource: IImageSource; safecall;
    procedure put_ImageSource(value: IImageSource); safecall;
    property ImageSource: IImageSource read get_ImageSource write put_ImageSource;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IImageIconSourceFactory
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_ImageIconSource)]
  IImageIconSourceFactory = interface(IInspectable)
  ['{24F76321-71BD-530A-8CC8-3F615CD1437A}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IImageIconSource; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IImageIconSourceStatics
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_ImageIconSource)]
  IImageIconSourceStatics = interface(IInspectable)
  ['{3AAE805C-C128-5F0D-AE43-1B158891A1DD}']
    function get_ImageSourceProperty: IDependencyProperty; safecall;
    property ImageSourceProperty: IDependencyProperty read get_ImageSourceProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IImageIconStatics
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_ImageIcon)]
  IImageIconStatics = interface(IInspectable)
  ['{6BD31828-F8F9-5D86-80D5-E7423546DA7D}']
    function get_SourceProperty: IDependencyProperty; safecall;
    property SourceProperty: IDependencyProperty read get_SourceProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IImageStatics
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_Image)]
  IImageStatics = interface(IInspectable)
  ['{CB5378A8-996B-547E-9C4C-7BBFD9DBE7DC}']
    function get_SourceProperty: IDependencyProperty; safecall;
    function get_StretchProperty: IDependencyProperty; safecall;
    function get_NineGridProperty: IDependencyProperty; safecall;
    property NineGridProperty: IDependencyProperty read get_NineGridProperty;
    property SourceProperty: IDependencyProperty read get_SourceProperty;
    property StretchProperty: IDependencyProperty read get_StretchProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IInfoBadgeTemplateSettings
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_InfoBadgeTemplateSettings)]
  IInfoBadgeTemplateSettings = interface(IInspectable)
  ['{CE810F86-D4BB-51BD-BF7D-DFD1E6C85F4A}']
    function get_InfoBadgeCornerRadius: CornerRadius; safecall;
    procedure put_InfoBadgeCornerRadius(value: CornerRadius); safecall;
    function get_IconElement: IIconElement; safecall;
    procedure put_IconElement(value: IIconElement); safecall;
    property IconElement: IIconElement read get_IconElement write put_IconElement;
    property InfoBadgeCornerRadius: CornerRadius read get_InfoBadgeCornerRadius write put_InfoBadgeCornerRadius;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IInfoBadge
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_InfoBadge)]
  IInfoBadge = interface(IInspectable)
  ['{82104D7F-03D4-5EA4-872E-F9ECAB758601}']
    function get_Value: Integer; safecall;
    procedure put_Value(value: Integer); safecall;
    function get_IconSource: IIconSource; safecall;
    procedure put_IconSource(value: IIconSource); safecall;
    function get_TemplateSettings: IInfoBadgeTemplateSettings; safecall;
    property IconSource: IIconSource read get_IconSource write put_IconSource;
    property TemplateSettings: IInfoBadgeTemplateSettings read get_TemplateSettings;
    property Value: Integer read get_Value write put_Value;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IInfoBadgeFactory
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_InfoBadge)]
  IInfoBadgeFactory = interface(IInspectable)
  ['{FB498205-2DE0-5986-8AEC-2C46AC235087}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IInfoBadge; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IInfoBadgeStatics
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_InfoBadge)]
  IInfoBadgeStatics = interface(IInspectable)
  ['{B0160061-B463-54DE-81AC-64F390D4F25D}']
    function get_ValueProperty: IDependencyProperty; safecall;
    function get_IconSourceProperty: IDependencyProperty; safecall;
    function get_TemplateSettingsProperty: IDependencyProperty; safecall;
    property IconSourceProperty: IDependencyProperty read get_IconSourceProperty;
    property TemplateSettingsProperty: IDependencyProperty read get_TemplateSettingsProperty;
    property ValueProperty: IDependencyProperty read get_ValueProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IInfoBadgeTemplateSettingsFactory
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_InfoBadgeTemplateSettings)]
  IInfoBadgeTemplateSettingsFactory = interface(IInspectable)
  ['{5D366775-1F6E-558C-AAB4-667704B3070C}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IInfoBadgeTemplateSettings; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IInfoBadgeTemplateSettingsStatics
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_InfoBadgeTemplateSettings)]
  IInfoBadgeTemplateSettingsStatics = interface(IInspectable)
  ['{10959133-64CE-586F-A252-9E26FC1AD9BA}']
    function get_InfoBadgeCornerRadiusProperty: IDependencyProperty; safecall;
    function get_IconElementProperty: IDependencyProperty; safecall;
    property IconElementProperty: IDependencyProperty read get_IconElementProperty;
    property InfoBadgeCornerRadiusProperty: IDependencyProperty read get_InfoBadgeCornerRadiusProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IInfoBarClosedEventArgsFactory
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_InfoBarClosedEventArgs)]
  IInfoBarClosedEventArgsFactory = interface(IInspectable)
  ['{42FE1F7E-6D68-5A85-8A5C-ABB7EFFCDF26}']
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IInfoBarClosingEventArgsFactory
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_InfoBarClosingEventArgs)]
  IInfoBarClosingEventArgsFactory = interface(IInspectable)
  ['{D6CFCC14-5206-5C9D-801C-3A90B4E2EBE4}']
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IInfoBarFactory
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_InfoBar)]
  IInfoBarFactory = interface(IInspectable)
  ['{60618A60-9BE7-5DF5-BE0D-933D34DDB44C}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IInfoBar; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IInfoBarStatics
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_InfoBar)]
  IInfoBarStatics = interface(IInspectable)
  ['{5FB1E80D-EA5D-57BA-9915-B6782B982ACA}']
    function get_IsOpenProperty: IDependencyProperty; safecall;
    function get_TitleProperty: IDependencyProperty; safecall;
    function get_MessageProperty: IDependencyProperty; safecall;
    function get_SeverityProperty: IDependencyProperty; safecall;
    function get_IconSourceProperty: IDependencyProperty; safecall;
    function get_IsIconVisibleProperty: IDependencyProperty; safecall;
    function get_IsClosableProperty: IDependencyProperty; safecall;
    function get_CloseButtonStyleProperty: IDependencyProperty; safecall;
    function get_CloseButtonCommandProperty: IDependencyProperty; safecall;
    function get_CloseButtonCommandParameterProperty: IDependencyProperty; safecall;
    function get_ActionButtonProperty: IDependencyProperty; safecall;
    function get_ContentProperty: IDependencyProperty; safecall;
    function get_ContentTemplateProperty: IDependencyProperty; safecall;
    function get_TemplateSettingsProperty: IDependencyProperty; safecall;
    property ActionButtonProperty: IDependencyProperty read get_ActionButtonProperty;
    property CloseButtonCommandParameterProperty: IDependencyProperty read get_CloseButtonCommandParameterProperty;
    property CloseButtonCommandProperty: IDependencyProperty read get_CloseButtonCommandProperty;
    property CloseButtonStyleProperty: IDependencyProperty read get_CloseButtonStyleProperty;
    property ContentProperty: IDependencyProperty read get_ContentProperty;
    property ContentTemplateProperty: IDependencyProperty read get_ContentTemplateProperty;
    property IconSourceProperty: IDependencyProperty read get_IconSourceProperty;
    property IsClosableProperty: IDependencyProperty read get_IsClosableProperty;
    property IsIconVisibleProperty: IDependencyProperty read get_IsIconVisibleProperty;
    property IsOpenProperty: IDependencyProperty read get_IsOpenProperty;
    property MessageProperty: IDependencyProperty read get_MessageProperty;
    property SeverityProperty: IDependencyProperty read get_SeverityProperty;
    property TemplateSettingsProperty: IDependencyProperty read get_TemplateSettingsProperty;
    property TitleProperty: IDependencyProperty read get_TitleProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IInfoBarTemplateSettingsFactory
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_InfoBarTemplateSettings)]
  IInfoBarTemplateSettingsFactory = interface(IInspectable)
  ['{29517DAF-C763-56CE-8D54-EEFCAF7F2E01}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IInfoBarTemplateSettings; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IInfoBarTemplateSettingsStatics
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_InfoBarTemplateSettings)]
  IInfoBarTemplateSettingsStatics = interface(IInspectable)
  ['{57671639-43E8-506D-B9A7-539A605A1C67}']
    function get_IconElementProperty: IDependencyProperty; safecall;
    property IconElementProperty: IDependencyProperty read get_IconElementProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IInsertionPanel
  IInsertionPanel = interface(IInspectable)
  ['{84E13E27-2D24-59C4-A00E-16C7255901E2}']
    procedure GetInsertionIndexes(position: TPointF; out first: Integer; out second: Integer); safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IItemContainerMapping
  IItemContainerMapping = interface(IInspectable)
  ['{B3E03A32-EA83-5626-BFDA-D327A1C7550C}']
    function ItemFromContainer(container: IDependencyObject): IInspectable; safecall;
    function ContainerFromItem(item: IInspectable): IDependencyObject; safecall;
    function IndexFromContainer(container: IDependencyObject): Integer; safecall;
    function ContainerFromIndex(index: Integer): IDependencyObject; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IItemsControlFactory
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_ItemsControl)]
  IItemsControlFactory = interface(IInspectable)
  ['{B2686273-2DD3-5454-9F25-247E66270336}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IItemsControl; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IItemsControlOverrides
  IItemsControlOverrides = interface(IInspectable)
  ['{285C215F-64B2-5F7D-88D2-56C6658F73EE}']
    function IsItemItsOwnContainerOverride(item: IInspectable): Boolean; safecall;
    function GetContainerForItemOverride: IDependencyObject; safecall;
    procedure ClearContainerForItemOverride(element: IDependencyObject; item: IInspectable); safecall;
    procedure PrepareContainerForItemOverride(element: IDependencyObject; item: IInspectable); safecall;
    procedure OnItemsChanged(e: IInspectable); safecall;
    procedure OnItemContainerStyleChanged(oldItemContainerStyle: IStyle; newItemContainerStyle: IStyle); safecall;
    procedure OnItemContainerStyleSelectorChanged(oldItemContainerStyleSelector: IStyleSelector; newItemContainerStyleSelector: IStyleSelector); safecall;
    procedure OnItemTemplateChanged(oldItemTemplate: IDataTemplate; newItemTemplate: IDataTemplate); safecall;
    procedure OnItemTemplateSelectorChanged(oldItemTemplateSelector: IDataTemplateSelector; newItemTemplateSelector: IDataTemplateSelector); safecall;
    procedure OnGroupStyleSelectorChanged(oldGroupStyleSelector: IGroupStyleSelector; newGroupStyleSelector: IGroupStyleSelector); safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IItemsControlStatics
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_ItemsControl)]
  IItemsControlStatics = interface(IInspectable)
  ['{4FB961E1-5F91-5585-A692-6825CDE3ED1E}']
    function get_ItemsSourceProperty: IDependencyProperty; safecall;
    function get_ItemTemplateProperty: IDependencyProperty; safecall;
    function get_ItemTemplateSelectorProperty: IDependencyProperty; safecall;
    function get_ItemsPanelProperty: IDependencyProperty; safecall;
    function get_DisplayMemberPathProperty: IDependencyProperty; safecall;
    function get_ItemContainerStyleProperty: IDependencyProperty; safecall;
    function get_ItemContainerStyleSelectorProperty: IDependencyProperty; safecall;
    function get_ItemContainerTransitionsProperty: IDependencyProperty; safecall;
    function get_GroupStyleSelectorProperty: IDependencyProperty; safecall;
    function get_IsGroupingProperty: IDependencyProperty; safecall;
    function GetItemsOwner(element: IDependencyObject): IItemsControl; safecall;
    function ItemsControlFromItemContainer(container: IDependencyObject): IItemsControl; safecall;
    property DisplayMemberPathProperty: IDependencyProperty read get_DisplayMemberPathProperty;
    property GroupStyleSelectorProperty: IDependencyProperty read get_GroupStyleSelectorProperty;
    property IsGroupingProperty: IDependencyProperty read get_IsGroupingProperty;
    property ItemContainerStyleProperty: IDependencyProperty read get_ItemContainerStyleProperty;
    property ItemContainerStyleSelectorProperty: IDependencyProperty read get_ItemContainerStyleSelectorProperty;
    property ItemContainerTransitionsProperty: IDependencyProperty read get_ItemContainerTransitionsProperty;
    property ItemTemplateProperty: IDependencyProperty read get_ItemTemplateProperty;
    property ItemTemplateSelectorProperty: IDependencyProperty read get_ItemTemplateSelectorProperty;
    property ItemsPanelProperty: IDependencyProperty read get_ItemsPanelProperty;
    property ItemsSourceProperty: IDependencyProperty read get_ItemsSourceProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IItemsPickedEventArgs
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_ItemsPickedEventArgs)]
  IItemsPickedEventArgs = interface(IInspectable)
  ['{C6E93908-E20D-5614-988A-362D7937D276}']
    function get_AddedItems: IVector_1__IInspectable; safecall;
    function get_RemovedItems: IVector_1__IInspectable; safecall;
    property AddedItems: IVector_1__IInspectable read get_AddedItems;
    property RemovedItems: IVector_1__IInspectable read get_RemovedItems;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IItemsPresenter
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_ItemsPresenter)]
  IItemsPresenter = interface(IInspectable)
  ['{0B0FBB88-6CB3-5F4E-99BD-879916B460DF}']
    function get_Header: IInspectable; safecall;
    procedure put_Header(value: IInspectable); safecall;
    function get_HeaderTemplate: IDataTemplate; safecall;
    procedure put_HeaderTemplate(value: IDataTemplate); safecall;
    function get_HeaderTransitions: IVector_1__Animation_ITransition; safecall;
    procedure put_HeaderTransitions(value: IVector_1__Animation_ITransition); safecall;
    function get_Footer: IInspectable; safecall;
    procedure put_Footer(value: IInspectable); safecall;
    function get_FooterTemplate: IDataTemplate; safecall;
    procedure put_FooterTemplate(value: IDataTemplate); safecall;
    function get_FooterTransitions: IVector_1__Animation_ITransition; safecall;
    procedure put_FooterTransitions(value: IVector_1__Animation_ITransition); safecall;
    function get_Padding: Thickness; safecall;
    procedure put_Padding(value: Thickness); safecall;
    property Footer: IInspectable read get_Footer write put_Footer;
    property FooterTemplate: IDataTemplate read get_FooterTemplate write put_FooterTemplate;
    property FooterTransitions: IVector_1__Animation_ITransition read get_FooterTransitions write put_FooterTransitions;
    property Header: IInspectable read get_Header write put_Header;
    property HeaderTemplate: IDataTemplate read get_HeaderTemplate write put_HeaderTemplate;
    property HeaderTransitions: IVector_1__Animation_ITransition read get_HeaderTransitions write put_HeaderTransitions;
    property Padding: Thickness read get_Padding write put_Padding;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IItemsPresenterStatics
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_ItemsPresenter)]
  IItemsPresenterStatics = interface(IInspectable)
  ['{6FA047C0-E510-52B0-8DA2-C76EEDC864A0}']
    function get_HeaderProperty: IDependencyProperty; safecall;
    function get_HeaderTemplateProperty: IDependencyProperty; safecall;
    function get_HeaderTransitionsProperty: IDependencyProperty; safecall;
    function get_FooterProperty: IDependencyProperty; safecall;
    function get_FooterTemplateProperty: IDependencyProperty; safecall;
    function get_FooterTransitionsProperty: IDependencyProperty; safecall;
    function get_PaddingProperty: IDependencyProperty; safecall;
    property FooterProperty: IDependencyProperty read get_FooterProperty;
    property FooterTemplateProperty: IDependencyProperty read get_FooterTemplateProperty;
    property FooterTransitionsProperty: IDependencyProperty read get_FooterTransitionsProperty;
    property HeaderProperty: IDependencyProperty read get_HeaderProperty;
    property HeaderTemplateProperty: IDependencyProperty read get_HeaderTemplateProperty;
    property HeaderTransitionsProperty: IDependencyProperty read get_HeaderTransitionsProperty;
    property PaddingProperty: IDependencyProperty read get_PaddingProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IItemsRepeaterFactory
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_ItemsRepeater)]
  IItemsRepeaterFactory = interface(IInspectable)
  ['{C3C1F244-67A8-568F-A6F7-5DA8B0EADD49}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IItemsRepeater; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IItemsRepeaterScrollHost
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_ItemsRepeaterScrollHost)]
  IItemsRepeaterScrollHost = interface(IInspectable)
  ['{6F3CEE8E-078A-59B4-931F-FAA891C8C073}']
    function get_ScrollViewer: IScrollViewer; safecall;
    procedure put_ScrollViewer(value: IScrollViewer); safecall;
    function get_CurrentAnchor: IUIElement; safecall;
    function get_HorizontalAnchorRatio: Double; safecall;
    procedure put_HorizontalAnchorRatio(value: Double); safecall;
    function get_VerticalAnchorRatio: Double; safecall;
    procedure put_VerticalAnchorRatio(value: Double); safecall;
    property CurrentAnchor: IUIElement read get_CurrentAnchor;
    property HorizontalAnchorRatio: Double read get_HorizontalAnchorRatio write put_HorizontalAnchorRatio;
    property ScrollViewer: IScrollViewer read get_ScrollViewer write put_ScrollViewer;
    property VerticalAnchorRatio: Double read get_VerticalAnchorRatio write put_VerticalAnchorRatio;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IItemsRepeaterStatics
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_ItemsRepeater)]
  IItemsRepeaterStatics = interface(IInspectable)
  ['{ED8C4CB7-2EDC-5416-AFBF-87A9AA2AF26E}']
    function get_ItemsSourceProperty: IDependencyProperty; safecall;
    function get_ItemTemplateProperty: IDependencyProperty; safecall;
    function get_LayoutProperty: IDependencyProperty; safecall;
    function get_HorizontalCacheLengthProperty: IDependencyProperty; safecall;
    function get_VerticalCacheLengthProperty: IDependencyProperty; safecall;
    function get_BackgroundProperty: IDependencyProperty; safecall;
    property BackgroundProperty: IDependencyProperty read get_BackgroundProperty;
    property HorizontalCacheLengthProperty: IDependencyProperty read get_HorizontalCacheLengthProperty;
    property ItemTemplateProperty: IDependencyProperty read get_ItemTemplateProperty;
    property ItemsSourceProperty: IDependencyProperty read get_ItemsSourceProperty;
    property LayoutProperty: IDependencyProperty read get_LayoutProperty;
    property VerticalCacheLengthProperty: IDependencyProperty read get_VerticalCacheLengthProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IItemsSourceViewFactory
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_ItemsSourceView)]
  IItemsSourceViewFactory = interface(IInspectable)
  ['{AADC6FDD-EB00-5E58-B95D-120F891D733F}']
    function CreateInstance(source: IInspectable; baseInterface: IInspectable; out innerInterface: IInspectable): IItemsSourceView; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IItemsStackPanel
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_ItemsStackPanel)]
  IItemsStackPanel = interface(IInspectable)
  ['{F7E52FDF-4779-5F63-9999-7D677E3FD2C1}']
    function get_GroupPadding: Thickness; safecall;
    procedure put_GroupPadding(value: Thickness); safecall;
    function get_Orientation: Orientation; safecall;
    procedure put_Orientation(value: Orientation); safecall;
    function get_FirstCacheIndex: Integer; safecall;
    function get_FirstVisibleIndex: Integer; safecall;
    function get_LastVisibleIndex: Integer; safecall;
    function get_LastCacheIndex: Integer; safecall;
    function get_ScrollingDirection: PanelScrollingDirection; safecall;
    function get_GroupHeaderPlacement: Primitives_GroupHeaderPlacement; safecall;
    procedure put_GroupHeaderPlacement(value: Primitives_GroupHeaderPlacement); safecall;
    function get_ItemsUpdatingScrollMode: ItemsUpdatingScrollMode; safecall;
    procedure put_ItemsUpdatingScrollMode(value: ItemsUpdatingScrollMode); safecall;
    function get_CacheLength: Double; safecall;
    procedure put_CacheLength(value: Double); safecall;
    function get_AreStickyGroupHeadersEnabled: Boolean; safecall;
    procedure put_AreStickyGroupHeadersEnabled(value: Boolean); safecall;
    property AreStickyGroupHeadersEnabled: Boolean read get_AreStickyGroupHeadersEnabled write put_AreStickyGroupHeadersEnabled;
    property CacheLength: Double read get_CacheLength write put_CacheLength;
    property FirstCacheIndex: Integer read get_FirstCacheIndex;
    property FirstVisibleIndex: Integer read get_FirstVisibleIndex;
    property GroupHeaderPlacement: Primitives_GroupHeaderPlacement read get_GroupHeaderPlacement write put_GroupHeaderPlacement;
    property GroupPadding: Thickness read get_GroupPadding write put_GroupPadding;
    property ItemsUpdatingScrollMode_: ItemsUpdatingScrollMode read get_ItemsUpdatingScrollMode write put_ItemsUpdatingScrollMode;
    property LastCacheIndex: Integer read get_LastCacheIndex;
    property LastVisibleIndex: Integer read get_LastVisibleIndex;
    property Orientation_: Orientation read get_Orientation write put_Orientation;
    property ScrollingDirection: PanelScrollingDirection read get_ScrollingDirection;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IItemsStackPanelStatics
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_ItemsStackPanel)]
  IItemsStackPanelStatics = interface(IInspectable)
  ['{7CA08D59-BE10-5D61-ABE2-089AD44DB1D6}']
    function get_GroupPaddingProperty: IDependencyProperty; safecall;
    function get_OrientationProperty: IDependencyProperty; safecall;
    function get_GroupHeaderPlacementProperty: IDependencyProperty; safecall;
    function get_CacheLengthProperty: IDependencyProperty; safecall;
    function get_AreStickyGroupHeadersEnabledProperty: IDependencyProperty; safecall;
    property AreStickyGroupHeadersEnabledProperty: IDependencyProperty read get_AreStickyGroupHeadersEnabledProperty;
    property CacheLengthProperty: IDependencyProperty read get_CacheLengthProperty;
    property GroupHeaderPlacementProperty: IDependencyProperty read get_GroupHeaderPlacementProperty;
    property GroupPaddingProperty: IDependencyProperty read get_GroupPaddingProperty;
    property OrientationProperty: IDependencyProperty read get_OrientationProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IItemsWrapGrid
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_ItemsWrapGrid)]
  IItemsWrapGrid = interface(IInspectable)
  ['{29910BC5-B305-5529-B88C-776C66E1B3BA}']
    function get_GroupPadding: Thickness; safecall;
    procedure put_GroupPadding(value: Thickness); safecall;
    function get_Orientation: Orientation; safecall;
    procedure put_Orientation(value: Orientation); safecall;
    function get_MaximumRowsOrColumns: Integer; safecall;
    procedure put_MaximumRowsOrColumns(value: Integer); safecall;
    function get_ItemWidth: Double; safecall;
    procedure put_ItemWidth(value: Double); safecall;
    function get_ItemHeight: Double; safecall;
    procedure put_ItemHeight(value: Double); safecall;
    function get_FirstCacheIndex: Integer; safecall;
    function get_FirstVisibleIndex: Integer; safecall;
    function get_LastVisibleIndex: Integer; safecall;
    function get_LastCacheIndex: Integer; safecall;
    function get_ScrollingDirection: PanelScrollingDirection; safecall;
    function get_GroupHeaderPlacement: Primitives_GroupHeaderPlacement; safecall;
    procedure put_GroupHeaderPlacement(value: Primitives_GroupHeaderPlacement); safecall;
    function get_CacheLength: Double; safecall;
    procedure put_CacheLength(value: Double); safecall;
    function get_AreStickyGroupHeadersEnabled: Boolean; safecall;
    procedure put_AreStickyGroupHeadersEnabled(value: Boolean); safecall;
    property AreStickyGroupHeadersEnabled: Boolean read get_AreStickyGroupHeadersEnabled write put_AreStickyGroupHeadersEnabled;
    property CacheLength: Double read get_CacheLength write put_CacheLength;
    property FirstCacheIndex: Integer read get_FirstCacheIndex;
    property FirstVisibleIndex: Integer read get_FirstVisibleIndex;
    property GroupHeaderPlacement: Primitives_GroupHeaderPlacement read get_GroupHeaderPlacement write put_GroupHeaderPlacement;
    property GroupPadding: Thickness read get_GroupPadding write put_GroupPadding;
    property ItemHeight: Double read get_ItemHeight write put_ItemHeight;
    property ItemWidth: Double read get_ItemWidth write put_ItemWidth;
    property LastCacheIndex: Integer read get_LastCacheIndex;
    property LastVisibleIndex: Integer read get_LastVisibleIndex;
    property MaximumRowsOrColumns: Integer read get_MaximumRowsOrColumns write put_MaximumRowsOrColumns;
    property Orientation_: Orientation read get_Orientation write put_Orientation;
    property ScrollingDirection: PanelScrollingDirection read get_ScrollingDirection;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IItemsWrapGridStatics
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_ItemsWrapGrid)]
  IItemsWrapGridStatics = interface(IInspectable)
  ['{F757D5CB-3BF2-5A23-968F-045BC80D57CE}']
    function get_GroupPaddingProperty: IDependencyProperty; safecall;
    function get_OrientationProperty: IDependencyProperty; safecall;
    function get_MaximumRowsOrColumnsProperty: IDependencyProperty; safecall;
    function get_ItemWidthProperty: IDependencyProperty; safecall;
    function get_ItemHeightProperty: IDependencyProperty; safecall;
    function get_GroupHeaderPlacementProperty: IDependencyProperty; safecall;
    function get_CacheLengthProperty: IDependencyProperty; safecall;
    function get_AreStickyGroupHeadersEnabledProperty: IDependencyProperty; safecall;
    property AreStickyGroupHeadersEnabledProperty: IDependencyProperty read get_AreStickyGroupHeadersEnabledProperty;
    property CacheLengthProperty: IDependencyProperty read get_CacheLengthProperty;
    property GroupHeaderPlacementProperty: IDependencyProperty read get_GroupHeaderPlacementProperty;
    property GroupPaddingProperty: IDependencyProperty read get_GroupPaddingProperty;
    property ItemHeightProperty: IDependencyProperty read get_ItemHeightProperty;
    property ItemWidthProperty: IDependencyProperty read get_ItemWidthProperty;
    property MaximumRowsOrColumnsProperty: IDependencyProperty read get_MaximumRowsOrColumnsProperty;
    property OrientationProperty: IDependencyProperty read get_OrientationProperty;
  end;

  // Microsoft.UI.Xaml.Controls.IKeyIndexMapping
  IKeyIndexMapping = interface(IInspectable)
  ['{B1F3BBA0-108E-560D-9681-26391B4BC30D}']
    function KeyFromIndex(index: Integer): HSTRING; safecall;
    function IndexFromKey(key: HSTRING): Integer; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.ILayoutContextFactory
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_LayoutContext)]
  ILayoutContextFactory = interface(IInspectable)
  ['{F7664771-9242-599E-A7DD-0705565DEF98}']
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.ILayoutContextOverrides
  ILayoutContextOverrides = interface(IInspectable)
  ['{FDA70E44-6526-5535-BE2B-EC2743670AE2}']
    function get_LayoutStateCore: IInspectable; safecall;
    procedure put_LayoutStateCore(value: IInspectable); safecall;
    property LayoutStateCore: IInspectable read get_LayoutStateCore write put_LayoutStateCore;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.ILayoutFactory
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_Layout)]
  ILayoutFactory = interface(IInspectable)
  ['{EAF956B4-59C9-5E13-A49D-F35B171D8FC9}']
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.ILayoutProtected
  ILayoutProtected = interface(IInspectable)
  ['{E46FF416-741E-5176-A1D4-5718D2342243}']
    procedure InvalidateMeasure; safecall;
    procedure InvalidateArrange; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IListBoxFactory
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_ListBox)]
  IListBoxFactory = interface(IInspectable)
  ['{D048E0BC-4692-5C60-B2E9-07C4433CE050}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IListBox; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IListBoxItemFactory
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_ListBoxItem)]
  IListBoxItemFactory = interface(IInspectable)
  ['{8E9E0E6D-4597-5EFA-94BC-7FFADC264C28}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IListBoxItem; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IListBoxStatics
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_ListBox)]
  IListBoxStatics = interface(IInspectable)
  ['{763A4986-DB3A-5A94-8505-AEE2F229AF85}']
    function get_SelectionModeProperty: IDependencyProperty; safecall;
    function get_SingleSelectionFollowsFocusProperty: IDependencyProperty; safecall;
    property SelectionModeProperty: IDependencyProperty read get_SelectionModeProperty;
    property SingleSelectionFollowsFocusProperty: IDependencyProperty read get_SingleSelectionFollowsFocusProperty;
  end;

  // Generic Delegate for:
  // Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.Controls.IListPickerFlyout,Microsoft.UI.Xaml.Controls.IItemsPickedEventArgs>
  TypedEventHandler_2__IListPickerFlyout__IItemsPickedEventArgs_Delegate_Base = interface(IUnknown)
  ['{9B0ABEE7-70A8-506F-9EAD-6578DE33D053}']
    procedure Invoke(sender: IListPickerFlyout; args: IItemsPickedEventArgs); safecall;
  end;
  // UsedAPI Interface
  // Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.Controls.IListPickerFlyout,Microsoft.UI.Xaml.Controls.IItemsPickedEventArgs>
  TypedEventHandler_2__IListPickerFlyout__IItemsPickedEventArgs = interface(TypedEventHandler_2__IListPickerFlyout__IItemsPickedEventArgs_Delegate_Base)
  ['{1DF1CE0A-D8EF-585E-9B2B-A092631AA4C2}']
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IListPickerFlyout
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_ListPickerFlyout)]
  IListPickerFlyout = interface(IInspectable)
  ['{B0154A37-07C1-50ED-834C-32D3FBDA5C5F}']
    function get_ItemsSource: IInspectable; safecall;
    procedure put_ItemsSource(value: IInspectable); safecall;
    function get_ItemTemplate: IDataTemplate; safecall;
    procedure put_ItemTemplate(value: IDataTemplate); safecall;
    function get_DisplayMemberPath: HSTRING; safecall;
    procedure put_DisplayMemberPath(value: HSTRING); safecall;
    function get_SelectionMode: ListPickerFlyoutSelectionMode; safecall;
    procedure put_SelectionMode(value: ListPickerFlyoutSelectionMode); safecall;
    function get_SelectedIndex: Integer; safecall;
    procedure put_SelectedIndex(value: Integer); safecall;
    function get_SelectedItem: IInspectable; safecall;
    procedure put_SelectedItem(value: IInspectable); safecall;
    function get_SelectedValue: IInspectable; safecall;
    procedure put_SelectedValue(value: IInspectable); safecall;
    function get_SelectedValuePath: HSTRING; safecall;
    procedure put_SelectedValuePath(value: HSTRING); safecall;
    function get_SelectedItems: IVector_1__IInspectable; safecall;
    function add_ItemsPicked(handler: TypedEventHandler_2__IListPickerFlyout__IItemsPickedEventArgs): EventRegistrationToken; safecall;
    procedure remove_ItemsPicked(token: EventRegistrationToken); safecall;
    function ShowAtAsync(target: IFrameworkElement): IAsyncOperation_1__IVectorView_1__IInspectable; safecall;
    property DisplayMemberPath: HSTRING read get_DisplayMemberPath write put_DisplayMemberPath;
    property ItemTemplate: IDataTemplate read get_ItemTemplate write put_ItemTemplate;
    property ItemsSource: IInspectable read get_ItemsSource write put_ItemsSource;
    property SelectedIndex: Integer read get_SelectedIndex write put_SelectedIndex;
    property SelectedItem: IInspectable read get_SelectedItem write put_SelectedItem;
    property SelectedItems: IVector_1__IInspectable read get_SelectedItems;
    property SelectedValue: IInspectable read get_SelectedValue write put_SelectedValue;
    property SelectedValuePath: HSTRING read get_SelectedValuePath write put_SelectedValuePath;
    property SelectionMode: ListPickerFlyoutSelectionMode read get_SelectionMode write put_SelectionMode;
  end;

  // Microsoft.UI.Xaml.Controls.IListPickerFlyoutPresenter
  IListPickerFlyoutPresenter = interface(IInspectable)
  ['{7DCC91AB-8694-517B-A4E6-04767410C60B}']
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IListPickerFlyoutStatics
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_ListPickerFlyout)]
  IListPickerFlyoutStatics = interface(IInspectable)
  ['{9E485154-489D-5542-8E62-3C91A11814B5}']
    function get_ItemsSourceProperty: IDependencyProperty; safecall;
    function get_ItemTemplateProperty: IDependencyProperty; safecall;
    function get_DisplayMemberPathProperty: IDependencyProperty; safecall;
    function get_SelectionModeProperty: IDependencyProperty; safecall;
    function get_SelectedIndexProperty: IDependencyProperty; safecall;
    function get_SelectedItemProperty: IDependencyProperty; safecall;
    function get_SelectedValueProperty: IDependencyProperty; safecall;
    function get_SelectedValuePathProperty: IDependencyProperty; safecall;
    property DisplayMemberPathProperty: IDependencyProperty read get_DisplayMemberPathProperty;
    property ItemTemplateProperty: IDependencyProperty read get_ItemTemplateProperty;
    property ItemsSourceProperty: IDependencyProperty read get_ItemsSourceProperty;
    property SelectedIndexProperty: IDependencyProperty read get_SelectedIndexProperty;
    property SelectedItemProperty: IDependencyProperty read get_SelectedItemProperty;
    property SelectedValuePathProperty: IDependencyProperty read get_SelectedValuePathProperty;
    property SelectedValueProperty: IDependencyProperty read get_SelectedValueProperty;
    property SelectionModeProperty: IDependencyProperty read get_SelectionModeProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IListViewBaseFactory
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_ListViewBase)]
  IListViewBaseFactory = interface(IInspectable)
  ['{44092863-C09E-551E-85BF-951B552950C8}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IListViewBase; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IListViewBaseHeaderItemFactory
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_ListViewBaseHeaderItem)]
  IListViewBaseHeaderItemFactory = interface(IInspectable)
  ['{228FC10A-B86F-5B57-96F4-34D9F9FB8711}']
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IListViewBaseStatics
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_ListViewBase)]
  IListViewBaseStatics = interface(IInspectable)
  ['{B8487E94-010F-56D4-9F76-94BF8C462745}']
    function get_SelectionModeProperty: IDependencyProperty; safecall;
    function get_IsSwipeEnabledProperty: IDependencyProperty; safecall;
    function get_CanDragItemsProperty: IDependencyProperty; safecall;
    function get_CanReorderItemsProperty: IDependencyProperty; safecall;
    function get_IsItemClickEnabledProperty: IDependencyProperty; safecall;
    function get_DataFetchSizeProperty: IDependencyProperty; safecall;
    function get_IncrementalLoadingThresholdProperty: IDependencyProperty; safecall;
    function get_IncrementalLoadingTriggerProperty: IDependencyProperty; safecall;
    function get_ShowsScrollingPlaceholdersProperty: IDependencyProperty; safecall;
    function get_ReorderModeProperty: IDependencyProperty; safecall;
    function get_IsMultiSelectCheckBoxEnabledProperty: IDependencyProperty; safecall;
    function get_SingleSelectionFollowsFocusProperty: IDependencyProperty; safecall;
    function get_SemanticZoomOwnerProperty: IDependencyProperty; safecall;
    function get_IsActiveViewProperty: IDependencyProperty; safecall;
    function get_IsZoomedInViewProperty: IDependencyProperty; safecall;
    function get_HeaderProperty: IDependencyProperty; safecall;
    function get_HeaderTemplateProperty: IDependencyProperty; safecall;
    function get_HeaderTransitionsProperty: IDependencyProperty; safecall;
    function get_FooterProperty: IDependencyProperty; safecall;
    function get_FooterTemplateProperty: IDependencyProperty; safecall;
    function get_FooterTransitionsProperty: IDependencyProperty; safecall;
    property CanDragItemsProperty: IDependencyProperty read get_CanDragItemsProperty;
    property CanReorderItemsProperty: IDependencyProperty read get_CanReorderItemsProperty;
    property DataFetchSizeProperty: IDependencyProperty read get_DataFetchSizeProperty;
    property FooterProperty: IDependencyProperty read get_FooterProperty;
    property FooterTemplateProperty: IDependencyProperty read get_FooterTemplateProperty;
    property FooterTransitionsProperty: IDependencyProperty read get_FooterTransitionsProperty;
    property HeaderProperty: IDependencyProperty read get_HeaderProperty;
    property HeaderTemplateProperty: IDependencyProperty read get_HeaderTemplateProperty;
    property HeaderTransitionsProperty: IDependencyProperty read get_HeaderTransitionsProperty;
    property IncrementalLoadingThresholdProperty: IDependencyProperty read get_IncrementalLoadingThresholdProperty;
    property IncrementalLoadingTriggerProperty: IDependencyProperty read get_IncrementalLoadingTriggerProperty;
    property IsActiveViewProperty: IDependencyProperty read get_IsActiveViewProperty;
    property IsItemClickEnabledProperty: IDependencyProperty read get_IsItemClickEnabledProperty;
    property IsMultiSelectCheckBoxEnabledProperty: IDependencyProperty read get_IsMultiSelectCheckBoxEnabledProperty;
    property IsSwipeEnabledProperty: IDependencyProperty read get_IsSwipeEnabledProperty;
    property IsZoomedInViewProperty: IDependencyProperty read get_IsZoomedInViewProperty;
    property ReorderModeProperty: IDependencyProperty read get_ReorderModeProperty;
    property SelectionModeProperty: IDependencyProperty read get_SelectionModeProperty;
    property SemanticZoomOwnerProperty: IDependencyProperty read get_SemanticZoomOwnerProperty;
    property ShowsScrollingPlaceholdersProperty: IDependencyProperty read get_ShowsScrollingPlaceholdersProperty;
    property SingleSelectionFollowsFocusProperty: IDependencyProperty read get_SingleSelectionFollowsFocusProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IListViewFactory
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_ListView)]
  IListViewFactory = interface(IInspectable)
  ['{03EBEFB8-F64A-5BF9-9570-CB09EEEA2335}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IListView; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IListViewHeaderItemFactory
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_ListViewHeaderItem)]
  IListViewHeaderItemFactory = interface(IInspectable)
  ['{78F29D6A-C5A4-5D86-9962-91020CE61313}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IListViewHeaderItem; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IListViewItemFactory
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_ListViewItem)]
  IListViewItemFactory = interface(IInspectable)
  ['{D9F4D0B8-EE59-5036-BD7A-7C89CF0BC2AC}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IListViewItem; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IListViewPersistenceHelper
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_ListViewPersistenceHelper)]
  IListViewPersistenceHelper = interface(IInspectable)
  ['{07DE9AD4-ED8E-5E05-9039-031B4DDF7237}']
  end;

  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.ListViewItemToKeyHandler
  ListViewItemToKeyHandler = interface(IUnknown)
  ['{2A47F009-91FC-54CE-9861-344E80F7E9D7}']
    function Invoke(item: IInspectable): HSTRING; safecall;
  end;

  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.ListViewKeyToItemHandler
  ListViewKeyToItemHandler = interface(IUnknown)
  ['{46C8E78E-B948-5EF3-B845-B278B5918BA9}']
    function Invoke(key: HSTRING): IAsyncOperation_1__IInspectable; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IListViewPersistenceHelperStatics
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_ListViewPersistenceHelper)]
  IListViewPersistenceHelperStatics = interface(IInspectable)
  ['{36B862BB-3882-59D8-9118-904DE3FE00C2}']
    function GetRelativeScrollPosition(listViewBase: IListViewBase; itemToKeyHandler: ListViewItemToKeyHandler): HSTRING; safecall;
    function SetRelativeScrollPositionAsync(listViewBase: IListViewBase; relativeScrollPosition: HSTRING; keyToItemHandler: ListViewKeyToItemHandler): IAsyncAction; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IMediaPlayerElementFactory
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_MediaPlayerElement)]
  IMediaPlayerElementFactory = interface(IInspectable)
  ['{51ACA342-65A0-5DB6-8082-BD54A8D14999}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IMediaPlayerElement; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IMediaPlayerElementStatics
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_MediaPlayerElement)]
  IMediaPlayerElementStatics = interface(IInspectable)
  ['{6F77BBA8-FB23-5E27-97C1-16D437D0702F}']
    function get_SourceProperty: IDependencyProperty; safecall;
    function get_AreTransportControlsEnabledProperty: IDependencyProperty; safecall;
    function get_PosterSourceProperty: IDependencyProperty; safecall;
    function get_StretchProperty: IDependencyProperty; safecall;
    function get_AutoPlayProperty: IDependencyProperty; safecall;
    function get_IsFullWindowProperty: IDependencyProperty; safecall;
    function get_MediaPlayerProperty: IDependencyProperty; safecall;
    property AreTransportControlsEnabledProperty: IDependencyProperty read get_AreTransportControlsEnabledProperty;
    property AutoPlayProperty: IDependencyProperty read get_AutoPlayProperty;
    property IsFullWindowProperty: IDependencyProperty read get_IsFullWindowProperty;
    property MediaPlayerProperty: IDependencyProperty read get_MediaPlayerProperty;
    property PosterSourceProperty: IDependencyProperty read get_PosterSourceProperty;
    property SourceProperty: IDependencyProperty read get_SourceProperty;
    property StretchProperty: IDependencyProperty read get_StretchProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IMediaPlayerPresenter
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_MediaPlayerPresenter)]
  IMediaPlayerPresenter = interface(IInspectable)
  ['{B6A01245-A73C-51BA-8E1A-3447BB277E40}']
    function get_MediaPlayer: Playback_IMediaPlayer; safecall;
    procedure put_MediaPlayer(value: Playback_IMediaPlayer); safecall;
    function get_Stretch: Stretch; safecall;
    procedure put_Stretch(value: Stretch); safecall;
    function get_IsFullWindow: Boolean; safecall;
    procedure put_IsFullWindow(value: Boolean); safecall;
    property IsFullWindow: Boolean read get_IsFullWindow write put_IsFullWindow;
    property MediaPlayer: Playback_IMediaPlayer read get_MediaPlayer write put_MediaPlayer;
    property Stretch_: Stretch read get_Stretch write put_Stretch;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IMediaPlayerPresenterFactory
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_MediaPlayerPresenter)]
  IMediaPlayerPresenterFactory = interface(IInspectable)
  ['{3A96E3F8-EC04-5922-901C-11BA3607CF93}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IMediaPlayerPresenter; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IMediaPlayerPresenterStatics
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_MediaPlayerPresenter)]
  IMediaPlayerPresenterStatics = interface(IInspectable)
  ['{5A14B68F-1E03-5604-BCD6-7C7403619513}']
    function get_MediaPlayerProperty: IDependencyProperty; safecall;
    function get_StretchProperty: IDependencyProperty; safecall;
    function get_IsFullWindowProperty: IDependencyProperty; safecall;
    property IsFullWindowProperty: IDependencyProperty read get_IsFullWindowProperty;
    property MediaPlayerProperty: IDependencyProperty read get_MediaPlayerProperty;
    property StretchProperty: IDependencyProperty read get_StretchProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IMediaTransportControlsFactory
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_MediaTransportControls)]
  IMediaTransportControlsFactory = interface(IInspectable)
  ['{A3F9A254-1BCF-57B5-9481-C19C4583AC0E}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IMediaTransportControls; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IMediaTransportControlsHelper
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_MediaTransportControlsHelper)]
  IMediaTransportControlsHelper = interface(IInspectable)
  ['{89D393BA-0E04-5E24-B456-AB05429591E4}']
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IMediaTransportControlsHelperStatics
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_MediaTransportControlsHelper)]
  IMediaTransportControlsHelperStatics = interface(IInspectable)
  ['{F1BF86F5-BC62-5722-BEBD-A00102D857D3}']
    function get_DropoutOrderProperty: IDependencyProperty; safecall;
    function GetDropoutOrder(element: IUIElement): IReference_1__Integer; safecall;
    procedure SetDropoutOrder(element: IUIElement; value: IReference_1__Integer); safecall;
    property DropoutOrderProperty: IDependencyProperty read get_DropoutOrderProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IMediaTransportControlsStatics
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_MediaTransportControls)]
  IMediaTransportControlsStatics = interface(IInspectable)
  ['{F497067E-7C41-5083-96C5-B6881D88B187}']
    function get_IsZoomButtonVisibleProperty: IDependencyProperty; safecall;
    function get_IsZoomEnabledProperty: IDependencyProperty; safecall;
    function get_IsFastForwardButtonVisibleProperty: IDependencyProperty; safecall;
    function get_IsFastForwardEnabledProperty: IDependencyProperty; safecall;
    function get_IsFastRewindButtonVisibleProperty: IDependencyProperty; safecall;
    function get_IsFastRewindEnabledProperty: IDependencyProperty; safecall;
    function get_IsStopButtonVisibleProperty: IDependencyProperty; safecall;
    function get_IsStopEnabledProperty: IDependencyProperty; safecall;
    function get_IsVolumeButtonVisibleProperty: IDependencyProperty; safecall;
    function get_IsVolumeEnabledProperty: IDependencyProperty; safecall;
    function get_IsPlaybackRateButtonVisibleProperty: IDependencyProperty; safecall;
    function get_IsPlaybackRateEnabledProperty: IDependencyProperty; safecall;
    function get_IsSeekBarVisibleProperty: IDependencyProperty; safecall;
    function get_IsSeekEnabledProperty: IDependencyProperty; safecall;
    function get_IsCompactProperty: IDependencyProperty; safecall;
    function get_IsSkipForwardButtonVisibleProperty: IDependencyProperty; safecall;
    function get_IsSkipForwardEnabledProperty: IDependencyProperty; safecall;
    function get_IsSkipBackwardButtonVisibleProperty: IDependencyProperty; safecall;
    function get_IsSkipBackwardEnabledProperty: IDependencyProperty; safecall;
    function get_IsNextTrackButtonVisibleProperty: IDependencyProperty; safecall;
    function get_IsPreviousTrackButtonVisibleProperty: IDependencyProperty; safecall;
    function get_FastPlayFallbackBehaviourProperty: IDependencyProperty; safecall;
    function get_ShowAndHideAutomaticallyProperty: IDependencyProperty; safecall;
    function get_IsRepeatEnabledProperty: IDependencyProperty; safecall;
    function get_IsRepeatButtonVisibleProperty: IDependencyProperty; safecall;
    property FastPlayFallbackBehaviourProperty: IDependencyProperty read get_FastPlayFallbackBehaviourProperty;
    property IsCompactProperty: IDependencyProperty read get_IsCompactProperty;
    property IsFastForwardButtonVisibleProperty: IDependencyProperty read get_IsFastForwardButtonVisibleProperty;
    property IsFastForwardEnabledProperty: IDependencyProperty read get_IsFastForwardEnabledProperty;
    property IsFastRewindButtonVisibleProperty: IDependencyProperty read get_IsFastRewindButtonVisibleProperty;
    property IsFastRewindEnabledProperty: IDependencyProperty read get_IsFastRewindEnabledProperty;
    property IsNextTrackButtonVisibleProperty: IDependencyProperty read get_IsNextTrackButtonVisibleProperty;
    property IsPlaybackRateButtonVisibleProperty: IDependencyProperty read get_IsPlaybackRateButtonVisibleProperty;
    property IsPlaybackRateEnabledProperty: IDependencyProperty read get_IsPlaybackRateEnabledProperty;
    property IsPreviousTrackButtonVisibleProperty: IDependencyProperty read get_IsPreviousTrackButtonVisibleProperty;
    property IsRepeatButtonVisibleProperty: IDependencyProperty read get_IsRepeatButtonVisibleProperty;
    property IsRepeatEnabledProperty: IDependencyProperty read get_IsRepeatEnabledProperty;
    property IsSeekBarVisibleProperty: IDependencyProperty read get_IsSeekBarVisibleProperty;
    property IsSeekEnabledProperty: IDependencyProperty read get_IsSeekEnabledProperty;
    property IsSkipBackwardButtonVisibleProperty: IDependencyProperty read get_IsSkipBackwardButtonVisibleProperty;
    property IsSkipBackwardEnabledProperty: IDependencyProperty read get_IsSkipBackwardEnabledProperty;
    property IsSkipForwardButtonVisibleProperty: IDependencyProperty read get_IsSkipForwardButtonVisibleProperty;
    property IsSkipForwardEnabledProperty: IDependencyProperty read get_IsSkipForwardEnabledProperty;
    property IsStopButtonVisibleProperty: IDependencyProperty read get_IsStopButtonVisibleProperty;
    property IsStopEnabledProperty: IDependencyProperty read get_IsStopEnabledProperty;
    property IsVolumeButtonVisibleProperty: IDependencyProperty read get_IsVolumeButtonVisibleProperty;
    property IsVolumeEnabledProperty: IDependencyProperty read get_IsVolumeEnabledProperty;
    property IsZoomButtonVisibleProperty: IDependencyProperty read get_IsZoomButtonVisibleProperty;
    property IsZoomEnabledProperty: IDependencyProperty read get_IsZoomEnabledProperty;
    property ShowAndHideAutomaticallyProperty: IDependencyProperty read get_ShowAndHideAutomaticallyProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IMenuBarFactory
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_MenuBar)]
  IMenuBarFactory = interface(IInspectable)
  ['{76AA8759-04EE-5A4C-B98C-D03742D47CDB}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IMenuBar; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IMenuBarItemFactory
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_MenuBarItem)]
  IMenuBarItemFactory = interface(IInspectable)
  ['{87D02172-83CB-5459-940F-173F7501B300}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IMenuBarItem; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IMenuBarItemFlyout
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_MenuBarItemFlyout)]
  IMenuBarItemFlyout = interface(IInspectable)
  ['{A412AE4F-C3BC-5679-8D5F-865EB97E83CD}']
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IMenuBarItemFlyoutFactory
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_MenuBarItemFlyout)]
  IMenuBarItemFlyoutFactory = interface(IInspectable)
  ['{F895123E-ED54-5A96-8418-F35E48505D43}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IMenuBarItemFlyout; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IMenuBarItemStatics
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_MenuBarItem)]
  IMenuBarItemStatics = interface(IInspectable)
  ['{C8A33F46-2E1C-5CE0-BC09-4524E68941C8}']
    function get_TitleProperty: IDependencyProperty; safecall;
    function get_ItemsProperty: IDependencyProperty; safecall;
    property ItemsProperty: IDependencyProperty read get_ItemsProperty;
    property TitleProperty: IDependencyProperty read get_TitleProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IMenuBarStatics
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_MenuBar)]
  IMenuBarStatics = interface(IInspectable)
  ['{79AA0B84-5554-5F7C-80D9-7970AA030125}']
    function get_ItemsProperty: IDependencyProperty; safecall;
    property ItemsProperty: IDependencyProperty read get_ItemsProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IMenuFlyout
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_MenuFlyout)]
  IMenuFlyout = interface(IInspectable)
  ['{F4C77C6C-1FA5-5D85-8559-5D02B7D4E5E7}']
    function get_Items: IVector_1__IMenuFlyoutItemBase; safecall;
    function get_MenuFlyoutPresenterStyle: IStyle; safecall;
    procedure put_MenuFlyoutPresenterStyle(value: IStyle); safecall;
    procedure ShowAt(targetElement: IUIElement; point: TPointF); safecall;
    property Items: IVector_1__IMenuFlyoutItemBase read get_Items;
    property MenuFlyoutPresenterStyle: IStyle read get_MenuFlyoutPresenterStyle write put_MenuFlyoutPresenterStyle;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IMenuFlyoutFactory
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_MenuFlyout)]
  IMenuFlyoutFactory = interface(IInspectable)
  ['{A3D225DE-6B35-5442-B6C9-06FD24139A63}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IMenuFlyout; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IMenuFlyoutItemBaseFactory
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_MenuFlyoutItemBase)]
  IMenuFlyoutItemBaseFactory = interface(IInspectable)
  ['{33F4EAD3-AB54-505D-BC5F-45E7C35F20F8}']
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IMenuFlyoutItemFactory
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_MenuFlyoutItem)]
  IMenuFlyoutItemFactory = interface(IInspectable)
  ['{9C3C9A1F-89AF-521A-81A5-8A01DB7A79AF}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IMenuFlyoutItem; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IMenuFlyoutItemStatics
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_MenuFlyoutItem)]
  IMenuFlyoutItemStatics = interface(IInspectable)
  ['{9D7953D6-E6A6-5154-91F4-67F4D6042A4F}']
    function get_TextProperty: IDependencyProperty; safecall;
    function get_CommandProperty: IDependencyProperty; safecall;
    function get_CommandParameterProperty: IDependencyProperty; safecall;
    function get_IconProperty: IDependencyProperty; safecall;
    function get_KeyboardAcceleratorTextOverrideProperty: IDependencyProperty; safecall;
    property CommandParameterProperty: IDependencyProperty read get_CommandParameterProperty;
    property CommandProperty: IDependencyProperty read get_CommandProperty;
    property IconProperty: IDependencyProperty read get_IconProperty;
    property KeyboardAcceleratorTextOverrideProperty: IDependencyProperty read get_KeyboardAcceleratorTextOverrideProperty;
    property TextProperty: IDependencyProperty read get_TextProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IMenuFlyoutPresenterFactory
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_MenuFlyoutPresenter)]
  IMenuFlyoutPresenterFactory = interface(IInspectable)
  ['{0DFB684D-C60D-5771-B490-2C8612C48400}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IMenuFlyoutPresenter; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IMenuFlyoutPresenterStatics
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_MenuFlyoutPresenter)]
  IMenuFlyoutPresenterStatics = interface(IInspectable)
  ['{7DE3D28D-BD8B-5FED-A2E2-B9BEAE56FF24}']
    function get_IsDefaultShadowEnabledProperty: IDependencyProperty; safecall;
    property IsDefaultShadowEnabledProperty: IDependencyProperty read get_IsDefaultShadowEnabledProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IMenuFlyoutSeparator
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_MenuFlyoutSeparator)]
  IMenuFlyoutSeparator = interface(IInspectable)
  ['{3EAF5FD5-935E-5ED7-8D05-F6BAFA936D25}']
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IMenuFlyoutSeparatorFactory
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_MenuFlyoutSeparator)]
  IMenuFlyoutSeparatorFactory = interface(IInspectable)
  ['{26156C9C-95EF-5E55-8342-773FC43BAAC3}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IMenuFlyoutSeparator; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IMenuFlyoutStatics
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_MenuFlyout)]
  IMenuFlyoutStatics = interface(IInspectable)
  ['{6959E683-16F6-5208-84E0-B0BE92D9F6DD}']
    function get_MenuFlyoutPresenterStyleProperty: IDependencyProperty; safecall;
    property MenuFlyoutPresenterStyleProperty: IDependencyProperty read get_MenuFlyoutPresenterStyleProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IMenuFlyoutSubItem
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_MenuFlyoutSubItem)]
  IMenuFlyoutSubItem = interface(IInspectable)
  ['{6B0688C1-47B0-53B5-B6F9-5EC5D6623B84}']
    function get_Items: IVector_1__IMenuFlyoutItemBase; safecall;
    function get_Text: HSTRING; safecall;
    procedure put_Text(value: HSTRING); safecall;
    function get_Icon: IIconElement; safecall;
    procedure put_Icon(value: IIconElement); safecall;
    property Icon: IIconElement read get_Icon write put_Icon;
    property Items: IVector_1__IMenuFlyoutItemBase read get_Items;
    property Text: HSTRING read get_Text write put_Text;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IMenuFlyoutSubItemStatics
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_MenuFlyoutSubItem)]
  IMenuFlyoutSubItemStatics = interface(IInspectable)
  ['{F59A8DDF-804B-5F56-BC42-F27F987DB291}']
    function get_TextProperty: IDependencyProperty; safecall;
    function get_IconProperty: IDependencyProperty; safecall;
    property IconProperty: IDependencyProperty read get_IconProperty;
    property TextProperty: IDependencyProperty read get_TextProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.INavigate
  INavigate = interface(IInspectable)
  ['{DD06F030-5D47-533C-95CF-DE256A0F373A}']
    function Navigate(sourcePageType: Interop_TypeName): Boolean; safecall;
  end;

  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.INavigationViewBackRequestedEventArgs
  INavigationViewBackRequestedEventArgs = interface(IInspectable)
  ['{AE752207-BD1B-5AFA-A872-E9BBAEEA0EDE}']
  end;

  // Generic Delegate for:
  // Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.Controls.INavigationView,Microsoft.UI.Xaml.Controls.INavigationViewBackRequestedEventArgs>
  TypedEventHandler_2__INavigationView__INavigationViewBackRequestedEventArgs_Delegate_Base = interface(IUnknown)
  ['{EC259AD4-686D-5749-BB49-40D4DE4B3EE5}']
    procedure Invoke(sender: INavigationView; args: INavigationViewBackRequestedEventArgs); safecall;
  end;
  // UsedAPI Interface
  // Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.Controls.INavigationView,Microsoft.UI.Xaml.Controls.INavigationViewBackRequestedEventArgs>
  TypedEventHandler_2__INavigationView__INavigationViewBackRequestedEventArgs = interface(TypedEventHandler_2__INavigationView__INavigationViewBackRequestedEventArgs_Delegate_Base)
  ['{0E335595-9E51-56EF-A01C-36B41F92544C}']
  end;

  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.INavigationViewPaneClosingEventArgs
  INavigationViewPaneClosingEventArgs = interface(IInspectable)
  ['{E8643304-6DB4-5AF5-BAC2-62733CA037DA}']
    function get_Cancel: Boolean; safecall;
    procedure put_Cancel(value: Boolean); safecall;
    property Cancel: Boolean read get_Cancel write put_Cancel;
  end;

  // Generic Delegate for:
  // Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.Controls.INavigationView,Microsoft.UI.Xaml.Controls.INavigationViewPaneClosingEventArgs>
  TypedEventHandler_2__INavigationView__INavigationViewPaneClosingEventArgs_Delegate_Base = interface(IUnknown)
  ['{D884E2D1-6F35-5FE8-AE08-E334217343AD}']
    procedure Invoke(sender: INavigationView; args: INavigationViewPaneClosingEventArgs); safecall;
  end;
  // UsedAPI Interface
  // Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.Controls.INavigationView,Microsoft.UI.Xaml.Controls.INavigationViewPaneClosingEventArgs>
  TypedEventHandler_2__INavigationView__INavigationViewPaneClosingEventArgs = interface(TypedEventHandler_2__INavigationView__INavigationViewPaneClosingEventArgs_Delegate_Base)
  ['{8459EC09-8001-5508-8A6A-D6A01FCC96BA}']
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.INavigationViewTemplateSettings
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_NavigationViewTemplateSettings)]
  INavigationViewTemplateSettings = interface(IInspectable)
  ['{BBD25FA5-9C08-5F10-BE20-CB4C1899BD9D}']
    function get_TopPadding: Double; safecall;
    function get_OverflowButtonVisibility: Visibility; safecall;
    function get_PaneToggleButtonVisibility: Visibility; safecall;
    function get_BackButtonVisibility: Visibility; safecall;
    function get_TopPaneVisibility: Visibility; safecall;
    function get_LeftPaneVisibility: Visibility; safecall;
    function get_SingleSelectionFollowsFocus: Boolean; safecall;
    function get_PaneToggleButtonWidth: Double; safecall;
    function get_SmallerPaneToggleButtonWidth: Double; safecall;
    property BackButtonVisibility: Visibility read get_BackButtonVisibility;
    property LeftPaneVisibility: Visibility read get_LeftPaneVisibility;
    property OverflowButtonVisibility: Visibility read get_OverflowButtonVisibility;
    property PaneToggleButtonVisibility: Visibility read get_PaneToggleButtonVisibility;
    property PaneToggleButtonWidth: Double read get_PaneToggleButtonWidth;
    property SingleSelectionFollowsFocus: Boolean read get_SingleSelectionFollowsFocus;
    property SmallerPaneToggleButtonWidth: Double read get_SmallerPaneToggleButtonWidth;
    property TopPadding: Double read get_TopPadding;
    property TopPaneVisibility: Visibility read get_TopPaneVisibility;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.INavigationViewItemBase
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_NavigationViewItemBase)]
  INavigationViewItemBase = interface(IInspectable)
  ['{33586494-AF48-513F-BE4D-F645E8C89005}']
  end;

  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.INavigationViewItemExpandingEventArgs
  INavigationViewItemExpandingEventArgs = interface(IInspectable)
  ['{6F0941BE-E991-52F8-8315-F08389497976}']
    function get_ExpandingItemContainer: INavigationViewItemBase; safecall;
    function get_ExpandingItem: IInspectable; safecall;
    property ExpandingItem: IInspectable read get_ExpandingItem;
    property ExpandingItemContainer: INavigationViewItemBase read get_ExpandingItemContainer;
  end;

  // Generic Delegate for:
  // Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.Controls.INavigationView,Microsoft.UI.Xaml.Controls.INavigationViewItemExpandingEventArgs>
  TypedEventHandler_2__INavigationView__INavigationViewItemExpandingEventArgs_Delegate_Base = interface(IUnknown)
  ['{CC7E73D0-23F9-50A5-89A5-5DBD321B9120}']
    procedure Invoke(sender: INavigationView; args: INavigationViewItemExpandingEventArgs); safecall;
  end;
  // UsedAPI Interface
  // Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.Controls.INavigationView,Microsoft.UI.Xaml.Controls.INavigationViewItemExpandingEventArgs>
  TypedEventHandler_2__INavigationView__INavigationViewItemExpandingEventArgs = interface(TypedEventHandler_2__INavigationView__INavigationViewItemExpandingEventArgs_Delegate_Base)
  ['{AAF577EC-1DA7-5B3F-B852-523E2D6FBCB7}']
  end;

  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.INavigationViewItemCollapsedEventArgs
  INavigationViewItemCollapsedEventArgs = interface(IInspectable)
  ['{B546F6A1-C66F-5DED-B5D7-BED0A26197E3}']
    function get_CollapsedItemContainer: INavigationViewItemBase; safecall;
    function get_CollapsedItem: IInspectable; safecall;
    property CollapsedItem: IInspectable read get_CollapsedItem;
    property CollapsedItemContainer: INavigationViewItemBase read get_CollapsedItemContainer;
  end;

  // Generic Delegate for:
  // Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.Controls.INavigationView,Microsoft.UI.Xaml.Controls.INavigationViewItemCollapsedEventArgs>
  TypedEventHandler_2__INavigationView__INavigationViewItemCollapsedEventArgs_Delegate_Base = interface(IUnknown)
  ['{01EF7A67-9F90-53FD-BB59-520280155E06}']
    procedure Invoke(sender: INavigationView; args: INavigationViewItemCollapsedEventArgs); safecall;
  end;
  // UsedAPI Interface
  // Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.Controls.INavigationView,Microsoft.UI.Xaml.Controls.INavigationViewItemCollapsedEventArgs>
  TypedEventHandler_2__INavigationView__INavigationViewItemCollapsedEventArgs = interface(TypedEventHandler_2__INavigationView__INavigationViewItemCollapsedEventArgs_Delegate_Base)
  ['{AF4072DF-F13E-524B-8C0D-FEF0861B8371}']
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.INavigationView2
  INavigationView2 = interface(IInspectable)
  ['{05B428CF-014C-56DD-896A-A3E7089D73B5}']
    function get_IsBackButtonVisible: NavigationViewBackButtonVisible; safecall;
    procedure put_IsBackButtonVisible(value: NavigationViewBackButtonVisible); safecall;
    function get_IsBackEnabled: Boolean; safecall;
    procedure put_IsBackEnabled(value: Boolean); safecall;
    function get_PaneTitle: HSTRING; safecall;
    procedure put_PaneTitle(value: HSTRING); safecall;
    function add_BackRequested(handler: TypedEventHandler_2__INavigationView__INavigationViewBackRequestedEventArgs): EventRegistrationToken; safecall;
    procedure remove_BackRequested(token: EventRegistrationToken); safecall;
    function add_PaneClosed(handler: TypedEventHandler_2__INavigationView__IInspectable): EventRegistrationToken; safecall;
    procedure remove_PaneClosed(token: EventRegistrationToken); safecall;
    function add_PaneClosing(handler: TypedEventHandler_2__INavigationView__INavigationViewPaneClosingEventArgs): EventRegistrationToken; safecall;
    procedure remove_PaneClosing(token: EventRegistrationToken); safecall;
    function add_PaneOpened(handler: TypedEventHandler_2__INavigationView__IInspectable): EventRegistrationToken; safecall;
    procedure remove_PaneOpened(token: EventRegistrationToken); safecall;
    function add_PaneOpening(handler: TypedEventHandler_2__INavigationView__IInspectable): EventRegistrationToken; safecall;
    procedure remove_PaneOpening(token: EventRegistrationToken); safecall;
    function get_PaneDisplayMode: NavigationViewPaneDisplayMode; safecall;
    procedure put_PaneDisplayMode(value: NavigationViewPaneDisplayMode); safecall;
    function get_PaneHeader: IUIElement; safecall;
    procedure put_PaneHeader(value: IUIElement); safecall;
    function get_PaneCustomContent: IUIElement; safecall;
    procedure put_PaneCustomContent(value: IUIElement); safecall;
    function get_ContentOverlay: IUIElement; safecall;
    procedure put_ContentOverlay(value: IUIElement); safecall;
    function get_IsPaneVisible: Boolean; safecall;
    procedure put_IsPaneVisible(value: Boolean); safecall;
    function get_SelectionFollowsFocus: NavigationViewSelectionFollowsFocus; safecall;
    procedure put_SelectionFollowsFocus(value: NavigationViewSelectionFollowsFocus); safecall;
    function get_TemplateSettings: INavigationViewTemplateSettings; safecall;
    function get_ShoulderNavigationEnabled: NavigationViewShoulderNavigationEnabled; safecall;
    procedure put_ShoulderNavigationEnabled(value: NavigationViewShoulderNavigationEnabled); safecall;
    function get_OverflowLabelMode: NavigationViewOverflowLabelMode; safecall;
    procedure put_OverflowLabelMode(value: NavigationViewOverflowLabelMode); safecall;
    function add_Expanding(handler: TypedEventHandler_2__INavigationView__INavigationViewItemExpandingEventArgs): EventRegistrationToken; safecall;
    procedure remove_Expanding(token: EventRegistrationToken); safecall;
    function add_Collapsed(handler: TypedEventHandler_2__INavigationView__INavigationViewItemCollapsedEventArgs): EventRegistrationToken; safecall;
    procedure remove_Collapsed(token: EventRegistrationToken); safecall;
    procedure Expand(item: INavigationViewItem); safecall;
    procedure Collapse(item: INavigationViewItem); safecall;
    property ContentOverlay: IUIElement read get_ContentOverlay write put_ContentOverlay;
    property IsBackButtonVisible: NavigationViewBackButtonVisible read get_IsBackButtonVisible write put_IsBackButtonVisible;
    property IsBackEnabled: Boolean read get_IsBackEnabled write put_IsBackEnabled;
    property IsPaneVisible: Boolean read get_IsPaneVisible write put_IsPaneVisible;
    property OverflowLabelMode: NavigationViewOverflowLabelMode read get_OverflowLabelMode write put_OverflowLabelMode;
    property PaneCustomContent: IUIElement read get_PaneCustomContent write put_PaneCustomContent;
    property PaneDisplayMode: NavigationViewPaneDisplayMode read get_PaneDisplayMode write put_PaneDisplayMode;
    property PaneHeader: IUIElement read get_PaneHeader write put_PaneHeader;
    property PaneTitle: HSTRING read get_PaneTitle write put_PaneTitle;
    property SelectionFollowsFocus: NavigationViewSelectionFollowsFocus read get_SelectionFollowsFocus write put_SelectionFollowsFocus;
    property ShoulderNavigationEnabled: NavigationViewShoulderNavigationEnabled read get_ShoulderNavigationEnabled write put_ShoulderNavigationEnabled;
    property TemplateSettings: INavigationViewTemplateSettings read get_TemplateSettings;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.INavigationViewFactory
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_NavigationView)]
  INavigationViewFactory = interface(IInspectable)
  ['{FFEA1ADA-9232-5507-A320-ED2FADBE6127}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): INavigationView; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.INavigationViewItem2
  INavigationViewItem2 = interface(IInspectable)
  ['{2D5BD889-9DAC-5675-B254-68226F077A61}']
    function get_SelectsOnInvoked: Boolean; safecall;
    procedure put_SelectsOnInvoked(value: Boolean); safecall;
    function get_IsExpanded: Boolean; safecall;
    procedure put_IsExpanded(value: Boolean); safecall;
    function get_HasUnrealizedChildren: Boolean; safecall;
    procedure put_HasUnrealizedChildren(value: Boolean); safecall;
    function get_IsChildSelected: Boolean; safecall;
    procedure put_IsChildSelected(value: Boolean); safecall;
    function get_MenuItems: IVector_1__IInspectable; safecall;
    function get_MenuItemsSource: IInspectable; safecall;
    procedure put_MenuItemsSource(value: IInspectable); safecall;
    property HasUnrealizedChildren: Boolean read get_HasUnrealizedChildren write put_HasUnrealizedChildren;
    property IsChildSelected: Boolean read get_IsChildSelected write put_IsChildSelected;
    property IsExpanded: Boolean read get_IsExpanded write put_IsExpanded;
    property MenuItems: IVector_1__IInspectable read get_MenuItems;
    property MenuItemsSource: IInspectable read get_MenuItemsSource write put_MenuItemsSource;
    property SelectsOnInvoked: Boolean read get_SelectsOnInvoked write put_SelectsOnInvoked;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.INavigationViewItem3
  INavigationViewItem3 = interface(IInspectable)
  ['{C6AA3120-D888-5C32-8BB7-490EC91B1AEC}']
    function get_InfoBadge: IInfoBadge; safecall;
    procedure put_InfoBadge(value: IInfoBadge); safecall;
    property InfoBadge: IInfoBadge read get_InfoBadge write put_InfoBadge;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.INavigationViewItemBase2
  INavigationViewItemBase2 = interface(IInspectable)
  ['{D94EE683-D437-5523-9C5C-11D4804E471E}']
    function get_IsSelected: Boolean; safecall;
    procedure put_IsSelected(value: Boolean); safecall;
    property IsSelected: Boolean read get_IsSelected write put_IsSelected;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.INavigationViewItemBaseFactory
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_NavigationViewItemBase)]
  INavigationViewItemBaseFactory = interface(IInspectable)
  ['{31B9D7B1-7C38-5916-99C6-C71F6B012B1B}']
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.INavigationViewItemBaseStatics
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_NavigationViewItemBase)]
  INavigationViewItemBaseStatics = interface(IInspectable)
  ['{71A0C438-F0C2-5093-8906-C1C3C02DE791}']
    function get_IsSelectedProperty: IDependencyProperty; safecall;
    property IsSelectedProperty: IDependencyProperty read get_IsSelectedProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.INavigationViewItemFactory
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_NavigationViewItem)]
  INavigationViewItemFactory = interface(IInspectable)
  ['{DE60A001-9385-5535-80E1-2B68F4BFDE26}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): INavigationViewItem; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.INavigationViewItemHeader
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_NavigationViewItemHeader)]
  INavigationViewItemHeader = interface(IInspectable)
  ['{432BC062-45BC-57EF-A2D3-11851A56A882}']
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.INavigationViewItemHeaderFactory
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_NavigationViewItemHeader)]
  INavigationViewItemHeaderFactory = interface(IInspectable)
  ['{6A5447CD-2918-5FE3-899B-93D6961285E6}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): INavigationViewItemHeader; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.INavigationViewItemInvokedEventArgs2
  INavigationViewItemInvokedEventArgs2 = interface(IInspectable)
  ['{E1CBB99F-19EB-5C7B-B982-854BB08D5EB7}']
    function get_InvokedItemContainer: INavigationViewItemBase; safecall;
    function get_RecommendedNavigationTransitionInfo: Animation_INavigationTransitionInfo; safecall;
    property InvokedItemContainer: INavigationViewItemBase read get_InvokedItemContainer;
    property RecommendedNavigationTransitionInfo: Animation_INavigationTransitionInfo read get_RecommendedNavigationTransitionInfo;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.INavigationViewItemSeparator
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_NavigationViewItemSeparator)]
  INavigationViewItemSeparator = interface(IInspectable)
  ['{E3C35630-1D5F-5689-A0CB-8794485CAACF}']
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.INavigationViewItemSeparatorFactory
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_NavigationViewItemSeparator)]
  INavigationViewItemSeparatorFactory = interface(IInspectable)
  ['{181266A1-D4F8-5AF7-810B-AEE8A1D452ED}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): INavigationViewItemSeparator; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.INavigationViewItemStatics
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_NavigationViewItem)]
  INavigationViewItemStatics = interface(IInspectable)
  ['{7B6198E5-0714-531C-A056-21B3CA40EC1A}']
    function get_IconProperty: IDependencyProperty; safecall;
    function get_CompactPaneLengthProperty: IDependencyProperty; safecall;
    property CompactPaneLengthProperty: IDependencyProperty read get_CompactPaneLengthProperty;
    property IconProperty: IDependencyProperty read get_IconProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.INavigationViewItemStatics2
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_NavigationViewItem)]
  INavigationViewItemStatics2 = interface(IInspectable)
  ['{D49D016F-ABD0-51F3-ACF0-118ECCEEA760}']
    function get_SelectsOnInvokedProperty: IDependencyProperty; safecall;
    function get_IsExpandedProperty: IDependencyProperty; safecall;
    function get_HasUnrealizedChildrenProperty: IDependencyProperty; safecall;
    function get_IsChildSelectedProperty: IDependencyProperty; safecall;
    function get_MenuItemsProperty: IDependencyProperty; safecall;
    function get_MenuItemsSourceProperty: IDependencyProperty; safecall;
    property HasUnrealizedChildrenProperty: IDependencyProperty read get_HasUnrealizedChildrenProperty;
    property IsChildSelectedProperty: IDependencyProperty read get_IsChildSelectedProperty;
    property IsExpandedProperty: IDependencyProperty read get_IsExpandedProperty;
    property MenuItemsProperty: IDependencyProperty read get_MenuItemsProperty;
    property MenuItemsSourceProperty: IDependencyProperty read get_MenuItemsSourceProperty;
    property SelectsOnInvokedProperty: IDependencyProperty read get_SelectsOnInvokedProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.INavigationViewItemStatics3
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_NavigationViewItem)]
  INavigationViewItemStatics3 = interface(IInspectable)
  ['{957BEB66-D33A-53AA-A518-7D426BB9B177}']
    function get_InfoBadgeProperty: IDependencyProperty; safecall;
    property InfoBadgeProperty: IDependencyProperty read get_InfoBadgeProperty;
  end;

  // Microsoft.UI.Xaml.Controls.INavigationViewSelectionChangedEventArgs2
  INavigationViewSelectionChangedEventArgs2 = interface(IInspectable)
  ['{E9B5191F-1AD1-5366-BC1A-90B96076D49E}']
    function get_SelectedItemContainer: INavigationViewItemBase; safecall;
    function get_RecommendedNavigationTransitionInfo: Animation_INavigationTransitionInfo; safecall;
    property RecommendedNavigationTransitionInfo: Animation_INavigationTransitionInfo read get_RecommendedNavigationTransitionInfo;
    property SelectedItemContainer: INavigationViewItemBase read get_SelectedItemContainer;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.INavigationViewStatics
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_NavigationView)]
  INavigationViewStatics = interface(IInspectable)
  ['{DCD04CAF-1904-564B-B0DE-BABAFF9962F5}']
    function get_IsPaneOpenProperty: IDependencyProperty; safecall;
    function get_CompactModeThresholdWidthProperty: IDependencyProperty; safecall;
    function get_ExpandedModeThresholdWidthProperty: IDependencyProperty; safecall;
    function get_FooterMenuItemsProperty: IDependencyProperty; safecall;
    function get_FooterMenuItemsSourceProperty: IDependencyProperty; safecall;
    function get_PaneFooterProperty: IDependencyProperty; safecall;
    function get_HeaderProperty: IDependencyProperty; safecall;
    function get_HeaderTemplateProperty: IDependencyProperty; safecall;
    function get_DisplayModeProperty: IDependencyProperty; safecall;
    function get_IsSettingsVisibleProperty: IDependencyProperty; safecall;
    function get_IsPaneToggleButtonVisibleProperty: IDependencyProperty; safecall;
    function get_AlwaysShowHeaderProperty: IDependencyProperty; safecall;
    function get_CompactPaneLengthProperty: IDependencyProperty; safecall;
    function get_OpenPaneLengthProperty: IDependencyProperty; safecall;
    function get_PaneToggleButtonStyleProperty: IDependencyProperty; safecall;
    function get_MenuItemsProperty: IDependencyProperty; safecall;
    function get_MenuItemsSourceProperty: IDependencyProperty; safecall;
    function get_SelectedItemProperty: IDependencyProperty; safecall;
    function get_SettingsItemProperty: IDependencyProperty; safecall;
    function get_AutoSuggestBoxProperty: IDependencyProperty; safecall;
    function get_MenuItemTemplateProperty: IDependencyProperty; safecall;
    function get_MenuItemTemplateSelectorProperty: IDependencyProperty; safecall;
    function get_MenuItemContainerStyleProperty: IDependencyProperty; safecall;
    function get_MenuItemContainerStyleSelectorProperty: IDependencyProperty; safecall;
    function get_IsTitleBarAutoPaddingEnabledProperty: IDependencyProperty; safecall;
    property AlwaysShowHeaderProperty: IDependencyProperty read get_AlwaysShowHeaderProperty;
    property AutoSuggestBoxProperty: IDependencyProperty read get_AutoSuggestBoxProperty;
    property CompactModeThresholdWidthProperty: IDependencyProperty read get_CompactModeThresholdWidthProperty;
    property CompactPaneLengthProperty: IDependencyProperty read get_CompactPaneLengthProperty;
    property DisplayModeProperty: IDependencyProperty read get_DisplayModeProperty;
    property ExpandedModeThresholdWidthProperty: IDependencyProperty read get_ExpandedModeThresholdWidthProperty;
    property FooterMenuItemsProperty: IDependencyProperty read get_FooterMenuItemsProperty;
    property FooterMenuItemsSourceProperty: IDependencyProperty read get_FooterMenuItemsSourceProperty;
    property HeaderProperty: IDependencyProperty read get_HeaderProperty;
    property HeaderTemplateProperty: IDependencyProperty read get_HeaderTemplateProperty;
    property IsPaneOpenProperty: IDependencyProperty read get_IsPaneOpenProperty;
    property IsPaneToggleButtonVisibleProperty: IDependencyProperty read get_IsPaneToggleButtonVisibleProperty;
    property IsSettingsVisibleProperty: IDependencyProperty read get_IsSettingsVisibleProperty;
    property IsTitleBarAutoPaddingEnabledProperty: IDependencyProperty read get_IsTitleBarAutoPaddingEnabledProperty;
    property MenuItemContainerStyleProperty: IDependencyProperty read get_MenuItemContainerStyleProperty;
    property MenuItemContainerStyleSelectorProperty: IDependencyProperty read get_MenuItemContainerStyleSelectorProperty;
    property MenuItemTemplateProperty: IDependencyProperty read get_MenuItemTemplateProperty;
    property MenuItemTemplateSelectorProperty: IDependencyProperty read get_MenuItemTemplateSelectorProperty;
    property MenuItemsProperty: IDependencyProperty read get_MenuItemsProperty;
    property MenuItemsSourceProperty: IDependencyProperty read get_MenuItemsSourceProperty;
    property OpenPaneLengthProperty: IDependencyProperty read get_OpenPaneLengthProperty;
    property PaneFooterProperty: IDependencyProperty read get_PaneFooterProperty;
    property PaneToggleButtonStyleProperty: IDependencyProperty read get_PaneToggleButtonStyleProperty;
    property SelectedItemProperty: IDependencyProperty read get_SelectedItemProperty;
    property SettingsItemProperty: IDependencyProperty read get_SettingsItemProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.INavigationViewStatics2
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_NavigationView)]
  INavigationViewStatics2 = interface(IInspectable)
  ['{79588150-4A1B-5E7C-9F8A-EBC814CE773D}']
    function get_IsBackButtonVisibleProperty: IDependencyProperty; safecall;
    function get_IsBackEnabledProperty: IDependencyProperty; safecall;
    function get_PaneTitleProperty: IDependencyProperty; safecall;
    function get_PaneDisplayModeProperty: IDependencyProperty; safecall;
    function get_PaneHeaderProperty: IDependencyProperty; safecall;
    function get_PaneCustomContentProperty: IDependencyProperty; safecall;
    function get_ContentOverlayProperty: IDependencyProperty; safecall;
    function get_IsPaneVisibleProperty: IDependencyProperty; safecall;
    function get_SelectionFollowsFocusProperty: IDependencyProperty; safecall;
    function get_TemplateSettingsProperty: IDependencyProperty; safecall;
    function get_ShoulderNavigationEnabledProperty: IDependencyProperty; safecall;
    function get_OverflowLabelModeProperty: IDependencyProperty; safecall;
    property ContentOverlayProperty: IDependencyProperty read get_ContentOverlayProperty;
    property IsBackButtonVisibleProperty: IDependencyProperty read get_IsBackButtonVisibleProperty;
    property IsBackEnabledProperty: IDependencyProperty read get_IsBackEnabledProperty;
    property IsPaneVisibleProperty: IDependencyProperty read get_IsPaneVisibleProperty;
    property OverflowLabelModeProperty: IDependencyProperty read get_OverflowLabelModeProperty;
    property PaneCustomContentProperty: IDependencyProperty read get_PaneCustomContentProperty;
    property PaneDisplayModeProperty: IDependencyProperty read get_PaneDisplayModeProperty;
    property PaneHeaderProperty: IDependencyProperty read get_PaneHeaderProperty;
    property PaneTitleProperty: IDependencyProperty read get_PaneTitleProperty;
    property SelectionFollowsFocusProperty: IDependencyProperty read get_SelectionFollowsFocusProperty;
    property ShoulderNavigationEnabledProperty: IDependencyProperty read get_ShoulderNavigationEnabledProperty;
    property TemplateSettingsProperty: IDependencyProperty read get_TemplateSettingsProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.INavigationViewTemplateSettings2
  INavigationViewTemplateSettings2 = interface(IInspectable)
  ['{56BEC72F-1DE1-5060-A44C-187885DF2973}']
    function get_OpenPaneLength: Double; safecall;
    property OpenPaneLength: Double read get_OpenPaneLength;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.INavigationViewTemplateSettingsFactory
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_NavigationViewTemplateSettings)]
  INavigationViewTemplateSettingsFactory = interface(IInspectable)
  ['{34FF6C94-6465-5F3E-B0A5-4F1EEA48E743}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): INavigationViewTemplateSettings; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.INavigationViewTemplateSettingsStatics
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_NavigationViewTemplateSettings)]
  INavigationViewTemplateSettingsStatics = interface(IInspectable)
  ['{BE3A88D6-D19B-5543-8B72-D42B459E72ED}']
    function get_TopPaddingProperty: IDependencyProperty; safecall;
    function get_OverflowButtonVisibilityProperty: IDependencyProperty; safecall;
    function get_PaneToggleButtonVisibilityProperty: IDependencyProperty; safecall;
    function get_BackButtonVisibilityProperty: IDependencyProperty; safecall;
    function get_TopPaneVisibilityProperty: IDependencyProperty; safecall;
    function get_LeftPaneVisibilityProperty: IDependencyProperty; safecall;
    function get_SingleSelectionFollowsFocusProperty: IDependencyProperty; safecall;
    function get_PaneToggleButtonWidthProperty: IDependencyProperty; safecall;
    function get_SmallerPaneToggleButtonWidthProperty: IDependencyProperty; safecall;
    property BackButtonVisibilityProperty: IDependencyProperty read get_BackButtonVisibilityProperty;
    property LeftPaneVisibilityProperty: IDependencyProperty read get_LeftPaneVisibilityProperty;
    property OverflowButtonVisibilityProperty: IDependencyProperty read get_OverflowButtonVisibilityProperty;
    property PaneToggleButtonVisibilityProperty: IDependencyProperty read get_PaneToggleButtonVisibilityProperty;
    property PaneToggleButtonWidthProperty: IDependencyProperty read get_PaneToggleButtonWidthProperty;
    property SingleSelectionFollowsFocusProperty: IDependencyProperty read get_SingleSelectionFollowsFocusProperty;
    property SmallerPaneToggleButtonWidthProperty: IDependencyProperty read get_SmallerPaneToggleButtonWidthProperty;
    property TopPaddingProperty: IDependencyProperty read get_TopPaddingProperty;
    property TopPaneVisibilityProperty: IDependencyProperty read get_TopPaneVisibilityProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.INavigationViewTemplateSettingsStatics2
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_NavigationViewTemplateSettings)]
  INavigationViewTemplateSettingsStatics2 = interface(IInspectable)
  ['{C0C06BE3-9203-5EEA-91DC-5D812A9702A6}']
    function get_OpenPaneLengthProperty: IDependencyProperty; safecall;
    property OpenPaneLengthProperty: IDependencyProperty read get_OpenPaneLengthProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.INonVirtualizingLayout
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_NonVirtualizingLayout)]
  INonVirtualizingLayout = interface(IInspectable)
  ['{0C24DEFD-F68F-51D9-998E-4CBAD48BE012}']
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.INonVirtualizingLayoutContext
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_NonVirtualizingLayoutContext)]
  INonVirtualizingLayoutContext = interface(IInspectable)
  ['{1E378538-F33C-5410-82CC-CA6F06D5E259}']
    function get_Children: IVectorView_1__IUIElement; safecall;
    property Children: IVectorView_1__IUIElement read get_Children;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.INonVirtualizingLayoutContextFactory
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_NonVirtualizingLayoutContext)]
  INonVirtualizingLayoutContextFactory = interface(IInspectable)
  ['{DABAC020-189C-5BBF-A4DC-97DA1199F577}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): INonVirtualizingLayoutContext; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.INonVirtualizingLayoutContextOverrides
  INonVirtualizingLayoutContextOverrides = interface(IInspectable)
  ['{995CF544-5D3F-5F44-B537-FD13650C745C}']
    function get_ChildrenCore: IVectorView_1__IUIElement; safecall;
    property ChildrenCore: IVectorView_1__IUIElement read get_ChildrenCore;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.INonVirtualizingLayoutFactory
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_NonVirtualizingLayout)]
  INonVirtualizingLayoutFactory = interface(IInspectable)
  ['{A16D2D12-DBAC-5CE0-AEF5-09171A4D3571}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): INonVirtualizingLayout; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.INonVirtualizingLayoutOverrides
  INonVirtualizingLayoutOverrides = interface(IInspectable)
  ['{3C28B831-35C1-5182-A843-A43F339B6687}']
    procedure InitializeForContextCore(context: INonVirtualizingLayoutContext); safecall;
    procedure UninitializeForContextCore(context: INonVirtualizingLayoutContext); safecall;
    function MeasureOverride(context: INonVirtualizingLayoutContext; availableSize: TSizeF): TSizeF; safecall;
    function ArrangeOverride(context: INonVirtualizingLayoutContext; finalSize: TSizeF): TSizeF; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.INumberBoxFactory
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_NumberBox)]
  INumberBoxFactory = interface(IInspectable)
  ['{6B81F3CB-45A4-5D19-9BBB-A9FE4656AC4D}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): INumberBox; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.INumberBoxStatics
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_NumberBox)]
  INumberBoxStatics = interface(IInspectable)
  ['{251EC05C-A77C-5540-BE39-6053F797CDE7}']
    function get_MinimumProperty: IDependencyProperty; safecall;
    function get_MaximumProperty: IDependencyProperty; safecall;
    function get_ValueProperty: IDependencyProperty; safecall;
    function get_SmallChangeProperty: IDependencyProperty; safecall;
    function get_LargeChangeProperty: IDependencyProperty; safecall;
    function get_TextProperty: IDependencyProperty; safecall;
    function get_HeaderProperty: IDependencyProperty; safecall;
    function get_HeaderTemplateProperty: IDependencyProperty; safecall;
    function get_PlaceholderTextProperty: IDependencyProperty; safecall;
    function get_SelectionFlyoutProperty: IDependencyProperty; safecall;
    function get_SelectionHighlightColorProperty: IDependencyProperty; safecall;
    function get_TextReadingOrderProperty: IDependencyProperty; safecall;
    function get_PreventKeyboardDisplayOnProgrammaticFocusProperty: IDependencyProperty; safecall;
    function get_DescriptionProperty: IDependencyProperty; safecall;
    function get_ValidationModeProperty: IDependencyProperty; safecall;
    function get_SpinButtonPlacementModeProperty: IDependencyProperty; safecall;
    function get_IsWrapEnabledProperty: IDependencyProperty; safecall;
    function get_AcceptsExpressionProperty: IDependencyProperty; safecall;
    function get_NumberFormatterProperty: IDependencyProperty; safecall;
    property AcceptsExpressionProperty: IDependencyProperty read get_AcceptsExpressionProperty;
    property DescriptionProperty: IDependencyProperty read get_DescriptionProperty;
    property HeaderProperty: IDependencyProperty read get_HeaderProperty;
    property HeaderTemplateProperty: IDependencyProperty read get_HeaderTemplateProperty;
    property IsWrapEnabledProperty: IDependencyProperty read get_IsWrapEnabledProperty;
    property LargeChangeProperty: IDependencyProperty read get_LargeChangeProperty;
    property MaximumProperty: IDependencyProperty read get_MaximumProperty;
    property MinimumProperty: IDependencyProperty read get_MinimumProperty;
    property NumberFormatterProperty: IDependencyProperty read get_NumberFormatterProperty;
    property PlaceholderTextProperty: IDependencyProperty read get_PlaceholderTextProperty;
    property PreventKeyboardDisplayOnProgrammaticFocusProperty: IDependencyProperty read get_PreventKeyboardDisplayOnProgrammaticFocusProperty;
    property SelectionFlyoutProperty: IDependencyProperty read get_SelectionFlyoutProperty;
    property SelectionHighlightColorProperty: IDependencyProperty read get_SelectionHighlightColorProperty;
    property SmallChangeProperty: IDependencyProperty read get_SmallChangeProperty;
    property SpinButtonPlacementModeProperty: IDependencyProperty read get_SpinButtonPlacementModeProperty;
    property TextProperty: IDependencyProperty read get_TextProperty;
    property TextReadingOrderProperty: IDependencyProperty read get_TextReadingOrderProperty;
    property ValidationModeProperty: IDependencyProperty read get_ValidationModeProperty;
    property ValueProperty: IDependencyProperty read get_ValueProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IPage
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_Page)]
  IPage = interface(IInspectable)
  ['{EB42988E-6CB5-5DD6-9E59-4C04E5CAEC6D}']
    function get_Frame: IFrame; safecall;
    function get_NavigationCacheMode: Navigation_NavigationCacheMode; safecall;
    procedure put_NavigationCacheMode(value: Navigation_NavigationCacheMode); safecall;
    function get_TopAppBar: IAppBar; safecall;
    procedure put_TopAppBar(value: IAppBar); safecall;
    function get_BottomAppBar: IAppBar; safecall;
    procedure put_BottomAppBar(value: IAppBar); safecall;
    property BottomAppBar: IAppBar read get_BottomAppBar write put_BottomAppBar;
    property Frame: IFrame read get_Frame;
    property NavigationCacheMode: Navigation_NavigationCacheMode read get_NavigationCacheMode write put_NavigationCacheMode;
    property TopAppBar: IAppBar read get_TopAppBar write put_TopAppBar;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IPageFactory
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_Page)]
  IPageFactory = interface(IInspectable)
  ['{FF4357D5-DDCD-5129-9D0F-D8AED2ADC1A9}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IPage; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IPageOverrides
  IPageOverrides = interface(IInspectable)
  ['{9B8445F7-D938-5626-850A-86E91CA89E98}']
    procedure OnNavigatedFrom(e: Navigation_INavigationEventArgs); safecall;
    procedure OnNavigatedTo(e: Navigation_INavigationEventArgs); safecall;
    procedure OnNavigatingFrom(e: Navigation_INavigatingCancelEventArgs); safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IPageStatics
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_Page)]
  IPageStatics = interface(IInspectable)
  ['{B6241486-A374-5D09-A01F-9ABE311C0884}']
    function get_FrameProperty: IDependencyProperty; safecall;
    function get_TopAppBarProperty: IDependencyProperty; safecall;
    function get_BottomAppBarProperty: IDependencyProperty; safecall;
    property BottomAppBarProperty: IDependencyProperty read get_BottomAppBarProperty;
    property FrameProperty: IDependencyProperty read get_FrameProperty;
    property TopAppBarProperty: IDependencyProperty read get_TopAppBarProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IPanelFactory
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_Panel)]
  IPanelFactory = interface(IInspectable)
  ['{F5E7E21C-4C97-5D20-BEE6-3E4FC6AB14E9}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IPanel; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IPanelStatics
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_Panel)]
  IPanelStatics = interface(IInspectable)
  ['{76A9CAA7-A5D4-5061-A325-17C76F66DE51}']
    function get_BackgroundProperty: IDependencyProperty; safecall;
    function get_IsItemsHostProperty: IDependencyProperty; safecall;
    function get_ChildrenTransitionsProperty: IDependencyProperty; safecall;
    property BackgroundProperty: IDependencyProperty read get_BackgroundProperty;
    property ChildrenTransitionsProperty: IDependencyProperty read get_ChildrenTransitionsProperty;
    property IsItemsHostProperty: IDependencyProperty read get_IsItemsHostProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IParallaxView
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_ParallaxView)]
  IParallaxView = interface(IInspectable)
  ['{E6F4A919-1116-53AE-96C6-EFDDC59786F3}']
    function get_Child: IUIElement; safecall;
    procedure put_Child(value: IUIElement); safecall;
    function get_HorizontalShift: Double; safecall;
    procedure put_HorizontalShift(value: Double); safecall;
    function get_HorizontalSourceEndOffset: Double; safecall;
    procedure put_HorizontalSourceEndOffset(value: Double); safecall;
    function get_HorizontalSourceOffsetKind: ParallaxSourceOffsetKind; safecall;
    procedure put_HorizontalSourceOffsetKind(value: ParallaxSourceOffsetKind); safecall;
    function get_HorizontalSourceStartOffset: Double; safecall;
    procedure put_HorizontalSourceStartOffset(value: Double); safecall;
    function get_IsHorizontalShiftClamped: Boolean; safecall;
    procedure put_IsHorizontalShiftClamped(value: Boolean); safecall;
    function get_IsVerticalShiftClamped: Boolean; safecall;
    procedure put_IsVerticalShiftClamped(value: Boolean); safecall;
    function get_MaxHorizontalShiftRatio: Double; safecall;
    procedure put_MaxHorizontalShiftRatio(value: Double); safecall;
    function get_MaxVerticalShiftRatio: Double; safecall;
    procedure put_MaxVerticalShiftRatio(value: Double); safecall;
    function get_Source: IUIElement; safecall;
    procedure put_Source(value: IUIElement); safecall;
    function get_VerticalShift: Double; safecall;
    procedure put_VerticalShift(value: Double); safecall;
    function get_VerticalSourceEndOffset: Double; safecall;
    procedure put_VerticalSourceEndOffset(value: Double); safecall;
    function get_VerticalSourceOffsetKind: ParallaxSourceOffsetKind; safecall;
    procedure put_VerticalSourceOffsetKind(value: ParallaxSourceOffsetKind); safecall;
    function get_VerticalSourceStartOffset: Double; safecall;
    procedure put_VerticalSourceStartOffset(value: Double); safecall;
    procedure RefreshAutomaticHorizontalOffsets; safecall;
    procedure RefreshAutomaticVerticalOffsets; safecall;
    property Child: IUIElement read get_Child write put_Child;
    property HorizontalShift: Double read get_HorizontalShift write put_HorizontalShift;
    property HorizontalSourceEndOffset: Double read get_HorizontalSourceEndOffset write put_HorizontalSourceEndOffset;
    property HorizontalSourceOffsetKind: ParallaxSourceOffsetKind read get_HorizontalSourceOffsetKind write put_HorizontalSourceOffsetKind;
    property HorizontalSourceStartOffset: Double read get_HorizontalSourceStartOffset write put_HorizontalSourceStartOffset;
    property IsHorizontalShiftClamped: Boolean read get_IsHorizontalShiftClamped write put_IsHorizontalShiftClamped;
    property IsVerticalShiftClamped: Boolean read get_IsVerticalShiftClamped write put_IsVerticalShiftClamped;
    property MaxHorizontalShiftRatio: Double read get_MaxHorizontalShiftRatio write put_MaxHorizontalShiftRatio;
    property MaxVerticalShiftRatio: Double read get_MaxVerticalShiftRatio write put_MaxVerticalShiftRatio;
    property Source: IUIElement read get_Source write put_Source;
    property VerticalShift: Double read get_VerticalShift write put_VerticalShift;
    property VerticalSourceEndOffset: Double read get_VerticalSourceEndOffset write put_VerticalSourceEndOffset;
    property VerticalSourceOffsetKind: ParallaxSourceOffsetKind read get_VerticalSourceOffsetKind write put_VerticalSourceOffsetKind;
    property VerticalSourceStartOffset: Double read get_VerticalSourceStartOffset write put_VerticalSourceStartOffset;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IParallaxViewFactory
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_ParallaxView)]
  IParallaxViewFactory = interface(IInspectable)
  ['{61DC973D-C595-5261-A9B7-35F41042EB00}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IParallaxView; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IParallaxViewStatics
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_ParallaxView)]
  IParallaxViewStatics = interface(IInspectable)
  ['{69211861-40BA-5083-8835-416F40D4C5EB}']
    function get_ChildProperty: IDependencyProperty; safecall;
    function get_HorizontalSourceEndOffsetProperty: IDependencyProperty; safecall;
    function get_HorizontalSourceOffsetKindProperty: IDependencyProperty; safecall;
    function get_HorizontalSourceStartOffsetProperty: IDependencyProperty; safecall;
    function get_MaxHorizontalShiftRatioProperty: IDependencyProperty; safecall;
    function get_HorizontalShiftProperty: IDependencyProperty; safecall;
    function get_IsHorizontalShiftClampedProperty: IDependencyProperty; safecall;
    function get_IsVerticalShiftClampedProperty: IDependencyProperty; safecall;
    function get_SourceProperty: IDependencyProperty; safecall;
    function get_VerticalSourceEndOffsetProperty: IDependencyProperty; safecall;
    function get_VerticalSourceOffsetKindProperty: IDependencyProperty; safecall;
    function get_VerticalSourceStartOffsetProperty: IDependencyProperty; safecall;
    function get_MaxVerticalShiftRatioProperty: IDependencyProperty; safecall;
    function get_VerticalShiftProperty: IDependencyProperty; safecall;
    property ChildProperty: IDependencyProperty read get_ChildProperty;
    property HorizontalShiftProperty: IDependencyProperty read get_HorizontalShiftProperty;
    property HorizontalSourceEndOffsetProperty: IDependencyProperty read get_HorizontalSourceEndOffsetProperty;
    property HorizontalSourceOffsetKindProperty: IDependencyProperty read get_HorizontalSourceOffsetKindProperty;
    property HorizontalSourceStartOffsetProperty: IDependencyProperty read get_HorizontalSourceStartOffsetProperty;
    property IsHorizontalShiftClampedProperty: IDependencyProperty read get_IsHorizontalShiftClampedProperty;
    property IsVerticalShiftClampedProperty: IDependencyProperty read get_IsVerticalShiftClampedProperty;
    property MaxHorizontalShiftRatioProperty: IDependencyProperty read get_MaxHorizontalShiftRatioProperty;
    property MaxVerticalShiftRatioProperty: IDependencyProperty read get_MaxVerticalShiftRatioProperty;
    property SourceProperty: IDependencyProperty read get_SourceProperty;
    property VerticalShiftProperty: IDependencyProperty read get_VerticalShiftProperty;
    property VerticalSourceEndOffsetProperty: IDependencyProperty read get_VerticalSourceEndOffsetProperty;
    property VerticalSourceOffsetKindProperty: IDependencyProperty read get_VerticalSourceOffsetKindProperty;
    property VerticalSourceStartOffsetProperty: IDependencyProperty read get_VerticalSourceStartOffsetProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IPasswordBoxStatics
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_PasswordBox)]
  IPasswordBoxStatics = interface(IInspectable)
  ['{90E6559C-5F74-5CD1-87B6-C0514085AB42}']
    function get_PasswordProperty: IDependencyProperty; safecall;
    function get_PasswordCharProperty: IDependencyProperty; safecall;
    function get_IsPasswordRevealButtonEnabledProperty: IDependencyProperty; safecall;
    function get_MaxLengthProperty: IDependencyProperty; safecall;
    function get_HeaderProperty: IDependencyProperty; safecall;
    function get_HeaderTemplateProperty: IDependencyProperty; safecall;
    function get_PlaceholderTextProperty: IDependencyProperty; safecall;
    function get_SelectionHighlightColorProperty: IDependencyProperty; safecall;
    function get_PreventKeyboardDisplayOnProgrammaticFocusProperty: IDependencyProperty; safecall;
    function get_PasswordRevealModeProperty: IDependencyProperty; safecall;
    function get_TextReadingOrderProperty: IDependencyProperty; safecall;
    function get_InputScopeProperty: IDependencyProperty; safecall;
    function get_CanPasteClipboardContentProperty: IDependencyProperty; safecall;
    function get_SelectionFlyoutProperty: IDependencyProperty; safecall;
    function get_DescriptionProperty: IDependencyProperty; safecall;
    property CanPasteClipboardContentProperty: IDependencyProperty read get_CanPasteClipboardContentProperty;
    property DescriptionProperty: IDependencyProperty read get_DescriptionProperty;
    property HeaderProperty: IDependencyProperty read get_HeaderProperty;
    property HeaderTemplateProperty: IDependencyProperty read get_HeaderTemplateProperty;
    property InputScopeProperty: IDependencyProperty read get_InputScopeProperty;
    property IsPasswordRevealButtonEnabledProperty: IDependencyProperty read get_IsPasswordRevealButtonEnabledProperty;
    property MaxLengthProperty: IDependencyProperty read get_MaxLengthProperty;
    property PasswordCharProperty: IDependencyProperty read get_PasswordCharProperty;
    property PasswordProperty: IDependencyProperty read get_PasswordProperty;
    property PasswordRevealModeProperty: IDependencyProperty read get_PasswordRevealModeProperty;
    property PlaceholderTextProperty: IDependencyProperty read get_PlaceholderTextProperty;
    property PreventKeyboardDisplayOnProgrammaticFocusProperty: IDependencyProperty read get_PreventKeyboardDisplayOnProgrammaticFocusProperty;
    property SelectionFlyoutProperty: IDependencyProperty read get_SelectionFlyoutProperty;
    property SelectionHighlightColorProperty: IDependencyProperty read get_SelectionHighlightColorProperty;
    property TextReadingOrderProperty: IDependencyProperty read get_TextReadingOrderProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IPathIcon
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_PathIcon)]
  IPathIcon = interface(IInspectable)
  ['{5C8229DB-51CD-5A3B-88EF-1D9A8AC97683}']
    function get_Data: IGeometry; safecall;
    procedure put_Data(value: IGeometry); safecall;
    property Data: IGeometry read get_Data write put_Data;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IPathIconFactory
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_PathIcon)]
  IPathIconFactory = interface(IInspectable)
  ['{8E88F087-F2CD-581C-91CA-A99335CA9599}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IPathIcon; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IPathIconSource
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_PathIconSource)]
  IPathIconSource = interface(IInspectable)
  ['{7ACDC6A5-F9AA-5D7E-8645-3C48989433A0}']
    function get_Data: IGeometry; safecall;
    procedure put_Data(value: IGeometry); safecall;
    property Data: IGeometry read get_Data write put_Data;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IPathIconSourceFactory
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_PathIconSource)]
  IPathIconSourceFactory = interface(IInspectable)
  ['{9FEFE31E-5AB6-5394-A6EF-672F174D333B}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IPathIconSource; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IPathIconSourceStatics
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_PathIconSource)]
  IPathIconSourceStatics = interface(IInspectable)
  ['{95DF636B-0DC3-5C94-BA43-8980FD030840}']
    function get_DataProperty: IDependencyProperty; safecall;
    property DataProperty: IDependencyProperty read get_DataProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IPathIconStatics
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_PathIcon)]
  IPathIconStatics = interface(IInspectable)
  ['{72BBA29A-0595-5F6D-A8DF-2A0580A2CD78}']
    function get_DataProperty: IDependencyProperty; safecall;
    property DataProperty: IDependencyProperty read get_DataProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IPersonPictureFactory
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_PersonPicture)]
  IPersonPictureFactory = interface(IInspectable)
  ['{7EC0794C-F2CC-5282-A89D-CD3BB765B71A}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IPersonPicture; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IPersonPictureStatics
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_PersonPicture)]
  IPersonPictureStatics = interface(IInspectable)
  ['{3C769423-9B05-56C1-A169-098493C21F91}']
    function get_BadgeNumberProperty: IDependencyProperty; safecall;
    function get_BadgeGlyphProperty: IDependencyProperty; safecall;
    function get_BadgeImageSourceProperty: IDependencyProperty; safecall;
    function get_BadgeTextProperty: IDependencyProperty; safecall;
    function get_IsGroupProperty: IDependencyProperty; safecall;
    function get_ContactProperty: IDependencyProperty; safecall;
    function get_DisplayNameProperty: IDependencyProperty; safecall;
    function get_InitialsProperty: IDependencyProperty; safecall;
    function get_PreferSmallImageProperty: IDependencyProperty; safecall;
    function get_ProfilePictureProperty: IDependencyProperty; safecall;
    property BadgeGlyphProperty: IDependencyProperty read get_BadgeGlyphProperty;
    property BadgeImageSourceProperty: IDependencyProperty read get_BadgeImageSourceProperty;
    property BadgeNumberProperty: IDependencyProperty read get_BadgeNumberProperty;
    property BadgeTextProperty: IDependencyProperty read get_BadgeTextProperty;
    property ContactProperty: IDependencyProperty read get_ContactProperty;
    property DisplayNameProperty: IDependencyProperty read get_DisplayNameProperty;
    property InitialsProperty: IDependencyProperty read get_InitialsProperty;
    property IsGroupProperty: IDependencyProperty read get_IsGroupProperty;
    property PreferSmallImageProperty: IDependencyProperty read get_PreferSmallImageProperty;
    property ProfilePictureProperty: IDependencyProperty read get_ProfilePictureProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IPickerConfirmedEventArgs
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_PickerConfirmedEventArgs)]
  IPickerConfirmedEventArgs = interface(IInspectable)
  ['{002AC84D-4CB1-5A84-9460-7B9FB716500B}']
  end;

  // Generic Delegate for:
  // Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.Controls.IPickerFlyout,Microsoft.UI.Xaml.Controls.IPickerConfirmedEventArgs>
  TypedEventHandler_2__IPickerFlyout__IPickerConfirmedEventArgs_Delegate_Base = interface(IUnknown)
  ['{3B14D91B-F5BA-54D6-81FA-5E442F192F79}']
    procedure Invoke(sender: IPickerFlyout; args: IPickerConfirmedEventArgs); safecall;
  end;
  // UsedAPI Interface
  // Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.Controls.IPickerFlyout,Microsoft.UI.Xaml.Controls.IPickerConfirmedEventArgs>
  TypedEventHandler_2__IPickerFlyout__IPickerConfirmedEventArgs = interface(TypedEventHandler_2__IPickerFlyout__IPickerConfirmedEventArgs_Delegate_Base)
  ['{EB4EA575-FE9D-54FD-8498-6CAD1BD70D6A}']
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IPickerFlyout
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_PickerFlyout)]
  IPickerFlyout = interface(IInspectable)
  ['{F73F69A0-92D3-5144-8459-A7A05A53BCD2}']
    function get_Content: IUIElement; safecall;
    procedure put_Content(value: IUIElement); safecall;
    function get_ConfirmationButtonsVisible: Boolean; safecall;
    procedure put_ConfirmationButtonsVisible(value: Boolean); safecall;
    function add_Confirmed(handler: TypedEventHandler_2__IPickerFlyout__IPickerConfirmedEventArgs): EventRegistrationToken; safecall;
    procedure remove_Confirmed(token: EventRegistrationToken); safecall;
    function ShowAtAsync(target: IFrameworkElement): IAsyncOperation_1__Boolean; safecall;
    property ConfirmationButtonsVisible: Boolean read get_ConfirmationButtonsVisible write put_ConfirmationButtonsVisible;
    property Content: IUIElement read get_Content write put_Content;
  end;

  // Microsoft.UI.Xaml.Controls.IPickerFlyoutPresenter
  IPickerFlyoutPresenter = interface(IInspectable)
  ['{2181B3F9-9F94-5EBE-9B56-AA106B7E02CD}']
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IPickerFlyoutStatics
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_PickerFlyout)]
  IPickerFlyoutStatics = interface(IInspectable)
  ['{A8D33E85-AEAA-5079-983B-CE45E468672A}']
    function get_ContentProperty: IDependencyProperty; safecall;
    function get_ConfirmationButtonsVisibleProperty: IDependencyProperty; safecall;
    property ConfirmationButtonsVisibleProperty: IDependencyProperty read get_ConfirmationButtonsVisibleProperty;
    property ContentProperty: IDependencyProperty read get_ContentProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IPipsPagerFactory
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_PipsPager)]
  IPipsPagerFactory = interface(IInspectable)
  ['{020722CD-813A-5165-A899-3DF9ADCD805E}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IPipsPager; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IPipsPagerStatics
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_PipsPager)]
  IPipsPagerStatics = interface(IInspectable)
  ['{37714CD8-FBA6-5D98-A395-0A7A3EA64867}']
    function get_NumberOfPagesProperty: IDependencyProperty; safecall;
    function get_SelectedPageIndexProperty: IDependencyProperty; safecall;
    function get_MaxVisiblePipsProperty: IDependencyProperty; safecall;
    function get_OrientationProperty: IDependencyProperty; safecall;
    function get_PreviousButtonVisibilityProperty: IDependencyProperty; safecall;
    function get_NextButtonVisibilityProperty: IDependencyProperty; safecall;
    function get_PreviousButtonStyleProperty: IDependencyProperty; safecall;
    function get_NextButtonStyleProperty: IDependencyProperty; safecall;
    function get_SelectedPipStyleProperty: IDependencyProperty; safecall;
    function get_NormalPipStyleProperty: IDependencyProperty; safecall;
    property MaxVisiblePipsProperty: IDependencyProperty read get_MaxVisiblePipsProperty;
    property NextButtonStyleProperty: IDependencyProperty read get_NextButtonStyleProperty;
    property NextButtonVisibilityProperty: IDependencyProperty read get_NextButtonVisibilityProperty;
    property NormalPipStyleProperty: IDependencyProperty read get_NormalPipStyleProperty;
    property NumberOfPagesProperty: IDependencyProperty read get_NumberOfPagesProperty;
    property OrientationProperty: IDependencyProperty read get_OrientationProperty;
    property PreviousButtonStyleProperty: IDependencyProperty read get_PreviousButtonStyleProperty;
    property PreviousButtonVisibilityProperty: IDependencyProperty read get_PreviousButtonVisibilityProperty;
    property SelectedPageIndexProperty: IDependencyProperty read get_SelectedPageIndexProperty;
    property SelectedPipStyleProperty: IDependencyProperty read get_SelectedPipStyleProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IPivotFactory
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_Pivot)]
  IPivotFactory = interface(IInspectable)
  ['{DA9D033C-4782-5A69-90AF-076CCDF071AE}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IPivot; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IPivotItemFactory
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_PivotItem)]
  IPivotItemFactory = interface(IInspectable)
  ['{9149A2AB-606C-55A9-8786-801D55CA8ED6}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IPivotItem; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IPivotItemStatics
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_PivotItem)]
  IPivotItemStatics = interface(IInspectable)
  ['{E2EBE630-6629-5B7B-8666-FDEB9B98DB2C}']
    function get_HeaderProperty: IDependencyProperty; safecall;
    property HeaderProperty: IDependencyProperty read get_HeaderProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IPivotStatics
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_Pivot)]
  IPivotStatics = interface(IInspectable)
  ['{619CC35F-B97B-5E32-885E-70949ED97EEB}']
    function get_TitleProperty: IDependencyProperty; safecall;
    function get_TitleTemplateProperty: IDependencyProperty; safecall;
    function get_LeftHeaderProperty: IDependencyProperty; safecall;
    function get_LeftHeaderTemplateProperty: IDependencyProperty; safecall;
    function get_RightHeaderProperty: IDependencyProperty; safecall;
    function get_RightHeaderTemplateProperty: IDependencyProperty; safecall;
    function get_HeaderTemplateProperty: IDependencyProperty; safecall;
    function get_SelectedIndexProperty: IDependencyProperty; safecall;
    function get_SelectedItemProperty: IDependencyProperty; safecall;
    function get_IsLockedProperty: IDependencyProperty; safecall;
    function get_HeaderFocusVisualPlacementProperty: IDependencyProperty; safecall;
    function get_IsHeaderItemsCarouselEnabledProperty: IDependencyProperty; safecall;
    function get_SlideInAnimationGroupProperty: IDependencyProperty; safecall;
    function GetSlideInAnimationGroup(element: IFrameworkElement): PivotSlideInAnimationGroup; safecall;
    procedure SetSlideInAnimationGroup(element: IFrameworkElement; value: PivotSlideInAnimationGroup); safecall;
    property HeaderFocusVisualPlacementProperty: IDependencyProperty read get_HeaderFocusVisualPlacementProperty;
    property HeaderTemplateProperty: IDependencyProperty read get_HeaderTemplateProperty;
    property IsHeaderItemsCarouselEnabledProperty: IDependencyProperty read get_IsHeaderItemsCarouselEnabledProperty;
    property IsLockedProperty: IDependencyProperty read get_IsLockedProperty;
    property LeftHeaderProperty: IDependencyProperty read get_LeftHeaderProperty;
    property LeftHeaderTemplateProperty: IDependencyProperty read get_LeftHeaderTemplateProperty;
    property RightHeaderProperty: IDependencyProperty read get_RightHeaderProperty;
    property RightHeaderTemplateProperty: IDependencyProperty read get_RightHeaderTemplateProperty;
    property SelectedIndexProperty: IDependencyProperty read get_SelectedIndexProperty;
    property SelectedItemProperty: IDependencyProperty read get_SelectedItemProperty;
    property SlideInAnimationGroupProperty: IDependencyProperty read get_SlideInAnimationGroupProperty;
    property TitleProperty: IDependencyProperty read get_TitleProperty;
    property TitleTemplateProperty: IDependencyProperty read get_TitleTemplateProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IProgressBarFactory
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_ProgressBar)]
  IProgressBarFactory = interface(IInspectable)
  ['{189826AD-F6F2-533E-9DDB-B6600E88675B}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IProgressBar; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IProgressBarStatics
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_ProgressBar)]
  IProgressBarStatics = interface(IInspectable)
  ['{61BBB127-E4C4-5E22-A8DC-CFCF957236D0}']
    function get_IsIndeterminateProperty: IDependencyProperty; safecall;
    function get_ShowErrorProperty: IDependencyProperty; safecall;
    function get_ShowPausedProperty: IDependencyProperty; safecall;
    property IsIndeterminateProperty: IDependencyProperty read get_IsIndeterminateProperty;
    property ShowErrorProperty: IDependencyProperty read get_ShowErrorProperty;
    property ShowPausedProperty: IDependencyProperty read get_ShowPausedProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IProgressRingFactory
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_ProgressRing)]
  IProgressRingFactory = interface(IInspectable)
  ['{092FA98C-62A7-5DBC-9A85-3E556BA81F79}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IProgressRing; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IProgressRingStatics
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_ProgressRing)]
  IProgressRingStatics = interface(IInspectable)
  ['{4BA1166A-CEC2-50E2-B26B-66B69DC2E371}']
    function get_IsActiveProperty: IDependencyProperty; safecall;
    function get_IsIndeterminateProperty: IDependencyProperty; safecall;
    function get_ValueProperty: IDependencyProperty; safecall;
    function get_MinimumProperty: IDependencyProperty; safecall;
    function get_MaximumProperty: IDependencyProperty; safecall;
    property IsActiveProperty: IDependencyProperty read get_IsActiveProperty;
    property IsIndeterminateProperty: IDependencyProperty read get_IsIndeterminateProperty;
    property MaximumProperty: IDependencyProperty read get_MaximumProperty;
    property MinimumProperty: IDependencyProperty read get_MinimumProperty;
    property ValueProperty: IDependencyProperty read get_ValueProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IRadioButtonFactory
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_RadioButton)]
  IRadioButtonFactory = interface(IInspectable)
  ['{5772C79A-B3EB-5719-8005-2A513429495A}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IRadioButton; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IRadioButtonStatics
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_RadioButton)]
  IRadioButtonStatics = interface(IInspectable)
  ['{A8BCE4D4-68FE-53D9-A317-74AB409CD4EE}']
    function get_GroupNameProperty: IDependencyProperty; safecall;
    property GroupNameProperty: IDependencyProperty read get_GroupNameProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IRadioButtonsFactory
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_RadioButtons)]
  IRadioButtonsFactory = interface(IInspectable)
  ['{2CF95EFB-A7A2-5D85-8EAD-EA222BAA3C55}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IRadioButtons; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IRadioButtonsStatics
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_RadioButtons)]
  IRadioButtonsStatics = interface(IInspectable)
  ['{DE0BF0CA-9AE8-5B8A-9738-7D98B344C039}']
    function get_ItemsSourceProperty: IDependencyProperty; safecall;
    function get_ItemsProperty: IDependencyProperty; safecall;
    function get_ItemTemplateProperty: IDependencyProperty; safecall;
    function get_SelectedIndexProperty: IDependencyProperty; safecall;
    function get_SelectedItemProperty: IDependencyProperty; safecall;
    function get_MaxColumnsProperty: IDependencyProperty; safecall;
    function get_HeaderProperty: IDependencyProperty; safecall;
    function get_HeaderTemplateProperty: IDependencyProperty; safecall;
    property HeaderProperty: IDependencyProperty read get_HeaderProperty;
    property HeaderTemplateProperty: IDependencyProperty read get_HeaderTemplateProperty;
    property ItemTemplateProperty: IDependencyProperty read get_ItemTemplateProperty;
    property ItemsProperty: IDependencyProperty read get_ItemsProperty;
    property ItemsSourceProperty: IDependencyProperty read get_ItemsSourceProperty;
    property MaxColumnsProperty: IDependencyProperty read get_MaxColumnsProperty;
    property SelectedIndexProperty: IDependencyProperty read get_SelectedIndexProperty;
    property SelectedItemProperty: IDependencyProperty read get_SelectedItemProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IRadioMenuFlyoutItem
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_RadioMenuFlyoutItem)]
  IRadioMenuFlyoutItem = interface(IInspectable)
  ['{9D6F45F5-5532-5669-8F02-05735953026A}']
    function get_IsChecked: Boolean; safecall;
    procedure put_IsChecked(value: Boolean); safecall;
    function get_GroupName: HSTRING; safecall;
    procedure put_GroupName(value: HSTRING); safecall;
    property GroupName: HSTRING read get_GroupName write put_GroupName;
    property IsChecked: Boolean read get_IsChecked write put_IsChecked;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IRadioMenuFlyoutItemFactory
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_RadioMenuFlyoutItem)]
  IRadioMenuFlyoutItemFactory = interface(IInspectable)
  ['{113822D2-35A3-5B0D-9D0D-C3830EC1973B}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IRadioMenuFlyoutItem; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IRadioMenuFlyoutItemStatics
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_RadioMenuFlyoutItem)]
  IRadioMenuFlyoutItemStatics = interface(IInspectable)
  ['{47117E20-E03D-53F0-938E-ECCBFFFB5421}']
    function get_IsCheckedProperty: IDependencyProperty; safecall;
    function get_GroupNameProperty: IDependencyProperty; safecall;
    property GroupNameProperty: IDependencyProperty read get_GroupNameProperty;
    property IsCheckedProperty: IDependencyProperty read get_IsCheckedProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IRadioMenuFlyoutItemStatics2
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_RadioMenuFlyoutItem)]
  IRadioMenuFlyoutItemStatics2 = interface(IInspectable)
  ['{2040FFBF-947F-58ED-969F-5D8D8967B9A0}']
    function get_AreCheckStatesEnabledProperty: IDependencyProperty; safecall;
    procedure SetAreCheckStatesEnabled(&object: IMenuFlyoutSubItem; value: Boolean); safecall;
    function GetAreCheckStatesEnabled(&object: IMenuFlyoutSubItem): Boolean; safecall;
    property AreCheckStatesEnabledProperty: IDependencyProperty read get_AreCheckStatesEnabledProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IRatingControlFactory
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_RatingControl)]
  IRatingControlFactory = interface(IInspectable)
  ['{A53B9B73-BFF9-548D-A294-AC63D819F78A}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IRatingControl; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IRatingControlStatics
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_RatingControl)]
  IRatingControlStatics = interface(IInspectable)
  ['{DAC61D65-E8F9-5E4D-813D-05C980B2F118}']
    function get_CaptionProperty: IDependencyProperty; safecall;
    function get_InitialSetValueProperty: IDependencyProperty; safecall;
    function get_IsClearEnabledProperty: IDependencyProperty; safecall;
    function get_IsReadOnlyProperty: IDependencyProperty; safecall;
    function get_MaxRatingProperty: IDependencyProperty; safecall;
    function get_PlaceholderValueProperty: IDependencyProperty; safecall;
    function get_ItemInfoProperty: IDependencyProperty; safecall;
    function get_ValueProperty: IDependencyProperty; safecall;
    property CaptionProperty: IDependencyProperty read get_CaptionProperty;
    property InitialSetValueProperty: IDependencyProperty read get_InitialSetValueProperty;
    property IsClearEnabledProperty: IDependencyProperty read get_IsClearEnabledProperty;
    property IsReadOnlyProperty: IDependencyProperty read get_IsReadOnlyProperty;
    property ItemInfoProperty: IDependencyProperty read get_ItemInfoProperty;
    property MaxRatingProperty: IDependencyProperty read get_MaxRatingProperty;
    property PlaceholderValueProperty: IDependencyProperty read get_PlaceholderValueProperty;
    property ValueProperty: IDependencyProperty read get_ValueProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IRatingItemFontInfo
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_RatingItemFontInfo)]
  IRatingItemFontInfo = interface(IInspectable)
  ['{995A16DC-3A0F-5727-9F38-52CFC8143654}']
    function get_DisabledGlyph: HSTRING; safecall;
    procedure put_DisabledGlyph(value: HSTRING); safecall;
    function get_Glyph: HSTRING; safecall;
    procedure put_Glyph(value: HSTRING); safecall;
    function get_PointerOverGlyph: HSTRING; safecall;
    procedure put_PointerOverGlyph(value: HSTRING); safecall;
    function get_PointerOverPlaceholderGlyph: HSTRING; safecall;
    procedure put_PointerOverPlaceholderGlyph(value: HSTRING); safecall;
    function get_PlaceholderGlyph: HSTRING; safecall;
    procedure put_PlaceholderGlyph(value: HSTRING); safecall;
    function get_UnsetGlyph: HSTRING; safecall;
    procedure put_UnsetGlyph(value: HSTRING); safecall;
    property DisabledGlyph: HSTRING read get_DisabledGlyph write put_DisabledGlyph;
    property Glyph: HSTRING read get_Glyph write put_Glyph;
    property PlaceholderGlyph: HSTRING read get_PlaceholderGlyph write put_PlaceholderGlyph;
    property PointerOverGlyph: HSTRING read get_PointerOverGlyph write put_PointerOverGlyph;
    property PointerOverPlaceholderGlyph: HSTRING read get_PointerOverPlaceholderGlyph write put_PointerOverPlaceholderGlyph;
    property UnsetGlyph: HSTRING read get_UnsetGlyph write put_UnsetGlyph;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IRatingItemFontInfoFactory
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_RatingItemFontInfo)]
  IRatingItemFontInfoFactory = interface(IInspectable)
  ['{109C6541-706E-5FD7-BAAE-020B24899F61}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IRatingItemFontInfo; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IRatingItemFontInfoStatics
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_RatingItemFontInfo)]
  IRatingItemFontInfoStatics = interface(IInspectable)
  ['{F600F780-A5ED-537F-90C2-EAEE8A61F8A5}']
    function get_DisabledGlyphProperty: IDependencyProperty; safecall;
    function get_GlyphProperty: IDependencyProperty; safecall;
    function get_PlaceholderGlyphProperty: IDependencyProperty; safecall;
    function get_PointerOverGlyphProperty: IDependencyProperty; safecall;
    function get_PointerOverPlaceholderGlyphProperty: IDependencyProperty; safecall;
    function get_UnsetGlyphProperty: IDependencyProperty; safecall;
    property DisabledGlyphProperty: IDependencyProperty read get_DisabledGlyphProperty;
    property GlyphProperty: IDependencyProperty read get_GlyphProperty;
    property PlaceholderGlyphProperty: IDependencyProperty read get_PlaceholderGlyphProperty;
    property PointerOverGlyphProperty: IDependencyProperty read get_PointerOverGlyphProperty;
    property PointerOverPlaceholderGlyphProperty: IDependencyProperty read get_PointerOverPlaceholderGlyphProperty;
    property UnsetGlyphProperty: IDependencyProperty read get_UnsetGlyphProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IRatingItemImageInfo
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_RatingItemImageInfo)]
  IRatingItemImageInfo = interface(IInspectable)
  ['{FCDAEBD2-6FB5-523F-959E-3516BC0B72B7}']
    function get_DisabledImage: IImageSource; safecall;
    procedure put_DisabledImage(value: IImageSource); safecall;
    function get_Image: IImageSource; safecall;
    procedure put_Image(value: IImageSource); safecall;
    function get_PlaceholderImage: IImageSource; safecall;
    procedure put_PlaceholderImage(value: IImageSource); safecall;
    function get_PointerOverImage: IImageSource; safecall;
    procedure put_PointerOverImage(value: IImageSource); safecall;
    function get_PointerOverPlaceholderImage: IImageSource; safecall;
    procedure put_PointerOverPlaceholderImage(value: IImageSource); safecall;
    function get_UnsetImage: IImageSource; safecall;
    procedure put_UnsetImage(value: IImageSource); safecall;
    property DisabledImage: IImageSource read get_DisabledImage write put_DisabledImage;
    property Image: IImageSource read get_Image write put_Image;
    property PlaceholderImage: IImageSource read get_PlaceholderImage write put_PlaceholderImage;
    property PointerOverImage: IImageSource read get_PointerOverImage write put_PointerOverImage;
    property PointerOverPlaceholderImage: IImageSource read get_PointerOverPlaceholderImage write put_PointerOverPlaceholderImage;
    property UnsetImage: IImageSource read get_UnsetImage write put_UnsetImage;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IRatingItemImageInfoFactory
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_RatingItemImageInfo)]
  IRatingItemImageInfoFactory = interface(IInspectable)
  ['{4ACC8CAC-BCA8-5380-95E4-345C1BE256B2}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IRatingItemImageInfo; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IRatingItemImageInfoStatics
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_RatingItemImageInfo)]
  IRatingItemImageInfoStatics = interface(IInspectable)
  ['{F582921D-0431-5E52-96D9-284D82DC7CBA}']
    function get_DisabledImageProperty: IDependencyProperty; safecall;
    function get_ImageProperty: IDependencyProperty; safecall;
    function get_PlaceholderImageProperty: IDependencyProperty; safecall;
    function get_PointerOverImageProperty: IDependencyProperty; safecall;
    function get_PointerOverPlaceholderImageProperty: IDependencyProperty; safecall;
    function get_UnsetImageProperty: IDependencyProperty; safecall;
    property DisabledImageProperty: IDependencyProperty read get_DisabledImageProperty;
    property ImageProperty: IDependencyProperty read get_ImageProperty;
    property PlaceholderImageProperty: IDependencyProperty read get_PlaceholderImageProperty;
    property PointerOverImageProperty: IDependencyProperty read get_PointerOverImageProperty;
    property PointerOverPlaceholderImageProperty: IDependencyProperty read get_PointerOverPlaceholderImageProperty;
    property UnsetImageProperty: IDependencyProperty read get_UnsetImageProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IRatingItemInfoFactory
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_RatingItemInfo)]
  IRatingItemInfoFactory = interface(IInspectable)
  ['{61F13480-CD0C-556A-B532-A0CF53E3CDA0}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IRatingItemInfo; safecall;
  end;

  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IRefreshRequestedEventArgs
  IRefreshRequestedEventArgs = interface(IInspectable)
  ['{ED97A956-6019-5329-9312-F885B5C774CD}']
    function GetDeferral: IDeferral; safecall;
  end;

  // Generic Delegate for:
  // Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.Controls.IRefreshVisualizer,Microsoft.UI.Xaml.Controls.IRefreshRequestedEventArgs>
  TypedEventHandler_2__IRefreshVisualizer__IRefreshRequestedEventArgs_Delegate_Base = interface(IUnknown)
  ['{30B40A40-B0D5-5EA9-9B3E-6CC67DEA8ADC}']
    procedure Invoke(sender: IRefreshVisualizer; args: IRefreshRequestedEventArgs); safecall;
  end;
  // UsedAPI Interface
  // Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.Controls.IRefreshVisualizer,Microsoft.UI.Xaml.Controls.IRefreshRequestedEventArgs>
  TypedEventHandler_2__IRefreshVisualizer__IRefreshRequestedEventArgs = interface(TypedEventHandler_2__IRefreshVisualizer__IRefreshRequestedEventArgs_Delegate_Base)
  ['{A4387439-2D02-52B7-9167-0141215CD48B}']
  end;

  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IRefreshStateChangedEventArgs
  IRefreshStateChangedEventArgs = interface(IInspectable)
  ['{7BE897CE-17C4-5FDF-B441-C6EF3301E0F6}']
    function get_OldState: RefreshVisualizerState; safecall;
    function get_NewState: RefreshVisualizerState; safecall;
    property NewState: RefreshVisualizerState read get_NewState;
    property OldState: RefreshVisualizerState read get_OldState;
  end;

  // Generic Delegate for:
  // Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.Controls.IRefreshVisualizer,Microsoft.UI.Xaml.Controls.IRefreshStateChangedEventArgs>
  TypedEventHandler_2__IRefreshVisualizer__IRefreshStateChangedEventArgs_Delegate_Base = interface(IUnknown)
  ['{AFBA2EFF-D872-5C20-9E7E-76965FF7954F}']
    procedure Invoke(sender: IRefreshVisualizer; args: IRefreshStateChangedEventArgs); safecall;
  end;
  // UsedAPI Interface
  // Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.Controls.IRefreshVisualizer,Microsoft.UI.Xaml.Controls.IRefreshStateChangedEventArgs>
  TypedEventHandler_2__IRefreshVisualizer__IRefreshStateChangedEventArgs = interface(TypedEventHandler_2__IRefreshVisualizer__IRefreshStateChangedEventArgs_Delegate_Base)
  ['{CE7BBE43-24CD-52C8-BE42-01C431C7D2E7}']
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IRefreshVisualizer
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_RefreshVisualizer)]
  IRefreshVisualizer = interface(IInspectable)
  ['{D6C55DB6-D82D-5B68-BA1D-28593FB0AB12}']
    procedure RequestRefresh; safecall;
    function get_Orientation: RefreshVisualizerOrientation; safecall;
    procedure put_Orientation(value: RefreshVisualizerOrientation); safecall;
    function get_Content: IUIElement; safecall;
    procedure put_Content(value: IUIElement); safecall;
    function get_State: RefreshVisualizerState; safecall;
    function add_RefreshRequested(handler: TypedEventHandler_2__IRefreshVisualizer__IRefreshRequestedEventArgs): EventRegistrationToken; safecall;
    procedure remove_RefreshRequested(token: EventRegistrationToken); safecall;
    function add_RefreshStateChanged(handler: TypedEventHandler_2__IRefreshVisualizer__IRefreshStateChangedEventArgs): EventRegistrationToken; safecall;
    procedure remove_RefreshStateChanged(token: EventRegistrationToken); safecall;
    property Content: IUIElement read get_Content write put_Content;
    property Orientation: RefreshVisualizerOrientation read get_Orientation write put_Orientation;
    property State: RefreshVisualizerState read get_State;
  end;

  // Generic Delegate for:
  // Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.Controls.IRefreshContainer,Microsoft.UI.Xaml.Controls.IRefreshRequestedEventArgs>
  TypedEventHandler_2__IRefreshContainer__IRefreshRequestedEventArgs_Delegate_Base = interface(IUnknown)
  ['{C50A5295-FE75-556C-9470-C3FF7E38047E}']
    procedure Invoke(sender: IRefreshContainer; args: IRefreshRequestedEventArgs); safecall;
  end;
  // UsedAPI Interface
  // Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.Controls.IRefreshContainer,Microsoft.UI.Xaml.Controls.IRefreshRequestedEventArgs>
  TypedEventHandler_2__IRefreshContainer__IRefreshRequestedEventArgs = interface(TypedEventHandler_2__IRefreshContainer__IRefreshRequestedEventArgs_Delegate_Base)
  ['{4E581741-DBE4-5F04-9066-899B5E74AE36}']
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IRefreshContainer
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_RefreshContainer)]
  IRefreshContainer = interface(IInspectable)
  ['{1C9778E8-A427-5F86-9D5E-02DB9B2C4093}']
    function get_Visualizer: IRefreshVisualizer; safecall;
    procedure put_Visualizer(value: IRefreshVisualizer); safecall;
    function get_PullDirection: RefreshPullDirection; safecall;
    procedure put_PullDirection(value: RefreshPullDirection); safecall;
    function add_RefreshRequested(handler: TypedEventHandler_2__IRefreshContainer__IRefreshRequestedEventArgs): EventRegistrationToken; safecall;
    procedure remove_RefreshRequested(token: EventRegistrationToken); safecall;
    procedure RequestRefresh; safecall;
    property PullDirection: RefreshPullDirection read get_PullDirection write put_PullDirection;
    property Visualizer: IRefreshVisualizer read get_Visualizer write put_Visualizer;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IRefreshContainerFactory
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_RefreshContainer)]
  IRefreshContainerFactory = interface(IInspectable)
  ['{5F228FA1-2EA2-52B5-B78A-0C133F86F020}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IRefreshContainer; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IRefreshContainerStatics
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_RefreshContainer)]
  IRefreshContainerStatics = interface(IInspectable)
  ['{875EF8A0-74C2-5201-B708-50A48E7E7601}']
    function get_VisualizerProperty: IDependencyProperty; safecall;
    function get_PullDirectionProperty: IDependencyProperty; safecall;
    property PullDirectionProperty: IDependencyProperty read get_PullDirectionProperty;
    property VisualizerProperty: IDependencyProperty read get_VisualizerProperty;
  end;

  // Microsoft.UI.Xaml.Controls.IRefreshInteractionRatioChangedEventArgs
  IRefreshInteractionRatioChangedEventArgs = interface(IInspectable)
  ['{790B70E0-F199-552B-B126-6CB45C2DE8F9}']
    function get_InteractionRatio: Double; safecall;
    property InteractionRatio: Double read get_InteractionRatio;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IRefreshVisualizerFactory
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_RefreshVisualizer)]
  IRefreshVisualizerFactory = interface(IInspectable)
  ['{9D6F2BF2-6628-582A-892B-68C2770C173C}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IRefreshVisualizer; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IRefreshVisualizerStatics
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_RefreshVisualizer)]
  IRefreshVisualizerStatics = interface(IInspectable)
  ['{3540FE79-590D-546F-BF2A-A30D46E8CDFA}']
    function get_InfoProviderProperty: IDependencyProperty; safecall;
    function get_OrientationProperty: IDependencyProperty; safecall;
    function get_ContentProperty: IDependencyProperty; safecall;
    function get_StateProperty: IDependencyProperty; safecall;
    property ContentProperty: IDependencyProperty read get_ContentProperty;
    property InfoProviderProperty: IDependencyProperty read get_InfoProviderProperty;
    property OrientationProperty: IDependencyProperty read get_OrientationProperty;
    property StateProperty: IDependencyProperty read get_StateProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IRelativePanel
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_RelativePanel)]
  IRelativePanel = interface(IInspectable)
  ['{C432FCC4-88F2-59D8-9D0E-A237BEAEB07F}']
    function get_BackgroundSizing: BackgroundSizing; safecall;
    procedure put_BackgroundSizing(value: BackgroundSizing); safecall;
    function get_BorderBrush: IBrush; safecall;
    procedure put_BorderBrush(value: IBrush); safecall;
    function get_BorderThickness: Thickness; safecall;
    procedure put_BorderThickness(value: Thickness); safecall;
    function get_CornerRadius: CornerRadius; safecall;
    procedure put_CornerRadius(value: CornerRadius); safecall;
    function get_Padding: Thickness; safecall;
    procedure put_Padding(value: Thickness); safecall;
    property BackgroundSizing_: BackgroundSizing read get_BackgroundSizing write put_BackgroundSizing;
    property BorderBrush: IBrush read get_BorderBrush write put_BorderBrush;
    property BorderThickness: Thickness read get_BorderThickness write put_BorderThickness;
    property CornerRadius_: CornerRadius read get_CornerRadius write put_CornerRadius;
    property Padding: Thickness read get_Padding write put_Padding;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IRelativePanelFactory
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_RelativePanel)]
  IRelativePanelFactory = interface(IInspectable)
  ['{C85F1443-D973-50FD-9497-B867F492468F}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IRelativePanel; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IRelativePanelStatics
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_RelativePanel)]
  IRelativePanelStatics = interface(IInspectable)
  ['{BDD929A2-76CC-59C4-82C1-F14B5DA4221A}']
    function get_BackgroundSizingProperty: IDependencyProperty; safecall;
    function get_LeftOfProperty: IDependencyProperty; safecall;
    function GetLeftOf(element: IUIElement): IInspectable; safecall;
    procedure SetLeftOf(element: IUIElement; value: IInspectable); safecall;
    function get_AboveProperty: IDependencyProperty; safecall;
    function GetAbove(element: IUIElement): IInspectable; safecall;
    procedure SetAbove(element: IUIElement; value: IInspectable); safecall;
    function get_RightOfProperty: IDependencyProperty; safecall;
    function GetRightOf(element: IUIElement): IInspectable; safecall;
    procedure SetRightOf(element: IUIElement; value: IInspectable); safecall;
    function get_BelowProperty: IDependencyProperty; safecall;
    function GetBelow(element: IUIElement): IInspectable; safecall;
    procedure SetBelow(element: IUIElement; value: IInspectable); safecall;
    function get_AlignHorizontalCenterWithProperty: IDependencyProperty; safecall;
    function GetAlignHorizontalCenterWith(element: IUIElement): IInspectable; safecall;
    procedure SetAlignHorizontalCenterWith(element: IUIElement; value: IInspectable); safecall;
    function get_AlignVerticalCenterWithProperty: IDependencyProperty; safecall;
    function GetAlignVerticalCenterWith(element: IUIElement): IInspectable; safecall;
    procedure SetAlignVerticalCenterWith(element: IUIElement; value: IInspectable); safecall;
    function get_AlignLeftWithProperty: IDependencyProperty; safecall;
    function GetAlignLeftWith(element: IUIElement): IInspectable; safecall;
    procedure SetAlignLeftWith(element: IUIElement; value: IInspectable); safecall;
    function get_AlignTopWithProperty: IDependencyProperty; safecall;
    function GetAlignTopWith(element: IUIElement): IInspectable; safecall;
    procedure SetAlignTopWith(element: IUIElement; value: IInspectable); safecall;
    function get_AlignRightWithProperty: IDependencyProperty; safecall;
    function GetAlignRightWith(element: IUIElement): IInspectable; safecall;
    procedure SetAlignRightWith(element: IUIElement; value: IInspectable); safecall;
    function get_AlignBottomWithProperty: IDependencyProperty; safecall;
    function GetAlignBottomWith(element: IUIElement): IInspectable; safecall;
    procedure SetAlignBottomWith(element: IUIElement; value: IInspectable); safecall;
    function get_AlignLeftWithPanelProperty: IDependencyProperty; safecall;
    function GetAlignLeftWithPanel(element: IUIElement): Boolean; safecall;
    procedure SetAlignLeftWithPanel(element: IUIElement; value: Boolean); safecall;
    function get_AlignTopWithPanelProperty: IDependencyProperty; safecall;
    function GetAlignTopWithPanel(element: IUIElement): Boolean; safecall;
    procedure SetAlignTopWithPanel(element: IUIElement; value: Boolean); safecall;
    function get_AlignRightWithPanelProperty: IDependencyProperty; safecall;
    function GetAlignRightWithPanel(element: IUIElement): Boolean; safecall;
    procedure SetAlignRightWithPanel(element: IUIElement; value: Boolean); safecall;
    function get_AlignBottomWithPanelProperty: IDependencyProperty; safecall;
    function GetAlignBottomWithPanel(element: IUIElement): Boolean; safecall;
    procedure SetAlignBottomWithPanel(element: IUIElement; value: Boolean); safecall;
    function get_AlignHorizontalCenterWithPanelProperty: IDependencyProperty; safecall;
    function GetAlignHorizontalCenterWithPanel(element: IUIElement): Boolean; safecall;
    procedure SetAlignHorizontalCenterWithPanel(element: IUIElement; value: Boolean); safecall;
    function get_AlignVerticalCenterWithPanelProperty: IDependencyProperty; safecall;
    function GetAlignVerticalCenterWithPanel(element: IUIElement): Boolean; safecall;
    procedure SetAlignVerticalCenterWithPanel(element: IUIElement; value: Boolean); safecall;
    function get_BorderBrushProperty: IDependencyProperty; safecall;
    function get_BorderThicknessProperty: IDependencyProperty; safecall;
    function get_CornerRadiusProperty: IDependencyProperty; safecall;
    function get_PaddingProperty: IDependencyProperty; safecall;
    property AboveProperty: IDependencyProperty read get_AboveProperty;
    property AlignBottomWithPanelProperty: IDependencyProperty read get_AlignBottomWithPanelProperty;
    property AlignBottomWithProperty: IDependencyProperty read get_AlignBottomWithProperty;
    property AlignHorizontalCenterWithPanelProperty: IDependencyProperty read get_AlignHorizontalCenterWithPanelProperty;
    property AlignHorizontalCenterWithProperty: IDependencyProperty read get_AlignHorizontalCenterWithProperty;
    property AlignLeftWithPanelProperty: IDependencyProperty read get_AlignLeftWithPanelProperty;
    property AlignLeftWithProperty: IDependencyProperty read get_AlignLeftWithProperty;
    property AlignRightWithPanelProperty: IDependencyProperty read get_AlignRightWithPanelProperty;
    property AlignRightWithProperty: IDependencyProperty read get_AlignRightWithProperty;
    property AlignTopWithPanelProperty: IDependencyProperty read get_AlignTopWithPanelProperty;
    property AlignTopWithProperty: IDependencyProperty read get_AlignTopWithProperty;
    property AlignVerticalCenterWithPanelProperty: IDependencyProperty read get_AlignVerticalCenterWithPanelProperty;
    property AlignVerticalCenterWithProperty: IDependencyProperty read get_AlignVerticalCenterWithProperty;
    property BackgroundSizingProperty: IDependencyProperty read get_BackgroundSizingProperty;
    property BelowProperty: IDependencyProperty read get_BelowProperty;
    property BorderBrushProperty: IDependencyProperty read get_BorderBrushProperty;
    property BorderThicknessProperty: IDependencyProperty read get_BorderThicknessProperty;
    property CornerRadiusProperty: IDependencyProperty read get_CornerRadiusProperty;
    property LeftOfProperty: IDependencyProperty read get_LeftOfProperty;
    property PaddingProperty: IDependencyProperty read get_PaddingProperty;
    property RightOfProperty: IDependencyProperty read get_RightOfProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IRevealListViewItemPresenter
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_RevealListViewItemPresenter)]
  IRevealListViewItemPresenter = interface(IInspectable)
  ['{365FDBAC-3989-559C-BEA9-764561881C96}']
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IRevealListViewItemPresenterFactory
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_RevealListViewItemPresenter)]
  IRevealListViewItemPresenterFactory = interface(IInspectable)
  ['{E730C53B-8F94-55B3-8BC1-98F77C5766BD}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IRevealListViewItemPresenter; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IRichEditBoxFactory
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_RichEditBox)]
  IRichEditBoxFactory = interface(IInspectable)
  ['{7C993C60-F5B6-589F-BBA8-B68B9713E4AE}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IRichEditBox; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IRichEditBoxStatics
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_RichEditBox)]
  IRichEditBoxStatics = interface(IInspectable)
  ['{B3F59239-EFD1-5129-BF80-2841A331B24A}']
    function get_IsReadOnlyProperty: IDependencyProperty; safecall;
    function get_AcceptsReturnProperty: IDependencyProperty; safecall;
    function get_TextAlignmentProperty: IDependencyProperty; safecall;
    function get_TextWrappingProperty: IDependencyProperty; safecall;
    function get_IsSpellCheckEnabledProperty: IDependencyProperty; safecall;
    function get_IsTextPredictionEnabledProperty: IDependencyProperty; safecall;
    function get_InputScopeProperty: IDependencyProperty; safecall;
    function get_HeaderProperty: IDependencyProperty; safecall;
    function get_HeaderTemplateProperty: IDependencyProperty; safecall;
    function get_PlaceholderTextProperty: IDependencyProperty; safecall;
    function get_SelectionHighlightColorProperty: IDependencyProperty; safecall;
    function get_PreventKeyboardDisplayOnProgrammaticFocusProperty: IDependencyProperty; safecall;
    function get_IsColorFontEnabledProperty: IDependencyProperty; safecall;
    function get_SelectionHighlightColorWhenNotFocusedProperty: IDependencyProperty; safecall;
    function get_MaxLengthProperty: IDependencyProperty; safecall;
    function get_HorizontalTextAlignmentProperty: IDependencyProperty; safecall;
    function get_CharacterCasingProperty: IDependencyProperty; safecall;
    function get_DisabledFormattingAcceleratorsProperty: IDependencyProperty; safecall;
    function get_SelectionFlyoutProperty: IDependencyProperty; safecall;
    function get_ProofingMenuFlyoutProperty: IDependencyProperty; safecall;
    function get_DescriptionProperty: IDependencyProperty; safecall;
    function get_DesiredCandidateWindowAlignmentProperty: IDependencyProperty; safecall;
    function get_TextReadingOrderProperty: IDependencyProperty; safecall;
    function get_ClipboardCopyFormatProperty: IDependencyProperty; safecall;
    property AcceptsReturnProperty: IDependencyProperty read get_AcceptsReturnProperty;
    property CharacterCasingProperty: IDependencyProperty read get_CharacterCasingProperty;
    property ClipboardCopyFormatProperty: IDependencyProperty read get_ClipboardCopyFormatProperty;
    property DescriptionProperty: IDependencyProperty read get_DescriptionProperty;
    property DesiredCandidateWindowAlignmentProperty: IDependencyProperty read get_DesiredCandidateWindowAlignmentProperty;
    property DisabledFormattingAcceleratorsProperty: IDependencyProperty read get_DisabledFormattingAcceleratorsProperty;
    property HeaderProperty: IDependencyProperty read get_HeaderProperty;
    property HeaderTemplateProperty: IDependencyProperty read get_HeaderTemplateProperty;
    property HorizontalTextAlignmentProperty: IDependencyProperty read get_HorizontalTextAlignmentProperty;
    property InputScopeProperty: IDependencyProperty read get_InputScopeProperty;
    property IsColorFontEnabledProperty: IDependencyProperty read get_IsColorFontEnabledProperty;
    property IsReadOnlyProperty: IDependencyProperty read get_IsReadOnlyProperty;
    property IsSpellCheckEnabledProperty: IDependencyProperty read get_IsSpellCheckEnabledProperty;
    property IsTextPredictionEnabledProperty: IDependencyProperty read get_IsTextPredictionEnabledProperty;
    property MaxLengthProperty: IDependencyProperty read get_MaxLengthProperty;
    property PlaceholderTextProperty: IDependencyProperty read get_PlaceholderTextProperty;
    property PreventKeyboardDisplayOnProgrammaticFocusProperty: IDependencyProperty read get_PreventKeyboardDisplayOnProgrammaticFocusProperty;
    property ProofingMenuFlyoutProperty: IDependencyProperty read get_ProofingMenuFlyoutProperty;
    property SelectionFlyoutProperty: IDependencyProperty read get_SelectionFlyoutProperty;
    property SelectionHighlightColorProperty: IDependencyProperty read get_SelectionHighlightColorProperty;
    property SelectionHighlightColorWhenNotFocusedProperty: IDependencyProperty read get_SelectionHighlightColorWhenNotFocusedProperty;
    property TextAlignmentProperty: IDependencyProperty read get_TextAlignmentProperty;
    property TextReadingOrderProperty: IDependencyProperty read get_TextReadingOrderProperty;
    property TextWrappingProperty: IDependencyProperty read get_TextWrappingProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IRichTextBlockOverflowStatics
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_RichTextBlockOverflow)]
  IRichTextBlockOverflowStatics = interface(IInspectable)
  ['{6DB6EE42-A333-5E5B-9CE8-F5E2F46F4D66}']
    function get_OverflowContentTargetProperty: IDependencyProperty; safecall;
    function get_PaddingProperty: IDependencyProperty; safecall;
    function get_HasOverflowContentProperty: IDependencyProperty; safecall;
    function get_MaxLinesProperty: IDependencyProperty; safecall;
    function get_IsTextTrimmedProperty: IDependencyProperty; safecall;
    property HasOverflowContentProperty: IDependencyProperty read get_HasOverflowContentProperty;
    property IsTextTrimmedProperty: IDependencyProperty read get_IsTextTrimmedProperty;
    property MaxLinesProperty: IDependencyProperty read get_MaxLinesProperty;
    property OverflowContentTargetProperty: IDependencyProperty read get_OverflowContentTargetProperty;
    property PaddingProperty: IDependencyProperty read get_PaddingProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IRichTextBlockStatics
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_RichTextBlock)]
  IRichTextBlockStatics = interface(IInspectable)
  ['{65DCA245-B4FC-5718-B628-A4953F61D6A3}']
    function get_FontSizeProperty: IDependencyProperty; safecall;
    function get_FontFamilyProperty: IDependencyProperty; safecall;
    function get_FontWeightProperty: IDependencyProperty; safecall;
    function get_FontStyleProperty: IDependencyProperty; safecall;
    function get_FontStretchProperty: IDependencyProperty; safecall;
    function get_ForegroundProperty: IDependencyProperty; safecall;
    function get_TextWrappingProperty: IDependencyProperty; safecall;
    function get_TextTrimmingProperty: IDependencyProperty; safecall;
    function get_TextAlignmentProperty: IDependencyProperty; safecall;
    function get_PaddingProperty: IDependencyProperty; safecall;
    function get_LineHeightProperty: IDependencyProperty; safecall;
    function get_LineStackingStrategyProperty: IDependencyProperty; safecall;
    function get_CharacterSpacingProperty: IDependencyProperty; safecall;
    function get_OverflowContentTargetProperty: IDependencyProperty; safecall;
    function get_IsTextSelectionEnabledProperty: IDependencyProperty; safecall;
    function get_HasOverflowContentProperty: IDependencyProperty; safecall;
    function get_SelectedTextProperty: IDependencyProperty; safecall;
    function get_MaxLinesProperty: IDependencyProperty; safecall;
    function get_TextLineBoundsProperty: IDependencyProperty; safecall;
    function get_SelectionHighlightColorProperty: IDependencyProperty; safecall;
    function get_OpticalMarginAlignmentProperty: IDependencyProperty; safecall;
    function get_IsColorFontEnabledProperty: IDependencyProperty; safecall;
    function get_TextReadingOrderProperty: IDependencyProperty; safecall;
    function get_IsTextScaleFactorEnabledProperty: IDependencyProperty; safecall;
    function get_TextDecorationsProperty: IDependencyProperty; safecall;
    function get_IsTextTrimmedProperty: IDependencyProperty; safecall;
    function get_HorizontalTextAlignmentProperty: IDependencyProperty; safecall;
    function get_SelectionFlyoutProperty: IDependencyProperty; safecall;
    function get_TextIndentProperty: IDependencyProperty; safecall;
    property CharacterSpacingProperty: IDependencyProperty read get_CharacterSpacingProperty;
    property FontFamilyProperty: IDependencyProperty read get_FontFamilyProperty;
    property FontSizeProperty: IDependencyProperty read get_FontSizeProperty;
    property FontStretchProperty: IDependencyProperty read get_FontStretchProperty;
    property FontStyleProperty: IDependencyProperty read get_FontStyleProperty;
    property FontWeightProperty: IDependencyProperty read get_FontWeightProperty;
    property ForegroundProperty: IDependencyProperty read get_ForegroundProperty;
    property HasOverflowContentProperty: IDependencyProperty read get_HasOverflowContentProperty;
    property HorizontalTextAlignmentProperty: IDependencyProperty read get_HorizontalTextAlignmentProperty;
    property IsColorFontEnabledProperty: IDependencyProperty read get_IsColorFontEnabledProperty;
    property IsTextScaleFactorEnabledProperty: IDependencyProperty read get_IsTextScaleFactorEnabledProperty;
    property IsTextSelectionEnabledProperty: IDependencyProperty read get_IsTextSelectionEnabledProperty;
    property IsTextTrimmedProperty: IDependencyProperty read get_IsTextTrimmedProperty;
    property LineHeightProperty: IDependencyProperty read get_LineHeightProperty;
    property LineStackingStrategyProperty: IDependencyProperty read get_LineStackingStrategyProperty;
    property MaxLinesProperty: IDependencyProperty read get_MaxLinesProperty;
    property OpticalMarginAlignmentProperty: IDependencyProperty read get_OpticalMarginAlignmentProperty;
    property OverflowContentTargetProperty: IDependencyProperty read get_OverflowContentTargetProperty;
    property PaddingProperty: IDependencyProperty read get_PaddingProperty;
    property SelectedTextProperty: IDependencyProperty read get_SelectedTextProperty;
    property SelectionFlyoutProperty: IDependencyProperty read get_SelectionFlyoutProperty;
    property SelectionHighlightColorProperty: IDependencyProperty read get_SelectionHighlightColorProperty;
    property TextAlignmentProperty: IDependencyProperty read get_TextAlignmentProperty;
    property TextDecorationsProperty: IDependencyProperty read get_TextDecorationsProperty;
    property TextIndentProperty: IDependencyProperty read get_TextIndentProperty;
    property TextLineBoundsProperty: IDependencyProperty read get_TextLineBoundsProperty;
    property TextReadingOrderProperty: IDependencyProperty read get_TextReadingOrderProperty;
    property TextTrimmingProperty: IDependencyProperty read get_TextTrimmingProperty;
    property TextWrappingProperty: IDependencyProperty read get_TextWrappingProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IRowDefinitionStatics
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_RowDefinition)]
  IRowDefinitionStatics = interface(IInspectable)
  ['{7317C7C5-FD6F-58D9-9B53-4978DBACDE23}']
    function get_HeightProperty: IDependencyProperty; safecall;
    function get_MaxHeightProperty: IDependencyProperty; safecall;
    function get_MinHeightProperty: IDependencyProperty; safecall;
    property HeightProperty: IDependencyProperty read get_HeightProperty;
    property MaxHeightProperty: IDependencyProperty read get_MaxHeightProperty;
    property MinHeightProperty: IDependencyProperty read get_MinHeightProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IScrollAnchorProvider
  IScrollAnchorProvider = interface(IInspectable)
  ['{885DF41F-F240-5B7B-A703-BFAF39C6A2CD}']
    function get_CurrentAnchor: IUIElement; safecall;
    procedure RegisterAnchorCandidate(element: IUIElement); safecall;
    procedure UnregisterAnchorCandidate(element: IUIElement); safecall;
    property CurrentAnchor: IUIElement read get_CurrentAnchor;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IScrollContentPresenter
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_ScrollContentPresenter)]
  IScrollContentPresenter = interface(IInspectable)
  ['{9A896EB9-3189-5C53-912F-C470896331B8}']
    function get_CanVerticallyScroll: Boolean; safecall;
    procedure put_CanVerticallyScroll(value: Boolean); safecall;
    function get_CanHorizontallyScroll: Boolean; safecall;
    procedure put_CanHorizontallyScroll(value: Boolean); safecall;
    function get_ExtentWidth: Double; safecall;
    function get_ExtentHeight: Double; safecall;
    function get_ViewportWidth: Double; safecall;
    function get_ViewportHeight: Double; safecall;
    function get_HorizontalOffset: Double; safecall;
    function get_VerticalOffset: Double; safecall;
    function get_ScrollOwner: IInspectable; safecall;
    procedure put_ScrollOwner(value: IInspectable); safecall;
    function get_CanContentRenderOutsideBounds: Boolean; safecall;
    procedure put_CanContentRenderOutsideBounds(value: Boolean); safecall;
    function get_SizesContentToTemplatedParent: Boolean; safecall;
    procedure put_SizesContentToTemplatedParent(value: Boolean); safecall;
    procedure LineUp; safecall;
    procedure LineDown; safecall;
    procedure LineLeft; safecall;
    procedure LineRight; safecall;
    procedure PageUp; safecall;
    procedure PageDown; safecall;
    procedure PageLeft; safecall;
    procedure PageRight; safecall;
    procedure MouseWheelUp; safecall;
    procedure MouseWheelDown; safecall;
    procedure MouseWheelLeft; safecall;
    procedure MouseWheelRight; safecall;
    procedure SetHorizontalOffset(offset: Double); safecall;
    procedure SetVerticalOffset(offset: Double); safecall;
    function MakeVisible(visual: IUIElement; rectangle: TRectF): TRectF; safecall;
    property CanContentRenderOutsideBounds: Boolean read get_CanContentRenderOutsideBounds write put_CanContentRenderOutsideBounds;
    property CanHorizontallyScroll: Boolean read get_CanHorizontallyScroll write put_CanHorizontallyScroll;
    property CanVerticallyScroll: Boolean read get_CanVerticallyScroll write put_CanVerticallyScroll;
    property ExtentHeight: Double read get_ExtentHeight;
    property ExtentWidth: Double read get_ExtentWidth;
    property HorizontalOffset: Double read get_HorizontalOffset;
    property ScrollOwner: IInspectable read get_ScrollOwner write put_ScrollOwner;
    property SizesContentToTemplatedParent: Boolean read get_SizesContentToTemplatedParent write put_SizesContentToTemplatedParent;
    property VerticalOffset: Double read get_VerticalOffset;
    property ViewportHeight: Double read get_ViewportHeight;
    property ViewportWidth: Double read get_ViewportWidth;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IScrollContentPresenterStatics
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_ScrollContentPresenter)]
  IScrollContentPresenterStatics = interface(IInspectable)
  ['{4E93F295-EF2E-517B-BBF9-DEDB854849C8}']
    function get_CanContentRenderOutsideBoundsProperty: IDependencyProperty; safecall;
    function get_SizesContentToTemplatedParentProperty: IDependencyProperty; safecall;
    property CanContentRenderOutsideBoundsProperty: IDependencyProperty read get_CanContentRenderOutsideBoundsProperty;
    property SizesContentToTemplatedParentProperty: IDependencyProperty read get_SizesContentToTemplatedParentProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IScrollViewerStatics
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_ScrollViewer)]
  IScrollViewerStatics = interface(IInspectable)
  ['{D971FD86-0A96-50C4-A6E1-9975FAA2A142}']
    function get_HorizontalSnapPointsAlignmentProperty: IDependencyProperty; safecall;
    function get_VerticalSnapPointsAlignmentProperty: IDependencyProperty; safecall;
    function get_HorizontalSnapPointsTypeProperty: IDependencyProperty; safecall;
    function get_VerticalSnapPointsTypeProperty: IDependencyProperty; safecall;
    function get_ZoomSnapPointsTypeProperty: IDependencyProperty; safecall;
    function get_HorizontalOffsetProperty: IDependencyProperty; safecall;
    function get_ViewportWidthProperty: IDependencyProperty; safecall;
    function get_ScrollableWidthProperty: IDependencyProperty; safecall;
    function get_ComputedHorizontalScrollBarVisibilityProperty: IDependencyProperty; safecall;
    function get_ExtentWidthProperty: IDependencyProperty; safecall;
    function get_VerticalOffsetProperty: IDependencyProperty; safecall;
    function get_ViewportHeightProperty: IDependencyProperty; safecall;
    function get_ScrollableHeightProperty: IDependencyProperty; safecall;
    function get_ComputedVerticalScrollBarVisibilityProperty: IDependencyProperty; safecall;
    function get_ExtentHeightProperty: IDependencyProperty; safecall;
    function get_MinZoomFactorProperty: IDependencyProperty; safecall;
    function get_MaxZoomFactorProperty: IDependencyProperty; safecall;
    function get_ZoomFactorProperty: IDependencyProperty; safecall;
    function get_ZoomSnapPointsProperty: IDependencyProperty; safecall;
    function get_TopLeftHeaderProperty: IDependencyProperty; safecall;
    function get_LeftHeaderProperty: IDependencyProperty; safecall;
    function get_TopHeaderProperty: IDependencyProperty; safecall;
    function get_ReduceViewportForCoreInputViewOcclusionsProperty: IDependencyProperty; safecall;
    function get_HorizontalAnchorRatioProperty: IDependencyProperty; safecall;
    function get_VerticalAnchorRatioProperty: IDependencyProperty; safecall;
    function get_HorizontalScrollBarVisibilityProperty: IDependencyProperty; safecall;
    function GetHorizontalScrollBarVisibility(element: IDependencyObject): ScrollBarVisibility; safecall;
    procedure SetHorizontalScrollBarVisibility(element: IDependencyObject; horizontalScrollBarVisibility: ScrollBarVisibility); safecall;
    function get_VerticalScrollBarVisibilityProperty: IDependencyProperty; safecall;
    function GetVerticalScrollBarVisibility(element: IDependencyObject): ScrollBarVisibility; safecall;
    procedure SetVerticalScrollBarVisibility(element: IDependencyObject; verticalScrollBarVisibility: ScrollBarVisibility); safecall;
    function get_IsHorizontalRailEnabledProperty: IDependencyProperty; safecall;
    function GetIsHorizontalRailEnabled(element: IDependencyObject): Boolean; safecall;
    procedure SetIsHorizontalRailEnabled(element: IDependencyObject; isHorizontalRailEnabled: Boolean); safecall;
    function get_IsVerticalRailEnabledProperty: IDependencyProperty; safecall;
    function GetIsVerticalRailEnabled(element: IDependencyObject): Boolean; safecall;
    procedure SetIsVerticalRailEnabled(element: IDependencyObject; isVerticalRailEnabled: Boolean); safecall;
    function get_IsHorizontalScrollChainingEnabledProperty: IDependencyProperty; safecall;
    function GetIsHorizontalScrollChainingEnabled(element: IDependencyObject): Boolean; safecall;
    procedure SetIsHorizontalScrollChainingEnabled(element: IDependencyObject; isHorizontalScrollChainingEnabled: Boolean); safecall;
    function get_IsVerticalScrollChainingEnabledProperty: IDependencyProperty; safecall;
    function GetIsVerticalScrollChainingEnabled(element: IDependencyObject): Boolean; safecall;
    procedure SetIsVerticalScrollChainingEnabled(element: IDependencyObject; isVerticalScrollChainingEnabled: Boolean); safecall;
    function get_IsZoomChainingEnabledProperty: IDependencyProperty; safecall;
    function GetIsZoomChainingEnabled(element: IDependencyObject): Boolean; safecall;
    procedure SetIsZoomChainingEnabled(element: IDependencyObject; isZoomChainingEnabled: Boolean); safecall;
    function get_IsScrollInertiaEnabledProperty: IDependencyProperty; safecall;
    function GetIsScrollInertiaEnabled(element: IDependencyObject): Boolean; safecall;
    procedure SetIsScrollInertiaEnabled(element: IDependencyObject; isScrollInertiaEnabled: Boolean); safecall;
    function get_IsZoomInertiaEnabledProperty: IDependencyProperty; safecall;
    function GetIsZoomInertiaEnabled(element: IDependencyObject): Boolean; safecall;
    procedure SetIsZoomInertiaEnabled(element: IDependencyObject; isZoomInertiaEnabled: Boolean); safecall;
    function get_HorizontalScrollModeProperty: IDependencyProperty; safecall;
    function GetHorizontalScrollMode(element: IDependencyObject): ScrollMode; safecall;
    procedure SetHorizontalScrollMode(element: IDependencyObject; horizontalScrollMode: ScrollMode); safecall;
    function get_VerticalScrollModeProperty: IDependencyProperty; safecall;
    function GetVerticalScrollMode(element: IDependencyObject): ScrollMode; safecall;
    procedure SetVerticalScrollMode(element: IDependencyObject; verticalScrollMode: ScrollMode); safecall;
    function get_ZoomModeProperty: IDependencyProperty; safecall;
    function GetZoomMode(element: IDependencyObject): ZoomMode; safecall;
    procedure SetZoomMode(element: IDependencyObject; zoomMode: ZoomMode); safecall;
    function get_CanContentRenderOutsideBoundsProperty: IDependencyProperty; safecall;
    function GetCanContentRenderOutsideBounds(element: IDependencyObject): Boolean; safecall;
    procedure SetCanContentRenderOutsideBounds(element: IDependencyObject; canContentRenderOutsideBounds: Boolean); safecall;
    function get_IsDeferredScrollingEnabledProperty: IDependencyProperty; safecall;
    function GetIsDeferredScrollingEnabled(element: IDependencyObject): Boolean; safecall;
    procedure SetIsDeferredScrollingEnabled(element: IDependencyObject; isDeferredScrollingEnabled: Boolean); safecall;
    function get_BringIntoViewOnFocusChangeProperty: IDependencyProperty; safecall;
    function GetBringIntoViewOnFocusChange(element: IDependencyObject): Boolean; safecall;
    procedure SetBringIntoViewOnFocusChange(element: IDependencyObject; bringIntoViewOnFocusChange: Boolean); safecall;
    property BringIntoViewOnFocusChangeProperty: IDependencyProperty read get_BringIntoViewOnFocusChangeProperty;
    property CanContentRenderOutsideBoundsProperty: IDependencyProperty read get_CanContentRenderOutsideBoundsProperty;
    property ComputedHorizontalScrollBarVisibilityProperty: IDependencyProperty read get_ComputedHorizontalScrollBarVisibilityProperty;
    property ComputedVerticalScrollBarVisibilityProperty: IDependencyProperty read get_ComputedVerticalScrollBarVisibilityProperty;
    property ExtentHeightProperty: IDependencyProperty read get_ExtentHeightProperty;
    property ExtentWidthProperty: IDependencyProperty read get_ExtentWidthProperty;
    property HorizontalAnchorRatioProperty: IDependencyProperty read get_HorizontalAnchorRatioProperty;
    property HorizontalOffsetProperty: IDependencyProperty read get_HorizontalOffsetProperty;
    property HorizontalScrollBarVisibilityProperty: IDependencyProperty read get_HorizontalScrollBarVisibilityProperty;
    property HorizontalScrollModeProperty: IDependencyProperty read get_HorizontalScrollModeProperty;
    property HorizontalSnapPointsAlignmentProperty: IDependencyProperty read get_HorizontalSnapPointsAlignmentProperty;
    property HorizontalSnapPointsTypeProperty: IDependencyProperty read get_HorizontalSnapPointsTypeProperty;
    property IsDeferredScrollingEnabledProperty: IDependencyProperty read get_IsDeferredScrollingEnabledProperty;
    property IsHorizontalRailEnabledProperty: IDependencyProperty read get_IsHorizontalRailEnabledProperty;
    property IsHorizontalScrollChainingEnabledProperty: IDependencyProperty read get_IsHorizontalScrollChainingEnabledProperty;
    property IsScrollInertiaEnabledProperty: IDependencyProperty read get_IsScrollInertiaEnabledProperty;
    property IsVerticalRailEnabledProperty: IDependencyProperty read get_IsVerticalRailEnabledProperty;
    property IsVerticalScrollChainingEnabledProperty: IDependencyProperty read get_IsVerticalScrollChainingEnabledProperty;
    property IsZoomChainingEnabledProperty: IDependencyProperty read get_IsZoomChainingEnabledProperty;
    property IsZoomInertiaEnabledProperty: IDependencyProperty read get_IsZoomInertiaEnabledProperty;
    property LeftHeaderProperty: IDependencyProperty read get_LeftHeaderProperty;
    property MaxZoomFactorProperty: IDependencyProperty read get_MaxZoomFactorProperty;
    property MinZoomFactorProperty: IDependencyProperty read get_MinZoomFactorProperty;
    property ReduceViewportForCoreInputViewOcclusionsProperty: IDependencyProperty read get_ReduceViewportForCoreInputViewOcclusionsProperty;
    property ScrollableHeightProperty: IDependencyProperty read get_ScrollableHeightProperty;
    property ScrollableWidthProperty: IDependencyProperty read get_ScrollableWidthProperty;
    property TopHeaderProperty: IDependencyProperty read get_TopHeaderProperty;
    property TopLeftHeaderProperty: IDependencyProperty read get_TopLeftHeaderProperty;
    property VerticalAnchorRatioProperty: IDependencyProperty read get_VerticalAnchorRatioProperty;
    property VerticalOffsetProperty: IDependencyProperty read get_VerticalOffsetProperty;
    property VerticalScrollBarVisibilityProperty: IDependencyProperty read get_VerticalScrollBarVisibilityProperty;
    property VerticalScrollModeProperty: IDependencyProperty read get_VerticalScrollModeProperty;
    property VerticalSnapPointsAlignmentProperty: IDependencyProperty read get_VerticalSnapPointsAlignmentProperty;
    property VerticalSnapPointsTypeProperty: IDependencyProperty read get_VerticalSnapPointsTypeProperty;
    property ViewportHeightProperty: IDependencyProperty read get_ViewportHeightProperty;
    property ViewportWidthProperty: IDependencyProperty read get_ViewportWidthProperty;
    property ZoomFactorProperty: IDependencyProperty read get_ZoomFactorProperty;
    property ZoomModeProperty: IDependencyProperty read get_ZoomModeProperty;
    property ZoomSnapPointsProperty: IDependencyProperty read get_ZoomSnapPointsProperty;
    property ZoomSnapPointsTypeProperty: IDependencyProperty read get_ZoomSnapPointsTypeProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.ISectionsInViewChangedEventArgsFactory
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_SectionsInViewChangedEventArgs)]
  ISectionsInViewChangedEventArgsFactory = interface(IInspectable)
  ['{DF5AB91F-E316-53CF-9636-A85BDC24E85E}']
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.ISelectionChangedEventArgsFactory
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_SelectionChangedEventArgs)]
  ISelectionChangedEventArgsFactory = interface(IInspectable)
  ['{0FCD041D-465F-5745-9882-0C8348E4135D}']
    function CreateInstanceWithRemovedItemsAndAddedItems(removedItems: IVector_1__IInspectable; addedItems: IVector_1__IInspectable; baseInterface: IInspectable; out innerInterface: IInspectable): ISelectionChangedEventArgs; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.ISemanticZoomStatics
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_SemanticZoom)]
  ISemanticZoomStatics = interface(IInspectable)
  ['{E4FBD358-9342-56D3-B5C2-BF80DE6F47ED}']
    function get_ZoomedInViewProperty: IDependencyProperty; safecall;
    function get_ZoomedOutViewProperty: IDependencyProperty; safecall;
    function get_IsZoomedInViewActiveProperty: IDependencyProperty; safecall;
    function get_CanChangeViewsProperty: IDependencyProperty; safecall;
    function get_IsZoomOutButtonEnabledProperty: IDependencyProperty; safecall;
    property CanChangeViewsProperty: IDependencyProperty read get_CanChangeViewsProperty;
    property IsZoomOutButtonEnabledProperty: IDependencyProperty read get_IsZoomOutButtonEnabledProperty;
    property IsZoomedInViewActiveProperty: IDependencyProperty read get_IsZoomedInViewActiveProperty;
    property ZoomedInViewProperty: IDependencyProperty read get_ZoomedInViewProperty;
    property ZoomedOutViewProperty: IDependencyProperty read get_ZoomedOutViewProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.ISliderFactory
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_Slider)]
  ISliderFactory = interface(IInspectable)
  ['{06604D71-34CA-5F39-9656-29D81D3C110C}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): ISlider; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.ISliderStatics
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_Slider)]
  ISliderStatics = interface(IInspectable)
  ['{F0541F7B-6D81-59E2-997A-2E65FBCCCD21}']
    function get_IntermediateValueProperty: IDependencyProperty; safecall;
    function get_StepFrequencyProperty: IDependencyProperty; safecall;
    function get_SnapsToProperty: IDependencyProperty; safecall;
    function get_TickFrequencyProperty: IDependencyProperty; safecall;
    function get_TickPlacementProperty: IDependencyProperty; safecall;
    function get_OrientationProperty: IDependencyProperty; safecall;
    function get_IsDirectionReversedProperty: IDependencyProperty; safecall;
    function get_IsThumbToolTipEnabledProperty: IDependencyProperty; safecall;
    function get_ThumbToolTipValueConverterProperty: IDependencyProperty; safecall;
    function get_HeaderProperty: IDependencyProperty; safecall;
    function get_HeaderTemplateProperty: IDependencyProperty; safecall;
    property HeaderProperty: IDependencyProperty read get_HeaderProperty;
    property HeaderTemplateProperty: IDependencyProperty read get_HeaderTemplateProperty;
    property IntermediateValueProperty: IDependencyProperty read get_IntermediateValueProperty;
    property IsDirectionReversedProperty: IDependencyProperty read get_IsDirectionReversedProperty;
    property IsThumbToolTipEnabledProperty: IDependencyProperty read get_IsThumbToolTipEnabledProperty;
    property OrientationProperty: IDependencyProperty read get_OrientationProperty;
    property SnapsToProperty: IDependencyProperty read get_SnapsToProperty;
    property StepFrequencyProperty: IDependencyProperty read get_StepFrequencyProperty;
    property ThumbToolTipValueConverterProperty: IDependencyProperty read get_ThumbToolTipValueConverterProperty;
    property TickFrequencyProperty: IDependencyProperty read get_TickFrequencyProperty;
    property TickPlacementProperty: IDependencyProperty read get_TickPlacementProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.ISplitButtonFactory
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_SplitButton)]
  ISplitButtonFactory = interface(IInspectable)
  ['{07510092-2612-55E7-981C-A536DDD4570E}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): ISplitButton; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.ISplitButtonStatics
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_SplitButton)]
  ISplitButtonStatics = interface(IInspectable)
  ['{D54DDD05-73E7-55A1-A119-AA342E5F9FEB}']
    function get_FlyoutProperty: IDependencyProperty; safecall;
    function get_CommandProperty: IDependencyProperty; safecall;
    function get_CommandParameterProperty: IDependencyProperty; safecall;
    property CommandParameterProperty: IDependencyProperty read get_CommandParameterProperty;
    property CommandProperty: IDependencyProperty read get_CommandProperty;
    property FlyoutProperty: IDependencyProperty read get_FlyoutProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.ISplitViewFactory
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_SplitView)]
  ISplitViewFactory = interface(IInspectable)
  ['{389ECE72-75CE-561B-AAD3-C52125CA6A50}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): ISplitView; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.ISplitViewStatics
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_SplitView)]
  ISplitViewStatics = interface(IInspectable)
  ['{1C69A263-552C-5505-AC81-49E247FEE9DB}']
    function get_ContentProperty: IDependencyProperty; safecall;
    function get_PaneProperty: IDependencyProperty; safecall;
    function get_IsPaneOpenProperty: IDependencyProperty; safecall;
    function get_OpenPaneLengthProperty: IDependencyProperty; safecall;
    function get_CompactPaneLengthProperty: IDependencyProperty; safecall;
    function get_PanePlacementProperty: IDependencyProperty; safecall;
    function get_DisplayModeProperty: IDependencyProperty; safecall;
    function get_TemplateSettingsProperty: IDependencyProperty; safecall;
    function get_PaneBackgroundProperty: IDependencyProperty; safecall;
    function get_LightDismissOverlayModeProperty: IDependencyProperty; safecall;
    property CompactPaneLengthProperty: IDependencyProperty read get_CompactPaneLengthProperty;
    property ContentProperty: IDependencyProperty read get_ContentProperty;
    property DisplayModeProperty: IDependencyProperty read get_DisplayModeProperty;
    property IsPaneOpenProperty: IDependencyProperty read get_IsPaneOpenProperty;
    property LightDismissOverlayModeProperty: IDependencyProperty read get_LightDismissOverlayModeProperty;
    property OpenPaneLengthProperty: IDependencyProperty read get_OpenPaneLengthProperty;
    property PaneBackgroundProperty: IDependencyProperty read get_PaneBackgroundProperty;
    property PanePlacementProperty: IDependencyProperty read get_PanePlacementProperty;
    property PaneProperty: IDependencyProperty read get_PaneProperty;
    property TemplateSettingsProperty: IDependencyProperty read get_TemplateSettingsProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IStackLayout
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_StackLayout)]
  IStackLayout = interface(IInspectable)
  ['{3EA9C3DD-8103-571F-9E07-44EA76C91A10}']
    function get_Orientation: Orientation; safecall;
    procedure put_Orientation(value: Orientation); safecall;
    function get_Spacing: Double; safecall;
    procedure put_Spacing(value: Double); safecall;
    property Orientation_: Orientation read get_Orientation write put_Orientation;
    property Spacing: Double read get_Spacing write put_Spacing;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IStackLayoutFactory
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_StackLayout)]
  IStackLayoutFactory = interface(IInspectable)
  ['{EA606F86-21A1-5C35-911E-4A1DE8BC69D9}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IStackLayout; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IStackLayoutStatics
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_StackLayout)]
  IStackLayoutStatics = interface(IInspectable)
  ['{5610AECF-FB2A-5726-AC3A-16479BA2ECAD}']
    function get_OrientationProperty: IDependencyProperty; safecall;
    function get_SpacingProperty: IDependencyProperty; safecall;
    property OrientationProperty: IDependencyProperty read get_OrientationProperty;
    property SpacingProperty: IDependencyProperty read get_SpacingProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IStackPanel
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_StackPanel)]
  IStackPanel = interface(IInspectable)
  ['{493AB00B-3A6A-5E4A-9452-407CD5197406}']
    function get_AreScrollSnapPointsRegular: Boolean; safecall;
    procedure put_AreScrollSnapPointsRegular(value: Boolean); safecall;
    function get_Orientation: Orientation; safecall;
    procedure put_Orientation(value: Orientation); safecall;
    function get_BackgroundSizing: BackgroundSizing; safecall;
    procedure put_BackgroundSizing(value: BackgroundSizing); safecall;
    function get_BorderBrush: IBrush; safecall;
    procedure put_BorderBrush(value: IBrush); safecall;
    function get_BorderThickness: Thickness; safecall;
    procedure put_BorderThickness(value: Thickness); safecall;
    function get_CornerRadius: CornerRadius; safecall;
    procedure put_CornerRadius(value: CornerRadius); safecall;
    function get_Padding: Thickness; safecall;
    procedure put_Padding(value: Thickness); safecall;
    function get_Spacing: Double; safecall;
    procedure put_Spacing(value: Double); safecall;
    property AreScrollSnapPointsRegular: Boolean read get_AreScrollSnapPointsRegular write put_AreScrollSnapPointsRegular;
    property BackgroundSizing_: BackgroundSizing read get_BackgroundSizing write put_BackgroundSizing;
    property BorderBrush: IBrush read get_BorderBrush write put_BorderBrush;
    property BorderThickness: Thickness read get_BorderThickness write put_BorderThickness;
    property CornerRadius_: CornerRadius read get_CornerRadius write put_CornerRadius;
    property Orientation_: Orientation read get_Orientation write put_Orientation;
    property Padding: Thickness read get_Padding write put_Padding;
    property Spacing: Double read get_Spacing write put_Spacing;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IStackPanelFactory
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_StackPanel)]
  IStackPanelFactory = interface(IInspectable)
  ['{64C1D388-47A2-5A74-A75B-559D151EE5AC}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IStackPanel; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IStackPanelStatics
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_StackPanel)]
  IStackPanelStatics = interface(IInspectable)
  ['{10BB04E3-EB01-5EA8-9F96-69508479DEF9}']
    function get_AreScrollSnapPointsRegularProperty: IDependencyProperty; safecall;
    function get_OrientationProperty: IDependencyProperty; safecall;
    function get_BackgroundSizingProperty: IDependencyProperty; safecall;
    function get_BorderBrushProperty: IDependencyProperty; safecall;
    function get_BorderThicknessProperty: IDependencyProperty; safecall;
    function get_CornerRadiusProperty: IDependencyProperty; safecall;
    function get_PaddingProperty: IDependencyProperty; safecall;
    function get_SpacingProperty: IDependencyProperty; safecall;
    property AreScrollSnapPointsRegularProperty: IDependencyProperty read get_AreScrollSnapPointsRegularProperty;
    property BackgroundSizingProperty: IDependencyProperty read get_BackgroundSizingProperty;
    property BorderBrushProperty: IDependencyProperty read get_BorderBrushProperty;
    property BorderThicknessProperty: IDependencyProperty read get_BorderThicknessProperty;
    property CornerRadiusProperty: IDependencyProperty read get_CornerRadiusProperty;
    property OrientationProperty: IDependencyProperty read get_OrientationProperty;
    property PaddingProperty: IDependencyProperty read get_PaddingProperty;
    property SpacingProperty: IDependencyProperty read get_SpacingProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IStyleSelectorFactory
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_StyleSelector)]
  IStyleSelectorFactory = interface(IInspectable)
  ['{2A033206-A4FB-5F11-8C2D-61E1DF78FBC3}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IStyleSelector; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IStyleSelectorOverrides
  IStyleSelectorOverrides = interface(IInspectable)
  ['{26015D75-EF00-5C78-8E58-163DA10F694F}']
    function SelectStyleCore(item: IInspectable; container: IDependencyObject): IStyle; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.ISwapChainBackgroundPanel
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_SwapChainBackgroundPanel)]
  ISwapChainBackgroundPanel = interface(IInspectable)
  ['{095A213F-FFEA-55FF-B875-E698254BA6DF}']
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.ISwapChainBackgroundPanelFactory
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_SwapChainBackgroundPanel)]
  ISwapChainBackgroundPanelFactory = interface(IInspectable)
  ['{83ABAA33-6D13-5B13-8E92-EA95579B6FF3}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): ISwapChainBackgroundPanel; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.ISwapChainPanelFactory
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_SwapChainPanel)]
  ISwapChainPanelFactory = interface(IInspectable)
  ['{38D00B69-5759-5F37-9E1C-3AE0D4288B26}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): ISwapChainPanel; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.ISwapChainPanelStatics
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_SwapChainPanel)]
  ISwapChainPanelStatics = interface(IInspectable)
  ['{D83B0621-AACA-534B-AFDE-5370167176B5}']
    function get_CompositionScaleXProperty: IDependencyProperty; safecall;
    function get_CompositionScaleYProperty: IDependencyProperty; safecall;
    property CompositionScaleXProperty: IDependencyProperty read get_CompositionScaleXProperty;
    property CompositionScaleYProperty: IDependencyProperty read get_CompositionScaleYProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.ISwipeItems
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_SwipeItems)]
  ISwipeItems = interface(IInspectable)
  ['{40D3022B-C82B-5565-A4E4-AD9D7A66B1A9}']
    function get_Mode: SwipeMode; safecall;
    procedure put_Mode(value: SwipeMode); safecall;
    property Mode: SwipeMode read get_Mode write put_Mode;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.ISwipeControl
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_SwipeControl)]
  ISwipeControl = interface(IInspectable)
  ['{337800FE-F51D-5F6B-9D35-E7F5DE10A97C}']
    function get_LeftItems: ISwipeItems; safecall;
    procedure put_LeftItems(value: ISwipeItems); safecall;
    function get_RightItems: ISwipeItems; safecall;
    procedure put_RightItems(value: ISwipeItems); safecall;
    function get_TopItems: ISwipeItems; safecall;
    procedure put_TopItems(value: ISwipeItems); safecall;
    function get_BottomItems: ISwipeItems; safecall;
    procedure put_BottomItems(value: ISwipeItems); safecall;
    procedure Close; safecall;
    property BottomItems: ISwipeItems read get_BottomItems write put_BottomItems;
    property LeftItems: ISwipeItems read get_LeftItems write put_LeftItems;
    property RightItems: ISwipeItems read get_RightItems write put_RightItems;
    property TopItems: ISwipeItems read get_TopItems write put_TopItems;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.ISwipeControlFactory
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_SwipeControl)]
  ISwipeControlFactory = interface(IInspectable)
  ['{6E9213F4-30C1-56CA-9905-46AA1A83DFC1}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): ISwipeControl; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.ISwipeControlStatics
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_SwipeControl)]
  ISwipeControlStatics = interface(IInspectable)
  ['{FB216C88-C1B1-56AC-A5DD-67064D1E47BC}']
    function get_LeftItemsProperty: IDependencyProperty; safecall;
    function get_RightItemsProperty: IDependencyProperty; safecall;
    function get_TopItemsProperty: IDependencyProperty; safecall;
    function get_BottomItemsProperty: IDependencyProperty; safecall;
    property BottomItemsProperty: IDependencyProperty read get_BottomItemsProperty;
    property LeftItemsProperty: IDependencyProperty read get_LeftItemsProperty;
    property RightItemsProperty: IDependencyProperty read get_RightItemsProperty;
    property TopItemsProperty: IDependencyProperty read get_TopItemsProperty;
  end;

  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.ISwipeItemInvokedEventArgs
  ISwipeItemInvokedEventArgs = interface(IInspectable)
  ['{7BF51C95-53A2-5A0D-BB32-2B4B1F7D2F20}']
    function get_SwipeControl: ISwipeControl; safecall;
    property SwipeControl: ISwipeControl read get_SwipeControl;
  end;

  // Generic Delegate for:
  // Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.Controls.ISwipeItem,Microsoft.UI.Xaml.Controls.ISwipeItemInvokedEventArgs>
  TypedEventHandler_2__ISwipeItem__ISwipeItemInvokedEventArgs_Delegate_Base = interface(IUnknown)
  ['{C8E621BB-E0A7-52ED-9E0A-29C7FA791FF6}']
    procedure Invoke(sender: ISwipeItem; args: ISwipeItemInvokedEventArgs); safecall;
  end;
  // UsedAPI Interface
  // Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.Controls.ISwipeItem,Microsoft.UI.Xaml.Controls.ISwipeItemInvokedEventArgs>
  TypedEventHandler_2__ISwipeItem__ISwipeItemInvokedEventArgs = interface(TypedEventHandler_2__ISwipeItem__ISwipeItemInvokedEventArgs_Delegate_Base)
  ['{F654624B-4E6B-53E0-A040-FEB6188A924D}']
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.ISwipeItem
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_SwipeItem)]
  ISwipeItem = interface(IInspectable)
  ['{5E8D4950-B826-510A-B309-77AFCDC65B1F}']
    function get_Text: HSTRING; safecall;
    procedure put_Text(value: HSTRING); safecall;
    function get_IconSource: IIconSource; safecall;
    procedure put_IconSource(value: IIconSource); safecall;
    function get_Background: IBrush; safecall;
    procedure put_Background(value: IBrush); safecall;
    function get_Foreground: IBrush; safecall;
    procedure put_Foreground(value: IBrush); safecall;
    function get_Command: Input_ICommand; safecall;
    procedure put_Command(value: Input_ICommand); safecall;
    function get_CommandParameter: IInspectable; safecall;
    procedure put_CommandParameter(value: IInspectable); safecall;
    function get_BehaviorOnInvoked: SwipeBehaviorOnInvoked; safecall;
    procedure put_BehaviorOnInvoked(value: SwipeBehaviorOnInvoked); safecall;
    function add_Invoked(handler: TypedEventHandler_2__ISwipeItem__ISwipeItemInvokedEventArgs): EventRegistrationToken; safecall;
    procedure remove_Invoked(token: EventRegistrationToken); safecall;
    property Background: IBrush read get_Background write put_Background;
    property BehaviorOnInvoked: SwipeBehaviorOnInvoked read get_BehaviorOnInvoked write put_BehaviorOnInvoked;
    property Command: Input_ICommand read get_Command write put_Command;
    property CommandParameter: IInspectable read get_CommandParameter write put_CommandParameter;
    property Foreground: IBrush read get_Foreground write put_Foreground;
    property IconSource: IIconSource read get_IconSource write put_IconSource;
    property Text: HSTRING read get_Text write put_Text;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.ISwipeItemFactory
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_SwipeItem)]
  ISwipeItemFactory = interface(IInspectable)
  ['{011513E1-1ADC-5A69-A74F-623FCC18A51C}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): ISwipeItem; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.ISwipeItemStatics
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_SwipeItem)]
  ISwipeItemStatics = interface(IInspectable)
  ['{7898CF24-7A54-586A-82D5-BBD54E596510}']
    function get_IconSourceProperty: IDependencyProperty; safecall;
    function get_TextProperty: IDependencyProperty; safecall;
    function get_BackgroundProperty: IDependencyProperty; safecall;
    function get_ForegroundProperty: IDependencyProperty; safecall;
    function get_CommandProperty: IDependencyProperty; safecall;
    function get_CommandParameterProperty: IDependencyProperty; safecall;
    function get_BehaviorOnInvokedProperty: IDependencyProperty; safecall;
    property BackgroundProperty: IDependencyProperty read get_BackgroundProperty;
    property BehaviorOnInvokedProperty: IDependencyProperty read get_BehaviorOnInvokedProperty;
    property CommandParameterProperty: IDependencyProperty read get_CommandParameterProperty;
    property CommandProperty: IDependencyProperty read get_CommandProperty;
    property ForegroundProperty: IDependencyProperty read get_ForegroundProperty;
    property IconSourceProperty: IDependencyProperty read get_IconSourceProperty;
    property TextProperty: IDependencyProperty read get_TextProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.ISwipeItemsFactory
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_SwipeItems)]
  ISwipeItemsFactory = interface(IInspectable)
  ['{9A5D7D77-39BD-5B81-AB4E-F44ACA6EDE3F}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): ISwipeItems; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.ISwipeItemsStatics
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_SwipeItems)]
  ISwipeItemsStatics = interface(IInspectable)
  ['{DB32C3B0-A93F-5797-A18D-D946B0615906}']
    function get_ModeProperty: IDependencyProperty; safecall;
    property ModeProperty: IDependencyProperty read get_ModeProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.ISymbolIcon
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_SymbolIcon)]
  ISymbolIcon = interface(IInspectable)
  ['{A4322906-0DBE-5EB7-8B64-3E832246EB7F}']
    function get_Symbol: Symbol; safecall;
    procedure put_Symbol(value: Symbol); safecall;
    property Symbol_: Symbol read get_Symbol write put_Symbol;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.ISymbolIconFactory
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_SymbolIcon)]
  ISymbolIconFactory = interface(IInspectable)
  ['{D4430447-567C-5AAD-996A-A547774E2C3C}']
    function CreateInstanceWithSymbol(symbol: Symbol): ISymbolIcon; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.ISymbolIconSource
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_SymbolIconSource)]
  ISymbolIconSource = interface(IInspectable)
  ['{45120D6B-E868-59F2-A30A-B1915CE374BD}']
    function get_Symbol: Symbol; safecall;
    procedure put_Symbol(value: Symbol); safecall;
    property Symbol_: Symbol read get_Symbol write put_Symbol;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.ISymbolIconSourceFactory
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_SymbolIconSource)]
  ISymbolIconSourceFactory = interface(IInspectable)
  ['{AFBF55FA-FF79-552A-A3A1-48E2EF17152A}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): ISymbolIconSource; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.ISymbolIconSourceStatics
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_SymbolIconSource)]
  ISymbolIconSourceStatics = interface(IInspectable)
  ['{FDB6B1C7-33D9-56D0-98E5-8776AA1BB79A}']
    function get_SymbolProperty: IDependencyProperty; safecall;
    property SymbolProperty: IDependencyProperty read get_SymbolProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.ISymbolIconStatics
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_SymbolIcon)]
  ISymbolIconStatics = interface(IInspectable)
  ['{CCAA0C34-31F2-50F1-B328-BE6EDC291AAA}']
    function get_SymbolProperty: IDependencyProperty; safecall;
    property SymbolProperty: IDependencyProperty read get_SymbolProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.ITabViewFactory
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_TabView)]
  ITabViewFactory = interface(IInspectable)
  ['{E7E83685-EEDF-5106-9429-884435AB166B}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): ITabView; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.ITabViewItemFactory
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_TabViewItem)]
  ITabViewItemFactory = interface(IInspectable)
  ['{B64C2423-7E56-5D41-8A84-1EE28F9826A4}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): ITabViewItem; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.ITabViewItemStatics
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_TabViewItem)]
  ITabViewItemStatics = interface(IInspectable)
  ['{4CFC7EAB-2EFF-5457-8251-C19D374AB34D}']
    function get_HeaderProperty: IDependencyProperty; safecall;
    function get_HeaderTemplateProperty: IDependencyProperty; safecall;
    function get_IconSourceProperty: IDependencyProperty; safecall;
    function get_IsClosableProperty: IDependencyProperty; safecall;
    function get_TabViewTemplateSettingsProperty: IDependencyProperty; safecall;
    property HeaderProperty: IDependencyProperty read get_HeaderProperty;
    property HeaderTemplateProperty: IDependencyProperty read get_HeaderTemplateProperty;
    property IconSourceProperty: IDependencyProperty read get_IconSourceProperty;
    property IsClosableProperty: IDependencyProperty read get_IsClosableProperty;
    property TabViewTemplateSettingsProperty: IDependencyProperty read get_TabViewTemplateSettingsProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.ITabViewItemTemplateSettings2
  ITabViewItemTemplateSettings2 = interface(IInspectable)
  ['{9E2780D3-7056-5AAF-9A7A-404A2C094CED}']
    function get_TabGeometry: IGeometry; safecall;
    procedure put_TabGeometry(value: IGeometry); safecall;
    property TabGeometry: IGeometry read get_TabGeometry write put_TabGeometry;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.ITabViewItemTemplateSettingsFactory
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_TabViewItemTemplateSettings)]
  ITabViewItemTemplateSettingsFactory = interface(IInspectable)
  ['{CBA3E467-4C98-5885-BA24-6FA699CC8EDD}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): ITabViewItemTemplateSettings; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.ITabViewItemTemplateSettingsStatics
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_TabViewItemTemplateSettings)]
  ITabViewItemTemplateSettingsStatics = interface(IInspectable)
  ['{EB62DD88-FC12-5338-8E88-788BE72D07D6}']
    function get_IconElementProperty: IDependencyProperty; safecall;
    property IconElementProperty: IDependencyProperty read get_IconElementProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.ITabViewItemTemplateSettingsStatics2
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_TabViewItemTemplateSettings)]
  ITabViewItemTemplateSettingsStatics2 = interface(IInspectable)
  ['{D31AB42B-3842-5E4D-8845-6232EEA8EE1D}']
    function get_TabGeometryProperty: IDependencyProperty; safecall;
    property TabGeometryProperty: IDependencyProperty read get_TabGeometryProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.ITabViewStatics
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_TabView)]
  ITabViewStatics = interface(IInspectable)
  ['{F4326C08-1B94-53D7-934F-E6AE0D3D18AB}']
    function get_TabWidthModeProperty: IDependencyProperty; safecall;
    function get_TabStripHeaderProperty: IDependencyProperty; safecall;
    function get_TabStripHeaderTemplateProperty: IDependencyProperty; safecall;
    function get_TabStripFooterProperty: IDependencyProperty; safecall;
    function get_TabStripFooterTemplateProperty: IDependencyProperty; safecall;
    function get_IsAddTabButtonVisibleProperty: IDependencyProperty; safecall;
    function get_AddTabButtonCommandProperty: IDependencyProperty; safecall;
    function get_AddTabButtonCommandParameterProperty: IDependencyProperty; safecall;
    function get_TabItemsSourceProperty: IDependencyProperty; safecall;
    function get_TabItemsProperty: IDependencyProperty; safecall;
    function get_TabItemTemplateProperty: IDependencyProperty; safecall;
    function get_TabItemTemplateSelectorProperty: IDependencyProperty; safecall;
    function get_CloseButtonOverlayModeProperty: IDependencyProperty; safecall;
    function get_CanDragTabsProperty: IDependencyProperty; safecall;
    function get_CanReorderTabsProperty: IDependencyProperty; safecall;
    function get_AllowDropTabsProperty: IDependencyProperty; safecall;
    function get_SelectedIndexProperty: IDependencyProperty; safecall;
    function get_SelectedItemProperty: IDependencyProperty; safecall;
    property AddTabButtonCommandParameterProperty: IDependencyProperty read get_AddTabButtonCommandParameterProperty;
    property AddTabButtonCommandProperty: IDependencyProperty read get_AddTabButtonCommandProperty;
    property AllowDropTabsProperty: IDependencyProperty read get_AllowDropTabsProperty;
    property CanDragTabsProperty: IDependencyProperty read get_CanDragTabsProperty;
    property CanReorderTabsProperty: IDependencyProperty read get_CanReorderTabsProperty;
    property CloseButtonOverlayModeProperty: IDependencyProperty read get_CloseButtonOverlayModeProperty;
    property IsAddTabButtonVisibleProperty: IDependencyProperty read get_IsAddTabButtonVisibleProperty;
    property SelectedIndexProperty: IDependencyProperty read get_SelectedIndexProperty;
    property SelectedItemProperty: IDependencyProperty read get_SelectedItemProperty;
    property TabItemTemplateProperty: IDependencyProperty read get_TabItemTemplateProperty;
    property TabItemTemplateSelectorProperty: IDependencyProperty read get_TabItemTemplateSelectorProperty;
    property TabItemsProperty: IDependencyProperty read get_TabItemsProperty;
    property TabItemsSourceProperty: IDependencyProperty read get_TabItemsSourceProperty;
    property TabStripFooterProperty: IDependencyProperty read get_TabStripFooterProperty;
    property TabStripFooterTemplateProperty: IDependencyProperty read get_TabStripFooterTemplateProperty;
    property TabStripHeaderProperty: IDependencyProperty read get_TabStripHeaderProperty;
    property TabStripHeaderTemplateProperty: IDependencyProperty read get_TabStripHeaderTemplateProperty;
    property TabWidthModeProperty: IDependencyProperty read get_TabWidthModeProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.ITeachingTipFactory
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_TeachingTip)]
  ITeachingTipFactory = interface(IInspectable)
  ['{A3ECD47D-2972-5D19-A62E-DDFBC5E1AD57}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): ITeachingTip; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.ITeachingTipStatics
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_TeachingTip)]
  ITeachingTipStatics = interface(IInspectable)
  ['{7C3ECDDB-0B4D-51C2-A27F-89180AFD45A8}']
    function get_IsOpenProperty: IDependencyProperty; safecall;
    function get_TargetProperty: IDependencyProperty; safecall;
    function get_TailVisibilityProperty: IDependencyProperty; safecall;
    function get_TitleProperty: IDependencyProperty; safecall;
    function get_SubtitleProperty: IDependencyProperty; safecall;
    function get_ActionButtonContentProperty: IDependencyProperty; safecall;
    function get_ActionButtonStyleProperty: IDependencyProperty; safecall;
    function get_ActionButtonCommandProperty: IDependencyProperty; safecall;
    function get_ActionButtonCommandParameterProperty: IDependencyProperty; safecall;
    function get_CloseButtonContentProperty: IDependencyProperty; safecall;
    function get_CloseButtonStyleProperty: IDependencyProperty; safecall;
    function get_CloseButtonCommandProperty: IDependencyProperty; safecall;
    function get_CloseButtonCommandParameterProperty: IDependencyProperty; safecall;
    function get_PlacementMarginProperty: IDependencyProperty; safecall;
    function get_ShouldConstrainToRootBoundsProperty: IDependencyProperty; safecall;
    function get_IsLightDismissEnabledProperty: IDependencyProperty; safecall;
    function get_PreferredPlacementProperty: IDependencyProperty; safecall;
    function get_HeroContentPlacementProperty: IDependencyProperty; safecall;
    function get_HeroContentProperty: IDependencyProperty; safecall;
    function get_IconSourceProperty: IDependencyProperty; safecall;
    function get_TemplateSettingsProperty: IDependencyProperty; safecall;
    property ActionButtonCommandParameterProperty: IDependencyProperty read get_ActionButtonCommandParameterProperty;
    property ActionButtonCommandProperty: IDependencyProperty read get_ActionButtonCommandProperty;
    property ActionButtonContentProperty: IDependencyProperty read get_ActionButtonContentProperty;
    property ActionButtonStyleProperty: IDependencyProperty read get_ActionButtonStyleProperty;
    property CloseButtonCommandParameterProperty: IDependencyProperty read get_CloseButtonCommandParameterProperty;
    property CloseButtonCommandProperty: IDependencyProperty read get_CloseButtonCommandProperty;
    property CloseButtonContentProperty: IDependencyProperty read get_CloseButtonContentProperty;
    property CloseButtonStyleProperty: IDependencyProperty read get_CloseButtonStyleProperty;
    property HeroContentPlacementProperty: IDependencyProperty read get_HeroContentPlacementProperty;
    property HeroContentProperty: IDependencyProperty read get_HeroContentProperty;
    property IconSourceProperty: IDependencyProperty read get_IconSourceProperty;
    property IsLightDismissEnabledProperty: IDependencyProperty read get_IsLightDismissEnabledProperty;
    property IsOpenProperty: IDependencyProperty read get_IsOpenProperty;
    property PlacementMarginProperty: IDependencyProperty read get_PlacementMarginProperty;
    property PreferredPlacementProperty: IDependencyProperty read get_PreferredPlacementProperty;
    property ShouldConstrainToRootBoundsProperty: IDependencyProperty read get_ShouldConstrainToRootBoundsProperty;
    property SubtitleProperty: IDependencyProperty read get_SubtitleProperty;
    property TailVisibilityProperty: IDependencyProperty read get_TailVisibilityProperty;
    property TargetProperty: IDependencyProperty read get_TargetProperty;
    property TemplateSettingsProperty: IDependencyProperty read get_TemplateSettingsProperty;
    property TitleProperty: IDependencyProperty read get_TitleProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.ITeachingTipTemplateSettingsFactory
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_TeachingTipTemplateSettings)]
  ITeachingTipTemplateSettingsFactory = interface(IInspectable)
  ['{63210545-E195-56CD-BCCD-169255E134E3}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): ITeachingTipTemplateSettings; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.ITeachingTipTemplateSettingsStatics
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_TeachingTipTemplateSettings)]
  ITeachingTipTemplateSettingsStatics = interface(IInspectable)
  ['{FA9ACF9A-9743-51EE-8DB9-8ABD063EDFEA}']
    function get_TopRightHighlightMarginProperty: IDependencyProperty; safecall;
    function get_TopLeftHighlightMarginProperty: IDependencyProperty; safecall;
    function get_IconElementProperty: IDependencyProperty; safecall;
    property IconElementProperty: IDependencyProperty read get_IconElementProperty;
    property TopLeftHighlightMarginProperty: IDependencyProperty read get_TopLeftHighlightMarginProperty;
    property TopRightHighlightMarginProperty: IDependencyProperty read get_TopRightHighlightMarginProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.ITextBlockStatics
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_TextBlock)]
  ITextBlockStatics = interface(IInspectable)
  ['{3187104B-65C2-5E53-B889-C8272B1314CD}']
    function get_FontSizeProperty: IDependencyProperty; safecall;
    function get_FontFamilyProperty: IDependencyProperty; safecall;
    function get_FontWeightProperty: IDependencyProperty; safecall;
    function get_FontStyleProperty: IDependencyProperty; safecall;
    function get_FontStretchProperty: IDependencyProperty; safecall;
    function get_CharacterSpacingProperty: IDependencyProperty; safecall;
    function get_ForegroundProperty: IDependencyProperty; safecall;
    function get_TextWrappingProperty: IDependencyProperty; safecall;
    function get_TextTrimmingProperty: IDependencyProperty; safecall;
    function get_TextAlignmentProperty: IDependencyProperty; safecall;
    function get_TextProperty: IDependencyProperty; safecall;
    function get_PaddingProperty: IDependencyProperty; safecall;
    function get_LineHeightProperty: IDependencyProperty; safecall;
    function get_LineStackingStrategyProperty: IDependencyProperty; safecall;
    function get_IsTextSelectionEnabledProperty: IDependencyProperty; safecall;
    function get_SelectedTextProperty: IDependencyProperty; safecall;
    function get_SelectionHighlightColorProperty: IDependencyProperty; safecall;
    function get_MaxLinesProperty: IDependencyProperty; safecall;
    function get_TextLineBoundsProperty: IDependencyProperty; safecall;
    function get_OpticalMarginAlignmentProperty: IDependencyProperty; safecall;
    function get_IsColorFontEnabledProperty: IDependencyProperty; safecall;
    function get_TextReadingOrderProperty: IDependencyProperty; safecall;
    function get_IsTextScaleFactorEnabledProperty: IDependencyProperty; safecall;
    function get_TextDecorationsProperty: IDependencyProperty; safecall;
    function get_IsTextTrimmedProperty: IDependencyProperty; safecall;
    function get_HorizontalTextAlignmentProperty: IDependencyProperty; safecall;
    function get_SelectionFlyoutProperty: IDependencyProperty; safecall;
    property CharacterSpacingProperty: IDependencyProperty read get_CharacterSpacingProperty;
    property FontFamilyProperty: IDependencyProperty read get_FontFamilyProperty;
    property FontSizeProperty: IDependencyProperty read get_FontSizeProperty;
    property FontStretchProperty: IDependencyProperty read get_FontStretchProperty;
    property FontStyleProperty: IDependencyProperty read get_FontStyleProperty;
    property FontWeightProperty: IDependencyProperty read get_FontWeightProperty;
    property ForegroundProperty: IDependencyProperty read get_ForegroundProperty;
    property HorizontalTextAlignmentProperty: IDependencyProperty read get_HorizontalTextAlignmentProperty;
    property IsColorFontEnabledProperty: IDependencyProperty read get_IsColorFontEnabledProperty;
    property IsTextScaleFactorEnabledProperty: IDependencyProperty read get_IsTextScaleFactorEnabledProperty;
    property IsTextSelectionEnabledProperty: IDependencyProperty read get_IsTextSelectionEnabledProperty;
    property IsTextTrimmedProperty: IDependencyProperty read get_IsTextTrimmedProperty;
    property LineHeightProperty: IDependencyProperty read get_LineHeightProperty;
    property LineStackingStrategyProperty: IDependencyProperty read get_LineStackingStrategyProperty;
    property MaxLinesProperty: IDependencyProperty read get_MaxLinesProperty;
    property OpticalMarginAlignmentProperty: IDependencyProperty read get_OpticalMarginAlignmentProperty;
    property PaddingProperty: IDependencyProperty read get_PaddingProperty;
    property SelectedTextProperty: IDependencyProperty read get_SelectedTextProperty;
    property SelectionFlyoutProperty: IDependencyProperty read get_SelectionFlyoutProperty;
    property SelectionHighlightColorProperty: IDependencyProperty read get_SelectionHighlightColorProperty;
    property TextAlignmentProperty: IDependencyProperty read get_TextAlignmentProperty;
    property TextDecorationsProperty: IDependencyProperty read get_TextDecorationsProperty;
    property TextLineBoundsProperty: IDependencyProperty read get_TextLineBoundsProperty;
    property TextProperty: IDependencyProperty read get_TextProperty;
    property TextReadingOrderProperty: IDependencyProperty read get_TextReadingOrderProperty;
    property TextTrimmingProperty: IDependencyProperty read get_TextTrimmingProperty;
    property TextWrappingProperty: IDependencyProperty read get_TextWrappingProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.ITextBoxFactory
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_TextBox)]
  ITextBoxFactory = interface(IInspectable)
  ['{E1D8B82E-BC60-5D27-B646-5CA4C4A69432}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): ITextBox; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.ITextBoxStatics
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_TextBox)]
  ITextBoxStatics = interface(IInspectable)
  ['{A41CF38F-712A-5599-BBED-5A3D9B6BD46E}']
    function get_TextProperty: IDependencyProperty; safecall;
    function get_MaxLengthProperty: IDependencyProperty; safecall;
    function get_IsReadOnlyProperty: IDependencyProperty; safecall;
    function get_AcceptsReturnProperty: IDependencyProperty; safecall;
    function get_TextAlignmentProperty: IDependencyProperty; safecall;
    function get_TextWrappingProperty: IDependencyProperty; safecall;
    function get_IsSpellCheckEnabledProperty: IDependencyProperty; safecall;
    function get_IsTextPredictionEnabledProperty: IDependencyProperty; safecall;
    function get_InputScopeProperty: IDependencyProperty; safecall;
    function get_HeaderProperty: IDependencyProperty; safecall;
    function get_HeaderTemplateProperty: IDependencyProperty; safecall;
    function get_PlaceholderTextProperty: IDependencyProperty; safecall;
    function get_SelectionHighlightColorProperty: IDependencyProperty; safecall;
    function get_PreventKeyboardDisplayOnProgrammaticFocusProperty: IDependencyProperty; safecall;
    function get_IsColorFontEnabledProperty: IDependencyProperty; safecall;
    function get_SelectionHighlightColorWhenNotFocusedProperty: IDependencyProperty; safecall;
    function get_HorizontalTextAlignmentProperty: IDependencyProperty; safecall;
    function get_CharacterCasingProperty: IDependencyProperty; safecall;
    function get_PlaceholderForegroundProperty: IDependencyProperty; safecall;
    function get_CanPasteClipboardContentProperty: IDependencyProperty; safecall;
    function get_CanUndoProperty: IDependencyProperty; safecall;
    function get_CanRedoProperty: IDependencyProperty; safecall;
    function get_SelectionFlyoutProperty: IDependencyProperty; safecall;
    function get_ProofingMenuFlyoutProperty: IDependencyProperty; safecall;
    function get_DescriptionProperty: IDependencyProperty; safecall;
    function get_DesiredCandidateWindowAlignmentProperty: IDependencyProperty; safecall;
    function get_TextReadingOrderProperty: IDependencyProperty; safecall;
    property AcceptsReturnProperty: IDependencyProperty read get_AcceptsReturnProperty;
    property CanPasteClipboardContentProperty: IDependencyProperty read get_CanPasteClipboardContentProperty;
    property CanRedoProperty: IDependencyProperty read get_CanRedoProperty;
    property CanUndoProperty: IDependencyProperty read get_CanUndoProperty;
    property CharacterCasingProperty: IDependencyProperty read get_CharacterCasingProperty;
    property DescriptionProperty: IDependencyProperty read get_DescriptionProperty;
    property DesiredCandidateWindowAlignmentProperty: IDependencyProperty read get_DesiredCandidateWindowAlignmentProperty;
    property HeaderProperty: IDependencyProperty read get_HeaderProperty;
    property HeaderTemplateProperty: IDependencyProperty read get_HeaderTemplateProperty;
    property HorizontalTextAlignmentProperty: IDependencyProperty read get_HorizontalTextAlignmentProperty;
    property InputScopeProperty: IDependencyProperty read get_InputScopeProperty;
    property IsColorFontEnabledProperty: IDependencyProperty read get_IsColorFontEnabledProperty;
    property IsReadOnlyProperty: IDependencyProperty read get_IsReadOnlyProperty;
    property IsSpellCheckEnabledProperty: IDependencyProperty read get_IsSpellCheckEnabledProperty;
    property IsTextPredictionEnabledProperty: IDependencyProperty read get_IsTextPredictionEnabledProperty;
    property MaxLengthProperty: IDependencyProperty read get_MaxLengthProperty;
    property PlaceholderForegroundProperty: IDependencyProperty read get_PlaceholderForegroundProperty;
    property PlaceholderTextProperty: IDependencyProperty read get_PlaceholderTextProperty;
    property PreventKeyboardDisplayOnProgrammaticFocusProperty: IDependencyProperty read get_PreventKeyboardDisplayOnProgrammaticFocusProperty;
    property ProofingMenuFlyoutProperty: IDependencyProperty read get_ProofingMenuFlyoutProperty;
    property SelectionFlyoutProperty: IDependencyProperty read get_SelectionFlyoutProperty;
    property SelectionHighlightColorProperty: IDependencyProperty read get_SelectionHighlightColorProperty;
    property SelectionHighlightColorWhenNotFocusedProperty: IDependencyProperty read get_SelectionHighlightColorWhenNotFocusedProperty;
    property TextAlignmentProperty: IDependencyProperty read get_TextAlignmentProperty;
    property TextProperty: IDependencyProperty read get_TextProperty;
    property TextReadingOrderProperty: IDependencyProperty read get_TextReadingOrderProperty;
    property TextWrappingProperty: IDependencyProperty read get_TextWrappingProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.ITextCommandBarFlyout
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_TextCommandBarFlyout)]
  ITextCommandBarFlyout = interface(IInspectable)
  ['{6D0F38A5-0EB3-5D73-8195-D2D89B76B0F7}']
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.ITextCommandBarFlyoutFactory
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_TextCommandBarFlyout)]
  ITextCommandBarFlyoutFactory = interface(IInspectable)
  ['{5C56A34F-621F-55F2-8D71-3E3A6E6906BD}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): ITextCommandBarFlyout; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.ITimePickedEventArgs
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_TimePickedEventArgs)]
  ITimePickedEventArgs = interface(IInspectable)
  ['{9F85D661-A9E0-5E08-A904-113B74CA3C59}']
    function get_OldTime: TimeSpan; safecall;
    function get_NewTime: TimeSpan; safecall;
    property NewTime: TimeSpan read get_NewTime;
    property OldTime: TimeSpan read get_OldTime;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.ITimePickerFactory
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_TimePicker)]
  ITimePickerFactory = interface(IInspectable)
  ['{1584429E-AAFE-5C65-89E9-8C066E5690E7}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): ITimePicker; safecall;
  end;

  // Generic Delegate for:
  // Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.Controls.ITimePickerFlyout,Microsoft.UI.Xaml.Controls.ITimePickedEventArgs>
  TypedEventHandler_2__ITimePickerFlyout__ITimePickedEventArgs_Delegate_Base = interface(IUnknown)
  ['{FFAEB334-2AEC-5AA8-8B0E-CBB3794AF55F}']
    procedure Invoke(sender: ITimePickerFlyout; args: ITimePickedEventArgs); safecall;
  end;
  // UsedAPI Interface
  // Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.Controls.ITimePickerFlyout,Microsoft.UI.Xaml.Controls.ITimePickedEventArgs>
  TypedEventHandler_2__ITimePickerFlyout__ITimePickedEventArgs = interface(TypedEventHandler_2__ITimePickerFlyout__ITimePickedEventArgs_Delegate_Base)
  ['{4F7DFCB6-FBAE-56DD-BBB0-DB3176A8FBEA}']
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.ITimePickerFlyout
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_TimePickerFlyout)]
  ITimePickerFlyout = interface(IInspectable)
  ['{479799DC-700A-5A9C-BA0B-9AB2587ED2E8}']
    function get_ClockIdentifier: HSTRING; safecall;
    procedure put_ClockIdentifier(value: HSTRING); safecall;
    function get_Time: TimeSpan; safecall;
    procedure put_Time(value: TimeSpan); safecall;
    function get_MinuteIncrement: Integer; safecall;
    procedure put_MinuteIncrement(value: Integer); safecall;
    function add_TimePicked(handler: TypedEventHandler_2__ITimePickerFlyout__ITimePickedEventArgs): EventRegistrationToken; safecall;
    procedure remove_TimePicked(token: EventRegistrationToken); safecall;
    function ShowAtAsync(target: IFrameworkElement): IAsyncOperation_1__IReference_1__TimeSpan; safecall;
    property ClockIdentifier: HSTRING read get_ClockIdentifier write put_ClockIdentifier;
    property MinuteIncrement: Integer read get_MinuteIncrement write put_MinuteIncrement;
    property Time: TimeSpan read get_Time write put_Time;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.ITimePickerFlyoutPresenter
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_TimePickerFlyoutPresenter)]
  ITimePickerFlyoutPresenter = interface(IInspectable)
  ['{A7439B37-7A77-5AEB-806B-BC726005DE20}']
    function get_IsDefaultShadowEnabled: Boolean; safecall;
    procedure put_IsDefaultShadowEnabled(value: Boolean); safecall;
    property IsDefaultShadowEnabled: Boolean read get_IsDefaultShadowEnabled write put_IsDefaultShadowEnabled;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.ITimePickerFlyoutPresenterStatics
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_TimePickerFlyoutPresenter)]
  ITimePickerFlyoutPresenterStatics = interface(IInspectable)
  ['{0CD9D57D-970F-5DF3-B2AF-49CFF489675E}']
    function get_IsDefaultShadowEnabledProperty: IDependencyProperty; safecall;
    property IsDefaultShadowEnabledProperty: IDependencyProperty read get_IsDefaultShadowEnabledProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.ITimePickerFlyoutStatics
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_TimePickerFlyout)]
  ITimePickerFlyoutStatics = interface(IInspectable)
  ['{085A6A2D-68F4-5D4E-B89C-47CC0DD520A8}']
    function get_ClockIdentifierProperty: IDependencyProperty; safecall;
    function get_TimeProperty: IDependencyProperty; safecall;
    function get_MinuteIncrementProperty: IDependencyProperty; safecall;
    property ClockIdentifierProperty: IDependencyProperty read get_ClockIdentifierProperty;
    property MinuteIncrementProperty: IDependencyProperty read get_MinuteIncrementProperty;
    property TimeProperty: IDependencyProperty read get_TimeProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.ITimePickerStatics
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_TimePicker)]
  ITimePickerStatics = interface(IInspectable)
  ['{12BEF59E-4222-507B-901E-EFFD04620C4F}']
    function get_HeaderProperty: IDependencyProperty; safecall;
    function get_HeaderTemplateProperty: IDependencyProperty; safecall;
    function get_ClockIdentifierProperty: IDependencyProperty; safecall;
    function get_MinuteIncrementProperty: IDependencyProperty; safecall;
    function get_TimeProperty: IDependencyProperty; safecall;
    function get_LightDismissOverlayModeProperty: IDependencyProperty; safecall;
    function get_SelectedTimeProperty: IDependencyProperty; safecall;
    property ClockIdentifierProperty: IDependencyProperty read get_ClockIdentifierProperty;
    property HeaderProperty: IDependencyProperty read get_HeaderProperty;
    property HeaderTemplateProperty: IDependencyProperty read get_HeaderTemplateProperty;
    property LightDismissOverlayModeProperty: IDependencyProperty read get_LightDismissOverlayModeProperty;
    property MinuteIncrementProperty: IDependencyProperty read get_MinuteIncrementProperty;
    property SelectedTimeProperty: IDependencyProperty read get_SelectedTimeProperty;
    property TimeProperty: IDependencyProperty read get_TimeProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IToggleMenuFlyoutItemFactory
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_ToggleMenuFlyoutItem)]
  IToggleMenuFlyoutItemFactory = interface(IInspectable)
  ['{426DFD57-6CC9-570F-950D-37437235DC89}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IToggleMenuFlyoutItem; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IToggleMenuFlyoutItemStatics
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_ToggleMenuFlyoutItem)]
  IToggleMenuFlyoutItemStatics = interface(IInspectable)
  ['{7411E854-C59A-5463-BEAB-64DDB052C6DC}']
    function get_IsCheckedProperty: IDependencyProperty; safecall;
    property IsCheckedProperty: IDependencyProperty read get_IsCheckedProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IToggleSplitButtonFactory
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_ToggleSplitButton)]
  IToggleSplitButtonFactory = interface(IInspectable)
  ['{25459D02-0FFC-5C7C-AF56-F55AAD6DB5E7}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IToggleSplitButton; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IToggleSplitButtonStatics
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_ToggleSplitButton)]
  IToggleSplitButtonStatics = interface(IInspectable)
  ['{801C9CA9-5B24-5B9E-A8D1-CFF4B6E6857F}']
    function get_IsCheckedProperty: IDependencyProperty; safecall;
    property IsCheckedProperty: IDependencyProperty read get_IsCheckedProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IToggleSwitchOverrides
  IToggleSwitchOverrides = interface(IInspectable)
  ['{772682DB-E3D4-5242-B6DE-36705725EEB8}']
    procedure OnToggled; safecall;
    procedure OnOnContentChanged(oldContent: IInspectable; newContent: IInspectable); safecall;
    procedure OnOffContentChanged(oldContent: IInspectable; newContent: IInspectable); safecall;
    procedure OnHeaderChanged(oldContent: IInspectable; newContent: IInspectable); safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IToggleSwitchStatics
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_ToggleSwitch)]
  IToggleSwitchStatics = interface(IInspectable)
  ['{C9C203D6-0619-504D-9ED8-5054FE3CA51E}']
    function get_IsOnProperty: IDependencyProperty; safecall;
    function get_HeaderProperty: IDependencyProperty; safecall;
    function get_HeaderTemplateProperty: IDependencyProperty; safecall;
    function get_OnContentProperty: IDependencyProperty; safecall;
    function get_OnContentTemplateProperty: IDependencyProperty; safecall;
    function get_OffContentProperty: IDependencyProperty; safecall;
    function get_OffContentTemplateProperty: IDependencyProperty; safecall;
    property HeaderProperty: IDependencyProperty read get_HeaderProperty;
    property HeaderTemplateProperty: IDependencyProperty read get_HeaderTemplateProperty;
    property IsOnProperty: IDependencyProperty read get_IsOnProperty;
    property OffContentProperty: IDependencyProperty read get_OffContentProperty;
    property OffContentTemplateProperty: IDependencyProperty read get_OffContentTemplateProperty;
    property OnContentProperty: IDependencyProperty read get_OnContentProperty;
    property OnContentTemplateProperty: IDependencyProperty read get_OnContentTemplateProperty;
  end;

  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.Primitives.IToolTipTemplateSettings
  Primitives_IToolTipTemplateSettings = interface(IInspectable)
  ['{4F725950-FF64-5CF1-9E86-9011FB10E88E}']
    function get_FromHorizontalOffset: Double; safecall;
    function get_FromVerticalOffset: Double; safecall;
    property FromHorizontalOffset: Double read get_FromHorizontalOffset;
    property FromVerticalOffset: Double read get_FromVerticalOffset;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IToolTip
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_ToolTip)]
  IToolTip = interface(IInspectable)
  ['{67E93D74-5E93-59A1-91BF-413EFBEB904C}']
    function get_HorizontalOffset: Double; safecall;
    procedure put_HorizontalOffset(value: Double); safecall;
    function get_IsOpen: Boolean; safecall;
    procedure put_IsOpen(value: Boolean); safecall;
    function get_Placement: Primitives_PlacementMode; safecall;
    procedure put_Placement(value: Primitives_PlacementMode); safecall;
    function get_PlacementTarget: IUIElement; safecall;
    procedure put_PlacementTarget(value: IUIElement); safecall;
    function get_PlacementRect: IReference_1__Rect; safecall;
    procedure put_PlacementRect(value: IReference_1__Rect); safecall;
    function get_VerticalOffset: Double; safecall;
    procedure put_VerticalOffset(value: Double); safecall;
    function get_TemplateSettings: Primitives_IToolTipTemplateSettings; safecall;
    function add_Closed(handler: RoutedEventHandler): EventRegistrationToken; safecall;
    procedure remove_Closed(token: EventRegistrationToken); safecall;
    function add_Opened(handler: RoutedEventHandler): EventRegistrationToken; safecall;
    procedure remove_Opened(token: EventRegistrationToken); safecall;
    property HorizontalOffset: Double read get_HorizontalOffset write put_HorizontalOffset;
    property IsOpen: Boolean read get_IsOpen write put_IsOpen;
    property Placement: Primitives_PlacementMode read get_Placement write put_Placement;
    property PlacementRect: IReference_1__Rect read get_PlacementRect write put_PlacementRect;
    property PlacementTarget: IUIElement read get_PlacementTarget write put_PlacementTarget;
    property TemplateSettings: Primitives_IToolTipTemplateSettings read get_TemplateSettings;
    property VerticalOffset: Double read get_VerticalOffset write put_VerticalOffset;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IToolTipFactory
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_ToolTip)]
  IToolTipFactory = interface(IInspectable)
  ['{BCBB3720-2DB8-54E1-8806-FCBED38949A9}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IToolTip; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IToolTipService
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_ToolTipService)]
  IToolTipService = interface(IInspectable)
  ['{01140768-2727-5F89-80E0-5210326A3431}']
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IToolTipServiceStatics
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_ToolTipService)]
  IToolTipServiceStatics = interface(IInspectable)
  ['{5AA38ADC-9874-5E0A-8D8E-1574EFC0B88F}']
    function get_PlacementProperty: IDependencyProperty; safecall;
    function GetPlacement(element: IDependencyObject): Primitives_PlacementMode; safecall;
    procedure SetPlacement(element: IDependencyObject; value: Primitives_PlacementMode); safecall;
    function get_PlacementTargetProperty: IDependencyProperty; safecall;
    function GetPlacementTarget(element: IDependencyObject): IUIElement; safecall;
    procedure SetPlacementTarget(element: IDependencyObject; value: IUIElement); safecall;
    function get_ToolTipProperty: IDependencyProperty; safecall;
    function GetToolTip(element: IDependencyObject): IInspectable; safecall;
    procedure SetToolTip(element: IDependencyObject; value: IInspectable); safecall;
    property PlacementProperty: IDependencyProperty read get_PlacementProperty;
    property PlacementTargetProperty: IDependencyProperty read get_PlacementTargetProperty;
    property ToolTipProperty: IDependencyProperty read get_ToolTipProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IToolTipStatics
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_ToolTip)]
  IToolTipStatics = interface(IInspectable)
  ['{88EB60D4-CD54-5E23-BD1A-223702442BA4}']
    function get_HorizontalOffsetProperty: IDependencyProperty; safecall;
    function get_IsOpenProperty: IDependencyProperty; safecall;
    function get_PlacementProperty: IDependencyProperty; safecall;
    function get_PlacementTargetProperty: IDependencyProperty; safecall;
    function get_PlacementRectProperty: IDependencyProperty; safecall;
    function get_VerticalOffsetProperty: IDependencyProperty; safecall;
    property HorizontalOffsetProperty: IDependencyProperty read get_HorizontalOffsetProperty;
    property IsOpenProperty: IDependencyProperty read get_IsOpenProperty;
    property PlacementProperty: IDependencyProperty read get_PlacementProperty;
    property PlacementRectProperty: IDependencyProperty read get_PlacementRectProperty;
    property PlacementTargetProperty: IDependencyProperty read get_PlacementTargetProperty;
    property VerticalOffsetProperty: IDependencyProperty read get_VerticalOffsetProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.ITreeViewNode
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_TreeViewNode)]
  ITreeViewNode = interface(IInspectable)
  ['{00378A74-790B-5328-8AFA-7D65E22DA426}']
    function get_Content: IInspectable; safecall;
    procedure put_Content(value: IInspectable); safecall;
    function get_Parent: ITreeViewNode; safecall;
    function get_IsExpanded: Boolean; safecall;
    procedure put_IsExpanded(value: Boolean); safecall;
    function get_HasChildren: Boolean; safecall;
    function get_Depth: Integer; safecall;
    function get_HasUnrealizedChildren: Boolean; safecall;
    procedure put_HasUnrealizedChildren(value: Boolean); safecall;
    function get_Children: IVector_1__ITreeViewNode; safecall;
    property Children: IVector_1__ITreeViewNode read get_Children;
    property Content: IInspectable read get_Content write put_Content;
    property Depth: Integer read get_Depth;
    property HasChildren: Boolean read get_HasChildren;
    property HasUnrealizedChildren: Boolean read get_HasUnrealizedChildren write put_HasUnrealizedChildren;
    property IsExpanded: Boolean read get_IsExpanded write put_IsExpanded;
    property Parent: ITreeViewNode read get_Parent;
  end;

  // Generic Ancestor for:
  // Windows.Foundation.Collections.IIterator`1<Microsoft.UI.Xaml.Controls.ITreeViewNode>
  IIterator_1__ITreeViewNode_Base = interface(IInspectable)
  ['{6E1C3355-54FA-5222-9351-D812C5694D59}']
    function get_Current: ITreeViewNode; safecall;
    function get_HasCurrent: Boolean; safecall;
    function MoveNext: Boolean; safecall;
    function GetMany(itemsSize: Cardinal; items: PITreeViewNode): Cardinal; safecall;
    property Current: ITreeViewNode read get_Current;
    property HasCurrent: Boolean read get_HasCurrent;
  end;
  // Windows.Foundation.Collections.IIterator`1<Microsoft.UI.Xaml.Controls.ITreeViewNode>
  IIterator_1__ITreeViewNode = interface(IIterator_1__ITreeViewNode_Base)
  ['{326124E0-D63E-56FE-A6D2-2C810DB93700}']
  end;

  // Generic Ancestor for:
  // Windows.Foundation.Collections.IIterable`1<Microsoft.UI.Xaml.Controls.ITreeViewNode>
  IIterable_1__ITreeViewNode_Base = interface(IInspectable)
  ['{81CB52CE-E34F-5D1F-A118-FA3675D2105A}']
    function First: IIterator_1__ITreeViewNode; safecall;
  end;
  // Windows.Foundation.Collections.IIterable`1<Microsoft.UI.Xaml.Controls.ITreeViewNode>
  IIterable_1__ITreeViewNode = interface(IIterable_1__ITreeViewNode_Base)
  ['{934C7E45-BBE1-5FAF-9EF2-97A82137BCDB}']
  end;

  // UsedAPI Interface
  // Windows.Foundation.Collections.IVectorView`1<Microsoft.UI.Xaml.Controls.ITreeViewNode>
  IVectorView_1__ITreeViewNode = interface(IInspectable)
  ['{2BC56350-CD20-5023-A9B8-B9CD8BE9F66E}']
    function GetAt(index: Cardinal): ITreeViewNode; safecall;
    function get_Size: Cardinal; safecall;
    function IndexOf(value: ITreeViewNode; out index: Cardinal): Boolean; safecall;
    function GetMany(startIndex: Cardinal; itemsSize: Cardinal; items: PITreeViewNode): Cardinal; safecall;
    property Size: Cardinal read get_Size;
  end;

  // Generic Ancestor for:
  // Windows.Foundation.Collections.IVector`1<Microsoft.UI.Xaml.Controls.ITreeViewNode>
  IVector_1__ITreeViewNode_Base = interface(IInspectable)
  ['{FB11AB97-9EA3-5E29-977B-3CE47DAC68DE}']
    function GetAt(index: Cardinal): ITreeViewNode; safecall;
    function get_Size: Cardinal; safecall;
    function GetView: IVectorView_1__ITreeViewNode; safecall;
    function IndexOf(value: ITreeViewNode; out index: Cardinal): Boolean; safecall;
    procedure SetAt(index: Cardinal; value: ITreeViewNode); safecall;
    procedure InsertAt(index: Cardinal; value: ITreeViewNode); safecall;
    procedure RemoveAt(index: Cardinal); safecall;
    procedure Append(value: ITreeViewNode); safecall;
    procedure RemoveAtEnd; safecall;
    procedure Clear; safecall;
    function GetMany(startIndex: Cardinal; itemsSize: Cardinal; items: PITreeViewNode): Cardinal; safecall;
    procedure ReplaceAll(itemsSize: Cardinal; items: PITreeViewNode); safecall;
    property Size: Cardinal read get_Size;
  end;
  // UsedAPI Interface
  // Windows.Foundation.Collections.IVector`1<Microsoft.UI.Xaml.Controls.ITreeViewNode>
  IVector_1__ITreeViewNode = interface(IVector_1__ITreeViewNode_Base)
  ['{6E6B038C-606F-50A9-9A88-AC07FA6A328B}']
  end;

  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.ITreeViewItemInvokedEventArgs
  ITreeViewItemInvokedEventArgs = interface(IInspectable)
  ['{1A05853C-B101-542C-9A1E-775A044C4652}']
    function get_InvokedItem: IInspectable; safecall;
    procedure put_Handled(value: Boolean); safecall;
    function get_Handled: Boolean; safecall;
    property Handled: Boolean read get_Handled write put_Handled;
    property InvokedItem: IInspectable read get_InvokedItem;
  end;

  // Generic Delegate for:
  // Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.Controls.ITreeView,Microsoft.UI.Xaml.Controls.ITreeViewItemInvokedEventArgs>
  TypedEventHandler_2__ITreeView__ITreeViewItemInvokedEventArgs_Delegate_Base = interface(IUnknown)
  ['{CE45103A-C707-5934-8E39-F049B985A27D}']
    procedure Invoke(sender: ITreeView; args: ITreeViewItemInvokedEventArgs); safecall;
  end;
  // UsedAPI Interface
  // Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.Controls.ITreeView,Microsoft.UI.Xaml.Controls.ITreeViewItemInvokedEventArgs>
  TypedEventHandler_2__ITreeView__ITreeViewItemInvokedEventArgs = interface(TypedEventHandler_2__ITreeView__ITreeViewItemInvokedEventArgs_Delegate_Base)
  ['{E4034756-1C1A-5256-87FB-C7243597770B}']
  end;

  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.ITreeViewExpandingEventArgs
  ITreeViewExpandingEventArgs = interface(IInspectable)
  ['{BD769EF7-CADC-5334-93AD-C9BBE820643D}']
    function get_Node: ITreeViewNode; safecall;
    property Node: ITreeViewNode read get_Node;
  end;

  // Generic Delegate for:
  // Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.Controls.ITreeView,Microsoft.UI.Xaml.Controls.ITreeViewExpandingEventArgs>
  TypedEventHandler_2__ITreeView__ITreeViewExpandingEventArgs_Delegate_Base = interface(IUnknown)
  ['{795F0A25-75B8-5EE4-9689-E40D37C76C29}']
    procedure Invoke(sender: ITreeView; args: ITreeViewExpandingEventArgs); safecall;
  end;
  // UsedAPI Interface
  // Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.Controls.ITreeView,Microsoft.UI.Xaml.Controls.ITreeViewExpandingEventArgs>
  TypedEventHandler_2__ITreeView__ITreeViewExpandingEventArgs = interface(TypedEventHandler_2__ITreeView__ITreeViewExpandingEventArgs_Delegate_Base)
  ['{38BF37E0-C8C6-5E91-A422-7DED404A66FC}']
  end;

  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.ITreeViewCollapsedEventArgs
  ITreeViewCollapsedEventArgs = interface(IInspectable)
  ['{8EE00B59-42C6-5D73-809F-68710088E5A5}']
    function get_Node: ITreeViewNode; safecall;
    property Node: ITreeViewNode read get_Node;
  end;

  // Generic Delegate for:
  // Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.Controls.ITreeView,Microsoft.UI.Xaml.Controls.ITreeViewCollapsedEventArgs>
  TypedEventHandler_2__ITreeView__ITreeViewCollapsedEventArgs_Delegate_Base = interface(IUnknown)
  ['{611C2F44-FC2F-5F3D-994E-177B9A58AB90}']
    procedure Invoke(sender: ITreeView; args: ITreeViewCollapsedEventArgs); safecall;
  end;
  // UsedAPI Interface
  // Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.Controls.ITreeView,Microsoft.UI.Xaml.Controls.ITreeViewCollapsedEventArgs>
  TypedEventHandler_2__ITreeView__ITreeViewCollapsedEventArgs = interface(TypedEventHandler_2__ITreeView__ITreeViewCollapsedEventArgs_Delegate_Base)
  ['{1AF6D19E-561E-555E-A5C8-7EB7102C9FC5}']
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.ITreeView
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_TreeView)]
  ITreeView = interface(IInspectable)
  ['{1BEF9AF4-712C-50EF-9BB4-881B975232AB}']
    function get_RootNodes: IVector_1__ITreeViewNode; safecall;
    function get_SelectionMode: TreeViewSelectionMode; safecall;
    procedure put_SelectionMode(value: TreeViewSelectionMode); safecall;
    function get_SelectedNodes: IVector_1__ITreeViewNode; safecall;
    procedure Expand(value: ITreeViewNode); safecall;
    procedure Collapse(value: ITreeViewNode); safecall;
    procedure SelectAll; safecall;
    function add_ItemInvoked(handler: TypedEventHandler_2__ITreeView__ITreeViewItemInvokedEventArgs): EventRegistrationToken; safecall;
    procedure remove_ItemInvoked(token: EventRegistrationToken); safecall;
    function add_Expanding(handler: TypedEventHandler_2__ITreeView__ITreeViewExpandingEventArgs): EventRegistrationToken; safecall;
    procedure remove_Expanding(token: EventRegistrationToken); safecall;
    function add_Collapsed(handler: TypedEventHandler_2__ITreeView__ITreeViewCollapsedEventArgs): EventRegistrationToken; safecall;
    procedure remove_Collapsed(token: EventRegistrationToken); safecall;
    property RootNodes: IVector_1__ITreeViewNode read get_RootNodes;
    property SelectedNodes: IVector_1__ITreeViewNode read get_SelectedNodes;
    property SelectionMode: TreeViewSelectionMode read get_SelectionMode write put_SelectionMode;
  end;

  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.ITreeViewDragItemsStartingEventArgs
  ITreeViewDragItemsStartingEventArgs = interface(IInspectable)
  ['{1B6C4FFC-CD32-5E06-B782-DF9F077546C7}']
    function get_Cancel: Boolean; safecall;
    procedure put_Cancel(value: Boolean); safecall;
    function get_Data: IDataPackage; safecall;
    function get_Items: IVector_1__IInspectable; safecall;
    property Cancel: Boolean read get_Cancel write put_Cancel;
    property Data: IDataPackage read get_Data;
    property Items: IVector_1__IInspectable read get_Items;
  end;

  // Generic Delegate for:
  // Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.Controls.ITreeView,Microsoft.UI.Xaml.Controls.ITreeViewDragItemsStartingEventArgs>
  TypedEventHandler_2__ITreeView__ITreeViewDragItemsStartingEventArgs_Delegate_Base = interface(IUnknown)
  ['{B9576817-00ED-5519-ACFF-6B99E68132A1}']
    procedure Invoke(sender: ITreeView; args: ITreeViewDragItemsStartingEventArgs); safecall;
  end;
  // UsedAPI Interface
  // Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.Controls.ITreeView,Microsoft.UI.Xaml.Controls.ITreeViewDragItemsStartingEventArgs>
  TypedEventHandler_2__ITreeView__ITreeViewDragItemsStartingEventArgs = interface(TypedEventHandler_2__ITreeView__ITreeViewDragItemsStartingEventArgs_Delegate_Base)
  ['{02A2419D-CB20-5828-82F1-1762E2CCD1BB}']
  end;

  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.ITreeViewDragItemsCompletedEventArgs
  ITreeViewDragItemsCompletedEventArgs = interface(IInspectable)
  ['{E5B8547E-F839-55DB-9C26-2A95F57A60DC}']
    function get_DropResult: DataPackageOperation; safecall;
    function get_Items: IVectorView_1__IInspectable; safecall;
    property DropResult: DataPackageOperation read get_DropResult;
    property Items: IVectorView_1__IInspectable read get_Items;
  end;

  // Generic Delegate for:
  // Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.Controls.ITreeView,Microsoft.UI.Xaml.Controls.ITreeViewDragItemsCompletedEventArgs>
  TypedEventHandler_2__ITreeView__ITreeViewDragItemsCompletedEventArgs_Delegate_Base = interface(IUnknown)
  ['{50E97F51-C92F-5883-B0AD-AB89FBC48DEA}']
    procedure Invoke(sender: ITreeView; args: ITreeViewDragItemsCompletedEventArgs); safecall;
  end;
  // UsedAPI Interface
  // Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.Controls.ITreeView,Microsoft.UI.Xaml.Controls.ITreeViewDragItemsCompletedEventArgs>
  TypedEventHandler_2__ITreeView__ITreeViewDragItemsCompletedEventArgs = interface(TypedEventHandler_2__ITreeView__ITreeViewDragItemsCompletedEventArgs_Delegate_Base)
  ['{FE8780D1-23A9-57AA-B919-E18BB4413DCE}']
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.ITreeView2
  ITreeView2 = interface(IInspectable)
  ['{B947CA7D-0F6F-594C-83EC-14153D343225}']
    function NodeFromContainer(container: IDependencyObject): ITreeViewNode; safecall;
    function ContainerFromNode(node: ITreeViewNode): IDependencyObject; safecall;
    function ItemFromContainer(container: IDependencyObject): IInspectable; safecall;
    function ContainerFromItem(item: IInspectable): IDependencyObject; safecall;
    function get_CanDragItems: Boolean; safecall;
    procedure put_CanDragItems(value: Boolean); safecall;
    function get_CanReorderItems: Boolean; safecall;
    procedure put_CanReorderItems(value: Boolean); safecall;
    function get_ItemTemplate: IDataTemplate; safecall;
    procedure put_ItemTemplate(value: IDataTemplate); safecall;
    function get_ItemTemplateSelector: IDataTemplateSelector; safecall;
    procedure put_ItemTemplateSelector(value: IDataTemplateSelector); safecall;
    function get_ItemContainerStyle: IStyle; safecall;
    procedure put_ItemContainerStyle(value: IStyle); safecall;
    function get_ItemContainerStyleSelector: IStyleSelector; safecall;
    procedure put_ItemContainerStyleSelector(value: IStyleSelector); safecall;
    function get_ItemContainerTransitions: IVector_1__Animation_ITransition; safecall;
    procedure put_ItemContainerTransitions(value: IVector_1__Animation_ITransition); safecall;
    function get_ItemsSource: IInspectable; safecall;
    procedure put_ItemsSource(value: IInspectable); safecall;
    function add_DragItemsStarting(handler: TypedEventHandler_2__ITreeView__ITreeViewDragItemsStartingEventArgs): EventRegistrationToken; safecall;
    procedure remove_DragItemsStarting(token: EventRegistrationToken); safecall;
    function add_DragItemsCompleted(handler: TypedEventHandler_2__ITreeView__ITreeViewDragItemsCompletedEventArgs): EventRegistrationToken; safecall;
    procedure remove_DragItemsCompleted(token: EventRegistrationToken); safecall;
    function get_SelectedNode: ITreeViewNode; safecall;
    procedure put_SelectedNode(value: ITreeViewNode); safecall;
    function get_SelectedItem: IInspectable; safecall;
    procedure put_SelectedItem(value: IInspectable); safecall;
    function get_SelectedItems: IVector_1__IInspectable; safecall;
    property CanDragItems: Boolean read get_CanDragItems write put_CanDragItems;
    property CanReorderItems: Boolean read get_CanReorderItems write put_CanReorderItems;
    property ItemContainerStyle: IStyle read get_ItemContainerStyle write put_ItemContainerStyle;
    property ItemContainerStyleSelector: IStyleSelector read get_ItemContainerStyleSelector write put_ItemContainerStyleSelector;
    property ItemContainerTransitions: IVector_1__Animation_ITransition read get_ItemContainerTransitions write put_ItemContainerTransitions;
    property ItemTemplate: IDataTemplate read get_ItemTemplate write put_ItemTemplate;
    property ItemTemplateSelector: IDataTemplateSelector read get_ItemTemplateSelector write put_ItemTemplateSelector;
    property ItemsSource: IInspectable read get_ItemsSource write put_ItemsSource;
    property SelectedItem: IInspectable read get_SelectedItem write put_SelectedItem;
    property SelectedItems: IVector_1__IInspectable read get_SelectedItems;
    property SelectedNode: ITreeViewNode read get_SelectedNode write put_SelectedNode;
  end;

  // Microsoft.UI.Xaml.Controls.ITreeViewCollapsedEventArgs2
  ITreeViewCollapsedEventArgs2 = interface(IInspectable)
  ['{77804A23-9FEB-5C57-9C95-4DD984267217}']
    function get_Item: IInspectable; safecall;
    property Item: IInspectable read get_Item;
  end;

  // Microsoft.UI.Xaml.Controls.ITreeViewDragItemsCompletedEventArgs2
  ITreeViewDragItemsCompletedEventArgs2 = interface(IInspectable)
  ['{060D3921-57A0-5BC5-BE26-320BD9C1A6E8}']
    function get_NewParentItem: IInspectable; safecall;
    property NewParentItem: IInspectable read get_NewParentItem;
  end;

  // Microsoft.UI.Xaml.Controls.ITreeViewExpandingEventArgs2
  ITreeViewExpandingEventArgs2 = interface(IInspectable)
  ['{ED7840E5-DBF5-5937-89DD-997A6FDE0D5C}']
    function get_Item: IInspectable; safecall;
    property Item: IInspectable read get_Item;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.ITreeViewFactory
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_TreeView)]
  ITreeViewFactory = interface(IInspectable)
  ['{9C6220BE-F9EB-518A-B30E-7E41DE5EFDA9}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): ITreeView; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.ITreeViewItem2
  ITreeViewItem2 = interface(IInspectable)
  ['{B1B70143-3F5B-54F4-8BD7-41DC15CF45A9}']
    function get_HasUnrealizedChildren: Boolean; safecall;
    procedure put_HasUnrealizedChildren(value: Boolean); safecall;
    function get_ItemsSource: IInspectable; safecall;
    procedure put_ItemsSource(value: IInspectable); safecall;
    property HasUnrealizedChildren: Boolean read get_HasUnrealizedChildren write put_HasUnrealizedChildren;
    property ItemsSource: IInspectable read get_ItemsSource write put_ItemsSource;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.ITreeViewItemFactory
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_TreeViewItem)]
  ITreeViewItemFactory = interface(IInspectable)
  ['{878FD918-E77E-5BE8-8C8A-B79B27B08D9B}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): ITreeViewItem; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.ITreeViewItemStatics
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_TreeViewItem)]
  ITreeViewItemStatics = interface(IInspectable)
  ['{EFDB238D-2CCA-589C-AEDF-8E297B5AA248}']
    function get_GlyphOpacityProperty: IDependencyProperty; safecall;
    function get_GlyphBrushProperty: IDependencyProperty; safecall;
    function get_ExpandedGlyphProperty: IDependencyProperty; safecall;
    function get_CollapsedGlyphProperty: IDependencyProperty; safecall;
    function get_GlyphSizeProperty: IDependencyProperty; safecall;
    function get_IsExpandedProperty: IDependencyProperty; safecall;
    function get_TreeViewItemTemplateSettingsProperty: IDependencyProperty; safecall;
    property CollapsedGlyphProperty: IDependencyProperty read get_CollapsedGlyphProperty;
    property ExpandedGlyphProperty: IDependencyProperty read get_ExpandedGlyphProperty;
    property GlyphBrushProperty: IDependencyProperty read get_GlyphBrushProperty;
    property GlyphOpacityProperty: IDependencyProperty read get_GlyphOpacityProperty;
    property GlyphSizeProperty: IDependencyProperty read get_GlyphSizeProperty;
    property IsExpandedProperty: IDependencyProperty read get_IsExpandedProperty;
    property TreeViewItemTemplateSettingsProperty: IDependencyProperty read get_TreeViewItemTemplateSettingsProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.ITreeViewItemStatics2
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_TreeViewItem)]
  ITreeViewItemStatics2 = interface(IInspectable)
  ['{431BEF52-D60D-5CE3-B812-AEE4A2FB7ED3}']
    function get_HasUnrealizedChildrenProperty: IDependencyProperty; safecall;
    function get_ItemsSourceProperty: IDependencyProperty; safecall;
    property HasUnrealizedChildrenProperty: IDependencyProperty read get_HasUnrealizedChildrenProperty;
    property ItemsSourceProperty: IDependencyProperty read get_ItemsSourceProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.ITreeViewItemTemplateSettingsFactory
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_TreeViewItemTemplateSettings)]
  ITreeViewItemTemplateSettingsFactory = interface(IInspectable)
  ['{1D1A66E3-F56D-5D7F-942C-F3A87F5C552E}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): ITreeViewItemTemplateSettings; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.ITreeViewItemTemplateSettingsStatics
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_TreeViewItemTemplateSettings)]
  ITreeViewItemTemplateSettingsStatics = interface(IInspectable)
  ['{67817566-6528-5F4A-B1E1-710AB094C74F}']
    function get_ExpandedGlyphVisibilityProperty: IDependencyProperty; safecall;
    function get_CollapsedGlyphVisibilityProperty: IDependencyProperty; safecall;
    function get_IndentationProperty: IDependencyProperty; safecall;
    function get_DragItemsCountProperty: IDependencyProperty; safecall;
    property CollapsedGlyphVisibilityProperty: IDependencyProperty read get_CollapsedGlyphVisibilityProperty;
    property DragItemsCountProperty: IDependencyProperty read get_DragItemsCountProperty;
    property ExpandedGlyphVisibilityProperty: IDependencyProperty read get_ExpandedGlyphVisibilityProperty;
    property IndentationProperty: IDependencyProperty read get_IndentationProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.ITreeViewListFactory
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_TreeViewList)]
  ITreeViewListFactory = interface(IInspectable)
  ['{461499A0-68CF-5B81-B0E4-B1AF929B0B12}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): ITreeViewList; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.ITreeViewNodeFactory
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_TreeViewNode)]
  ITreeViewNodeFactory = interface(IInspectable)
  ['{C105A5E5-CEA8-5EFD-8BE8-3D89B54CBD5F}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): ITreeViewNode; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.ITreeViewNodeStatics
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_TreeViewNode)]
  ITreeViewNodeStatics = interface(IInspectable)
  ['{F5BB217C-66B9-5B62-B2D6-FB47843C8F6F}']
    function get_ContentProperty: IDependencyProperty; safecall;
    function get_DepthProperty: IDependencyProperty; safecall;
    function get_IsExpandedProperty: IDependencyProperty; safecall;
    function get_HasChildrenProperty: IDependencyProperty; safecall;
    property ContentProperty: IDependencyProperty read get_ContentProperty;
    property DepthProperty: IDependencyProperty read get_DepthProperty;
    property HasChildrenProperty: IDependencyProperty read get_HasChildrenProperty;
    property IsExpandedProperty: IDependencyProperty read get_IsExpandedProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.ITreeViewStatics
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_TreeView)]
  ITreeViewStatics = interface(IInspectable)
  ['{71EFAF86-4D73-5F5F-8EA6-A42DFE044917}']
    function get_SelectedItemProperty: IDependencyProperty; safecall;
    function get_SelectionModeProperty: IDependencyProperty; safecall;
    property SelectedItemProperty: IDependencyProperty read get_SelectedItemProperty;
    property SelectionModeProperty: IDependencyProperty read get_SelectionModeProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.ITreeViewStatics2
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_TreeView)]
  ITreeViewStatics2 = interface(IInspectable)
  ['{DDD01C44-A883-583B-9181-DCA583DA0AD9}']
    function get_CanDragItemsProperty: IDependencyProperty; safecall;
    function get_CanReorderItemsProperty: IDependencyProperty; safecall;
    function get_ItemTemplateProperty: IDependencyProperty; safecall;
    function get_ItemTemplateSelectorProperty: IDependencyProperty; safecall;
    function get_ItemContainerStyleProperty: IDependencyProperty; safecall;
    function get_ItemContainerStyleSelectorProperty: IDependencyProperty; safecall;
    function get_ItemContainerTransitionsProperty: IDependencyProperty; safecall;
    function get_ItemsSourceProperty: IDependencyProperty; safecall;
    property CanDragItemsProperty: IDependencyProperty read get_CanDragItemsProperty;
    property CanReorderItemsProperty: IDependencyProperty read get_CanReorderItemsProperty;
    property ItemContainerStyleProperty: IDependencyProperty read get_ItemContainerStyleProperty;
    property ItemContainerStyleSelectorProperty: IDependencyProperty read get_ItemContainerStyleSelectorProperty;
    property ItemContainerTransitionsProperty: IDependencyProperty read get_ItemContainerTransitionsProperty;
    property ItemTemplateProperty: IDependencyProperty read get_ItemTemplateProperty;
    property ItemTemplateSelectorProperty: IDependencyProperty read get_ItemTemplateSelectorProperty;
    property ItemsSourceProperty: IDependencyProperty read get_ItemsSourceProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.ITwoPaneViewFactory
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_TwoPaneView)]
  ITwoPaneViewFactory = interface(IInspectable)
  ['{0F1AF0CD-F3DC-52F6-B632-396742533231}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): ITwoPaneView; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.ITwoPaneViewStatics
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_TwoPaneView)]
  ITwoPaneViewStatics = interface(IInspectable)
  ['{4FBD51C3-CEE6-58DE-A5E4-99ABAD873016}']
    function get_Pane1Property: IDependencyProperty; safecall;
    function get_Pane2Property: IDependencyProperty; safecall;
    function get_Pane1LengthProperty: IDependencyProperty; safecall;
    function get_Pane2LengthProperty: IDependencyProperty; safecall;
    function get_PanePriorityProperty: IDependencyProperty; safecall;
    function get_ModeProperty: IDependencyProperty; safecall;
    function get_WideModeConfigurationProperty: IDependencyProperty; safecall;
    function get_TallModeConfigurationProperty: IDependencyProperty; safecall;
    function get_MinWideModeWidthProperty: IDependencyProperty; safecall;
    function get_MinTallModeHeightProperty: IDependencyProperty; safecall;
    property MinTallModeHeightProperty: IDependencyProperty read get_MinTallModeHeightProperty;
    property MinWideModeWidthProperty: IDependencyProperty read get_MinWideModeWidthProperty;
    property ModeProperty: IDependencyProperty read get_ModeProperty;
    property Pane1LengthProperty: IDependencyProperty read get_Pane1LengthProperty;
    property Pane1Property: IDependencyProperty read get_Pane1Property;
    property Pane2LengthProperty: IDependencyProperty read get_Pane2LengthProperty;
    property Pane2Property: IDependencyProperty read get_Pane2Property;
    property PanePriorityProperty: IDependencyProperty read get_PanePriorityProperty;
    property TallModeConfigurationProperty: IDependencyProperty read get_TallModeConfigurationProperty;
    property WideModeConfigurationProperty: IDependencyProperty read get_WideModeConfigurationProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IUniformGridLayout
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_UniformGridLayout)]
  IUniformGridLayout = interface(IInspectable)
  ['{8A164CBC-2A5E-56E5-A011-FB76334AABDF}']
    function get_Orientation: Orientation; safecall;
    procedure put_Orientation(value: Orientation); safecall;
    function get_MinItemWidth: Double; safecall;
    procedure put_MinItemWidth(value: Double); safecall;
    function get_MinItemHeight: Double; safecall;
    procedure put_MinItemHeight(value: Double); safecall;
    function get_MinRowSpacing: Double; safecall;
    procedure put_MinRowSpacing(value: Double); safecall;
    function get_MinColumnSpacing: Double; safecall;
    procedure put_MinColumnSpacing(value: Double); safecall;
    function get_ItemsJustification: UniformGridLayoutItemsJustification; safecall;
    procedure put_ItemsJustification(value: UniformGridLayoutItemsJustification); safecall;
    function get_ItemsStretch: UniformGridLayoutItemsStretch; safecall;
    procedure put_ItemsStretch(value: UniformGridLayoutItemsStretch); safecall;
    function get_MaximumRowsOrColumns: Integer; safecall;
    procedure put_MaximumRowsOrColumns(value: Integer); safecall;
    property ItemsJustification: UniformGridLayoutItemsJustification read get_ItemsJustification write put_ItemsJustification;
    property ItemsStretch: UniformGridLayoutItemsStretch read get_ItemsStretch write put_ItemsStretch;
    property MaximumRowsOrColumns: Integer read get_MaximumRowsOrColumns write put_MaximumRowsOrColumns;
    property MinColumnSpacing: Double read get_MinColumnSpacing write put_MinColumnSpacing;
    property MinItemHeight: Double read get_MinItemHeight write put_MinItemHeight;
    property MinItemWidth: Double read get_MinItemWidth write put_MinItemWidth;
    property MinRowSpacing: Double read get_MinRowSpacing write put_MinRowSpacing;
    property Orientation_: Orientation read get_Orientation write put_Orientation;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IUniformGridLayoutFactory
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_UniformGridLayout)]
  IUniformGridLayoutFactory = interface(IInspectable)
  ['{0D9ED808-F3F9-5034-9627-152B91E91B4B}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IUniformGridLayout; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IUniformGridLayoutStatics
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_UniformGridLayout)]
  IUniformGridLayoutStatics = interface(IInspectable)
  ['{19BE9A3E-37E1-5A6D-8B62-419325EA705A}']
    function get_OrientationProperty: IDependencyProperty; safecall;
    function get_MinItemWidthProperty: IDependencyProperty; safecall;
    function get_MinItemHeightProperty: IDependencyProperty; safecall;
    function get_MinRowSpacingProperty: IDependencyProperty; safecall;
    function get_MinColumnSpacingProperty: IDependencyProperty; safecall;
    function get_ItemsJustificationProperty: IDependencyProperty; safecall;
    function get_ItemsStretchProperty: IDependencyProperty; safecall;
    function get_MaximumRowsOrColumnsProperty: IDependencyProperty; safecall;
    property ItemsJustificationProperty: IDependencyProperty read get_ItemsJustificationProperty;
    property ItemsStretchProperty: IDependencyProperty read get_ItemsStretchProperty;
    property MaximumRowsOrColumnsProperty: IDependencyProperty read get_MaximumRowsOrColumnsProperty;
    property MinColumnSpacingProperty: IDependencyProperty read get_MinColumnSpacingProperty;
    property MinItemHeightProperty: IDependencyProperty read get_MinItemHeightProperty;
    property MinItemWidthProperty: IDependencyProperty read get_MinItemWidthProperty;
    property MinRowSpacingProperty: IDependencyProperty read get_MinRowSpacingProperty;
    property OrientationProperty: IDependencyProperty read get_OrientationProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IUserControl
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_UserControl)]
  IUserControl = interface(IInspectable)
  ['{AB8A0A51-44CF-5337-AD77-8EDA1795E9F6}']
    function get_Content: IUIElement; safecall;
    procedure put_Content(value: IUIElement); safecall;
    property Content: IUIElement read get_Content write put_Content;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IUserControlFactory
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_UserControl)]
  IUserControlFactory = interface(IInspectable)
  ['{61AC9074-AAB3-50B8-8B18-D4D2573A5235}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IUserControl; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IUserControlStatics
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_UserControl)]
  IUserControlStatics = interface(IInspectable)
  ['{575E8FA1-2E2D-5857-9A93-6B11E54316BA}']
    function get_ContentProperty: IDependencyProperty; safecall;
    property ContentProperty: IDependencyProperty read get_ContentProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IVariableSizedWrapGrid
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_VariableSizedWrapGrid)]
  IVariableSizedWrapGrid = interface(IInspectable)
  ['{BFECD12B-E16A-58A0-AF5F-4672627462D5}']
    function get_ItemHeight: Double; safecall;
    procedure put_ItemHeight(value: Double); safecall;
    function get_ItemWidth: Double; safecall;
    procedure put_ItemWidth(value: Double); safecall;
    function get_Orientation: Orientation; safecall;
    procedure put_Orientation(value: Orientation); safecall;
    function get_HorizontalChildrenAlignment: HorizontalAlignment; safecall;
    procedure put_HorizontalChildrenAlignment(value: HorizontalAlignment); safecall;
    function get_VerticalChildrenAlignment: VerticalAlignment; safecall;
    procedure put_VerticalChildrenAlignment(value: VerticalAlignment); safecall;
    function get_MaximumRowsOrColumns: Integer; safecall;
    procedure put_MaximumRowsOrColumns(value: Integer); safecall;
    property HorizontalChildrenAlignment: HorizontalAlignment read get_HorizontalChildrenAlignment write put_HorizontalChildrenAlignment;
    property ItemHeight: Double read get_ItemHeight write put_ItemHeight;
    property ItemWidth: Double read get_ItemWidth write put_ItemWidth;
    property MaximumRowsOrColumns: Integer read get_MaximumRowsOrColumns write put_MaximumRowsOrColumns;
    property Orientation_: Orientation read get_Orientation write put_Orientation;
    property VerticalChildrenAlignment: VerticalAlignment read get_VerticalChildrenAlignment write put_VerticalChildrenAlignment;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IVariableSizedWrapGridStatics
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_VariableSizedWrapGrid)]
  IVariableSizedWrapGridStatics = interface(IInspectable)
  ['{0D979FE6-64AF-5AF5-914A-DD38F2CCF2D7}']
    function get_ItemHeightProperty: IDependencyProperty; safecall;
    function get_ItemWidthProperty: IDependencyProperty; safecall;
    function get_OrientationProperty: IDependencyProperty; safecall;
    function get_HorizontalChildrenAlignmentProperty: IDependencyProperty; safecall;
    function get_VerticalChildrenAlignmentProperty: IDependencyProperty; safecall;
    function get_MaximumRowsOrColumnsProperty: IDependencyProperty; safecall;
    function get_RowSpanProperty: IDependencyProperty; safecall;
    function GetRowSpan(element: IUIElement): Integer; safecall;
    procedure SetRowSpan(element: IUIElement; value: Integer); safecall;
    function get_ColumnSpanProperty: IDependencyProperty; safecall;
    function GetColumnSpan(element: IUIElement): Integer; safecall;
    procedure SetColumnSpan(element: IUIElement; value: Integer); safecall;
    property ColumnSpanProperty: IDependencyProperty read get_ColumnSpanProperty;
    property HorizontalChildrenAlignmentProperty: IDependencyProperty read get_HorizontalChildrenAlignmentProperty;
    property ItemHeightProperty: IDependencyProperty read get_ItemHeightProperty;
    property ItemWidthProperty: IDependencyProperty read get_ItemWidthProperty;
    property MaximumRowsOrColumnsProperty: IDependencyProperty read get_MaximumRowsOrColumnsProperty;
    property OrientationProperty: IDependencyProperty read get_OrientationProperty;
    property RowSpanProperty: IDependencyProperty read get_RowSpanProperty;
    property VerticalChildrenAlignmentProperty: IDependencyProperty read get_VerticalChildrenAlignmentProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IViewbox
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_Viewbox)]
  IViewbox = interface(IInspectable)
  ['{510683E8-D0FE-5EF4-85BD-E1131076AC22}']
    function get_Child: IUIElement; safecall;
    procedure put_Child(value: IUIElement); safecall;
    function get_Stretch: Stretch; safecall;
    procedure put_Stretch(value: Stretch); safecall;
    function get_StretchDirection: StretchDirection; safecall;
    procedure put_StretchDirection(value: StretchDirection); safecall;
    property Child: IUIElement read get_Child write put_Child;
    property Stretch_: Stretch read get_Stretch write put_Stretch;
    property StretchDirection_: StretchDirection read get_StretchDirection write put_StretchDirection;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IViewboxStatics
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_Viewbox)]
  IViewboxStatics = interface(IInspectable)
  ['{0466C103-1E17-5E83-A262-8855F216B59F}']
    function get_StretchProperty: IDependencyProperty; safecall;
    function get_StretchDirectionProperty: IDependencyProperty; safecall;
    property StretchDirectionProperty: IDependencyProperty read get_StretchDirectionProperty;
    property StretchProperty: IDependencyProperty read get_StretchProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IVirtualizingLayout
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_VirtualizingLayout)]
  IVirtualizingLayout = interface(IInspectable)
  ['{54857CE0-B9E6-51A3-BFA8-DCD8EE306D5C}']
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IVirtualizingLayoutContext
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_VirtualizingLayoutContext)]
  IVirtualizingLayoutContext = interface(IInspectable)
  ['{5B5B186A-A7F9-5A2E-B1F0-8950CCD97350}']
    function get_ItemCount: Integer; safecall;
    function GetItemAt(index: Integer): IInspectable; safecall;
    function get_RealizationRect: TRectF; safecall;
    function GetOrCreateElementAt(index: Integer): IUIElement; overload; safecall;
    function GetOrCreateElementAt(index: Integer; options: ElementRealizationOptions): IUIElement; overload; safecall;
    procedure RecycleElement(element: IUIElement); safecall;
    function get_RecommendedAnchorIndex: Integer; safecall;
    function get_LayoutOrigin: TPointF; safecall;
    procedure put_LayoutOrigin(value: TPointF); safecall;
    property ItemCount: Integer read get_ItemCount;
    property LayoutOrigin: TPointF read get_LayoutOrigin write put_LayoutOrigin;
    property RealizationRect: TRectF read get_RealizationRect;
    property RecommendedAnchorIndex: Integer read get_RecommendedAnchorIndex;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IVirtualizingLayoutContextFactory
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_VirtualizingLayoutContext)]
  IVirtualizingLayoutContextFactory = interface(IInspectable)
  ['{3F790B67-FDFB-505A-8B85-6210506DF311}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IVirtualizingLayoutContext; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IVirtualizingLayoutContextOverrides
  IVirtualizingLayoutContextOverrides = interface(IInspectable)
  ['{78633B2A-9633-5086-89A7-0E960A95A3B2}']
    function ItemCountCore: Integer; safecall;
    function GetItemAtCore(index: Integer): IInspectable; safecall;
    function RealizationRectCore: TRectF; safecall;
    function GetOrCreateElementAtCore(index: Integer; options: ElementRealizationOptions): IUIElement; safecall;
    procedure RecycleElementCore(element: IUIElement); safecall;
    function get_RecommendedAnchorIndexCore: Integer; safecall;
    function get_LayoutOriginCore: TPointF; safecall;
    procedure put_LayoutOriginCore(value: TPointF); safecall;
    property LayoutOriginCore: TPointF read get_LayoutOriginCore write put_LayoutOriginCore;
    property RecommendedAnchorIndexCore: Integer read get_RecommendedAnchorIndexCore;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IVirtualizingLayoutFactory
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_VirtualizingLayout)]
  IVirtualizingLayoutFactory = interface(IInspectable)
  ['{C7C128E1-5DF7-5345-B5CD-43AFDFA948B4}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IVirtualizingLayout; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IVirtualizingLayoutOverrides
  IVirtualizingLayoutOverrides = interface(IInspectable)
  ['{4357A35B-3703-5819-A776-D139848E9ED9}']
    procedure InitializeForContextCore(context: IVirtualizingLayoutContext); safecall;
    procedure UninitializeForContextCore(context: IVirtualizingLayoutContext); safecall;
    function MeasureOverride(context: IVirtualizingLayoutContext; availableSize: TSizeF): TSizeF; safecall;
    function ArrangeOverride(context: IVirtualizingLayoutContext; finalSize: TSizeF): TSizeF; safecall;
    procedure OnItemsChangedCore(context: IVirtualizingLayoutContext; source: IInspectable; args: Interop_INotifyCollectionChangedEventArgs); safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IVirtualizingPanel
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_VirtualizingPanel)]
  IVirtualizingPanel = interface(IInspectable)
  ['{2B216A2D-5079-51BA-838A-9086903636B4}']
    function get_ItemContainerGenerator: IItemContainerGenerator; safecall;
    property ItemContainerGenerator: IItemContainerGenerator read get_ItemContainerGenerator;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IVirtualizingPanelFactory
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_VirtualizingPanel)]
  IVirtualizingPanelFactory = interface(IInspectable)
  ['{32E8C71B-B58C-5F19-9BD5-EECA5860F387}']
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IVirtualizingPanelOverrides
  IVirtualizingPanelOverrides = interface(IInspectable)
  ['{3FFE2108-0382-50C8-B295-21BD8BEE04D7}']
    procedure OnItemsChanged(sender: IInspectable; args: Primitives_IItemsChangedEventArgs); safecall;
    procedure OnClearChildren; safecall;
    procedure BringIndexIntoView(index: Integer); safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IVirtualizingPanelProtected
  IVirtualizingPanelProtected = interface(IInspectable)
  ['{BC4579F5-FDC8-5DA2-A98A-F44C13C073D3}']
    procedure AddInternalChild(child: IUIElement); safecall;
    procedure InsertInternalChild(index: Integer; child: IUIElement); safecall;
    procedure RemoveInternalChildRange(index: Integer; range: Integer); safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IVirtualizingStackPanel
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_VirtualizingStackPanel)]
  IVirtualizingStackPanel = interface(IInspectable)
  ['{7D6103DC-2427-5576-9A69-BF53E2D7180B}']
    function get_AreScrollSnapPointsRegular: Boolean; safecall;
    procedure put_AreScrollSnapPointsRegular(value: Boolean); safecall;
    function get_Orientation: Orientation; safecall;
    procedure put_Orientation(value: Orientation); safecall;
    function add_CleanUpVirtualizedItemEvent(handler: CleanUpVirtualizedItemEventHandler): EventRegistrationToken; safecall;
    procedure remove_CleanUpVirtualizedItemEvent(token: EventRegistrationToken); safecall;
    property AreScrollSnapPointsRegular: Boolean read get_AreScrollSnapPointsRegular write put_AreScrollSnapPointsRegular;
    property Orientation_: Orientation read get_Orientation write put_Orientation;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IVirtualizingStackPanelOverrides
  IVirtualizingStackPanelOverrides = interface(IInspectable)
  ['{8FEE3E46-6E2F-5C0A-9A3B-C0B659818801}']
    procedure OnCleanUpVirtualizedItem(e: ICleanUpVirtualizedItemEventArgs); safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IVirtualizingStackPanelStatics
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_VirtualizingStackPanel)]
  IVirtualizingStackPanelStatics = interface(IInspectable)
  ['{731CC881-A71A-5AF9-985E-1EDE3D88C274}']
    function get_AreScrollSnapPointsRegularProperty: IDependencyProperty; safecall;
    function get_OrientationProperty: IDependencyProperty; safecall;
    function get_VirtualizationModeProperty: IDependencyProperty; safecall;
    function GetVirtualizationMode(element: IDependencyObject): VirtualizationMode; safecall;
    procedure SetVirtualizationMode(element: IDependencyObject; value: VirtualizationMode); safecall;
    function get_IsVirtualizingProperty: IDependencyProperty; safecall;
    function GetIsVirtualizing(o: IDependencyObject): Boolean; safecall;
    property AreScrollSnapPointsRegularProperty: IDependencyProperty read get_AreScrollSnapPointsRegularProperty;
    property IsVirtualizingProperty: IDependencyProperty read get_IsVirtualizingProperty;
    property OrientationProperty: IDependencyProperty read get_OrientationProperty;
    property VirtualizationModeProperty: IDependencyProperty read get_VirtualizationModeProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IWebView2Factory
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_WebView2)]
  IWebView2Factory = interface(IInspectable)
  ['{FB4EC2CE-3074-5C42-B655-64FB81FBD040}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IWebView2; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IWebView2Statics
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_WebView2)]
  IWebView2Statics = interface(IInspectable)
  ['{7F3226D0-F6D5-5AA7-B175-645451CA3C85}']
    function get_SourceProperty: IDependencyProperty; safecall;
    function get_CanGoForwardProperty: IDependencyProperty; safecall;
    function get_CanGoBackProperty: IDependencyProperty; safecall;
    function get_DefaultBackgroundColorProperty: IDependencyProperty; safecall;
    property CanGoBackProperty: IDependencyProperty read get_CanGoBackProperty;
    property CanGoForwardProperty: IDependencyProperty read get_CanGoForwardProperty;
    property DefaultBackgroundColorProperty: IDependencyProperty read get_DefaultBackgroundColorProperty;
    property SourceProperty: IDependencyProperty read get_SourceProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IWrapGrid
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_WrapGrid)]
  IWrapGrid = interface(IInspectable)
  ['{2E570B6A-FF97-53B8-A887-348F59EE0544}']
    function get_ItemWidth: Double; safecall;
    procedure put_ItemWidth(value: Double); safecall;
    function get_ItemHeight: Double; safecall;
    procedure put_ItemHeight(value: Double); safecall;
    function get_Orientation: Orientation; safecall;
    procedure put_Orientation(value: Orientation); safecall;
    function get_HorizontalChildrenAlignment: HorizontalAlignment; safecall;
    procedure put_HorizontalChildrenAlignment(value: HorizontalAlignment); safecall;
    function get_VerticalChildrenAlignment: VerticalAlignment; safecall;
    procedure put_VerticalChildrenAlignment(value: VerticalAlignment); safecall;
    function get_MaximumRowsOrColumns: Integer; safecall;
    procedure put_MaximumRowsOrColumns(value: Integer); safecall;
    property HorizontalChildrenAlignment: HorizontalAlignment read get_HorizontalChildrenAlignment write put_HorizontalChildrenAlignment;
    property ItemHeight: Double read get_ItemHeight write put_ItemHeight;
    property ItemWidth: Double read get_ItemWidth write put_ItemWidth;
    property MaximumRowsOrColumns: Integer read get_MaximumRowsOrColumns write put_MaximumRowsOrColumns;
    property Orientation_: Orientation read get_Orientation write put_Orientation;
    property VerticalChildrenAlignment: VerticalAlignment read get_VerticalChildrenAlignment write put_VerticalChildrenAlignment;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IWrapGridStatics
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_WrapGrid)]
  IWrapGridStatics = interface(IInspectable)
  ['{2FE223A8-018A-5D2F-933B-A7569F824F19}']
    function get_ItemWidthProperty: IDependencyProperty; safecall;
    function get_ItemHeightProperty: IDependencyProperty; safecall;
    function get_OrientationProperty: IDependencyProperty; safecall;
    function get_HorizontalChildrenAlignmentProperty: IDependencyProperty; safecall;
    function get_VerticalChildrenAlignmentProperty: IDependencyProperty; safecall;
    function get_MaximumRowsOrColumnsProperty: IDependencyProperty; safecall;
    property HorizontalChildrenAlignmentProperty: IDependencyProperty read get_HorizontalChildrenAlignmentProperty;
    property ItemHeightProperty: IDependencyProperty read get_ItemHeightProperty;
    property ItemWidthProperty: IDependencyProperty read get_ItemWidthProperty;
    property MaximumRowsOrColumnsProperty: IDependencyProperty read get_MaximumRowsOrColumnsProperty;
    property OrientationProperty: IDependencyProperty read get_OrientationProperty;
    property VerticalChildrenAlignmentProperty: IDependencyProperty read get_VerticalChildrenAlignmentProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IXamlControlsResources
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_XamlControlsResources)]
  IXamlControlsResources = interface(IInspectable)
  ['{918CA043-F42C-5805-861B-62D6D1D0C162}']
    function get_UseCompactResources: Boolean; safecall;
    procedure put_UseCompactResources(value: Boolean); safecall;
    property UseCompactResources: Boolean read get_UseCompactResources write put_UseCompactResources;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.IXamlControlsResourcesStatics
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_XamlControlsResources)]
  IXamlControlsResourcesStatics = interface(IInspectable)
  ['{CB49196C-1458-5E92-B701-D08D3E816BC5}']
    procedure EnsureRevealLights(element: IUIElement); safecall;
    function get_UseCompactResourcesProperty: IDependencyProperty; safecall;
    property UseCompactResourcesProperty: IDependencyProperty read get_UseCompactResourcesProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.Primitives.IAutoSuggestBoxHelper
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_Primitives_AutoSuggestBoxHelper)]
  Primitives_IAutoSuggestBoxHelper = interface(IInspectable)
  ['{1E56736C-8248-57D9-AC04-E4E7DCC3F9E1}']
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.Primitives.IAutoSuggestBoxHelperStatics
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_Primitives_AutoSuggestBoxHelper)]
  Primitives_IAutoSuggestBoxHelperStatics = interface(IInspectable)
  ['{A8C05752-B160-5710-A009-2AD0FC4ED111}']
    function get_KeepInteriorCornersSquareProperty: IDependencyProperty; safecall;
    procedure SetKeepInteriorCornersSquare(autoSuggestBox: IAutoSuggestBox; value: Boolean); safecall;
    function GetKeepInteriorCornersSquare(autoSuggestBox: IAutoSuggestBox): Boolean; safecall;
    property KeepInteriorCornersSquareProperty: IDependencyProperty read get_KeepInteriorCornersSquareProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.Primitives.IButtonBaseFactory
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_Primitives_ButtonBase)]
  Primitives_IButtonBaseFactory = interface(IInspectable)
  ['{21251AA9-6FD1-5E51-AB3B-E6FCAF3395ED}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): Primitives_IButtonBase; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.Primitives.IButtonBaseStatics
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_Primitives_ButtonBase)]
  Primitives_IButtonBaseStatics = interface(IInspectable)
  ['{DBE812F6-ADF8-51D3-8137-A8FBF6445B3C}']
    function get_ClickModeProperty: IDependencyProperty; safecall;
    function get_IsPointerOverProperty: IDependencyProperty; safecall;
    function get_IsPressedProperty: IDependencyProperty; safecall;
    function get_CommandProperty: IDependencyProperty; safecall;
    function get_CommandParameterProperty: IDependencyProperty; safecall;
    property ClickModeProperty: IDependencyProperty read get_ClickModeProperty;
    property CommandParameterProperty: IDependencyProperty read get_CommandParameterProperty;
    property CommandProperty: IDependencyProperty read get_CommandProperty;
    property IsPointerOverProperty: IDependencyProperty read get_IsPointerOverProperty;
    property IsPressedProperty: IDependencyProperty read get_IsPressedProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.Primitives.ICalendarPanel
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_Primitives_CalendarPanel)]
  Primitives_ICalendarPanel = interface(IInspectable)
  ['{A4B26C3A-3825-5DA4-A9E0-DD9B1E405E53}']
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.Primitives.ICarouselPanel
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_Primitives_CarouselPanel)]
  Primitives_ICarouselPanel = interface(IInspectable)
  ['{298D3800-E5C9-5003-B84C-A6538866E2D5}']
    function get_CanVerticallyScroll: Boolean; safecall;
    procedure put_CanVerticallyScroll(value: Boolean); safecall;
    function get_CanHorizontallyScroll: Boolean; safecall;
    procedure put_CanHorizontallyScroll(value: Boolean); safecall;
    function get_ExtentWidth: Double; safecall;
    function get_ExtentHeight: Double; safecall;
    function get_ViewportWidth: Double; safecall;
    function get_ViewportHeight: Double; safecall;
    function get_HorizontalOffset: Double; safecall;
    function get_VerticalOffset: Double; safecall;
    function get_ScrollOwner: IInspectable; safecall;
    procedure put_ScrollOwner(value: IInspectable); safecall;
    procedure LineUp; safecall;
    procedure LineDown; safecall;
    procedure LineLeft; safecall;
    procedure LineRight; safecall;
    procedure PageUp; safecall;
    procedure PageDown; safecall;
    procedure PageLeft; safecall;
    procedure PageRight; safecall;
    procedure MouseWheelUp; safecall;
    procedure MouseWheelDown; safecall;
    procedure MouseWheelLeft; safecall;
    procedure MouseWheelRight; safecall;
    procedure SetHorizontalOffset(offset: Double); safecall;
    procedure SetVerticalOffset(offset: Double); safecall;
    function MakeVisible(visual: IUIElement; rectangle: TRectF): TRectF; safecall;
    property CanHorizontallyScroll: Boolean read get_CanHorizontallyScroll write put_CanHorizontallyScroll;
    property CanVerticallyScroll: Boolean read get_CanVerticallyScroll write put_CanVerticallyScroll;
    property ExtentHeight: Double read get_ExtentHeight;
    property ExtentWidth: Double read get_ExtentWidth;
    property HorizontalOffset: Double read get_HorizontalOffset;
    property ScrollOwner: IInspectable read get_ScrollOwner write put_ScrollOwner;
    property VerticalOffset: Double read get_VerticalOffset;
    property ViewportHeight: Double read get_ViewportHeight;
    property ViewportWidth: Double read get_ViewportWidth;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.Primitives.ICarouselPanelFactory
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_Primitives_CarouselPanel)]
  Primitives_ICarouselPanelFactory = interface(IInspectable)
  ['{161D3FC2-D1EC-5D1D-AC8A-CF4577F06C3C}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): Primitives_ICarouselPanel; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.Primitives.IColorPickerSliderFactory
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_Primitives_ColorPickerSlider)]
  Primitives_IColorPickerSliderFactory = interface(IInspectable)
  ['{D0CB1F0E-0771-5C7D-BA14-AA431179B2AC}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): Primitives_IColorPickerSlider; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.Primitives.IColorPickerSliderStatics
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_Primitives_ColorPickerSlider)]
  Primitives_IColorPickerSliderStatics = interface(IInspectable)
  ['{82F72B75-E986-587F-9701-8AC6801DA932}']
    function get_ColorChannelProperty: IDependencyProperty; safecall;
    property ColorChannelProperty: IDependencyProperty read get_ColorChannelProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.Primitives.IColorSpectrumFactory
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_Primitives_ColorSpectrum)]
  Primitives_IColorSpectrumFactory = interface(IInspectable)
  ['{EFECD442-8C2A-50A6-88A3-3999EA01F096}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): Primitives_IColorSpectrum; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.Primitives.IColorSpectrumStatics
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_Primitives_ColorSpectrum)]
  Primitives_IColorSpectrumStatics = interface(IInspectable)
  ['{A2B43DBA-1616-527D-9D32-039573B7FCE7}']
    function get_ColorProperty: IDependencyProperty; safecall;
    function get_HsvColorProperty: IDependencyProperty; safecall;
    function get_MinHueProperty: IDependencyProperty; safecall;
    function get_MaxHueProperty: IDependencyProperty; safecall;
    function get_MinSaturationProperty: IDependencyProperty; safecall;
    function get_MaxSaturationProperty: IDependencyProperty; safecall;
    function get_MinValueProperty: IDependencyProperty; safecall;
    function get_MaxValueProperty: IDependencyProperty; safecall;
    function get_ShapeProperty: IDependencyProperty; safecall;
    function get_ComponentsProperty: IDependencyProperty; safecall;
    property ColorProperty: IDependencyProperty read get_ColorProperty;
    property ComponentsProperty: IDependencyProperty read get_ComponentsProperty;
    property HsvColorProperty: IDependencyProperty read get_HsvColorProperty;
    property MaxHueProperty: IDependencyProperty read get_MaxHueProperty;
    property MaxSaturationProperty: IDependencyProperty read get_MaxSaturationProperty;
    property MaxValueProperty: IDependencyProperty read get_MaxValueProperty;
    property MinHueProperty: IDependencyProperty read get_MinHueProperty;
    property MinSaturationProperty: IDependencyProperty read get_MinSaturationProperty;
    property MinValueProperty: IDependencyProperty read get_MinValueProperty;
    property ShapeProperty: IDependencyProperty read get_ShapeProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.Primitives.IColumnMajorUniformToLargestGridLayout
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_Primitives_ColumnMajorUniformToLargestGridLayout)]
  Primitives_IColumnMajorUniformToLargestGridLayout = interface(IInspectable)
  ['{EE10A6AA-EFEB-51AC-B791-71913AE8C235}']
    function get_MaxColumns: Integer; safecall;
    procedure put_MaxColumns(value: Integer); safecall;
    function get_ColumnSpacing: Double; safecall;
    procedure put_ColumnSpacing(value: Double); safecall;
    function get_RowSpacing: Double; safecall;
    procedure put_RowSpacing(value: Double); safecall;
    property ColumnSpacing: Double read get_ColumnSpacing write put_ColumnSpacing;
    property MaxColumns: Integer read get_MaxColumns write put_MaxColumns;
    property RowSpacing: Double read get_RowSpacing write put_RowSpacing;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.Primitives.IColumnMajorUniformToLargestGridLayoutFactory
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_Primitives_ColumnMajorUniformToLargestGridLayout)]
  Primitives_IColumnMajorUniformToLargestGridLayoutFactory = interface(IInspectable)
  ['{2F21AF59-1585-5325-8412-2B83BF05D345}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): Primitives_IColumnMajorUniformToLargestGridLayout; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.Primitives.IColumnMajorUniformToLargestGridLayoutStatics
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_Primitives_ColumnMajorUniformToLargestGridLayout)]
  Primitives_IColumnMajorUniformToLargestGridLayoutStatics = interface(IInspectable)
  ['{7B2F0EC6-2345-5986-A5B9-B1BEB5A74350}']
    function get_MaxColumnsProperty: IDependencyProperty; safecall;
    function get_ColumnSpacingProperty: IDependencyProperty; safecall;
    function get_RowSpacingProperty: IDependencyProperty; safecall;
    property ColumnSpacingProperty: IDependencyProperty read get_ColumnSpacingProperty;
    property MaxColumnsProperty: IDependencyProperty read get_MaxColumnsProperty;
    property RowSpacingProperty: IDependencyProperty read get_RowSpacingProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.Primitives.IComboBoxHelper
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_Primitives_ComboBoxHelper)]
  Primitives_IComboBoxHelper = interface(IInspectable)
  ['{5A3C87AC-C399-5E5F-873F-B9D0E8BCCEB7}']
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.Primitives.IComboBoxHelperStatics
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_Primitives_ComboBoxHelper)]
  Primitives_IComboBoxHelperStatics = interface(IInspectable)
  ['{EC21BE42-ED02-5C10-9FBE-AF1881CD877B}']
    function get_KeepInteriorCornersSquareProperty: IDependencyProperty; safecall;
    procedure SetKeepInteriorCornersSquare(comboBox: IComboBox; value: Boolean); safecall;
    function GetKeepInteriorCornersSquare(comboBox: IComboBox): Boolean; safecall;
    property KeepInteriorCornersSquareProperty: IDependencyProperty read get_KeepInteriorCornersSquareProperty;
  end;

  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.Primitives.ICommandBarFlyoutCommandBarTemplateSettings
  Primitives_ICommandBarFlyoutCommandBarTemplateSettings = interface(IInspectable)
  ['{533CC5CA-DCF7-5F9D-A460-934A883ACDC1}']
    function get_OpenAnimationStartPosition: Double; safecall;
    function get_OpenAnimationEndPosition: Double; safecall;
    function get_CloseAnimationEndPosition: Double; safecall;
    function get_CurrentWidth: Double; safecall;
    function get_ExpandedWidth: Double; safecall;
    function get_WidthExpansionDelta: Double; safecall;
    function get_WidthExpansionAnimationStartPosition: Double; safecall;
    function get_WidthExpansionAnimationEndPosition: Double; safecall;
    function get_WidthExpansionMoreButtonAnimationStartPosition: Double; safecall;
    function get_WidthExpansionMoreButtonAnimationEndPosition: Double; safecall;
    function get_ExpandUpOverflowVerticalPosition: Double; safecall;
    function get_ExpandDownOverflowVerticalPosition: Double; safecall;
    function get_ExpandUpAnimationStartPosition: Double; safecall;
    function get_ExpandUpAnimationEndPosition: Double; safecall;
    function get_ExpandUpAnimationHoldPosition: Double; safecall;
    function get_ExpandDownAnimationStartPosition: Double; safecall;
    function get_ExpandDownAnimationEndPosition: Double; safecall;
    function get_ExpandDownAnimationHoldPosition: Double; safecall;
    function get_ContentClipRect: TRectF; safecall;
    function get_OverflowContentClipRect: TRectF; safecall;
    property CloseAnimationEndPosition: Double read get_CloseAnimationEndPosition;
    property ContentClipRect: TRectF read get_ContentClipRect;
    property CurrentWidth: Double read get_CurrentWidth;
    property ExpandDownAnimationEndPosition: Double read get_ExpandDownAnimationEndPosition;
    property ExpandDownAnimationHoldPosition: Double read get_ExpandDownAnimationHoldPosition;
    property ExpandDownAnimationStartPosition: Double read get_ExpandDownAnimationStartPosition;
    property ExpandDownOverflowVerticalPosition: Double read get_ExpandDownOverflowVerticalPosition;
    property ExpandUpAnimationEndPosition: Double read get_ExpandUpAnimationEndPosition;
    property ExpandUpAnimationHoldPosition: Double read get_ExpandUpAnimationHoldPosition;
    property ExpandUpAnimationStartPosition: Double read get_ExpandUpAnimationStartPosition;
    property ExpandUpOverflowVerticalPosition: Double read get_ExpandUpOverflowVerticalPosition;
    property ExpandedWidth: Double read get_ExpandedWidth;
    property OpenAnimationEndPosition: Double read get_OpenAnimationEndPosition;
    property OpenAnimationStartPosition: Double read get_OpenAnimationStartPosition;
    property OverflowContentClipRect: TRectF read get_OverflowContentClipRect;
    property WidthExpansionAnimationEndPosition: Double read get_WidthExpansionAnimationEndPosition;
    property WidthExpansionAnimationStartPosition: Double read get_WidthExpansionAnimationStartPosition;
    property WidthExpansionDelta: Double read get_WidthExpansionDelta;
    property WidthExpansionMoreButtonAnimationEndPosition: Double read get_WidthExpansionMoreButtonAnimationEndPosition;
    property WidthExpansionMoreButtonAnimationStartPosition: Double read get_WidthExpansionMoreButtonAnimationStartPosition;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.Primitives.ICommandBarFlyoutCommandBar
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_Primitives_CommandBarFlyoutCommandBar)]
  Primitives_ICommandBarFlyoutCommandBar = interface(IInspectable)
  ['{0F7120C5-6D00-5489-9171-BEDD2D4EF677}']
    function get_FlyoutTemplateSettings: Primitives_ICommandBarFlyoutCommandBarTemplateSettings; safecall;
    property FlyoutTemplateSettings: Primitives_ICommandBarFlyoutCommandBarTemplateSettings read get_FlyoutTemplateSettings;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.Primitives.ICommandBarFlyoutCommandBarAutomationPropertiesStatics
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_Primitives_CommandBarFlyoutCommandBarAutomationProperties)]
  Primitives_ICommandBarFlyoutCommandBarAutomationPropertiesStatics = interface(IInspectable)
  ['{C9957F75-C57F-5BA3-B867-F9D86B1D90B9}']
    function get_ControlTypeProperty: IDependencyProperty; safecall;
    function GetControlType(element: IUIElement): Automation_Peers_AutomationControlType; safecall;
    procedure SetControlType(element: IUIElement; value: Automation_Peers_AutomationControlType); safecall;
    property ControlTypeProperty: IDependencyProperty read get_ControlTypeProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.Primitives.ICommandBarFlyoutCommandBarFactory
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_Primitives_CommandBarFlyoutCommandBar)]
  Primitives_ICommandBarFlyoutCommandBarFactory = interface(IInspectable)
  ['{58DBCDA9-38E4-5EFC-B740-26FDA3D0A3C6}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): Primitives_ICommandBarFlyoutCommandBar; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.Primitives.ICornerRadiusFilterConverter
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_Primitives_CornerRadiusFilterConverter)]
  Primitives_ICornerRadiusFilterConverter = interface(IInspectable)
  ['{6F1A3ED2-F965-545E-BD44-441DB1794F5F}']
    function get_Filter: Primitives_CornerRadiusFilterKind; safecall;
    procedure put_Filter(value: Primitives_CornerRadiusFilterKind); safecall;
    function get_Scale: Double; safecall;
    procedure put_Scale(value: Double); safecall;
    property Filter: Primitives_CornerRadiusFilterKind read get_Filter write put_Filter;
    property Scale: Double read get_Scale write put_Scale;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.Primitives.ICornerRadiusFilterConverterStatics
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_Primitives_CornerRadiusFilterConverter)]
  Primitives_ICornerRadiusFilterConverterStatics = interface(IInspectable)
  ['{2D9574F9-CC9E-535E-A70E-D55C4CA27F49}']
    function get_FilterProperty: IDependencyProperty; safecall;
    function get_ScaleProperty: IDependencyProperty; safecall;
    property FilterProperty: IDependencyProperty read get_FilterProperty;
    property ScaleProperty: IDependencyProperty read get_ScaleProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.Primitives.ICornerRadiusToThicknessConverter
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_Primitives_CornerRadiusToThicknessConverter)]
  Primitives_ICornerRadiusToThicknessConverter = interface(IInspectable)
  ['{B36AA8AE-166E-5CA5-93D2-95E9907C1222}']
    function get_ConversionKind: Primitives_CornerRadiusToThicknessConverterKind; safecall;
    procedure put_ConversionKind(value: Primitives_CornerRadiusToThicknessConverterKind); safecall;
    function get_Multiplier: Double; safecall;
    procedure put_Multiplier(value: Double); safecall;
    property ConversionKind: Primitives_CornerRadiusToThicknessConverterKind read get_ConversionKind write put_ConversionKind;
    property Multiplier: Double read get_Multiplier write put_Multiplier;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.Primitives.ICornerRadiusToThicknessConverterStatics
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_Primitives_CornerRadiusToThicknessConverter)]
  Primitives_ICornerRadiusToThicknessConverterStatics = interface(IInspectable)
  ['{92AD9D36-5483-5258-A43B-4356443087F1}']
    function get_ConversionKindProperty: IDependencyProperty; safecall;
    function get_MultiplierProperty: IDependencyProperty; safecall;
    property ConversionKindProperty: IDependencyProperty read get_ConversionKindProperty;
    property MultiplierProperty: IDependencyProperty read get_MultiplierProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.Primitives.IDragCompletedEventArgsFactory
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_Primitives_DragCompletedEventArgs)]
  Primitives_IDragCompletedEventArgsFactory = interface(IInspectable)
  ['{5767C408-454B-55CF-B74E-229642AED108}']
    function CreateInstanceWithHorizontalChangeVerticalChangeAndCanceled(horizontalChange: Double; verticalChange: Double; canceled: Boolean; baseInterface: IInspectable; out innerInterface: IInspectable): Primitives_IDragCompletedEventArgs; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.Primitives.IDragDeltaEventArgsFactory
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_Primitives_DragDeltaEventArgs)]
  Primitives_IDragDeltaEventArgsFactory = interface(IInspectable)
  ['{4ADBA280-E1F9-5DAB-87FF-5903B419EF9D}']
    function CreateInstanceWithHorizontalChangeAndVerticalChange(horizontalChange: Double; verticalChange: Double; baseInterface: IInspectable; out innerInterface: IInspectable): Primitives_IDragDeltaEventArgs; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.Primitives.IDragStartedEventArgsFactory
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_Primitives_DragStartedEventArgs)]
  Primitives_IDragStartedEventArgsFactory = interface(IInspectable)
  ['{36078AA3-906C-5EF0-9D24-30C09F79C18F}']
    function CreateInstanceWithHorizontalOffsetAndVerticalOffset(horizontalOffset: Double; verticalOffset: Double; baseInterface: IInspectable; out innerInterface: IInspectable): Primitives_IDragStartedEventArgs; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.Primitives.IFlyoutBaseFactory
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_Primitives_FlyoutBase)]
  Primitives_IFlyoutBaseFactory = interface(IInspectable)
  ['{006D738F-7C91-5EF3-8A80-A548108DAB8B}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): Primitives_IFlyoutBase; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.Primitives.IFlyoutBaseOverrides
  Primitives_IFlyoutBaseOverrides = interface(IInspectable)
  ['{5BB19ED8-08DE-5EEC-91CB-5FC59974E894}']
    function CreatePresenter: IControl; safecall;
    procedure OnProcessKeyboardAccelerators(args: Input_IProcessKeyboardAcceleratorEventArgs); safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.Primitives.IFlyoutBaseStatics
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_Primitives_FlyoutBase)]
  Primitives_IFlyoutBaseStatics = interface(IInspectable)
  ['{63EE628E-D2E3-5515-AEA4-E461088C0C4E}']
    function get_TargetProperty: IDependencyProperty; safecall;
    function get_PlacementProperty: IDependencyProperty; safecall;
    function get_AllowFocusOnInteractionProperty: IDependencyProperty; safecall;
    function get_LightDismissOverlayModeProperty: IDependencyProperty; safecall;
    function get_AllowFocusWhenDisabledProperty: IDependencyProperty; safecall;
    function get_ShowModeProperty: IDependencyProperty; safecall;
    function get_InputDevicePrefersPrimaryCommandsProperty: IDependencyProperty; safecall;
    function get_AreOpenCloseAnimationsEnabledProperty: IDependencyProperty; safecall;
    function get_ShouldConstrainToRootBoundsProperty: IDependencyProperty; safecall;
    function get_ElementSoundModeProperty: IDependencyProperty; safecall;
    function get_OverlayInputPassThroughElementProperty: IDependencyProperty; safecall;
    function get_IsOpenProperty: IDependencyProperty; safecall;
    function get_AttachedFlyoutProperty: IDependencyProperty; safecall;
    function GetAttachedFlyout(element: IFrameworkElement): Primitives_IFlyoutBase; safecall;
    procedure SetAttachedFlyout(element: IFrameworkElement; value: Primitives_IFlyoutBase); safecall;
    procedure ShowAttachedFlyout(flyoutOwner: IFrameworkElement); safecall;
    property AllowFocusOnInteractionProperty: IDependencyProperty read get_AllowFocusOnInteractionProperty;
    property AllowFocusWhenDisabledProperty: IDependencyProperty read get_AllowFocusWhenDisabledProperty;
    property AreOpenCloseAnimationsEnabledProperty: IDependencyProperty read get_AreOpenCloseAnimationsEnabledProperty;
    property AttachedFlyoutProperty: IDependencyProperty read get_AttachedFlyoutProperty;
    property ElementSoundModeProperty: IDependencyProperty read get_ElementSoundModeProperty;
    property InputDevicePrefersPrimaryCommandsProperty: IDependencyProperty read get_InputDevicePrefersPrimaryCommandsProperty;
    property IsOpenProperty: IDependencyProperty read get_IsOpenProperty;
    property LightDismissOverlayModeProperty: IDependencyProperty read get_LightDismissOverlayModeProperty;
    property OverlayInputPassThroughElementProperty: IDependencyProperty read get_OverlayInputPassThroughElementProperty;
    property PlacementProperty: IDependencyProperty read get_PlacementProperty;
    property ShouldConstrainToRootBoundsProperty: IDependencyProperty read get_ShouldConstrainToRootBoundsProperty;
    property ShowModeProperty: IDependencyProperty read get_ShowModeProperty;
    property TargetProperty: IDependencyProperty read get_TargetProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.Primitives.IFlyoutShowOptionsFactory
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_Primitives_FlyoutShowOptions)]
  Primitives_IFlyoutShowOptionsFactory = interface(IInspectable)
  ['{17426D30-70D9-54D7-BD39-E7C4C940C0F4}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): Primitives_IFlyoutShowOptions; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.Primitives.IGeneratorPositionHelper
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_Primitives_GeneratorPositionHelper)]
  Primitives_IGeneratorPositionHelper = interface(IInspectable)
  ['{872A9F8F-0E0E-5089-92A9-DBCED99CA86D}']
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.Primitives.IGeneratorPositionHelperStatics
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_Primitives_GeneratorPositionHelper)]
  Primitives_IGeneratorPositionHelperStatics = interface(IInspectable)
  ['{3113605A-3FEB-54F9-A256-F373250281D4}']
    function FromIndexAndOffset(index: Integer; offset: Integer): Primitives_GeneratorPosition; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.Primitives.IGridViewItemPresenter
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_Primitives_GridViewItemPresenter)]
  Primitives_IGridViewItemPresenter = interface(IInspectable)
  ['{22772FD8-FE30-5B6F-9B17-5EEA5D70D860}']
    function get_SelectionCheckMarkVisualEnabled: Boolean; safecall;
    procedure put_SelectionCheckMarkVisualEnabled(value: Boolean); safecall;
    function get_CheckHintBrush: IBrush; safecall;
    procedure put_CheckHintBrush(value: IBrush); safecall;
    function get_CheckSelectingBrush: IBrush; safecall;
    procedure put_CheckSelectingBrush(value: IBrush); safecall;
    function get_CheckBrush: IBrush; safecall;
    procedure put_CheckBrush(value: IBrush); safecall;
    function get_DragBackground: IBrush; safecall;
    procedure put_DragBackground(value: IBrush); safecall;
    function get_DragForeground: IBrush; safecall;
    procedure put_DragForeground(value: IBrush); safecall;
    function get_FocusBorderBrush: IBrush; safecall;
    procedure put_FocusBorderBrush(value: IBrush); safecall;
    function get_PlaceholderBackground: IBrush; safecall;
    procedure put_PlaceholderBackground(value: IBrush); safecall;
    function get_PointerOverBackground: IBrush; safecall;
    procedure put_PointerOverBackground(value: IBrush); safecall;
    function get_SelectedBackground: IBrush; safecall;
    procedure put_SelectedBackground(value: IBrush); safecall;
    function get_SelectedForeground: IBrush; safecall;
    procedure put_SelectedForeground(value: IBrush); safecall;
    function get_SelectedPointerOverBackground: IBrush; safecall;
    procedure put_SelectedPointerOverBackground(value: IBrush); safecall;
    function get_SelectedPointerOverBorderBrush: IBrush; safecall;
    procedure put_SelectedPointerOverBorderBrush(value: IBrush); safecall;
    function get_SelectedBorderThickness: Thickness; safecall;
    procedure put_SelectedBorderThickness(value: Thickness); safecall;
    function get_DisabledOpacity: Double; safecall;
    procedure put_DisabledOpacity(value: Double); safecall;
    function get_DragOpacity: Double; safecall;
    procedure put_DragOpacity(value: Double); safecall;
    function get_ReorderHintOffset: Double; safecall;
    procedure put_ReorderHintOffset(value: Double); safecall;
    function get_GridViewItemPresenterHorizontalContentAlignment: HorizontalAlignment; safecall;
    procedure put_GridViewItemPresenterHorizontalContentAlignment(value: HorizontalAlignment); safecall;
    function get_GridViewItemPresenterVerticalContentAlignment: VerticalAlignment; safecall;
    procedure put_GridViewItemPresenterVerticalContentAlignment(value: VerticalAlignment); safecall;
    function get_GridViewItemPresenterPadding: Thickness; safecall;
    procedure put_GridViewItemPresenterPadding(value: Thickness); safecall;
    function get_PointerOverBackgroundMargin: Thickness; safecall;
    procedure put_PointerOverBackgroundMargin(value: Thickness); safecall;
    function get_ContentMargin: Thickness; safecall;
    procedure put_ContentMargin(value: Thickness); safecall;
    property CheckBrush: IBrush read get_CheckBrush write put_CheckBrush;
    property CheckHintBrush: IBrush read get_CheckHintBrush write put_CheckHintBrush;
    property CheckSelectingBrush: IBrush read get_CheckSelectingBrush write put_CheckSelectingBrush;
    property ContentMargin: Thickness read get_ContentMargin write put_ContentMargin;
    property DisabledOpacity: Double read get_DisabledOpacity write put_DisabledOpacity;
    property DragBackground: IBrush read get_DragBackground write put_DragBackground;
    property DragForeground: IBrush read get_DragForeground write put_DragForeground;
    property DragOpacity: Double read get_DragOpacity write put_DragOpacity;
    property FocusBorderBrush: IBrush read get_FocusBorderBrush write put_FocusBorderBrush;
    property GridViewItemPresenterHorizontalContentAlignment: HorizontalAlignment read get_GridViewItemPresenterHorizontalContentAlignment write put_GridViewItemPresenterHorizontalContentAlignment;
    property GridViewItemPresenterPadding: Thickness read get_GridViewItemPresenterPadding write put_GridViewItemPresenterPadding;
    property GridViewItemPresenterVerticalContentAlignment: VerticalAlignment read get_GridViewItemPresenterVerticalContentAlignment write put_GridViewItemPresenterVerticalContentAlignment;
    property PlaceholderBackground: IBrush read get_PlaceholderBackground write put_PlaceholderBackground;
    property PointerOverBackground: IBrush read get_PointerOverBackground write put_PointerOverBackground;
    property PointerOverBackgroundMargin: Thickness read get_PointerOverBackgroundMargin write put_PointerOverBackgroundMargin;
    property ReorderHintOffset: Double read get_ReorderHintOffset write put_ReorderHintOffset;
    property SelectedBackground: IBrush read get_SelectedBackground write put_SelectedBackground;
    property SelectedBorderThickness: Thickness read get_SelectedBorderThickness write put_SelectedBorderThickness;
    property SelectedForeground: IBrush read get_SelectedForeground write put_SelectedForeground;
    property SelectedPointerOverBackground: IBrush read get_SelectedPointerOverBackground write put_SelectedPointerOverBackground;
    property SelectedPointerOverBorderBrush: IBrush read get_SelectedPointerOverBorderBrush write put_SelectedPointerOverBorderBrush;
    property SelectionCheckMarkVisualEnabled: Boolean read get_SelectionCheckMarkVisualEnabled write put_SelectionCheckMarkVisualEnabled;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.Primitives.IGridViewItemPresenterFactory
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_Primitives_GridViewItemPresenter)]
  Primitives_IGridViewItemPresenterFactory = interface(IInspectable)
  ['{D1F47760-C353-5A10-8A6B-9A1E3B52F934}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): Primitives_IGridViewItemPresenter; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.Primitives.IGridViewItemPresenterStatics
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_Primitives_GridViewItemPresenter)]
  Primitives_IGridViewItemPresenterStatics = interface(IInspectable)
  ['{31A58ED1-901C-5753-944E-4DD9F22D2447}']
    function get_SelectionCheckMarkVisualEnabledProperty: IDependencyProperty; safecall;
    function get_CheckHintBrushProperty: IDependencyProperty; safecall;
    function get_CheckSelectingBrushProperty: IDependencyProperty; safecall;
    function get_CheckBrushProperty: IDependencyProperty; safecall;
    function get_DragBackgroundProperty: IDependencyProperty; safecall;
    function get_DragForegroundProperty: IDependencyProperty; safecall;
    function get_FocusBorderBrushProperty: IDependencyProperty; safecall;
    function get_PlaceholderBackgroundProperty: IDependencyProperty; safecall;
    function get_PointerOverBackgroundProperty: IDependencyProperty; safecall;
    function get_SelectedBackgroundProperty: IDependencyProperty; safecall;
    function get_SelectedForegroundProperty: IDependencyProperty; safecall;
    function get_SelectedPointerOverBackgroundProperty: IDependencyProperty; safecall;
    function get_SelectedPointerOverBorderBrushProperty: IDependencyProperty; safecall;
    function get_SelectedBorderThicknessProperty: IDependencyProperty; safecall;
    function get_DisabledOpacityProperty: IDependencyProperty; safecall;
    function get_DragOpacityProperty: IDependencyProperty; safecall;
    function get_ReorderHintOffsetProperty: IDependencyProperty; safecall;
    function get_GridViewItemPresenterHorizontalContentAlignmentProperty: IDependencyProperty; safecall;
    function get_GridViewItemPresenterVerticalContentAlignmentProperty: IDependencyProperty; safecall;
    function get_GridViewItemPresenterPaddingProperty: IDependencyProperty; safecall;
    function get_PointerOverBackgroundMarginProperty: IDependencyProperty; safecall;
    function get_ContentMarginProperty: IDependencyProperty; safecall;
    property CheckBrushProperty: IDependencyProperty read get_CheckBrushProperty;
    property CheckHintBrushProperty: IDependencyProperty read get_CheckHintBrushProperty;
    property CheckSelectingBrushProperty: IDependencyProperty read get_CheckSelectingBrushProperty;
    property ContentMarginProperty: IDependencyProperty read get_ContentMarginProperty;
    property DisabledOpacityProperty: IDependencyProperty read get_DisabledOpacityProperty;
    property DragBackgroundProperty: IDependencyProperty read get_DragBackgroundProperty;
    property DragForegroundProperty: IDependencyProperty read get_DragForegroundProperty;
    property DragOpacityProperty: IDependencyProperty read get_DragOpacityProperty;
    property FocusBorderBrushProperty: IDependencyProperty read get_FocusBorderBrushProperty;
    property GridViewItemPresenterHorizontalContentAlignmentProperty: IDependencyProperty read get_GridViewItemPresenterHorizontalContentAlignmentProperty;
    property GridViewItemPresenterPaddingProperty: IDependencyProperty read get_GridViewItemPresenterPaddingProperty;
    property GridViewItemPresenterVerticalContentAlignmentProperty: IDependencyProperty read get_GridViewItemPresenterVerticalContentAlignmentProperty;
    property PlaceholderBackgroundProperty: IDependencyProperty read get_PlaceholderBackgroundProperty;
    property PointerOverBackgroundMarginProperty: IDependencyProperty read get_PointerOverBackgroundMarginProperty;
    property PointerOverBackgroundProperty: IDependencyProperty read get_PointerOverBackgroundProperty;
    property ReorderHintOffsetProperty: IDependencyProperty read get_ReorderHintOffsetProperty;
    property SelectedBackgroundProperty: IDependencyProperty read get_SelectedBackgroundProperty;
    property SelectedBorderThicknessProperty: IDependencyProperty read get_SelectedBorderThicknessProperty;
    property SelectedForegroundProperty: IDependencyProperty read get_SelectedForegroundProperty;
    property SelectedPointerOverBackgroundProperty: IDependencyProperty read get_SelectedPointerOverBackgroundProperty;
    property SelectedPointerOverBorderBrushProperty: IDependencyProperty read get_SelectedPointerOverBorderBrushProperty;
    property SelectionCheckMarkVisualEnabledProperty: IDependencyProperty read get_SelectionCheckMarkVisualEnabledProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.Primitives.IInfoBarPanel
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_Primitives_InfoBarPanel)]
  Primitives_IInfoBarPanel = interface(IInspectable)
  ['{4D2FD5FE-CB75-52FF-B57F-A992912383CC}']
    function get_HorizontalOrientationPadding: Thickness; safecall;
    procedure put_HorizontalOrientationPadding(value: Thickness); safecall;
    function get_VerticalOrientationPadding: Thickness; safecall;
    procedure put_VerticalOrientationPadding(value: Thickness); safecall;
    property HorizontalOrientationPadding: Thickness read get_HorizontalOrientationPadding write put_HorizontalOrientationPadding;
    property VerticalOrientationPadding: Thickness read get_VerticalOrientationPadding write put_VerticalOrientationPadding;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.Primitives.IInfoBarPanelFactory
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_Primitives_InfoBarPanel)]
  Primitives_IInfoBarPanelFactory = interface(IInspectable)
  ['{00D1A8C5-F631-564A-8E9C-7C5CCAD238DE}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): Primitives_IInfoBarPanel; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.Primitives.IInfoBarPanelStatics
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_Primitives_InfoBarPanel)]
  Primitives_IInfoBarPanelStatics = interface(IInspectable)
  ['{E0F19305-B392-5FA6-9670-895895A067FF}']
    function get_HorizontalOrientationPaddingProperty: IDependencyProperty; safecall;
    function get_VerticalOrientationPaddingProperty: IDependencyProperty; safecall;
    procedure SetHorizontalOrientationMargin(&object: IDependencyObject; value: Thickness); safecall;
    function GetHorizontalOrientationMargin(&object: IDependencyObject): Thickness; safecall;
    function get_HorizontalOrientationMarginProperty: IDependencyProperty; safecall;
    procedure SetVerticalOrientationMargin(&object: IDependencyObject; value: Thickness); safecall;
    function GetVerticalOrientationMargin(&object: IDependencyObject): Thickness; safecall;
    function get_VerticalOrientationMarginProperty: IDependencyProperty; safecall;
    property HorizontalOrientationMarginProperty: IDependencyProperty read get_HorizontalOrientationMarginProperty;
    property HorizontalOrientationPaddingProperty: IDependencyProperty read get_HorizontalOrientationPaddingProperty;
    property VerticalOrientationMarginProperty: IDependencyProperty read get_VerticalOrientationMarginProperty;
    property VerticalOrientationPaddingProperty: IDependencyProperty read get_VerticalOrientationPaddingProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.Primitives.IJumpListItemBackgroundConverter
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_Primitives_JumpListItemBackgroundConverter)]
  Primitives_IJumpListItemBackgroundConverter = interface(IInspectable)
  ['{C475BB52-EA34-5CDE-9851-7841FEBD3D1D}']
    function get_Enabled: IBrush; safecall;
    procedure put_Enabled(value: IBrush); safecall;
    function get_Disabled: IBrush; safecall;
    procedure put_Disabled(value: IBrush); safecall;
    property Disabled: IBrush read get_Disabled write put_Disabled;
    property Enabled: IBrush read get_Enabled write put_Enabled;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.Primitives.IJumpListItemBackgroundConverterStatics
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_Primitives_JumpListItemBackgroundConverter)]
  Primitives_IJumpListItemBackgroundConverterStatics = interface(IInspectable)
  ['{B03CB261-71EC-540E-83AC-E1A9FDD335E6}']
    function get_EnabledProperty: IDependencyProperty; safecall;
    function get_DisabledProperty: IDependencyProperty; safecall;
    property DisabledProperty: IDependencyProperty read get_DisabledProperty;
    property EnabledProperty: IDependencyProperty read get_EnabledProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.Primitives.IJumpListItemForegroundConverter
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_Primitives_JumpListItemForegroundConverter)]
  Primitives_IJumpListItemForegroundConverter = interface(IInspectable)
  ['{7308E0E4-102F-571A-BFDC-C8F411F07400}']
    function get_Enabled: IBrush; safecall;
    procedure put_Enabled(value: IBrush); safecall;
    function get_Disabled: IBrush; safecall;
    procedure put_Disabled(value: IBrush); safecall;
    property Disabled: IBrush read get_Disabled write put_Disabled;
    property Enabled: IBrush read get_Enabled write put_Enabled;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.Primitives.IJumpListItemForegroundConverterStatics
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_Primitives_JumpListItemForegroundConverter)]
  Primitives_IJumpListItemForegroundConverterStatics = interface(IInspectable)
  ['{9AB3B95D-4061-59B4-9CE9-F45E2C05ADD7}']
    function get_EnabledProperty: IDependencyProperty; safecall;
    function get_DisabledProperty: IDependencyProperty; safecall;
    property DisabledProperty: IDependencyProperty read get_DisabledProperty;
    property EnabledProperty: IDependencyProperty read get_EnabledProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.Primitives.ILayoutInformation
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_Primitives_LayoutInformation)]
  Primitives_ILayoutInformation = interface(IInspectable)
  ['{CEEA0A8C-5A4F-5D7A-8FEA-77B5E0E0230C}']
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.Primitives.ILayoutInformationStatics
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_Primitives_LayoutInformation)]
  Primitives_ILayoutInformationStatics = interface(IInspectable)
  ['{8DDB192D-B7FF-5307-ACF4-D4E547DA5815}']
    function GetLayoutExceptionElement(dispatcher: IInspectable): IUIElement; safecall;
    function GetLayoutSlot(element: IFrameworkElement): TRectF; safecall;
    function GetAvailableSize(element: IUIElement): TSizeF; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.Primitives.IListViewItemPresenter
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_Primitives_ListViewItemPresenter)]
  Primitives_IListViewItemPresenter = interface(IInspectable)
  ['{81012623-D987-5582-BC28-755A95CAAF1C}']
    function get_SelectionCheckMarkVisualEnabled: Boolean; safecall;
    procedure put_SelectionCheckMarkVisualEnabled(value: Boolean); safecall;
    function get_CheckHintBrush: IBrush; safecall;
    procedure put_CheckHintBrush(value: IBrush); safecall;
    function get_CheckSelectingBrush: IBrush; safecall;
    procedure put_CheckSelectingBrush(value: IBrush); safecall;
    function get_CheckBrush: IBrush; safecall;
    procedure put_CheckBrush(value: IBrush); safecall;
    function get_DragBackground: IBrush; safecall;
    procedure put_DragBackground(value: IBrush); safecall;
    function get_DragForeground: IBrush; safecall;
    procedure put_DragForeground(value: IBrush); safecall;
    function get_FocusBorderBrush: IBrush; safecall;
    procedure put_FocusBorderBrush(value: IBrush); safecall;
    function get_PlaceholderBackground: IBrush; safecall;
    procedure put_PlaceholderBackground(value: IBrush); safecall;
    function get_PointerOverBackground: IBrush; safecall;
    procedure put_PointerOverBackground(value: IBrush); safecall;
    function get_SelectedBackground: IBrush; safecall;
    procedure put_SelectedBackground(value: IBrush); safecall;
    function get_SelectedForeground: IBrush; safecall;
    procedure put_SelectedForeground(value: IBrush); safecall;
    function get_SelectedPointerOverBackground: IBrush; safecall;
    procedure put_SelectedPointerOverBackground(value: IBrush); safecall;
    function get_SelectedPointerOverBorderBrush: IBrush; safecall;
    procedure put_SelectedPointerOverBorderBrush(value: IBrush); safecall;
    function get_SelectedBorderThickness: Thickness; safecall;
    procedure put_SelectedBorderThickness(value: Thickness); safecall;
    function get_DisabledOpacity: Double; safecall;
    procedure put_DisabledOpacity(value: Double); safecall;
    function get_DragOpacity: Double; safecall;
    procedure put_DragOpacity(value: Double); safecall;
    function get_ReorderHintOffset: Double; safecall;
    procedure put_ReorderHintOffset(value: Double); safecall;
    function get_ListViewItemPresenterHorizontalContentAlignment: HorizontalAlignment; safecall;
    procedure put_ListViewItemPresenterHorizontalContentAlignment(value: HorizontalAlignment); safecall;
    function get_ListViewItemPresenterVerticalContentAlignment: VerticalAlignment; safecall;
    procedure put_ListViewItemPresenterVerticalContentAlignment(value: VerticalAlignment); safecall;
    function get_ListViewItemPresenterPadding: Thickness; safecall;
    procedure put_ListViewItemPresenterPadding(value: Thickness); safecall;
    function get_PointerOverBackgroundMargin: Thickness; safecall;
    procedure put_PointerOverBackgroundMargin(value: Thickness); safecall;
    function get_ContentMargin: Thickness; safecall;
    procedure put_ContentMargin(value: Thickness); safecall;
    function get_SelectedPressedBackground: IBrush; safecall;
    procedure put_SelectedPressedBackground(value: IBrush); safecall;
    function get_PressedBackground: IBrush; safecall;
    procedure put_PressedBackground(value: IBrush); safecall;
    function get_CheckBoxBrush: IBrush; safecall;
    procedure put_CheckBoxBrush(value: IBrush); safecall;
    function get_FocusSecondaryBorderBrush: IBrush; safecall;
    procedure put_FocusSecondaryBorderBrush(value: IBrush); safecall;
    function get_CheckMode: Primitives_ListViewItemPresenterCheckMode; safecall;
    procedure put_CheckMode(value: Primitives_ListViewItemPresenterCheckMode); safecall;
    function get_PointerOverForeground: IBrush; safecall;
    procedure put_PointerOverForeground(value: IBrush); safecall;
    function get_RevealBackground: IBrush; safecall;
    procedure put_RevealBackground(value: IBrush); safecall;
    function get_RevealBorderBrush: IBrush; safecall;
    procedure put_RevealBorderBrush(value: IBrush); safecall;
    function get_RevealBorderThickness: Thickness; safecall;
    procedure put_RevealBorderThickness(value: Thickness); safecall;
    function get_RevealBackgroundShowsAboveContent: Boolean; safecall;
    procedure put_RevealBackgroundShowsAboveContent(value: Boolean); safecall;
    function get_SelectedDisabledBackground: IBrush; safecall;
    procedure put_SelectedDisabledBackground(value: IBrush); safecall;
    function get_CheckPressedBrush: IBrush; safecall;
    procedure put_CheckPressedBrush(value: IBrush); safecall;
    function get_CheckDisabledBrush: IBrush; safecall;
    procedure put_CheckDisabledBrush(value: IBrush); safecall;
    function get_CheckBoxPointerOverBrush: IBrush; safecall;
    procedure put_CheckBoxPointerOverBrush(value: IBrush); safecall;
    function get_CheckBoxPressedBrush: IBrush; safecall;
    procedure put_CheckBoxPressedBrush(value: IBrush); safecall;
    function get_CheckBoxDisabledBrush: IBrush; safecall;
    procedure put_CheckBoxDisabledBrush(value: IBrush); safecall;
    function get_CheckBoxSelectedBrush: IBrush; safecall;
    procedure put_CheckBoxSelectedBrush(value: IBrush); safecall;
    function get_CheckBoxSelectedPointerOverBrush: IBrush; safecall;
    procedure put_CheckBoxSelectedPointerOverBrush(value: IBrush); safecall;
    function get_CheckBoxSelectedPressedBrush: IBrush; safecall;
    procedure put_CheckBoxSelectedPressedBrush(value: IBrush); safecall;
    function get_CheckBoxSelectedDisabledBrush: IBrush; safecall;
    procedure put_CheckBoxSelectedDisabledBrush(value: IBrush); safecall;
    function get_CheckBoxBorderBrush: IBrush; safecall;
    procedure put_CheckBoxBorderBrush(value: IBrush); safecall;
    function get_CheckBoxPointerOverBorderBrush: IBrush; safecall;
    procedure put_CheckBoxPointerOverBorderBrush(value: IBrush); safecall;
    function get_CheckBoxPressedBorderBrush: IBrush; safecall;
    procedure put_CheckBoxPressedBorderBrush(value: IBrush); safecall;
    function get_CheckBoxDisabledBorderBrush: IBrush; safecall;
    procedure put_CheckBoxDisabledBorderBrush(value: IBrush); safecall;
    function get_CheckBoxCornerRadius: CornerRadius; safecall;
    procedure put_CheckBoxCornerRadius(value: CornerRadius); safecall;
    function get_SelectionIndicatorCornerRadius: CornerRadius; safecall;
    procedure put_SelectionIndicatorCornerRadius(value: CornerRadius); safecall;
    function get_SelectionIndicatorVisualEnabled: Boolean; safecall;
    procedure put_SelectionIndicatorVisualEnabled(value: Boolean); safecall;
    function get_SelectionIndicatorMode: Primitives_ListViewItemPresenterSelectionIndicatorMode; safecall;
    procedure put_SelectionIndicatorMode(value: Primitives_ListViewItemPresenterSelectionIndicatorMode); safecall;
    function get_SelectionIndicatorBrush: IBrush; safecall;
    procedure put_SelectionIndicatorBrush(value: IBrush); safecall;
    function get_SelectionIndicatorPointerOverBrush: IBrush; safecall;
    procedure put_SelectionIndicatorPointerOverBrush(value: IBrush); safecall;
    function get_SelectionIndicatorPressedBrush: IBrush; safecall;
    procedure put_SelectionIndicatorPressedBrush(value: IBrush); safecall;
    function get_SelectionIndicatorDisabledBrush: IBrush; safecall;
    procedure put_SelectionIndicatorDisabledBrush(value: IBrush); safecall;
    function get_SelectedBorderBrush: IBrush; safecall;
    procedure put_SelectedBorderBrush(value: IBrush); safecall;
    function get_SelectedPressedBorderBrush: IBrush; safecall;
    procedure put_SelectedPressedBorderBrush(value: IBrush); safecall;
    function get_SelectedDisabledBorderBrush: IBrush; safecall;
    procedure put_SelectedDisabledBorderBrush(value: IBrush); safecall;
    function get_SelectedInnerBorderBrush: IBrush; safecall;
    procedure put_SelectedInnerBorderBrush(value: IBrush); safecall;
    function get_PointerOverBorderBrush: IBrush; safecall;
    procedure put_PointerOverBorderBrush(value: IBrush); safecall;
    property CheckBoxBorderBrush: IBrush read get_CheckBoxBorderBrush write put_CheckBoxBorderBrush;
    property CheckBoxBrush: IBrush read get_CheckBoxBrush write put_CheckBoxBrush;
    property CheckBoxCornerRadius: CornerRadius read get_CheckBoxCornerRadius write put_CheckBoxCornerRadius;
    property CheckBoxDisabledBorderBrush: IBrush read get_CheckBoxDisabledBorderBrush write put_CheckBoxDisabledBorderBrush;
    property CheckBoxDisabledBrush: IBrush read get_CheckBoxDisabledBrush write put_CheckBoxDisabledBrush;
    property CheckBoxPointerOverBorderBrush: IBrush read get_CheckBoxPointerOverBorderBrush write put_CheckBoxPointerOverBorderBrush;
    property CheckBoxPointerOverBrush: IBrush read get_CheckBoxPointerOverBrush write put_CheckBoxPointerOverBrush;
    property CheckBoxPressedBorderBrush: IBrush read get_CheckBoxPressedBorderBrush write put_CheckBoxPressedBorderBrush;
    property CheckBoxPressedBrush: IBrush read get_CheckBoxPressedBrush write put_CheckBoxPressedBrush;
    property CheckBoxSelectedBrush: IBrush read get_CheckBoxSelectedBrush write put_CheckBoxSelectedBrush;
    property CheckBoxSelectedDisabledBrush: IBrush read get_CheckBoxSelectedDisabledBrush write put_CheckBoxSelectedDisabledBrush;
    property CheckBoxSelectedPointerOverBrush: IBrush read get_CheckBoxSelectedPointerOverBrush write put_CheckBoxSelectedPointerOverBrush;
    property CheckBoxSelectedPressedBrush: IBrush read get_CheckBoxSelectedPressedBrush write put_CheckBoxSelectedPressedBrush;
    property CheckBrush: IBrush read get_CheckBrush write put_CheckBrush;
    property CheckDisabledBrush: IBrush read get_CheckDisabledBrush write put_CheckDisabledBrush;
    property CheckHintBrush: IBrush read get_CheckHintBrush write put_CheckHintBrush;
    property CheckMode: Primitives_ListViewItemPresenterCheckMode read get_CheckMode write put_CheckMode;
    property CheckPressedBrush: IBrush read get_CheckPressedBrush write put_CheckPressedBrush;
    property CheckSelectingBrush: IBrush read get_CheckSelectingBrush write put_CheckSelectingBrush;
    property ContentMargin: Thickness read get_ContentMargin write put_ContentMargin;
    property DisabledOpacity: Double read get_DisabledOpacity write put_DisabledOpacity;
    property DragBackground: IBrush read get_DragBackground write put_DragBackground;
    property DragForeground: IBrush read get_DragForeground write put_DragForeground;
    property DragOpacity: Double read get_DragOpacity write put_DragOpacity;
    property FocusBorderBrush: IBrush read get_FocusBorderBrush write put_FocusBorderBrush;
    property FocusSecondaryBorderBrush: IBrush read get_FocusSecondaryBorderBrush write put_FocusSecondaryBorderBrush;
    property ListViewItemPresenterHorizontalContentAlignment: HorizontalAlignment read get_ListViewItemPresenterHorizontalContentAlignment write put_ListViewItemPresenterHorizontalContentAlignment;
    property ListViewItemPresenterPadding: Thickness read get_ListViewItemPresenterPadding write put_ListViewItemPresenterPadding;
    property ListViewItemPresenterVerticalContentAlignment: VerticalAlignment read get_ListViewItemPresenterVerticalContentAlignment write put_ListViewItemPresenterVerticalContentAlignment;
    property PlaceholderBackground: IBrush read get_PlaceholderBackground write put_PlaceholderBackground;
    property PointerOverBackground: IBrush read get_PointerOverBackground write put_PointerOverBackground;
    property PointerOverBackgroundMargin: Thickness read get_PointerOverBackgroundMargin write put_PointerOverBackgroundMargin;
    property PointerOverBorderBrush: IBrush read get_PointerOverBorderBrush write put_PointerOverBorderBrush;
    property PointerOverForeground: IBrush read get_PointerOverForeground write put_PointerOverForeground;
    property PressedBackground: IBrush read get_PressedBackground write put_PressedBackground;
    property ReorderHintOffset: Double read get_ReorderHintOffset write put_ReorderHintOffset;
    property RevealBackground: IBrush read get_RevealBackground write put_RevealBackground;
    property RevealBackgroundShowsAboveContent: Boolean read get_RevealBackgroundShowsAboveContent write put_RevealBackgroundShowsAboveContent;
    property RevealBorderBrush: IBrush read get_RevealBorderBrush write put_RevealBorderBrush;
    property RevealBorderThickness: Thickness read get_RevealBorderThickness write put_RevealBorderThickness;
    property SelectedBackground: IBrush read get_SelectedBackground write put_SelectedBackground;
    property SelectedBorderBrush: IBrush read get_SelectedBorderBrush write put_SelectedBorderBrush;
    property SelectedBorderThickness: Thickness read get_SelectedBorderThickness write put_SelectedBorderThickness;
    property SelectedDisabledBackground: IBrush read get_SelectedDisabledBackground write put_SelectedDisabledBackground;
    property SelectedDisabledBorderBrush: IBrush read get_SelectedDisabledBorderBrush write put_SelectedDisabledBorderBrush;
    property SelectedForeground: IBrush read get_SelectedForeground write put_SelectedForeground;
    property SelectedInnerBorderBrush: IBrush read get_SelectedInnerBorderBrush write put_SelectedInnerBorderBrush;
    property SelectedPointerOverBackground: IBrush read get_SelectedPointerOverBackground write put_SelectedPointerOverBackground;
    property SelectedPointerOverBorderBrush: IBrush read get_SelectedPointerOverBorderBrush write put_SelectedPointerOverBorderBrush;
    property SelectedPressedBackground: IBrush read get_SelectedPressedBackground write put_SelectedPressedBackground;
    property SelectedPressedBorderBrush: IBrush read get_SelectedPressedBorderBrush write put_SelectedPressedBorderBrush;
    property SelectionCheckMarkVisualEnabled: Boolean read get_SelectionCheckMarkVisualEnabled write put_SelectionCheckMarkVisualEnabled;
    property SelectionIndicatorBrush: IBrush read get_SelectionIndicatorBrush write put_SelectionIndicatorBrush;
    property SelectionIndicatorCornerRadius: CornerRadius read get_SelectionIndicatorCornerRadius write put_SelectionIndicatorCornerRadius;
    property SelectionIndicatorDisabledBrush: IBrush read get_SelectionIndicatorDisabledBrush write put_SelectionIndicatorDisabledBrush;
    property SelectionIndicatorMode: Primitives_ListViewItemPresenterSelectionIndicatorMode read get_SelectionIndicatorMode write put_SelectionIndicatorMode;
    property SelectionIndicatorPointerOverBrush: IBrush read get_SelectionIndicatorPointerOverBrush write put_SelectionIndicatorPointerOverBrush;
    property SelectionIndicatorPressedBrush: IBrush read get_SelectionIndicatorPressedBrush write put_SelectionIndicatorPressedBrush;
    property SelectionIndicatorVisualEnabled: Boolean read get_SelectionIndicatorVisualEnabled write put_SelectionIndicatorVisualEnabled;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.Primitives.IListViewItemPresenterFactory
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_Primitives_ListViewItemPresenter)]
  Primitives_IListViewItemPresenterFactory = interface(IInspectable)
  ['{F86AC266-2740-505C-95EB-A7331B53B4A3}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): Primitives_IListViewItemPresenter; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.Primitives.IListViewItemPresenterStatics
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_Primitives_ListViewItemPresenter)]
  Primitives_IListViewItemPresenterStatics = interface(IInspectable)
  ['{FB0810F9-3475-593A-88A8-EDBBF76FA90C}']
    function get_SelectionCheckMarkVisualEnabledProperty: IDependencyProperty; safecall;
    function get_CheckHintBrushProperty: IDependencyProperty; safecall;
    function get_CheckSelectingBrushProperty: IDependencyProperty; safecall;
    function get_CheckBrushProperty: IDependencyProperty; safecall;
    function get_DragBackgroundProperty: IDependencyProperty; safecall;
    function get_DragForegroundProperty: IDependencyProperty; safecall;
    function get_FocusBorderBrushProperty: IDependencyProperty; safecall;
    function get_PlaceholderBackgroundProperty: IDependencyProperty; safecall;
    function get_PointerOverBackgroundProperty: IDependencyProperty; safecall;
    function get_SelectedBackgroundProperty: IDependencyProperty; safecall;
    function get_SelectedForegroundProperty: IDependencyProperty; safecall;
    function get_SelectedPointerOverBackgroundProperty: IDependencyProperty; safecall;
    function get_SelectedPointerOverBorderBrushProperty: IDependencyProperty; safecall;
    function get_SelectedBorderThicknessProperty: IDependencyProperty; safecall;
    function get_DisabledOpacityProperty: IDependencyProperty; safecall;
    function get_DragOpacityProperty: IDependencyProperty; safecall;
    function get_ReorderHintOffsetProperty: IDependencyProperty; safecall;
    function get_ListViewItemPresenterHorizontalContentAlignmentProperty: IDependencyProperty; safecall;
    function get_ListViewItemPresenterVerticalContentAlignmentProperty: IDependencyProperty; safecall;
    function get_ListViewItemPresenterPaddingProperty: IDependencyProperty; safecall;
    function get_PointerOverBackgroundMarginProperty: IDependencyProperty; safecall;
    function get_ContentMarginProperty: IDependencyProperty; safecall;
    function get_SelectedPressedBackgroundProperty: IDependencyProperty; safecall;
    function get_PressedBackgroundProperty: IDependencyProperty; safecall;
    function get_CheckBoxBrushProperty: IDependencyProperty; safecall;
    function get_FocusSecondaryBorderBrushProperty: IDependencyProperty; safecall;
    function get_CheckModeProperty: IDependencyProperty; safecall;
    function get_PointerOverForegroundProperty: IDependencyProperty; safecall;
    function get_RevealBackgroundProperty: IDependencyProperty; safecall;
    function get_RevealBorderBrushProperty: IDependencyProperty; safecall;
    function get_RevealBorderThicknessProperty: IDependencyProperty; safecall;
    function get_RevealBackgroundShowsAboveContentProperty: IDependencyProperty; safecall;
    function get_SelectedDisabledBackgroundProperty: IDependencyProperty; safecall;
    function get_CheckPressedBrushProperty: IDependencyProperty; safecall;
    function get_CheckDisabledBrushProperty: IDependencyProperty; safecall;
    function get_CheckBoxPointerOverBrushProperty: IDependencyProperty; safecall;
    function get_CheckBoxPressedBrushProperty: IDependencyProperty; safecall;
    function get_CheckBoxDisabledBrushProperty: IDependencyProperty; safecall;
    function get_CheckBoxSelectedBrushProperty: IDependencyProperty; safecall;
    function get_CheckBoxSelectedPointerOverBrushProperty: IDependencyProperty; safecall;
    function get_CheckBoxSelectedPressedBrushProperty: IDependencyProperty; safecall;
    function get_CheckBoxSelectedDisabledBrushProperty: IDependencyProperty; safecall;
    function get_CheckBoxBorderBrushProperty: IDependencyProperty; safecall;
    function get_CheckBoxPointerOverBorderBrushProperty: IDependencyProperty; safecall;
    function get_CheckBoxPressedBorderBrushProperty: IDependencyProperty; safecall;
    function get_CheckBoxDisabledBorderBrushProperty: IDependencyProperty; safecall;
    function get_CheckBoxCornerRadiusProperty: IDependencyProperty; safecall;
    function get_SelectionIndicatorCornerRadiusProperty: IDependencyProperty; safecall;
    function get_SelectionIndicatorVisualEnabledProperty: IDependencyProperty; safecall;
    function get_SelectionIndicatorModeProperty: IDependencyProperty; safecall;
    function get_SelectionIndicatorBrushProperty: IDependencyProperty; safecall;
    function get_SelectionIndicatorPointerOverBrushProperty: IDependencyProperty; safecall;
    function get_SelectionIndicatorPressedBrushProperty: IDependencyProperty; safecall;
    function get_SelectionIndicatorDisabledBrushProperty: IDependencyProperty; safecall;
    function get_SelectedBorderBrushProperty: IDependencyProperty; safecall;
    function get_SelectedPressedBorderBrushProperty: IDependencyProperty; safecall;
    function get_SelectedDisabledBorderBrushProperty: IDependencyProperty; safecall;
    function get_SelectedInnerBorderBrushProperty: IDependencyProperty; safecall;
    function get_PointerOverBorderBrushProperty: IDependencyProperty; safecall;
    property CheckBoxBorderBrushProperty: IDependencyProperty read get_CheckBoxBorderBrushProperty;
    property CheckBoxBrushProperty: IDependencyProperty read get_CheckBoxBrushProperty;
    property CheckBoxCornerRadiusProperty: IDependencyProperty read get_CheckBoxCornerRadiusProperty;
    property CheckBoxDisabledBorderBrushProperty: IDependencyProperty read get_CheckBoxDisabledBorderBrushProperty;
    property CheckBoxDisabledBrushProperty: IDependencyProperty read get_CheckBoxDisabledBrushProperty;
    property CheckBoxPointerOverBorderBrushProperty: IDependencyProperty read get_CheckBoxPointerOverBorderBrushProperty;
    property CheckBoxPointerOverBrushProperty: IDependencyProperty read get_CheckBoxPointerOverBrushProperty;
    property CheckBoxPressedBorderBrushProperty: IDependencyProperty read get_CheckBoxPressedBorderBrushProperty;
    property CheckBoxPressedBrushProperty: IDependencyProperty read get_CheckBoxPressedBrushProperty;
    property CheckBoxSelectedBrushProperty: IDependencyProperty read get_CheckBoxSelectedBrushProperty;
    property CheckBoxSelectedDisabledBrushProperty: IDependencyProperty read get_CheckBoxSelectedDisabledBrushProperty;
    property CheckBoxSelectedPointerOverBrushProperty: IDependencyProperty read get_CheckBoxSelectedPointerOverBrushProperty;
    property CheckBoxSelectedPressedBrushProperty: IDependencyProperty read get_CheckBoxSelectedPressedBrushProperty;
    property CheckBrushProperty: IDependencyProperty read get_CheckBrushProperty;
    property CheckDisabledBrushProperty: IDependencyProperty read get_CheckDisabledBrushProperty;
    property CheckHintBrushProperty: IDependencyProperty read get_CheckHintBrushProperty;
    property CheckModeProperty: IDependencyProperty read get_CheckModeProperty;
    property CheckPressedBrushProperty: IDependencyProperty read get_CheckPressedBrushProperty;
    property CheckSelectingBrushProperty: IDependencyProperty read get_CheckSelectingBrushProperty;
    property ContentMarginProperty: IDependencyProperty read get_ContentMarginProperty;
    property DisabledOpacityProperty: IDependencyProperty read get_DisabledOpacityProperty;
    property DragBackgroundProperty: IDependencyProperty read get_DragBackgroundProperty;
    property DragForegroundProperty: IDependencyProperty read get_DragForegroundProperty;
    property DragOpacityProperty: IDependencyProperty read get_DragOpacityProperty;
    property FocusBorderBrushProperty: IDependencyProperty read get_FocusBorderBrushProperty;
    property FocusSecondaryBorderBrushProperty: IDependencyProperty read get_FocusSecondaryBorderBrushProperty;
    property ListViewItemPresenterHorizontalContentAlignmentProperty: IDependencyProperty read get_ListViewItemPresenterHorizontalContentAlignmentProperty;
    property ListViewItemPresenterPaddingProperty: IDependencyProperty read get_ListViewItemPresenterPaddingProperty;
    property ListViewItemPresenterVerticalContentAlignmentProperty: IDependencyProperty read get_ListViewItemPresenterVerticalContentAlignmentProperty;
    property PlaceholderBackgroundProperty: IDependencyProperty read get_PlaceholderBackgroundProperty;
    property PointerOverBackgroundMarginProperty: IDependencyProperty read get_PointerOverBackgroundMarginProperty;
    property PointerOverBackgroundProperty: IDependencyProperty read get_PointerOverBackgroundProperty;
    property PointerOverBorderBrushProperty: IDependencyProperty read get_PointerOverBorderBrushProperty;
    property PointerOverForegroundProperty: IDependencyProperty read get_PointerOverForegroundProperty;
    property PressedBackgroundProperty: IDependencyProperty read get_PressedBackgroundProperty;
    property ReorderHintOffsetProperty: IDependencyProperty read get_ReorderHintOffsetProperty;
    property RevealBackgroundProperty: IDependencyProperty read get_RevealBackgroundProperty;
    property RevealBackgroundShowsAboveContentProperty: IDependencyProperty read get_RevealBackgroundShowsAboveContentProperty;
    property RevealBorderBrushProperty: IDependencyProperty read get_RevealBorderBrushProperty;
    property RevealBorderThicknessProperty: IDependencyProperty read get_RevealBorderThicknessProperty;
    property SelectedBackgroundProperty: IDependencyProperty read get_SelectedBackgroundProperty;
    property SelectedBorderBrushProperty: IDependencyProperty read get_SelectedBorderBrushProperty;
    property SelectedBorderThicknessProperty: IDependencyProperty read get_SelectedBorderThicknessProperty;
    property SelectedDisabledBackgroundProperty: IDependencyProperty read get_SelectedDisabledBackgroundProperty;
    property SelectedDisabledBorderBrushProperty: IDependencyProperty read get_SelectedDisabledBorderBrushProperty;
    property SelectedForegroundProperty: IDependencyProperty read get_SelectedForegroundProperty;
    property SelectedInnerBorderBrushProperty: IDependencyProperty read get_SelectedInnerBorderBrushProperty;
    property SelectedPointerOverBackgroundProperty: IDependencyProperty read get_SelectedPointerOverBackgroundProperty;
    property SelectedPointerOverBorderBrushProperty: IDependencyProperty read get_SelectedPointerOverBorderBrushProperty;
    property SelectedPressedBackgroundProperty: IDependencyProperty read get_SelectedPressedBackgroundProperty;
    property SelectedPressedBorderBrushProperty: IDependencyProperty read get_SelectedPressedBorderBrushProperty;
    property SelectionCheckMarkVisualEnabledProperty: IDependencyProperty read get_SelectionCheckMarkVisualEnabledProperty;
    property SelectionIndicatorBrushProperty: IDependencyProperty read get_SelectionIndicatorBrushProperty;
    property SelectionIndicatorCornerRadiusProperty: IDependencyProperty read get_SelectionIndicatorCornerRadiusProperty;
    property SelectionIndicatorDisabledBrushProperty: IDependencyProperty read get_SelectionIndicatorDisabledBrushProperty;
    property SelectionIndicatorModeProperty: IDependencyProperty read get_SelectionIndicatorModeProperty;
    property SelectionIndicatorPointerOverBrushProperty: IDependencyProperty read get_SelectionIndicatorPointerOverBrushProperty;
    property SelectionIndicatorPressedBrushProperty: IDependencyProperty read get_SelectionIndicatorPressedBrushProperty;
    property SelectionIndicatorVisualEnabledProperty: IDependencyProperty read get_SelectionIndicatorVisualEnabledProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.Primitives.ILoopingSelector
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_Primitives_LoopingSelector)]
  Primitives_ILoopingSelector = interface(IInspectable)
  ['{077759AC-6B52-5054-BD49-9EBA843CF894}']
    function get_ShouldLoop: Boolean; safecall;
    procedure put_ShouldLoop(value: Boolean); safecall;
    function get_Items: IVector_1__IInspectable; safecall;
    procedure put_Items(value: IVector_1__IInspectable); safecall;
    function get_SelectedIndex: Integer; safecall;
    procedure put_SelectedIndex(value: Integer); safecall;
    function get_SelectedItem: IInspectable; safecall;
    procedure put_SelectedItem(value: IInspectable); safecall;
    function get_ItemWidth: Integer; safecall;
    procedure put_ItemWidth(value: Integer); safecall;
    function get_ItemHeight: Integer; safecall;
    procedure put_ItemHeight(value: Integer); safecall;
    function get_ItemTemplate: IDataTemplate; safecall;
    procedure put_ItemTemplate(value: IDataTemplate); safecall;
    function add_SelectionChanged(handler: SelectionChangedEventHandler): EventRegistrationToken; safecall;
    procedure remove_SelectionChanged(token: EventRegistrationToken); safecall;
    property ItemHeight: Integer read get_ItemHeight write put_ItemHeight;
    property ItemTemplate: IDataTemplate read get_ItemTemplate write put_ItemTemplate;
    property ItemWidth: Integer read get_ItemWidth write put_ItemWidth;
    property Items: IVector_1__IInspectable read get_Items write put_Items;
    property SelectedIndex: Integer read get_SelectedIndex write put_SelectedIndex;
    property SelectedItem: IInspectable read get_SelectedItem write put_SelectedItem;
    property ShouldLoop: Boolean read get_ShouldLoop write put_ShouldLoop;
  end;

  // Microsoft.UI.Xaml.Controls.Primitives.ILoopingSelectorItem
  Primitives_ILoopingSelectorItem = interface(IInspectable)
  ['{75D36595-BF4F-5393-819F-EB1E321CE1DC}']
  end;

  // Microsoft.UI.Xaml.Controls.Primitives.ILoopingSelectorPanel
  Primitives_ILoopingSelectorPanel = interface(IInspectable)
  ['{7479C3A4-C5B1-5112-BEA9-BEEF5CC79F57}']
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.Primitives.ILoopingSelectorStatics
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_Primitives_LoopingSelector)]
  Primitives_ILoopingSelectorStatics = interface(IInspectable)
  ['{E7F8770E-729B-57AA-9A79-EDE3F84253CC}']
    function get_ShouldLoopProperty: IDependencyProperty; safecall;
    function get_ItemsProperty: IDependencyProperty; safecall;
    function get_SelectedIndexProperty: IDependencyProperty; safecall;
    function get_SelectedItemProperty: IDependencyProperty; safecall;
    function get_ItemWidthProperty: IDependencyProperty; safecall;
    function get_ItemHeightProperty: IDependencyProperty; safecall;
    function get_ItemTemplateProperty: IDependencyProperty; safecall;
    property ItemHeightProperty: IDependencyProperty read get_ItemHeightProperty;
    property ItemTemplateProperty: IDependencyProperty read get_ItemTemplateProperty;
    property ItemWidthProperty: IDependencyProperty read get_ItemWidthProperty;
    property ItemsProperty: IDependencyProperty read get_ItemsProperty;
    property SelectedIndexProperty: IDependencyProperty read get_SelectedIndexProperty;
    property SelectedItemProperty: IDependencyProperty read get_SelectedItemProperty;
    property ShouldLoopProperty: IDependencyProperty read get_ShouldLoopProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.Primitives.IMonochromaticOverlayPresenter
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_Primitives_MonochromaticOverlayPresenter)]
  Primitives_IMonochromaticOverlayPresenter = interface(IInspectable)
  ['{3F0D1E92-5450-5078-8F72-5AC1749976E3}']
    function get_SourceElement: IUIElement; safecall;
    procedure put_SourceElement(value: IUIElement); safecall;
    function get_ReplacementColor: Color; safecall;
    procedure put_ReplacementColor(value: Color); safecall;
    property ReplacementColor: Color read get_ReplacementColor write put_ReplacementColor;
    property SourceElement: IUIElement read get_SourceElement write put_SourceElement;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.Primitives.IMonochromaticOverlayPresenterFactory
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_Primitives_MonochromaticOverlayPresenter)]
  Primitives_IMonochromaticOverlayPresenterFactory = interface(IInspectable)
  ['{4997847B-B558-5C8C-8298-BE1532E898EC}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): Primitives_IMonochromaticOverlayPresenter; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.Primitives.IMonochromaticOverlayPresenterStatics
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_Primitives_MonochromaticOverlayPresenter)]
  Primitives_IMonochromaticOverlayPresenterStatics = interface(IInspectable)
  ['{A931BF94-A9C6-5D10-83AC-1492739E11E4}']
    function get_SourceElementProperty: IDependencyProperty; safecall;
    function get_ReplacementColorProperty: IDependencyProperty; safecall;
    property ReplacementColorProperty: IDependencyProperty read get_ReplacementColorProperty;
    property SourceElementProperty: IDependencyProperty read get_SourceElementProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.Primitives.INavigationViewItemPresenterTemplateSettings
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_Primitives_NavigationViewItemPresenterTemplateSettings)]
  Primitives_INavigationViewItemPresenterTemplateSettings = interface(IInspectable)
  ['{A5119750-FA71-56F2-BFA4-799D9F304CB8}']
    function get_IconWidth: Double; safecall;
    function get_SmallerIconWidth: Double; safecall;
    property IconWidth: Double read get_IconWidth;
    property SmallerIconWidth: Double read get_SmallerIconWidth;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.Primitives.INavigationViewItemPresenter
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_Primitives_NavigationViewItemPresenter)]
  Primitives_INavigationViewItemPresenter = interface(IInspectable)
  ['{64939DF5-760C-5B0B-AF4D-D8DD4EE50278}']
    function get_Icon: IIconElement; safecall;
    procedure put_Icon(value: IIconElement); safecall;
    function get_TemplateSettings: Primitives_INavigationViewItemPresenterTemplateSettings; safecall;
    property Icon: IIconElement read get_Icon write put_Icon;
    property TemplateSettings: Primitives_INavigationViewItemPresenterTemplateSettings read get_TemplateSettings;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.Primitives.INavigationViewItemPresenter2
  Primitives_INavigationViewItemPresenter2 = interface(IInspectable)
  ['{3F775730-3713-5B3B-9600-53B79FFF2E35}']
    function get_InfoBadge: IInfoBadge; safecall;
    procedure put_InfoBadge(value: IInfoBadge); safecall;
    property InfoBadge: IInfoBadge read get_InfoBadge write put_InfoBadge;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.Primitives.INavigationViewItemPresenterFactory
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_Primitives_NavigationViewItemPresenter)]
  Primitives_INavigationViewItemPresenterFactory = interface(IInspectable)
  ['{B28B0160-022C-593C-AB9A-7B3DED2C0754}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): Primitives_INavigationViewItemPresenter; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.Primitives.INavigationViewItemPresenterStatics
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_Primitives_NavigationViewItemPresenter)]
  Primitives_INavigationViewItemPresenterStatics = interface(IInspectable)
  ['{3B07F068-A764-549C-B4CF-EBAB40EC5DD1}']
    function get_IconProperty: IDependencyProperty; safecall;
    function get_TemplateSettingsProperty: IDependencyProperty; safecall;
    property IconProperty: IDependencyProperty read get_IconProperty;
    property TemplateSettingsProperty: IDependencyProperty read get_TemplateSettingsProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.Primitives.INavigationViewItemPresenterStatics2
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_Primitives_NavigationViewItemPresenter)]
  Primitives_INavigationViewItemPresenterStatics2 = interface(IInspectable)
  ['{4B473F61-3F17-5E4F-8453-541DF947A789}']
    function get_InfoBadgeProperty: IDependencyProperty; safecall;
    property InfoBadgeProperty: IDependencyProperty read get_InfoBadgeProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.Primitives.INavigationViewItemPresenterTemplateSettingsFactory
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_Primitives_NavigationViewItemPresenterTemplateSettings)]
  Primitives_INavigationViewItemPresenterTemplateSettingsFactory = interface(IInspectable)
  ['{19EF1328-52C7-55E3-B1BB-923F2F39BD6E}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): Primitives_INavigationViewItemPresenterTemplateSettings; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.Primitives.INavigationViewItemPresenterTemplateSettingsStatics
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_Primitives_NavigationViewItemPresenterTemplateSettings)]
  Primitives_INavigationViewItemPresenterTemplateSettingsStatics = interface(IInspectable)
  ['{72F09642-C658-5B06-8C81-1566B737B746}']
    function get_IconWidthProperty: IDependencyProperty; safecall;
    function get_SmallerIconWidthProperty: IDependencyProperty; safecall;
    property IconWidthProperty: IDependencyProperty read get_IconWidthProperty;
    property SmallerIconWidthProperty: IDependencyProperty read get_SmallerIconWidthProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.Primitives.IOrientedVirtualizingPanel
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_Primitives_OrientedVirtualizingPanel)]
  Primitives_IOrientedVirtualizingPanel = interface(IInspectable)
  ['{450D2984-1E70-53D8-8269-A27564DAA69F}']
    function get_CanVerticallyScroll: Boolean; safecall;
    procedure put_CanVerticallyScroll(value: Boolean); safecall;
    function get_CanHorizontallyScroll: Boolean; safecall;
    procedure put_CanHorizontallyScroll(value: Boolean); safecall;
    function get_ExtentWidth: Double; safecall;
    function get_ExtentHeight: Double; safecall;
    function get_ViewportWidth: Double; safecall;
    function get_ViewportHeight: Double; safecall;
    function get_HorizontalOffset: Double; safecall;
    function get_VerticalOffset: Double; safecall;
    function get_ScrollOwner: IInspectable; safecall;
    procedure put_ScrollOwner(value: IInspectable); safecall;
    procedure LineUp; safecall;
    procedure LineDown; safecall;
    procedure LineLeft; safecall;
    procedure LineRight; safecall;
    procedure PageUp; safecall;
    procedure PageDown; safecall;
    procedure PageLeft; safecall;
    procedure PageRight; safecall;
    procedure MouseWheelUp; safecall;
    procedure MouseWheelDown; safecall;
    procedure MouseWheelLeft; safecall;
    procedure MouseWheelRight; safecall;
    procedure SetHorizontalOffset(offset: Double); safecall;
    procedure SetVerticalOffset(offset: Double); safecall;
    function MakeVisible(visual: IUIElement; rectangle: TRectF): TRectF; safecall;
    property CanHorizontallyScroll: Boolean read get_CanHorizontallyScroll write put_CanHorizontallyScroll;
    property CanVerticallyScroll: Boolean read get_CanVerticallyScroll write put_CanVerticallyScroll;
    property ExtentHeight: Double read get_ExtentHeight;
    property ExtentWidth: Double read get_ExtentWidth;
    property HorizontalOffset: Double read get_HorizontalOffset;
    property ScrollOwner: IInspectable read get_ScrollOwner write put_ScrollOwner;
    property VerticalOffset: Double read get_VerticalOffset;
    property ViewportHeight: Double read get_ViewportHeight;
    property ViewportWidth: Double read get_ViewportWidth;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.Primitives.IOrientedVirtualizingPanelFactory
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_Primitives_OrientedVirtualizingPanel)]
  Primitives_IOrientedVirtualizingPanelFactory = interface(IInspectable)
  ['{A70C98F4-D671-5F46-9B01-28B1B5528FC0}']
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.Primitives.IPickerFlyoutBase
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_Primitives_PickerFlyoutBase)]
  Primitives_IPickerFlyoutBase = interface(IInspectable)
  ['{8C2CC030-14FE-5FCA-8CE3-E11A918632CC}']
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.Primitives.IPickerFlyoutBaseFactory
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_Primitives_PickerFlyoutBase)]
  Primitives_IPickerFlyoutBaseFactory = interface(IInspectable)
  ['{8231DAB5-4B8B-5674-B273-1C66701C14E1}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): Primitives_IPickerFlyoutBase; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.Primitives.IPickerFlyoutBaseOverrides
  Primitives_IPickerFlyoutBaseOverrides = interface(IInspectable)
  ['{5B090FFC-D423-5756-A01C-AA734579D856}']
    procedure OnConfirmed; safecall;
    function ShouldShowConfirmationButtons: Boolean; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.Primitives.IPickerFlyoutBaseStatics
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_Primitives_PickerFlyoutBase)]
  Primitives_IPickerFlyoutBaseStatics = interface(IInspectable)
  ['{0E414DC2-38E0-5EFE-BAE8-A0C6A78514C8}']
    function get_TitleProperty: IDependencyProperty; safecall;
    function GetTitle(element: IDependencyObject): HSTRING; safecall;
    procedure SetTitle(element: IDependencyObject; value: HSTRING); safecall;
    property TitleProperty: IDependencyProperty read get_TitleProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.Primitives.IPivotHeaderItem
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_Primitives_PivotHeaderItem)]
  Primitives_IPivotHeaderItem = interface(IInspectable)
  ['{612D6F77-6C76-5239-8894-EFBAB0F53E3E}']
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.Primitives.IPivotHeaderItemFactory
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_Primitives_PivotHeaderItem)]
  Primitives_IPivotHeaderItemFactory = interface(IInspectable)
  ['{D8DB1A66-1384-518D-BC8F-9EDC2CA79190}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): Primitives_IPivotHeaderItem; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.Primitives.IPivotHeaderPanel
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_Primitives_PivotHeaderPanel)]
  Primitives_IPivotHeaderPanel = interface(IInspectable)
  ['{B5AF5BED-5F2F-5AF6-BF17-C085531C880F}']
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.Primitives.IPivotPanel
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_Primitives_PivotPanel)]
  Primitives_IPivotPanel = interface(IInspectable)
  ['{8E66CDCF-3BF5-5FE0-B05B-1125E961F0CC}']
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.Primitives.IPopup2
  Primitives_IPopup2 = interface(IInspectable)
  ['{EA9C4F43-A937-53D5-B665-6640AD7EC2F4}']
    function get_PlacementTarget: IFrameworkElement; safecall;
    procedure put_PlacementTarget(value: IFrameworkElement); safecall;
    function get_DesiredPlacement: Primitives_PopupPlacementMode; safecall;
    procedure put_DesiredPlacement(value: Primitives_PopupPlacementMode); safecall;
    function get_ActualPlacement: Primitives_PopupPlacementMode; safecall;
    function add_ActualPlacementChanged(handler: EventHandler_1__IInspectable): EventRegistrationToken; safecall;
    procedure remove_ActualPlacementChanged(token: EventRegistrationToken); safecall;
    property ActualPlacement: Primitives_PopupPlacementMode read get_ActualPlacement;
    property DesiredPlacement: Primitives_PopupPlacementMode read get_DesiredPlacement write put_DesiredPlacement;
    property PlacementTarget: IFrameworkElement read get_PlacementTarget write put_PlacementTarget;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.Primitives.IPopupStatics
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_Primitives_Popup)]
  Primitives_IPopupStatics = interface(IInspectable)
  ['{C1ACFAA4-209A-5FB8-8934-8825976769B8}']
    function get_ChildProperty: IDependencyProperty; safecall;
    function get_IsOpenProperty: IDependencyProperty; safecall;
    function get_HorizontalOffsetProperty: IDependencyProperty; safecall;
    function get_VerticalOffsetProperty: IDependencyProperty; safecall;
    function get_ChildTransitionsProperty: IDependencyProperty; safecall;
    function get_IsLightDismissEnabledProperty: IDependencyProperty; safecall;
    function get_LightDismissOverlayModeProperty: IDependencyProperty; safecall;
    function get_ShouldConstrainToRootBoundsProperty: IDependencyProperty; safecall;
    property ChildProperty: IDependencyProperty read get_ChildProperty;
    property ChildTransitionsProperty: IDependencyProperty read get_ChildTransitionsProperty;
    property HorizontalOffsetProperty: IDependencyProperty read get_HorizontalOffsetProperty;
    property IsLightDismissEnabledProperty: IDependencyProperty read get_IsLightDismissEnabledProperty;
    property IsOpenProperty: IDependencyProperty read get_IsOpenProperty;
    property LightDismissOverlayModeProperty: IDependencyProperty read get_LightDismissOverlayModeProperty;
    property ShouldConstrainToRootBoundsProperty: IDependencyProperty read get_ShouldConstrainToRootBoundsProperty;
    property VerticalOffsetProperty: IDependencyProperty read get_VerticalOffsetProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.Primitives.IPopupStatics2
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_Primitives_Popup)]
  Primitives_IPopupStatics2 = interface(IInspectable)
  ['{79B3285A-1330-5CFD-AF2F-88EFA00770A9}']
    function get_PlacementTargetProperty: IDependencyProperty; safecall;
    function get_DesiredPlacementProperty: IDependencyProperty; safecall;
    property DesiredPlacementProperty: IDependencyProperty read get_DesiredPlacementProperty;
    property PlacementTargetProperty: IDependencyProperty read get_PlacementTargetProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.Primitives.IRangeBaseFactory
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_Primitives_RangeBase)]
  Primitives_IRangeBaseFactory = interface(IInspectable)
  ['{41C205E2-4422-5DCA-9B49-E31210EA396C}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): Primitives_IRangeBase; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.Primitives.IRangeBaseOverrides
  Primitives_IRangeBaseOverrides = interface(IInspectable)
  ['{B3DEB76F-68A6-5C14-A824-AB58E8774745}']
    procedure OnMinimumChanged(oldMinimum: Double; newMinimum: Double); safecall;
    procedure OnMaximumChanged(oldMaximum: Double; newMaximum: Double); safecall;
    procedure OnValueChanged(oldValue: Double; newValue: Double); safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.Primitives.IRangeBaseStatics
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_Primitives_RangeBase)]
  Primitives_IRangeBaseStatics = interface(IInspectable)
  ['{4AED5E49-64EC-56F1-874D-B8C0F83F9AC8}']
    function get_MinimumProperty: IDependencyProperty; safecall;
    function get_MaximumProperty: IDependencyProperty; safecall;
    function get_SmallChangeProperty: IDependencyProperty; safecall;
    function get_LargeChangeProperty: IDependencyProperty; safecall;
    function get_ValueProperty: IDependencyProperty; safecall;
    property LargeChangeProperty: IDependencyProperty read get_LargeChangeProperty;
    property MaximumProperty: IDependencyProperty read get_MaximumProperty;
    property MinimumProperty: IDependencyProperty read get_MinimumProperty;
    property SmallChangeProperty: IDependencyProperty read get_SmallChangeProperty;
    property ValueProperty: IDependencyProperty read get_ValueProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.Primitives.IRepeatButtonStatics
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_Primitives_RepeatButton)]
  Primitives_IRepeatButtonStatics = interface(IInspectable)
  ['{B57320F6-A58A-589C-9F41-AAB02F51E829}']
    function get_DelayProperty: IDependencyProperty; safecall;
    function get_IntervalProperty: IDependencyProperty; safecall;
    property DelayProperty: IDependencyProperty read get_DelayProperty;
    property IntervalProperty: IDependencyProperty read get_IntervalProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.Primitives.IScrollBarStatics
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_Primitives_ScrollBar)]
  Primitives_IScrollBarStatics = interface(IInspectable)
  ['{88B52E18-9528-579F-BD84-EBA585A01C7A}']
    function get_OrientationProperty: IDependencyProperty; safecall;
    function get_ViewportSizeProperty: IDependencyProperty; safecall;
    function get_IndicatorModeProperty: IDependencyProperty; safecall;
    property IndicatorModeProperty: IDependencyProperty read get_IndicatorModeProperty;
    property OrientationProperty: IDependencyProperty read get_OrientationProperty;
    property ViewportSizeProperty: IDependencyProperty read get_ViewportSizeProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.Primitives.IScrollSnapPointsInfo
  Primitives_IScrollSnapPointsInfo = interface(IInspectable)
  ['{D3EA6E09-ECF7-51A8-BD54-FC84B9653766}']
    function get_AreHorizontalSnapPointsRegular: Boolean; safecall;
    function get_AreVerticalSnapPointsRegular: Boolean; safecall;
    function add_HorizontalSnapPointsChanged(handler: EventHandler_1__IInspectable): EventRegistrationToken; safecall;
    procedure remove_HorizontalSnapPointsChanged(token: EventRegistrationToken); safecall;
    function add_VerticalSnapPointsChanged(handler: EventHandler_1__IInspectable): EventRegistrationToken; safecall;
    procedure remove_VerticalSnapPointsChanged(token: EventRegistrationToken); safecall;
    function GetIrregularSnapPoints(orientation: Orientation; alignment: Primitives_SnapPointsAlignment): IVectorView_1__Single; safecall;
    function GetRegularSnapPoints(orientation: Orientation; alignment: Primitives_SnapPointsAlignment; out offset: Single): Single; safecall;
    property AreHorizontalSnapPointsRegular: Boolean read get_AreHorizontalSnapPointsRegular;
    property AreVerticalSnapPointsRegular: Boolean read get_AreVerticalSnapPointsRegular;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.Primitives.ISelectorFactory
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_Primitives_Selector)]
  Primitives_ISelectorFactory = interface(IInspectable)
  ['{21A42024-AF07-58F9-8789-848D3324D901}']
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.Primitives.ISelectorItemFactory
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_Primitives_SelectorItem)]
  Primitives_ISelectorItemFactory = interface(IInspectable)
  ['{078039F5-76ED-5299-9715-FC8C58173560}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): Primitives_ISelectorItem; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.Primitives.ISelectorItemStatics
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_Primitives_SelectorItem)]
  Primitives_ISelectorItemStatics = interface(IInspectable)
  ['{4B201A54-A414-5E79-9B6B-3DA9DE442A35}']
    function get_IsSelectedProperty: IDependencyProperty; safecall;
    property IsSelectedProperty: IDependencyProperty read get_IsSelectedProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.Primitives.ISelectorStatics
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_Primitives_Selector)]
  Primitives_ISelectorStatics = interface(IInspectable)
  ['{569B2234-1CEB-516E-B64E-0D479452E279}']
    function get_SelectedIndexProperty: IDependencyProperty; safecall;
    function get_SelectedItemProperty: IDependencyProperty; safecall;
    function get_SelectedValueProperty: IDependencyProperty; safecall;
    function get_SelectedValuePathProperty: IDependencyProperty; safecall;
    function get_IsSynchronizedWithCurrentItemProperty: IDependencyProperty; safecall;
    function GetIsSelectionActive(element: IDependencyObject): Boolean; safecall;
    property IsSynchronizedWithCurrentItemProperty: IDependencyProperty read get_IsSynchronizedWithCurrentItemProperty;
    property SelectedIndexProperty: IDependencyProperty read get_SelectedIndexProperty;
    property SelectedItemProperty: IDependencyProperty read get_SelectedItemProperty;
    property SelectedValuePathProperty: IDependencyProperty read get_SelectedValuePathProperty;
    property SelectedValueProperty: IDependencyProperty read get_SelectedValueProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.Primitives.ITabViewListView
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_Primitives_TabViewListView)]
  Primitives_ITabViewListView = interface(IInspectable)
  ['{EC48EFB5-2CB3-562B-921C-E554923CE1D5}']
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.Primitives.ITabViewListViewFactory
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_Primitives_TabViewListView)]
  Primitives_ITabViewListViewFactory = interface(IInspectable)
  ['{8A084FDD-86F0-51EE-98DF-5FBD0B5669BE}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): Primitives_ITabViewListView; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.Primitives.IThumbStatics
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_Primitives_Thumb)]
  Primitives_IThumbStatics = interface(IInspectable)
  ['{900C4924-886A-5F24-96D1-1EC3A36E8D66}']
    function get_IsDraggingProperty: IDependencyProperty; safecall;
    property IsDraggingProperty: IDependencyProperty read get_IsDraggingProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.Primitives.ITickBar
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_Primitives_TickBar)]
  Primitives_ITickBar = interface(IInspectable)
  ['{573293BD-3F6A-56C3-BF95-6254C9BBBC89}']
    function get_Fill: IBrush; safecall;
    procedure put_Fill(value: IBrush); safecall;
    property Fill: IBrush read get_Fill write put_Fill;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.Primitives.ITickBarStatics
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_Primitives_TickBar)]
  Primitives_ITickBarStatics = interface(IInspectable)
  ['{41C210CF-7060-5B7B-83AB-A302AA6EED6B}']
    function get_FillProperty: IDependencyProperty; safecall;
    property FillProperty: IDependencyProperty read get_FillProperty;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.Primitives.IToggleButtonFactory
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_Primitives_ToggleButton)]
  Primitives_IToggleButtonFactory = interface(IInspectable)
  ['{519511BB-D35B-5E2D-966C-8369405A4408}']
    function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): Primitives_IToggleButton; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.Primitives.IToggleButtonOverrides
  Primitives_IToggleButtonOverrides = interface(IInspectable)
  ['{EE55F85D-9061-5D18-B31A-90BC5625CFE9}']
    procedure OnToggle; safecall;
  end;

  // DualAPI Interface
  // UsedAPI Interface
  // Microsoft.UI.Xaml.Controls.Primitives.IToggleButtonStatics
  [WinRTClassNameAttribute(SMicrosoft_UI_Xaml_Controls_Primitives_ToggleButton)]
  Primitives_IToggleButtonStatics = interface(IInspectable)
  ['{4B8397E3-76FD-59DF-824F-40AE339FB00B}']
    function get_IsCheckedProperty: IDependencyProperty; safecall;
    function get_IsThreeStateProperty: IDependencyProperty; safecall;
    property IsCheckedProperty: IDependencyProperty read get_IsCheckedProperty;
    property IsThreeStateProperty: IDependencyProperty read get_IsThreeStateProperty;
  end;

  // Generic Ancestor for:
  // Windows.Foundation.Collections.IIterator`1<Microsoft.UI.Xaml.Controls.Primitives.IPopup>
  IIterator_1__Primitives_IPopup_Base = interface(IInspectable)
  ['{899CE360-EADE-504B-8C0F-CF3E94A2EA4E}']
    function get_Current: Primitives_IPopup; safecall;
    function get_HasCurrent: Boolean; safecall;
    function MoveNext: Boolean; safecall;
    function GetMany(itemsSize: Cardinal; items: PPrimitives_IPopup): Cardinal; safecall;
    property Current: Primitives_IPopup read get_Current;
    property HasCurrent: Boolean read get_HasCurrent;
  end;
  // Windows.Foundation.Collections.IIterator`1<Microsoft.UI.Xaml.Controls.Primitives.IPopup>
  IIterator_1__Primitives_IPopup = interface(IIterator_1__Primitives_IPopup_Base)
  ['{261DB693-08D8-5E7F-AD11-1B68EF9DF0C5}']
  end;

  // Generic Ancestor for:
  // Windows.Foundation.Collections.IIterable`1<Microsoft.UI.Xaml.Controls.Primitives.IPopup>
  IIterable_1__Primitives_IPopup_Base = interface(IInspectable)
  ['{968549C1-6A38-52A3-BB27-C43A3BA81280}']
    function First: IIterator_1__Primitives_IPopup; safecall;
  end;
  // Windows.Foundation.Collections.IIterable`1<Microsoft.UI.Xaml.Controls.Primitives.IPopup>
  IIterable_1__Primitives_IPopup = interface(IIterable_1__Primitives_IPopup_Base)
  ['{9F387012-BB6E-5660-85F1-F11E33704D2E}']
  end;

  // Microsoft.UI.Xaml.Controls.IconElement
  // Explicitly imported
  // Implements: Microsoft.UI.Xaml.Controls.IIconElement
  // Statics: "Microsoft.UI.Xaml.Controls.IIconElementStatics"
  // Factory: "Microsoft.UI.Xaml.Controls.IIconElementFactory"
  // Instantiable: "IIconElement"
  TIconElement = class(TWinRTGenericImportFSI<IIconElementFactory, IIconElementStatics, IIconElement>)
  public
    // -> IIconElementStatics
    class function get_ForegroundProperty: IDependencyProperty; static; inline;
    class property ForegroundProperty: IDependencyProperty read get_ForegroundProperty;

    // -> IIconElementFactory
  end;

  // Microsoft.UI.Xaml.Controls.AnimatedIcon
  // Explicitly imported
  // Implements: Microsoft.UI.Xaml.Controls.IAnimatedIcon
  // Statics: "Microsoft.UI.Xaml.Controls.IAnimatedIconStatics"
  // Factory: "Microsoft.UI.Xaml.Controls.IAnimatedIconFactory"
  // Instantiable: "IAnimatedIcon"
  TAnimatedIcon = class(TWinRTGenericImportFSI<IAnimatedIconFactory, IAnimatedIconStatics, IAnimatedIcon>)
  public
    // -> IAnimatedIconStatics
    class function get_StateProperty: IDependencyProperty; static; inline;
    class procedure SetState(&object: IDependencyObject; value: HSTRING); static; inline;
    class function GetState(&object: IDependencyObject): HSTRING; static; inline;
    class function get_SourceProperty: IDependencyProperty; static; inline;
    class function get_FallbackIconSourceProperty: IDependencyProperty; static; inline;
    class function get_MirroredWhenRightToLeftProperty: IDependencyProperty; static; inline;
    class property FallbackIconSourceProperty: IDependencyProperty read get_FallbackIconSourceProperty;
    class property MirroredWhenRightToLeftProperty: IDependencyProperty read get_MirroredWhenRightToLeftProperty;
    class property SourceProperty: IDependencyProperty read get_SourceProperty;
    class property StateProperty: IDependencyProperty read get_StateProperty;

    // -> IAnimatedIconFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IAnimatedIcon; static; inline;
  end;

  // Microsoft.UI.Xaml.Controls.IconSource
  // Explicitly imported
  // Implements: Microsoft.UI.Xaml.Controls.IIconSource
  // Implements: Microsoft.UI.Xaml.Controls.IIconSourceOverrides
  // Statics: "Microsoft.UI.Xaml.Controls.IIconSourceStatics"
  // Factory: "Microsoft.UI.Xaml.Controls.IIconSourceFactory"
  // Instantiable: "IIconSource"
  TIconSource = class(TWinRTGenericImportFSI<IIconSourceFactory, IIconSourceStatics, IIconSource>)
  public
    // -> IIconSourceStatics
    class function get_ForegroundProperty: IDependencyProperty; static; inline;
    class property ForegroundProperty: IDependencyProperty read get_ForegroundProperty;

    // -> IIconSourceFactory
  end;

  // Microsoft.UI.Xaml.Controls.AnimatedIconSource
  // Explicitly imported
  // Implements: Microsoft.UI.Xaml.Controls.IAnimatedIconSource
  // Statics: "Microsoft.UI.Xaml.Controls.IAnimatedIconSourceStatics"
  // Factory: "Microsoft.UI.Xaml.Controls.IAnimatedIconSourceFactory"
  // Instantiable: "IAnimatedIconSource"
  TAnimatedIconSource = class(TWinRTGenericImportFSI<IAnimatedIconSourceFactory, IAnimatedIconSourceStatics, IAnimatedIconSource>)
  public
    // -> IAnimatedIconSourceStatics
    class function get_SourceProperty: IDependencyProperty; static; inline;
    class function get_FallbackIconSourceProperty: IDependencyProperty; static; inline;
    class function get_MirroredWhenRightToLeftProperty: IDependencyProperty; static; inline;
    class property FallbackIconSourceProperty: IDependencyProperty read get_FallbackIconSourceProperty;
    class property MirroredWhenRightToLeftProperty: IDependencyProperty read get_MirroredWhenRightToLeftProperty;
    class property SourceProperty: IDependencyProperty read get_SourceProperty;

    // -> IAnimatedIconSourceFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IAnimatedIconSource; static; inline;
  end;

  // Microsoft.UI.Xaml.Controls.AnimatedVisualPlayer
  // Explicitly imported
  // Implements: Microsoft.UI.Xaml.Controls.IAnimatedVisualPlayer
  // Implements: Microsoft.UI.Xaml.Controls.IAnimatedVisualPlayer2
  // Statics: "Microsoft.UI.Xaml.Controls.IAnimatedVisualPlayerStatics"
  // Statics: "Microsoft.UI.Xaml.Controls.IAnimatedVisualPlayerStatics2"
  // Factory: "Microsoft.UI.Xaml.Controls.IAnimatedVisualPlayerFactory"
  // Instantiable: "IAnimatedVisualPlayer"
  TAnimatedVisualPlayer = class(TWinRTGenericImportFS2I<IAnimatedVisualPlayerFactory, IAnimatedVisualPlayerStatics, IAnimatedVisualPlayerStatics2, IAnimatedVisualPlayer>)
  public
    // -> IAnimatedVisualPlayerStatics
    class function get_AutoPlayProperty: IDependencyProperty; static; inline;
    class function get_DiagnosticsProperty: IDependencyProperty; static; inline;
    class function get_DurationProperty: IDependencyProperty; static; inline;
    class function get_FallbackContentProperty: IDependencyProperty; static; inline;
    class function get_IsAnimatedVisualLoadedProperty: IDependencyProperty; static; inline;
    class function get_IsPlayingProperty: IDependencyProperty; static; inline;
    class function get_PlaybackRateProperty: IDependencyProperty; static; inline;
    class function get_SourceProperty: IDependencyProperty; static; inline;
    class function get_StretchProperty: IDependencyProperty; static; inline;
    class property AutoPlayProperty: IDependencyProperty read get_AutoPlayProperty;
    class property DiagnosticsProperty: IDependencyProperty read get_DiagnosticsProperty;
    class property DurationProperty: IDependencyProperty read get_DurationProperty;
    class property FallbackContentProperty: IDependencyProperty read get_FallbackContentProperty;
    class property IsAnimatedVisualLoadedProperty: IDependencyProperty read get_IsAnimatedVisualLoadedProperty;
    class property IsPlayingProperty: IDependencyProperty read get_IsPlayingProperty;
    class property PlaybackRateProperty: IDependencyProperty read get_PlaybackRateProperty;
    class property SourceProperty: IDependencyProperty read get_SourceProperty;
    class property StretchProperty: IDependencyProperty read get_StretchProperty;

    // -> IAnimatedVisualPlayerStatics2
    class function get_AnimationOptimizationProperty: IDependencyProperty; static; inline;
    class property AnimationOptimizationProperty: IDependencyProperty read get_AnimationOptimizationProperty;

    // -> IAnimatedVisualPlayerFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IAnimatedVisualPlayer; static; inline;
  end;

  // Microsoft.UI.Xaml.Controls.AnimatedVisuals.AnimatedAcceptVisualSource
  // Explicitly imported
  // Implements: Microsoft.UI.Xaml.Controls.IAnimatedVisualSource
  // Implements: Microsoft.UI.Xaml.Controls.IAnimatedVisualSource2
  // Instantiable: "IAnimatedVisualSource"
  TAnimatedVisuals_AnimatedAcceptVisualSource = class(TWinRTGenericImportI<IAnimatedVisualSource>) end;

  // Microsoft.UI.Xaml.Controls.AnimatedVisuals.AnimatedBackVisualSource
  // Explicitly imported
  // Implements: Microsoft.UI.Xaml.Controls.IAnimatedVisualSource
  // Implements: Microsoft.UI.Xaml.Controls.IAnimatedVisualSource2
  // Instantiable: "IAnimatedVisualSource"
  TAnimatedVisuals_AnimatedBackVisualSource = class(TWinRTGenericImportI<IAnimatedVisualSource>) end;

  // Microsoft.UI.Xaml.Controls.AnimatedVisuals.AnimatedChevronDownSmallVisualSource
  // Explicitly imported
  // Implements: Microsoft.UI.Xaml.Controls.IAnimatedVisualSource
  // Implements: Microsoft.UI.Xaml.Controls.IAnimatedVisualSource2
  // Instantiable: "IAnimatedVisualSource"
  TAnimatedVisuals_AnimatedChevronDownSmallVisualSource = class(TWinRTGenericImportI<IAnimatedVisualSource>) end;

  // Microsoft.UI.Xaml.Controls.AnimatedVisuals.AnimatedChevronRightDownSmallVisualSource
  // Explicitly imported
  // Implements: Microsoft.UI.Xaml.Controls.IAnimatedVisualSource
  // Implements: Microsoft.UI.Xaml.Controls.IAnimatedVisualSource2
  // Instantiable: "IAnimatedVisualSource"
  TAnimatedVisuals_AnimatedChevronRightDownSmallVisualSource = class(TWinRTGenericImportI<IAnimatedVisualSource>) end;

  // Microsoft.UI.Xaml.Controls.AnimatedVisuals.AnimatedChevronUpDownSmallVisualSource
  // Explicitly imported
  // Implements: Microsoft.UI.Xaml.Controls.IAnimatedVisualSource
  // Implements: Microsoft.UI.Xaml.Controls.IAnimatedVisualSource2
  // Instantiable: "IAnimatedVisualSource"
  TAnimatedVisuals_AnimatedChevronUpDownSmallVisualSource = class(TWinRTGenericImportI<IAnimatedVisualSource>) end;

  // Microsoft.UI.Xaml.Controls.AnimatedVisuals.AnimatedFindVisualSource
  // Explicitly imported
  // Implements: Microsoft.UI.Xaml.Controls.IAnimatedVisualSource
  // Implements: Microsoft.UI.Xaml.Controls.IAnimatedVisualSource2
  // Instantiable: "IAnimatedVisualSource"
  TAnimatedVisuals_AnimatedFindVisualSource = class(TWinRTGenericImportI<IAnimatedVisualSource>) end;

  // Microsoft.UI.Xaml.Controls.AnimatedVisuals.AnimatedGlobalNavigationButtonVisualSource
  // Explicitly imported
  // Implements: Microsoft.UI.Xaml.Controls.IAnimatedVisualSource
  // Implements: Microsoft.UI.Xaml.Controls.IAnimatedVisualSource2
  // Instantiable: "IAnimatedVisualSource"
  TAnimatedVisuals_AnimatedGlobalNavigationButtonVisualSource = class(TWinRTGenericImportI<IAnimatedVisualSource>) end;

  // Microsoft.UI.Xaml.Controls.AnimatedVisuals.AnimatedSettingsVisualSource
  // Explicitly imported
  // Implements: Microsoft.UI.Xaml.Controls.IAnimatedVisualSource
  // Implements: Microsoft.UI.Xaml.Controls.IAnimatedVisualSource2
  // Instantiable: "IAnimatedVisualSource"
  TAnimatedVisuals_AnimatedSettingsVisualSource = class(TWinRTGenericImportI<IAnimatedVisualSource>) end;

  // Microsoft.UI.Xaml.Controls.Control
  // Explicitly imported
  // Implements: Microsoft.UI.Xaml.Controls.IControl
  // Implements: Microsoft.UI.Xaml.Controls.IControlProtected
  // Implements: Microsoft.UI.Xaml.Controls.IControlOverrides
  // Statics: "Microsoft.UI.Xaml.Controls.IControlStatics"
  // Factory: "Microsoft.UI.Xaml.Controls.IControlFactory"
  // Instantiable: "IControl"
  TControl = class(TWinRTGenericImportFSI<IControlFactory, IControlStatics, IControl>)
  public
    // -> IControlStatics
    class function get_IsFocusEngagementEnabledProperty: IDependencyProperty; static; inline;
    class function get_IsFocusEngagedProperty: IDependencyProperty; static; inline;
    class function get_RequiresPointerProperty: IDependencyProperty; static; inline;
    class function get_FontSizeProperty: IDependencyProperty; static; inline;
    class function get_FontFamilyProperty: IDependencyProperty; static; inline;
    class function get_FontWeightProperty: IDependencyProperty; static; inline;
    class function get_FontStyleProperty: IDependencyProperty; static; inline;
    class function get_FontStretchProperty: IDependencyProperty; static; inline;
    class function get_CharacterSpacingProperty: IDependencyProperty; static; inline;
    class function get_ForegroundProperty: IDependencyProperty; static; inline;
    class function get_IsTextScaleFactorEnabledProperty: IDependencyProperty; static; inline;
    class function get_IsEnabledProperty: IDependencyProperty; static; inline;
    class function get_TabNavigationProperty: IDependencyProperty; static; inline;
    class function get_TemplateProperty: IDependencyProperty; static; inline;
    class function get_PaddingProperty: IDependencyProperty; static; inline;
    class function get_HorizontalContentAlignmentProperty: IDependencyProperty; static; inline;
    class function get_VerticalContentAlignmentProperty: IDependencyProperty; static; inline;
    class function get_BackgroundProperty: IDependencyProperty; static; inline;
    class function get_BackgroundSizingProperty: IDependencyProperty; static; inline;
    class function get_BorderThicknessProperty: IDependencyProperty; static; inline;
    class function get_BorderBrushProperty: IDependencyProperty; static; inline;
    class function get_DefaultStyleKeyProperty: IDependencyProperty; static; inline;
    class function get_DefaultStyleResourceUriProperty: IDependencyProperty; static; inline;
    class function get_ElementSoundModeProperty: IDependencyProperty; static; inline;
    class function get_CornerRadiusProperty: IDependencyProperty; static; inline;
    class function get_IsTemplateFocusTargetProperty: IDependencyProperty; static; inline;
    class function GetIsTemplateFocusTarget(element: IFrameworkElement): Boolean; static; inline;
    class procedure SetIsTemplateFocusTarget(element: IFrameworkElement; value: Boolean); static; inline;
    class function get_IsTemplateKeyTipTargetProperty: IDependencyProperty; static; inline;
    class function GetIsTemplateKeyTipTarget(element: IDependencyObject): Boolean; static; inline;
    class procedure SetIsTemplateKeyTipTarget(element: IDependencyObject; value: Boolean); static; inline;
    class property BackgroundProperty: IDependencyProperty read get_BackgroundProperty;
    class property BackgroundSizingProperty: IDependencyProperty read get_BackgroundSizingProperty;
    class property BorderBrushProperty: IDependencyProperty read get_BorderBrushProperty;
    class property BorderThicknessProperty: IDependencyProperty read get_BorderThicknessProperty;
    class property CharacterSpacingProperty: IDependencyProperty read get_CharacterSpacingProperty;
    class property CornerRadiusProperty: IDependencyProperty read get_CornerRadiusProperty;
    class property DefaultStyleKeyProperty: IDependencyProperty read get_DefaultStyleKeyProperty;
    class property DefaultStyleResourceUriProperty: IDependencyProperty read get_DefaultStyleResourceUriProperty;
    class property ElementSoundModeProperty: IDependencyProperty read get_ElementSoundModeProperty;
    class property FontFamilyProperty: IDependencyProperty read get_FontFamilyProperty;
    class property FontSizeProperty: IDependencyProperty read get_FontSizeProperty;
    class property FontStretchProperty: IDependencyProperty read get_FontStretchProperty;
    class property FontStyleProperty: IDependencyProperty read get_FontStyleProperty;
    class property FontWeightProperty: IDependencyProperty read get_FontWeightProperty;
    class property ForegroundProperty: IDependencyProperty read get_ForegroundProperty;
    class property HorizontalContentAlignmentProperty: IDependencyProperty read get_HorizontalContentAlignmentProperty;
    class property IsEnabledProperty: IDependencyProperty read get_IsEnabledProperty;
    class property IsFocusEngagedProperty: IDependencyProperty read get_IsFocusEngagedProperty;
    class property IsFocusEngagementEnabledProperty: IDependencyProperty read get_IsFocusEngagementEnabledProperty;
    class property IsTemplateFocusTargetProperty: IDependencyProperty read get_IsTemplateFocusTargetProperty;
    class property IsTemplateKeyTipTargetProperty: IDependencyProperty read get_IsTemplateKeyTipTargetProperty;
    class property IsTextScaleFactorEnabledProperty: IDependencyProperty read get_IsTextScaleFactorEnabledProperty;
    class property PaddingProperty: IDependencyProperty read get_PaddingProperty;
    class property RequiresPointerProperty: IDependencyProperty read get_RequiresPointerProperty;
    class property TabNavigationProperty: IDependencyProperty read get_TabNavigationProperty;
    class property TemplateProperty: IDependencyProperty read get_TemplateProperty;
    class property VerticalContentAlignmentProperty: IDependencyProperty read get_VerticalContentAlignmentProperty;

    // -> IControlFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IControl; static; inline;
  end;

  // Microsoft.UI.Xaml.Controls.ContentControl
  // Explicitly imported
  // Implements: Microsoft.UI.Xaml.Controls.IContentControl
  // Implements: Microsoft.UI.Xaml.Controls.IContentControlOverrides
  // Statics: "Microsoft.UI.Xaml.Controls.IContentControlStatics"
  // Factory: "Microsoft.UI.Xaml.Controls.IContentControlFactory"
  // Instantiable: "IContentControl"
  TContentControl = class(TWinRTGenericImportFSI<IContentControlFactory, IContentControlStatics, IContentControl>)
  public
    // -> IContentControlStatics
    class function get_ContentProperty: IDependencyProperty; static; inline;
    class function get_ContentTemplateProperty: IDependencyProperty; static; inline;
    class function get_ContentTemplateSelectorProperty: IDependencyProperty; static; inline;
    class function get_ContentTransitionsProperty: IDependencyProperty; static; inline;
    class property ContentProperty: IDependencyProperty read get_ContentProperty;
    class property ContentTemplateProperty: IDependencyProperty read get_ContentTemplateProperty;
    class property ContentTemplateSelectorProperty: IDependencyProperty read get_ContentTemplateSelectorProperty;
    class property ContentTransitionsProperty: IDependencyProperty read get_ContentTransitionsProperty;

    // -> IContentControlFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IContentControl; static; inline;
  end;

  // Microsoft.UI.Xaml.Controls.AppBar
  // Explicitly imported
  // Implements: Microsoft.UI.Xaml.Controls.IAppBar
  // Implements: Microsoft.UI.Xaml.Controls.IAppBarOverrides
  // Statics: "Microsoft.UI.Xaml.Controls.IAppBarStatics"
  // Factory: "Microsoft.UI.Xaml.Controls.IAppBarFactory"
  // Instantiable: "IAppBar"
  TAppBar = class(TWinRTGenericImportFSI<IAppBarFactory, IAppBarStatics, IAppBar>)
  public
    // -> IAppBarStatics
    class function get_IsOpenProperty: IDependencyProperty; static; inline;
    class function get_IsStickyProperty: IDependencyProperty; static; inline;
    class function get_ClosedDisplayModeProperty: IDependencyProperty; static; inline;
    class function get_LightDismissOverlayModeProperty: IDependencyProperty; static; inline;
    class property ClosedDisplayModeProperty: IDependencyProperty read get_ClosedDisplayModeProperty;
    class property IsOpenProperty: IDependencyProperty read get_IsOpenProperty;
    class property IsStickyProperty: IDependencyProperty read get_IsStickyProperty;
    class property LightDismissOverlayModeProperty: IDependencyProperty read get_LightDismissOverlayModeProperty;

    // -> IAppBarFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IAppBar; static; inline;
  end;

  // Microsoft.UI.Xaml.Controls.Primitives.ButtonBase
  // Explicitly imported
  // Implements: Microsoft.UI.Xaml.Controls.Primitives.IButtonBase
  // Statics: "Microsoft.UI.Xaml.Controls.Primitives.IButtonBaseStatics"
  // Factory: "Microsoft.UI.Xaml.Controls.Primitives.IButtonBaseFactory"
  // Instantiable: "Primitives_IButtonBase"
  TPrimitives_ButtonBase = class(TWinRTGenericImportFSI<Primitives_IButtonBaseFactory, Primitives_IButtonBaseStatics, Primitives_IButtonBase>)
  public
    // -> Primitives_IButtonBaseStatics
    class function get_ClickModeProperty: IDependencyProperty; static; inline;
    class function get_IsPointerOverProperty: IDependencyProperty; static; inline;
    class function get_IsPressedProperty: IDependencyProperty; static; inline;
    class function get_CommandProperty: IDependencyProperty; static; inline;
    class function get_CommandParameterProperty: IDependencyProperty; static; inline;
    class property ClickModeProperty: IDependencyProperty read get_ClickModeProperty;
    class property CommandParameterProperty: IDependencyProperty read get_CommandParameterProperty;
    class property CommandProperty: IDependencyProperty read get_CommandProperty;
    class property IsPointerOverProperty: IDependencyProperty read get_IsPointerOverProperty;
    class property IsPressedProperty: IDependencyProperty read get_IsPressedProperty;

    // -> Primitives_IButtonBaseFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): Primitives_IButtonBase; static; inline;
  end;

  // Microsoft.UI.Xaml.Controls.Button
  // Explicitly imported
  // Implements: Microsoft.UI.Xaml.Controls.IButton
  // Statics: "Microsoft.UI.Xaml.Controls.IButtonStatics"
  // Factory: "Microsoft.UI.Xaml.Controls.IButtonFactory"
  // Instantiable: "IButton"
  TButton = class(TWinRTGenericImportFSI<IButtonFactory, IButtonStatics, IButton>)
  public
    // -> IButtonStatics
    class function get_FlyoutProperty: IDependencyProperty; static; inline;
    class property FlyoutProperty: IDependencyProperty read get_FlyoutProperty;

    // -> IButtonFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IButton; static; inline;
  end;

  // Microsoft.UI.Xaml.Controls.AppBarButton
  // Explicitly imported
  // Implements: Microsoft.UI.Xaml.Controls.IAppBarButton
  // Implements: Microsoft.UI.Xaml.Controls.ICommandBarElement
  // Statics: "Microsoft.UI.Xaml.Controls.IAppBarButtonStatics"
  // Factory: "Microsoft.UI.Xaml.Controls.IAppBarButtonFactory"
  // Instantiable: "IAppBarButton"
  TAppBarButton = class(TWinRTGenericImportFSI<IAppBarButtonFactory, IAppBarButtonStatics, IAppBarButton>)
  public
    // -> IAppBarButtonStatics
    class function get_LabelProperty: IDependencyProperty; static; inline;
    class function get_IconProperty: IDependencyProperty; static; inline;
    class function get_LabelPositionProperty: IDependencyProperty; static; inline;
    class function get_KeyboardAcceleratorTextOverrideProperty: IDependencyProperty; static; inline;
    class function get_IsCompactProperty: IDependencyProperty; static; inline;
    class function get_IsInOverflowProperty: IDependencyProperty; static; inline;
    class function get_DynamicOverflowOrderProperty: IDependencyProperty; static; inline;
    class property DynamicOverflowOrderProperty: IDependencyProperty read get_DynamicOverflowOrderProperty;
    class property IconProperty: IDependencyProperty read get_IconProperty;
    class property IsCompactProperty: IDependencyProperty read get_IsCompactProperty;
    class property IsInOverflowProperty: IDependencyProperty read get_IsInOverflowProperty;
    class property KeyboardAcceleratorTextOverrideProperty: IDependencyProperty read get_KeyboardAcceleratorTextOverrideProperty;
    class property LabelPositionProperty: IDependencyProperty read get_LabelPositionProperty;
    class property LabelProperty: IDependencyProperty read get_LabelProperty;

    // -> IAppBarButtonFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IAppBarButton; static; inline;
  end;

  // Microsoft.UI.Xaml.Controls.AppBarElementContainer
  // Explicitly imported
  // Implements: Microsoft.UI.Xaml.Controls.IAppBarElementContainer
  // Implements: Microsoft.UI.Xaml.Controls.ICommandBarElement
  // Statics: "Microsoft.UI.Xaml.Controls.IAppBarElementContainerStatics"
  // Factory: "Microsoft.UI.Xaml.Controls.IAppBarElementContainerFactory"
  // Instantiable: "IAppBarElementContainer"
  TAppBarElementContainer = class(TWinRTGenericImportFSI<IAppBarElementContainerFactory, IAppBarElementContainerStatics, IAppBarElementContainer>)
  public
    // -> IAppBarElementContainerStatics
    class function get_IsCompactProperty: IDependencyProperty; static; inline;
    class function get_IsInOverflowProperty: IDependencyProperty; static; inline;
    class function get_DynamicOverflowOrderProperty: IDependencyProperty; static; inline;
    class property DynamicOverflowOrderProperty: IDependencyProperty read get_DynamicOverflowOrderProperty;
    class property IsCompactProperty: IDependencyProperty read get_IsCompactProperty;
    class property IsInOverflowProperty: IDependencyProperty read get_IsInOverflowProperty;

    // -> IAppBarElementContainerFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IAppBarElementContainer; static; inline;
  end;

  // Microsoft.UI.Xaml.Controls.AppBarSeparator
  // Explicitly imported
  // Implements: Microsoft.UI.Xaml.Controls.IAppBarSeparator
  // Implements: Microsoft.UI.Xaml.Controls.ICommandBarElement
  // Statics: "Microsoft.UI.Xaml.Controls.IAppBarSeparatorStatics"
  // Factory: "Microsoft.UI.Xaml.Controls.IAppBarSeparatorFactory"
  // Instantiable: "IAppBarSeparator"
  TAppBarSeparator = class(TWinRTGenericImportFSI<IAppBarSeparatorFactory, IAppBarSeparatorStatics, IAppBarSeparator>)
  public
    // -> IAppBarSeparatorStatics
    class function get_IsCompactProperty: IDependencyProperty; static; inline;
    class function get_IsInOverflowProperty: IDependencyProperty; static; inline;
    class function get_DynamicOverflowOrderProperty: IDependencyProperty; static; inline;
    class property DynamicOverflowOrderProperty: IDependencyProperty read get_DynamicOverflowOrderProperty;
    class property IsCompactProperty: IDependencyProperty read get_IsCompactProperty;
    class property IsInOverflowProperty: IDependencyProperty read get_IsInOverflowProperty;

    // -> IAppBarSeparatorFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IAppBarSeparator; static; inline;
  end;

  // Microsoft.UI.Xaml.Controls.Primitives.ToggleButton
  // Explicitly imported
  // Implements: Microsoft.UI.Xaml.Controls.Primitives.IToggleButton
  // Implements: Microsoft.UI.Xaml.Controls.Primitives.IToggleButtonOverrides
  // Statics: "Microsoft.UI.Xaml.Controls.Primitives.IToggleButtonStatics"
  // Factory: "Microsoft.UI.Xaml.Controls.Primitives.IToggleButtonFactory"
  // Instantiable: "Primitives_IToggleButton"
  TPrimitives_ToggleButton = class(TWinRTGenericImportFSI<Primitives_IToggleButtonFactory, Primitives_IToggleButtonStatics, Primitives_IToggleButton>)
  public
    // -> Primitives_IToggleButtonStatics
    class function get_IsCheckedProperty: IDependencyProperty; static; inline;
    class function get_IsThreeStateProperty: IDependencyProperty; static; inline;
    class property IsCheckedProperty: IDependencyProperty read get_IsCheckedProperty;
    class property IsThreeStateProperty: IDependencyProperty read get_IsThreeStateProperty;

    // -> Primitives_IToggleButtonFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): Primitives_IToggleButton; static; inline;
  end;

  // Microsoft.UI.Xaml.Controls.AppBarToggleButton
  // Explicitly imported
  // Implements: Microsoft.UI.Xaml.Controls.IAppBarToggleButton
  // Implements: Microsoft.UI.Xaml.Controls.ICommandBarElement
  // Statics: "Microsoft.UI.Xaml.Controls.IAppBarToggleButtonStatics"
  // Factory: "Microsoft.UI.Xaml.Controls.IAppBarToggleButtonFactory"
  // Instantiable: "IAppBarToggleButton"
  TAppBarToggleButton = class(TWinRTGenericImportFSI<IAppBarToggleButtonFactory, IAppBarToggleButtonStatics, IAppBarToggleButton>)
  public
    // -> IAppBarToggleButtonStatics
    class function get_LabelProperty: IDependencyProperty; static; inline;
    class function get_IconProperty: IDependencyProperty; static; inline;
    class function get_LabelPositionProperty: IDependencyProperty; static; inline;
    class function get_KeyboardAcceleratorTextOverrideProperty: IDependencyProperty; static; inline;
    class function get_IsCompactProperty: IDependencyProperty; static; inline;
    class function get_IsInOverflowProperty: IDependencyProperty; static; inline;
    class function get_DynamicOverflowOrderProperty: IDependencyProperty; static; inline;
    class property DynamicOverflowOrderProperty: IDependencyProperty read get_DynamicOverflowOrderProperty;
    class property IconProperty: IDependencyProperty read get_IconProperty;
    class property IsCompactProperty: IDependencyProperty read get_IsCompactProperty;
    class property IsInOverflowProperty: IDependencyProperty read get_IsInOverflowProperty;
    class property KeyboardAcceleratorTextOverrideProperty: IDependencyProperty read get_KeyboardAcceleratorTextOverrideProperty;
    class property LabelPositionProperty: IDependencyProperty read get_LabelPositionProperty;
    class property LabelProperty: IDependencyProperty read get_LabelProperty;

    // -> IAppBarToggleButtonFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IAppBarToggleButton; static; inline;
  end;

  // Microsoft.UI.Xaml.Controls.ItemsControl
  // Explicitly imported
  // Implements: Microsoft.UI.Xaml.Controls.IItemsControl
  // Implements: Microsoft.UI.Xaml.Controls.IItemsControlOverrides
  // Implements: Microsoft.UI.Xaml.Controls.IItemContainerMapping
  // Statics: "Microsoft.UI.Xaml.Controls.IItemsControlStatics"
  // Factory: "Microsoft.UI.Xaml.Controls.IItemsControlFactory"
  // Instantiable: "IItemsControl"
  TItemsControl = class(TWinRTGenericImportFSI<IItemsControlFactory, IItemsControlStatics, IItemsControl>)
  public
    // -> IItemsControlStatics
    class function get_ItemsSourceProperty: IDependencyProperty; static; inline;
    class function get_ItemTemplateProperty: IDependencyProperty; static; inline;
    class function get_ItemTemplateSelectorProperty: IDependencyProperty; static; inline;
    class function get_ItemsPanelProperty: IDependencyProperty; static; inline;
    class function get_DisplayMemberPathProperty: IDependencyProperty; static; inline;
    class function get_ItemContainerStyleProperty: IDependencyProperty; static; inline;
    class function get_ItemContainerStyleSelectorProperty: IDependencyProperty; static; inline;
    class function get_ItemContainerTransitionsProperty: IDependencyProperty; static; inline;
    class function get_GroupStyleSelectorProperty: IDependencyProperty; static; inline;
    class function get_IsGroupingProperty: IDependencyProperty; static; inline;
    class function GetItemsOwner(element: IDependencyObject): IItemsControl; static; inline;
    class function ItemsControlFromItemContainer(container: IDependencyObject): IItemsControl; static; inline;
    class property DisplayMemberPathProperty: IDependencyProperty read get_DisplayMemberPathProperty;
    class property GroupStyleSelectorProperty: IDependencyProperty read get_GroupStyleSelectorProperty;
    class property IsGroupingProperty: IDependencyProperty read get_IsGroupingProperty;
    class property ItemContainerStyleProperty: IDependencyProperty read get_ItemContainerStyleProperty;
    class property ItemContainerStyleSelectorProperty: IDependencyProperty read get_ItemContainerStyleSelectorProperty;
    class property ItemContainerTransitionsProperty: IDependencyProperty read get_ItemContainerTransitionsProperty;
    class property ItemTemplateProperty: IDependencyProperty read get_ItemTemplateProperty;
    class property ItemTemplateSelectorProperty: IDependencyProperty read get_ItemTemplateSelectorProperty;
    class property ItemsPanelProperty: IDependencyProperty read get_ItemsPanelProperty;
    class property ItemsSourceProperty: IDependencyProperty read get_ItemsSourceProperty;

    // -> IItemsControlFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IItemsControl; static; inline;
  end;

  // Microsoft.UI.Xaml.Controls.AutoSuggestBox
  // Explicitly imported
  // Implements: Microsoft.UI.Xaml.Controls.IAutoSuggestBox
  // Statics: "Microsoft.UI.Xaml.Controls.IAutoSuggestBoxStatics"
  // Instantiable: "IAutoSuggestBox"
  TAutoSuggestBox = class(TWinRTGenericImportSI<IAutoSuggestBoxStatics, IAutoSuggestBox>)
  public
    // -> IAutoSuggestBoxStatics
    class function get_MaxSuggestionListHeightProperty: IDependencyProperty; static; inline;
    class function get_IsSuggestionListOpenProperty: IDependencyProperty; static; inline;
    class function get_TextMemberPathProperty: IDependencyProperty; static; inline;
    class function get_TextProperty: IDependencyProperty; static; inline;
    class function get_UpdateTextOnSelectProperty: IDependencyProperty; static; inline;
    class function get_PlaceholderTextProperty: IDependencyProperty; static; inline;
    class function get_HeaderProperty: IDependencyProperty; static; inline;
    class function get_AutoMaximizeSuggestionAreaProperty: IDependencyProperty; static; inline;
    class function get_TextBoxStyleProperty: IDependencyProperty; static; inline;
    class function get_QueryIconProperty: IDependencyProperty; static; inline;
    class function get_LightDismissOverlayModeProperty: IDependencyProperty; static; inline;
    class function get_DescriptionProperty: IDependencyProperty; static; inline;
    class property AutoMaximizeSuggestionAreaProperty: IDependencyProperty read get_AutoMaximizeSuggestionAreaProperty;
    class property DescriptionProperty: IDependencyProperty read get_DescriptionProperty;
    class property HeaderProperty: IDependencyProperty read get_HeaderProperty;
    class property IsSuggestionListOpenProperty: IDependencyProperty read get_IsSuggestionListOpenProperty;
    class property LightDismissOverlayModeProperty: IDependencyProperty read get_LightDismissOverlayModeProperty;
    class property MaxSuggestionListHeightProperty: IDependencyProperty read get_MaxSuggestionListHeightProperty;
    class property PlaceholderTextProperty: IDependencyProperty read get_PlaceholderTextProperty;
    class property QueryIconProperty: IDependencyProperty read get_QueryIconProperty;
    class property TextBoxStyleProperty: IDependencyProperty read get_TextBoxStyleProperty;
    class property TextMemberPathProperty: IDependencyProperty read get_TextMemberPathProperty;
    class property TextProperty: IDependencyProperty read get_TextProperty;
    class property UpdateTextOnSelectProperty: IDependencyProperty read get_UpdateTextOnSelectProperty;
  end;

  // Microsoft.UI.Xaml.Controls.AutoSuggestBoxQuerySubmittedEventArgs
  // Explicitly imported
  // Implements: Microsoft.UI.Xaml.Controls.IAutoSuggestBoxQuerySubmittedEventArgs
  // Instantiable: "IAutoSuggestBoxQuerySubmittedEventArgs"
  TAutoSuggestBoxQuerySubmittedEventArgs = class(TWinRTGenericImportI<IAutoSuggestBoxQuerySubmittedEventArgs>) end;

  // Microsoft.UI.Xaml.Controls.AutoSuggestBoxSuggestionChosenEventArgs
  // Explicitly imported
  // Implements: Microsoft.UI.Xaml.Controls.IAutoSuggestBoxSuggestionChosenEventArgs
  // Instantiable: "IAutoSuggestBoxSuggestionChosenEventArgs"
  TAutoSuggestBoxSuggestionChosenEventArgs = class(TWinRTGenericImportI<IAutoSuggestBoxSuggestionChosenEventArgs>) end;

  // Microsoft.UI.Xaml.Controls.AutoSuggestBoxTextChangedEventArgs
  // Explicitly imported
  // Implements: Microsoft.UI.Xaml.Controls.IAutoSuggestBoxTextChangedEventArgs
  // Statics: "Microsoft.UI.Xaml.Controls.IAutoSuggestBoxTextChangedEventArgsStatics"
  // Instantiable: "IAutoSuggestBoxTextChangedEventArgs"
  TAutoSuggestBoxTextChangedEventArgs = class(TWinRTGenericImportSI<IAutoSuggestBoxTextChangedEventArgsStatics, IAutoSuggestBoxTextChangedEventArgs>)
  public
    // -> IAutoSuggestBoxTextChangedEventArgsStatics
    class function get_ReasonProperty: IDependencyProperty; static; inline;
    class property ReasonProperty: IDependencyProperty read get_ReasonProperty;
  end;

  // Microsoft.UI.Xaml.Controls.BitmapIcon
  // Explicitly imported
  // Implements: Microsoft.UI.Xaml.Controls.IBitmapIcon
  // Statics: "Microsoft.UI.Xaml.Controls.IBitmapIconStatics"
  // Factory: "Microsoft.UI.Xaml.Controls.IBitmapIconFactory"
  // Instantiable: "IBitmapIcon"
  TBitmapIcon = class(TWinRTGenericImportFSI<IBitmapIconFactory, IBitmapIconStatics, IBitmapIcon>)
  public
    // -> IBitmapIconStatics
    class function get_UriSourceProperty: IDependencyProperty; static; inline;
    class function get_ShowAsMonochromeProperty: IDependencyProperty; static; inline;
    class property ShowAsMonochromeProperty: IDependencyProperty read get_ShowAsMonochromeProperty;
    class property UriSourceProperty: IDependencyProperty read get_UriSourceProperty;

    // -> IBitmapIconFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IBitmapIcon; static; inline;
  end;

  // Microsoft.UI.Xaml.Controls.BitmapIconSource
  // Explicitly imported
  // Implements: Microsoft.UI.Xaml.Controls.IBitmapIconSource
  // Statics: "Microsoft.UI.Xaml.Controls.IBitmapIconSourceStatics"
  // Factory: "Microsoft.UI.Xaml.Controls.IBitmapIconSourceFactory"
  // Instantiable: "IBitmapIconSource"
  TBitmapIconSource = class(TWinRTGenericImportFSI<IBitmapIconSourceFactory, IBitmapIconSourceStatics, IBitmapIconSource>)
  public
    // -> IBitmapIconSourceStatics
    class function get_UriSourceProperty: IDependencyProperty; static; inline;
    class function get_ShowAsMonochromeProperty: IDependencyProperty; static; inline;
    class property ShowAsMonochromeProperty: IDependencyProperty read get_ShowAsMonochromeProperty;
    class property UriSourceProperty: IDependencyProperty read get_UriSourceProperty;

    // -> IBitmapIconSourceFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IBitmapIconSource; static; inline;
  end;

  // Microsoft.UI.Xaml.Controls.Border
  // Explicitly imported
  // Implements: Microsoft.UI.Xaml.Controls.IBorder
  // Statics: "Microsoft.UI.Xaml.Controls.IBorderStatics"
  // Instantiable: "IBorder"
  TBorder = class(TWinRTGenericImportSI<IBorderStatics, IBorder>)
  public
    // -> IBorderStatics
    class function get_BorderBrushProperty: IDependencyProperty; static; inline;
    class function get_BorderThicknessProperty: IDependencyProperty; static; inline;
    class function get_BackgroundProperty: IDependencyProperty; static; inline;
    class function get_BackgroundSizingProperty: IDependencyProperty; static; inline;
    class function get_CornerRadiusProperty: IDependencyProperty; static; inline;
    class function get_PaddingProperty: IDependencyProperty; static; inline;
    class function get_ChildTransitionsProperty: IDependencyProperty; static; inline;
    class property BackgroundProperty: IDependencyProperty read get_BackgroundProperty;
    class property BackgroundSizingProperty: IDependencyProperty read get_BackgroundSizingProperty;
    class property BorderBrushProperty: IDependencyProperty read get_BorderBrushProperty;
    class property BorderThicknessProperty: IDependencyProperty read get_BorderThicknessProperty;
    class property ChildTransitionsProperty: IDependencyProperty read get_ChildTransitionsProperty;
    class property CornerRadiusProperty: IDependencyProperty read get_CornerRadiusProperty;
    class property PaddingProperty: IDependencyProperty read get_PaddingProperty;
  end;

  // Microsoft.UI.Xaml.Controls.BreadcrumbBar
  // Explicitly imported
  // Implements: Microsoft.UI.Xaml.Controls.IBreadcrumbBar
  // Statics: "Microsoft.UI.Xaml.Controls.IBreadcrumbBarStatics"
  // Factory: "Microsoft.UI.Xaml.Controls.IBreadcrumbBarFactory"
  // Instantiable: "IBreadcrumbBar"
  TBreadcrumbBar = class(TWinRTGenericImportFSI<IBreadcrumbBarFactory, IBreadcrumbBarStatics, IBreadcrumbBar>)
  public
    // -> IBreadcrumbBarStatics
    class function get_ItemsSourceProperty: IDependencyProperty; static; inline;
    class function get_ItemTemplateProperty: IDependencyProperty; static; inline;
    class property ItemTemplateProperty: IDependencyProperty read get_ItemTemplateProperty;
    class property ItemsSourceProperty: IDependencyProperty read get_ItemsSourceProperty;

    // -> IBreadcrumbBarFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IBreadcrumbBar; static; inline;
  end;

  // Microsoft.UI.Xaml.Controls.BreadcrumbBarItem
  // Explicitly imported
  // Implements: Microsoft.UI.Xaml.Controls.IBreadcrumbBarItem
  // Factory: "Microsoft.UI.Xaml.Controls.IBreadcrumbBarItemFactory"
  // Instantiable: "IBreadcrumbBarItem"
  TBreadcrumbBarItem = class(TWinRTGenericImportFI<IBreadcrumbBarItemFactory, IBreadcrumbBarItem>)
  public
    // -> IBreadcrumbBarItemFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IBreadcrumbBarItem; static; inline;
  end;

  // Microsoft.UI.Xaml.Controls.CalendarDatePicker
  // Explicitly imported
  // Implements: Microsoft.UI.Xaml.Controls.ICalendarDatePicker
  // Statics: "Microsoft.UI.Xaml.Controls.ICalendarDatePickerStatics"
  // Factory: "Microsoft.UI.Xaml.Controls.ICalendarDatePickerFactory"
  // Instantiable: "ICalendarDatePicker"
  TCalendarDatePicker = class(TWinRTGenericImportFSI<ICalendarDatePickerFactory, ICalendarDatePickerStatics, ICalendarDatePicker>)
  public
    // -> ICalendarDatePickerStatics
    class function get_DateProperty: IDependencyProperty; static; inline;
    class function get_IsCalendarOpenProperty: IDependencyProperty; static; inline;
    class function get_DateFormatProperty: IDependencyProperty; static; inline;
    class function get_PlaceholderTextProperty: IDependencyProperty; static; inline;
    class function get_HeaderProperty: IDependencyProperty; static; inline;
    class function get_HeaderTemplateProperty: IDependencyProperty; static; inline;
    class function get_CalendarViewStyleProperty: IDependencyProperty; static; inline;
    class function get_LightDismissOverlayModeProperty: IDependencyProperty; static; inline;
    class function get_DescriptionProperty: IDependencyProperty; static; inline;
    class function get_MinDateProperty: IDependencyProperty; static; inline;
    class function get_MaxDateProperty: IDependencyProperty; static; inline;
    class function get_IsTodayHighlightedProperty: IDependencyProperty; static; inline;
    class function get_DisplayModeProperty: IDependencyProperty; static; inline;
    class function get_FirstDayOfWeekProperty: IDependencyProperty; static; inline;
    class function get_DayOfWeekFormatProperty: IDependencyProperty; static; inline;
    class function get_CalendarIdentifierProperty: IDependencyProperty; static; inline;
    class function get_IsOutOfScopeEnabledProperty: IDependencyProperty; static; inline;
    class function get_IsGroupLabelVisibleProperty: IDependencyProperty; static; inline;
    class property CalendarIdentifierProperty: IDependencyProperty read get_CalendarIdentifierProperty;
    class property CalendarViewStyleProperty: IDependencyProperty read get_CalendarViewStyleProperty;
    class property DateFormatProperty: IDependencyProperty read get_DateFormatProperty;
    class property DateProperty: IDependencyProperty read get_DateProperty;
    class property DayOfWeekFormatProperty: IDependencyProperty read get_DayOfWeekFormatProperty;
    class property DescriptionProperty: IDependencyProperty read get_DescriptionProperty;
    class property DisplayModeProperty: IDependencyProperty read get_DisplayModeProperty;
    class property FirstDayOfWeekProperty: IDependencyProperty read get_FirstDayOfWeekProperty;
    class property HeaderProperty: IDependencyProperty read get_HeaderProperty;
    class property HeaderTemplateProperty: IDependencyProperty read get_HeaderTemplateProperty;
    class property IsCalendarOpenProperty: IDependencyProperty read get_IsCalendarOpenProperty;
    class property IsGroupLabelVisibleProperty: IDependencyProperty read get_IsGroupLabelVisibleProperty;
    class property IsOutOfScopeEnabledProperty: IDependencyProperty read get_IsOutOfScopeEnabledProperty;
    class property IsTodayHighlightedProperty: IDependencyProperty read get_IsTodayHighlightedProperty;
    class property LightDismissOverlayModeProperty: IDependencyProperty read get_LightDismissOverlayModeProperty;
    class property MaxDateProperty: IDependencyProperty read get_MaxDateProperty;
    class property MinDateProperty: IDependencyProperty read get_MinDateProperty;
    class property PlaceholderTextProperty: IDependencyProperty read get_PlaceholderTextProperty;

    // -> ICalendarDatePickerFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): ICalendarDatePicker; static; inline;
  end;

  // Microsoft.UI.Xaml.Controls.CalendarView
  // Explicitly imported
  // Implements: Microsoft.UI.Xaml.Controls.ICalendarView
  // Statics: "Microsoft.UI.Xaml.Controls.ICalendarViewStatics"
  // Factory: "Microsoft.UI.Xaml.Controls.ICalendarViewFactory"
  // Instantiable: "ICalendarView"
  TCalendarView = class(TWinRTGenericImportFSI<ICalendarViewFactory, ICalendarViewStatics, ICalendarView>)
  public
    // -> ICalendarViewStatics
    class function get_CalendarIdentifierProperty: IDependencyProperty; static; inline;
    class function get_DayOfWeekFormatProperty: IDependencyProperty; static; inline;
    class function get_IsGroupLabelVisibleProperty: IDependencyProperty; static; inline;
    class function get_DisplayModeProperty: IDependencyProperty; static; inline;
    class function get_FirstDayOfWeekProperty: IDependencyProperty; static; inline;
    class function get_IsOutOfScopeEnabledProperty: IDependencyProperty; static; inline;
    class function get_IsTodayHighlightedProperty: IDependencyProperty; static; inline;
    class function get_MaxDateProperty: IDependencyProperty; static; inline;
    class function get_MinDateProperty: IDependencyProperty; static; inline;
    class function get_NumberOfWeeksInViewProperty: IDependencyProperty; static; inline;
    class function get_SelectedDatesProperty: IDependencyProperty; static; inline;
    class function get_SelectionModeProperty: IDependencyProperty; static; inline;
    class function get_TemplateSettingsProperty: IDependencyProperty; static; inline;
    class function get_FocusBorderBrushProperty: IDependencyProperty; static; inline;
    class function get_SelectedHoverBorderBrushProperty: IDependencyProperty; static; inline;
    class function get_SelectedPressedBorderBrushProperty: IDependencyProperty; static; inline;
    class function get_SelectedDisabledBorderBrushProperty: IDependencyProperty; static; inline;
    class function get_SelectedBorderBrushProperty: IDependencyProperty; static; inline;
    class function get_HoverBorderBrushProperty: IDependencyProperty; static; inline;
    class function get_PressedBorderBrushProperty: IDependencyProperty; static; inline;
    class function get_TodaySelectedInnerBorderBrushProperty: IDependencyProperty; static; inline;
    class function get_BlackoutStrikethroughBrushProperty: IDependencyProperty; static; inline;
    class function get_CalendarItemBorderBrushProperty: IDependencyProperty; static; inline;
    class function get_BlackoutBackgroundProperty: IDependencyProperty; static; inline;
    class function get_OutOfScopeBackgroundProperty: IDependencyProperty; static; inline;
    class function get_CalendarItemBackgroundProperty: IDependencyProperty; static; inline;
    class function get_CalendarItemHoverBackgroundProperty: IDependencyProperty; static; inline;
    class function get_CalendarItemPressedBackgroundProperty: IDependencyProperty; static; inline;
    class function get_CalendarItemDisabledBackgroundProperty: IDependencyProperty; static; inline;
    class function get_TodayBackgroundProperty: IDependencyProperty; static; inline;
    class function get_TodayBlackoutBackgroundProperty: IDependencyProperty; static; inline;
    class function get_TodayHoverBackgroundProperty: IDependencyProperty; static; inline;
    class function get_TodayPressedBackgroundProperty: IDependencyProperty; static; inline;
    class function get_TodayDisabledBackgroundProperty: IDependencyProperty; static; inline;
    class function get_PressedForegroundProperty: IDependencyProperty; static; inline;
    class function get_TodayForegroundProperty: IDependencyProperty; static; inline;
    class function get_BlackoutForegroundProperty: IDependencyProperty; static; inline;
    class function get_TodayBlackoutForegroundProperty: IDependencyProperty; static; inline;
    class function get_SelectedForegroundProperty: IDependencyProperty; static; inline;
    class function get_SelectedHoverForegroundProperty: IDependencyProperty; static; inline;
    class function get_SelectedPressedForegroundProperty: IDependencyProperty; static; inline;
    class function get_SelectedDisabledForegroundProperty: IDependencyProperty; static; inline;
    class function get_OutOfScopeForegroundProperty: IDependencyProperty; static; inline;
    class function get_OutOfScopeHoverForegroundProperty: IDependencyProperty; static; inline;
    class function get_OutOfScopePressedForegroundProperty: IDependencyProperty; static; inline;
    class function get_CalendarItemForegroundProperty: IDependencyProperty; static; inline;
    class function get_DisabledForegroundProperty: IDependencyProperty; static; inline;
    class function get_DayItemFontFamilyProperty: IDependencyProperty; static; inline;
    class function get_DayItemFontSizeProperty: IDependencyProperty; static; inline;
    class function get_DayItemFontStyleProperty: IDependencyProperty; static; inline;
    class function get_DayItemFontWeightProperty: IDependencyProperty; static; inline;
    class function get_TodayFontWeightProperty: IDependencyProperty; static; inline;
    class function get_FirstOfMonthLabelFontFamilyProperty: IDependencyProperty; static; inline;
    class function get_FirstOfMonthLabelFontSizeProperty: IDependencyProperty; static; inline;
    class function get_FirstOfMonthLabelFontStyleProperty: IDependencyProperty; static; inline;
    class function get_FirstOfMonthLabelFontWeightProperty: IDependencyProperty; static; inline;
    class function get_MonthYearItemFontFamilyProperty: IDependencyProperty; static; inline;
    class function get_MonthYearItemFontSizeProperty: IDependencyProperty; static; inline;
    class function get_MonthYearItemFontStyleProperty: IDependencyProperty; static; inline;
    class function get_MonthYearItemFontWeightProperty: IDependencyProperty; static; inline;
    class function get_FirstOfYearDecadeLabelFontFamilyProperty: IDependencyProperty; static; inline;
    class function get_FirstOfYearDecadeLabelFontSizeProperty: IDependencyProperty; static; inline;
    class function get_FirstOfYearDecadeLabelFontStyleProperty: IDependencyProperty; static; inline;
    class function get_FirstOfYearDecadeLabelFontWeightProperty: IDependencyProperty; static; inline;
    class function get_DayItemMarginProperty: IDependencyProperty; static; inline;
    class function get_MonthYearItemMarginProperty: IDependencyProperty; static; inline;
    class function get_FirstOfMonthLabelMarginProperty: IDependencyProperty; static; inline;
    class function get_FirstOfYearDecadeLabelMarginProperty: IDependencyProperty; static; inline;
    class function get_HorizontalDayItemAlignmentProperty: IDependencyProperty; static; inline;
    class function get_VerticalDayItemAlignmentProperty: IDependencyProperty; static; inline;
    class function get_HorizontalFirstOfMonthLabelAlignmentProperty: IDependencyProperty; static; inline;
    class function get_VerticalFirstOfMonthLabelAlignmentProperty: IDependencyProperty; static; inline;
    class function get_CalendarItemBorderThicknessProperty: IDependencyProperty; static; inline;
    class function get_CalendarViewDayItemStyleProperty: IDependencyProperty; static; inline;
    class function get_CalendarItemCornerRadiusProperty: IDependencyProperty; static; inline;
    class property BlackoutBackgroundProperty: IDependencyProperty read get_BlackoutBackgroundProperty;
    class property BlackoutForegroundProperty: IDependencyProperty read get_BlackoutForegroundProperty;
    class property BlackoutStrikethroughBrushProperty: IDependencyProperty read get_BlackoutStrikethroughBrushProperty;
    class property CalendarIdentifierProperty: IDependencyProperty read get_CalendarIdentifierProperty;
    class property CalendarItemBackgroundProperty: IDependencyProperty read get_CalendarItemBackgroundProperty;
    class property CalendarItemBorderBrushProperty: IDependencyProperty read get_CalendarItemBorderBrushProperty;
    class property CalendarItemBorderThicknessProperty: IDependencyProperty read get_CalendarItemBorderThicknessProperty;
    class property CalendarItemCornerRadiusProperty: IDependencyProperty read get_CalendarItemCornerRadiusProperty;
    class property CalendarItemDisabledBackgroundProperty: IDependencyProperty read get_CalendarItemDisabledBackgroundProperty;
    class property CalendarItemForegroundProperty: IDependencyProperty read get_CalendarItemForegroundProperty;
    class property CalendarItemHoverBackgroundProperty: IDependencyProperty read get_CalendarItemHoverBackgroundProperty;
    class property CalendarItemPressedBackgroundProperty: IDependencyProperty read get_CalendarItemPressedBackgroundProperty;
    class property CalendarViewDayItemStyleProperty: IDependencyProperty read get_CalendarViewDayItemStyleProperty;
    class property DayItemFontFamilyProperty: IDependencyProperty read get_DayItemFontFamilyProperty;
    class property DayItemFontSizeProperty: IDependencyProperty read get_DayItemFontSizeProperty;
    class property DayItemFontStyleProperty: IDependencyProperty read get_DayItemFontStyleProperty;
    class property DayItemFontWeightProperty: IDependencyProperty read get_DayItemFontWeightProperty;
    class property DayItemMarginProperty: IDependencyProperty read get_DayItemMarginProperty;
    class property DayOfWeekFormatProperty: IDependencyProperty read get_DayOfWeekFormatProperty;
    class property DisabledForegroundProperty: IDependencyProperty read get_DisabledForegroundProperty;
    class property DisplayModeProperty: IDependencyProperty read get_DisplayModeProperty;
    class property FirstDayOfWeekProperty: IDependencyProperty read get_FirstDayOfWeekProperty;
    class property FirstOfMonthLabelFontFamilyProperty: IDependencyProperty read get_FirstOfMonthLabelFontFamilyProperty;
    class property FirstOfMonthLabelFontSizeProperty: IDependencyProperty read get_FirstOfMonthLabelFontSizeProperty;
    class property FirstOfMonthLabelFontStyleProperty: IDependencyProperty read get_FirstOfMonthLabelFontStyleProperty;
    class property FirstOfMonthLabelFontWeightProperty: IDependencyProperty read get_FirstOfMonthLabelFontWeightProperty;
    class property FirstOfMonthLabelMarginProperty: IDependencyProperty read get_FirstOfMonthLabelMarginProperty;
    class property FirstOfYearDecadeLabelFontFamilyProperty: IDependencyProperty read get_FirstOfYearDecadeLabelFontFamilyProperty;
    class property FirstOfYearDecadeLabelFontSizeProperty: IDependencyProperty read get_FirstOfYearDecadeLabelFontSizeProperty;
    class property FirstOfYearDecadeLabelFontStyleProperty: IDependencyProperty read get_FirstOfYearDecadeLabelFontStyleProperty;
    class property FirstOfYearDecadeLabelFontWeightProperty: IDependencyProperty read get_FirstOfYearDecadeLabelFontWeightProperty;
    class property FirstOfYearDecadeLabelMarginProperty: IDependencyProperty read get_FirstOfYearDecadeLabelMarginProperty;
    class property FocusBorderBrushProperty: IDependencyProperty read get_FocusBorderBrushProperty;
    class property HorizontalDayItemAlignmentProperty: IDependencyProperty read get_HorizontalDayItemAlignmentProperty;
    class property HorizontalFirstOfMonthLabelAlignmentProperty: IDependencyProperty read get_HorizontalFirstOfMonthLabelAlignmentProperty;
    class property HoverBorderBrushProperty: IDependencyProperty read get_HoverBorderBrushProperty;
    class property IsGroupLabelVisibleProperty: IDependencyProperty read get_IsGroupLabelVisibleProperty;
    class property IsOutOfScopeEnabledProperty: IDependencyProperty read get_IsOutOfScopeEnabledProperty;
    class property IsTodayHighlightedProperty: IDependencyProperty read get_IsTodayHighlightedProperty;
    class property MaxDateProperty: IDependencyProperty read get_MaxDateProperty;
    class property MinDateProperty: IDependencyProperty read get_MinDateProperty;
    class property MonthYearItemFontFamilyProperty: IDependencyProperty read get_MonthYearItemFontFamilyProperty;
    class property MonthYearItemFontSizeProperty: IDependencyProperty read get_MonthYearItemFontSizeProperty;
    class property MonthYearItemFontStyleProperty: IDependencyProperty read get_MonthYearItemFontStyleProperty;
    class property MonthYearItemFontWeightProperty: IDependencyProperty read get_MonthYearItemFontWeightProperty;
    class property MonthYearItemMarginProperty: IDependencyProperty read get_MonthYearItemMarginProperty;
    class property NumberOfWeeksInViewProperty: IDependencyProperty read get_NumberOfWeeksInViewProperty;
    class property OutOfScopeBackgroundProperty: IDependencyProperty read get_OutOfScopeBackgroundProperty;
    class property OutOfScopeForegroundProperty: IDependencyProperty read get_OutOfScopeForegroundProperty;
    class property OutOfScopeHoverForegroundProperty: IDependencyProperty read get_OutOfScopeHoverForegroundProperty;
    class property OutOfScopePressedForegroundProperty: IDependencyProperty read get_OutOfScopePressedForegroundProperty;
    class property PressedBorderBrushProperty: IDependencyProperty read get_PressedBorderBrushProperty;
    class property PressedForegroundProperty: IDependencyProperty read get_PressedForegroundProperty;
    class property SelectedBorderBrushProperty: IDependencyProperty read get_SelectedBorderBrushProperty;
    class property SelectedDatesProperty: IDependencyProperty read get_SelectedDatesProperty;
    class property SelectedDisabledBorderBrushProperty: IDependencyProperty read get_SelectedDisabledBorderBrushProperty;
    class property SelectedDisabledForegroundProperty: IDependencyProperty read get_SelectedDisabledForegroundProperty;
    class property SelectedForegroundProperty: IDependencyProperty read get_SelectedForegroundProperty;
    class property SelectedHoverBorderBrushProperty: IDependencyProperty read get_SelectedHoverBorderBrushProperty;
    class property SelectedHoverForegroundProperty: IDependencyProperty read get_SelectedHoverForegroundProperty;
    class property SelectedPressedBorderBrushProperty: IDependencyProperty read get_SelectedPressedBorderBrushProperty;
    class property SelectedPressedForegroundProperty: IDependencyProperty read get_SelectedPressedForegroundProperty;
    class property SelectionModeProperty: IDependencyProperty read get_SelectionModeProperty;
    class property TemplateSettingsProperty: IDependencyProperty read get_TemplateSettingsProperty;
    class property TodayBackgroundProperty: IDependencyProperty read get_TodayBackgroundProperty;
    class property TodayBlackoutBackgroundProperty: IDependencyProperty read get_TodayBlackoutBackgroundProperty;
    class property TodayBlackoutForegroundProperty: IDependencyProperty read get_TodayBlackoutForegroundProperty;
    class property TodayDisabledBackgroundProperty: IDependencyProperty read get_TodayDisabledBackgroundProperty;
    class property TodayFontWeightProperty: IDependencyProperty read get_TodayFontWeightProperty;
    class property TodayForegroundProperty: IDependencyProperty read get_TodayForegroundProperty;
    class property TodayHoverBackgroundProperty: IDependencyProperty read get_TodayHoverBackgroundProperty;
    class property TodayPressedBackgroundProperty: IDependencyProperty read get_TodayPressedBackgroundProperty;
    class property TodaySelectedInnerBorderBrushProperty: IDependencyProperty read get_TodaySelectedInnerBorderBrushProperty;
    class property VerticalDayItemAlignmentProperty: IDependencyProperty read get_VerticalDayItemAlignmentProperty;
    class property VerticalFirstOfMonthLabelAlignmentProperty: IDependencyProperty read get_VerticalFirstOfMonthLabelAlignmentProperty;

    // -> ICalendarViewFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): ICalendarView; static; inline;
  end;

  // Microsoft.UI.Xaml.Controls.CalendarViewDayItem
  // Explicitly imported
  // Implements: Microsoft.UI.Xaml.Controls.ICalendarViewDayItem
  // Statics: "Microsoft.UI.Xaml.Controls.ICalendarViewDayItemStatics"
  // Factory: "Microsoft.UI.Xaml.Controls.ICalendarViewDayItemFactory"
  // Instantiable: "ICalendarViewDayItem"
  TCalendarViewDayItem = class(TWinRTGenericImportFSI<ICalendarViewDayItemFactory, ICalendarViewDayItemStatics, ICalendarViewDayItem>)
  public
    // -> ICalendarViewDayItemStatics
    class function get_IsBlackoutProperty: IDependencyProperty; static; inline;
    class function get_DateProperty: IDependencyProperty; static; inline;
    class property DateProperty: IDependencyProperty read get_DateProperty;
    class property IsBlackoutProperty: IDependencyProperty read get_IsBlackoutProperty;

    // -> ICalendarViewDayItemFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): ICalendarViewDayItem; static; inline;
  end;

  // Microsoft.UI.Xaml.Controls.Panel
  // Explicitly imported
  // Implements: Microsoft.UI.Xaml.Controls.IPanel
  // Statics: "Microsoft.UI.Xaml.Controls.IPanelStatics"
  // Factory: "Microsoft.UI.Xaml.Controls.IPanelFactory"
  // Instantiable: "IPanel"
  TPanel = class(TWinRTGenericImportFSI<IPanelFactory, IPanelStatics, IPanel>)
  public
    // -> IPanelStatics
    class function get_BackgroundProperty: IDependencyProperty; static; inline;
    class function get_IsItemsHostProperty: IDependencyProperty; static; inline;
    class function get_ChildrenTransitionsProperty: IDependencyProperty; static; inline;
    class property BackgroundProperty: IDependencyProperty read get_BackgroundProperty;
    class property ChildrenTransitionsProperty: IDependencyProperty read get_ChildrenTransitionsProperty;
    class property IsItemsHostProperty: IDependencyProperty read get_IsItemsHostProperty;

    // -> IPanelFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IPanel; static; inline;
  end;

  // Microsoft.UI.Xaml.Controls.Canvas
  // Explicitly imported
  // Implements: Microsoft.UI.Xaml.Controls.ICanvas
  // Statics: "Microsoft.UI.Xaml.Controls.ICanvasStatics"
  // Factory: "Microsoft.UI.Xaml.Controls.ICanvasFactory"
  // Instantiable: "ICanvas"
  TCanvas = class(TWinRTGenericImportFSI<ICanvasFactory, ICanvasStatics, ICanvas>)
  public
    // -> ICanvasStatics
    class function get_LeftProperty: IDependencyProperty; static; inline;
    class function GetLeft(element: IUIElement): Double; static; inline;
    class procedure SetLeft(element: IUIElement; length: Double); static; inline;
    class function get_TopProperty: IDependencyProperty; static; inline;
    class function GetTop(element: IUIElement): Double; static; inline;
    class procedure SetTop(element: IUIElement; length: Double); static; inline;
    class function get_ZIndexProperty: IDependencyProperty; static; inline;
    class function GetZIndex(element: IUIElement): Integer; static; inline;
    class procedure SetZIndex(element: IUIElement; value: Integer); static; inline;
    class property LeftProperty: IDependencyProperty read get_LeftProperty;
    class property TopProperty: IDependencyProperty read get_TopProperty;
    class property ZIndexProperty: IDependencyProperty read get_ZIndexProperty;

    // -> ICanvasFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): ICanvas; static; inline;
  end;

  // Microsoft.UI.Xaml.Controls.CheckBox
  // Explicitly imported
  // Implements: Microsoft.UI.Xaml.Controls.ICheckBox
  // Factory: "Microsoft.UI.Xaml.Controls.ICheckBoxFactory"
  // Instantiable: "ICheckBox"
  TCheckBox = class(TWinRTGenericImportFI<ICheckBoxFactory, ICheckBox>)
  public
    // -> ICheckBoxFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): ICheckBox; static; inline;
  end;

  // Microsoft.UI.Xaml.Controls.ChoosingGroupHeaderContainerEventArgs
  // Explicitly imported
  // Implements: Microsoft.UI.Xaml.Controls.IChoosingGroupHeaderContainerEventArgs
  // Instantiable: "IChoosingGroupHeaderContainerEventArgs"
  TChoosingGroupHeaderContainerEventArgs = class(TWinRTGenericImportI<IChoosingGroupHeaderContainerEventArgs>) end;

  // Microsoft.UI.Xaml.Controls.ChoosingItemContainerEventArgs
  // Explicitly imported
  // Implements: Microsoft.UI.Xaml.Controls.IChoosingItemContainerEventArgs
  // Instantiable: "IChoosingItemContainerEventArgs"
  TChoosingItemContainerEventArgs = class(TWinRTGenericImportI<IChoosingItemContainerEventArgs>) end;

  // Microsoft.UI.Xaml.Controls.ColorPicker
  // Explicitly imported
  // Implements: Microsoft.UI.Xaml.Controls.IColorPicker
  // Implements: Microsoft.UI.Xaml.Controls.IColorPicker2
  // Statics: "Microsoft.UI.Xaml.Controls.IColorPickerStatics"
  // Statics: "Microsoft.UI.Xaml.Controls.IColorPickerStatics2"
  // Factory: "Microsoft.UI.Xaml.Controls.IColorPickerFactory"
  // Instantiable: "IColorPicker"
  TColorPicker = class(TWinRTGenericImportFS2I<IColorPickerFactory, IColorPickerStatics, IColorPickerStatics2, IColorPicker>)
  public
    // -> IColorPickerStatics
    class function get_ColorProperty: IDependencyProperty; static; inline;
    class function get_PreviousColorProperty: IDependencyProperty; static; inline;
    class function get_IsAlphaEnabledProperty: IDependencyProperty; static; inline;
    class function get_IsColorSpectrumVisibleProperty: IDependencyProperty; static; inline;
    class function get_IsColorPreviewVisibleProperty: IDependencyProperty; static; inline;
    class function get_IsColorSliderVisibleProperty: IDependencyProperty; static; inline;
    class function get_IsAlphaSliderVisibleProperty: IDependencyProperty; static; inline;
    class function get_IsMoreButtonVisibleProperty: IDependencyProperty; static; inline;
    class function get_IsColorChannelTextInputVisibleProperty: IDependencyProperty; static; inline;
    class function get_IsAlphaTextInputVisibleProperty: IDependencyProperty; static; inline;
    class function get_IsHexInputVisibleProperty: IDependencyProperty; static; inline;
    class function get_MinHueProperty: IDependencyProperty; static; inline;
    class function get_MaxHueProperty: IDependencyProperty; static; inline;
    class function get_MinSaturationProperty: IDependencyProperty; static; inline;
    class function get_MaxSaturationProperty: IDependencyProperty; static; inline;
    class function get_MinValueProperty: IDependencyProperty; static; inline;
    class function get_MaxValueProperty: IDependencyProperty; static; inline;
    class function get_ColorSpectrumShapeProperty: IDependencyProperty; static; inline;
    class function get_ColorSpectrumComponentsProperty: IDependencyProperty; static; inline;
    class property ColorProperty: IDependencyProperty read get_ColorProperty;
    class property ColorSpectrumComponentsProperty: IDependencyProperty read get_ColorSpectrumComponentsProperty;
    class property ColorSpectrumShapeProperty: IDependencyProperty read get_ColorSpectrumShapeProperty;
    class property IsAlphaEnabledProperty: IDependencyProperty read get_IsAlphaEnabledProperty;
    class property IsAlphaSliderVisibleProperty: IDependencyProperty read get_IsAlphaSliderVisibleProperty;
    class property IsAlphaTextInputVisibleProperty: IDependencyProperty read get_IsAlphaTextInputVisibleProperty;
    class property IsColorChannelTextInputVisibleProperty: IDependencyProperty read get_IsColorChannelTextInputVisibleProperty;
    class property IsColorPreviewVisibleProperty: IDependencyProperty read get_IsColorPreviewVisibleProperty;
    class property IsColorSliderVisibleProperty: IDependencyProperty read get_IsColorSliderVisibleProperty;
    class property IsColorSpectrumVisibleProperty: IDependencyProperty read get_IsColorSpectrumVisibleProperty;
    class property IsHexInputVisibleProperty: IDependencyProperty read get_IsHexInputVisibleProperty;
    class property IsMoreButtonVisibleProperty: IDependencyProperty read get_IsMoreButtonVisibleProperty;
    class property MaxHueProperty: IDependencyProperty read get_MaxHueProperty;
    class property MaxSaturationProperty: IDependencyProperty read get_MaxSaturationProperty;
    class property MaxValueProperty: IDependencyProperty read get_MaxValueProperty;
    class property MinHueProperty: IDependencyProperty read get_MinHueProperty;
    class property MinSaturationProperty: IDependencyProperty read get_MinSaturationProperty;
    class property MinValueProperty: IDependencyProperty read get_MinValueProperty;
    class property PreviousColorProperty: IDependencyProperty read get_PreviousColorProperty;

    // -> IColorPickerStatics2
    class function get_OrientationProperty: IDependencyProperty; static; inline;
    class property OrientationProperty: IDependencyProperty read get_OrientationProperty;

    // -> IColorPickerFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IColorPicker; static; inline;
  end;

  // Microsoft.UI.Xaml.Controls.ColumnDefinition
  // Explicitly imported
  // Implements: Microsoft.UI.Xaml.Controls.IColumnDefinition
  // Statics: "Microsoft.UI.Xaml.Controls.IColumnDefinitionStatics"
  // Instantiable: "IColumnDefinition"
  TColumnDefinition = class(TWinRTGenericImportSI<IColumnDefinitionStatics, IColumnDefinition>)
  public
    // -> IColumnDefinitionStatics
    class function get_WidthProperty: IDependencyProperty; static; inline;
    class function get_MaxWidthProperty: IDependencyProperty; static; inline;
    class function get_MinWidthProperty: IDependencyProperty; static; inline;
    class property MaxWidthProperty: IDependencyProperty read get_MaxWidthProperty;
    class property MinWidthProperty: IDependencyProperty read get_MinWidthProperty;
    class property WidthProperty: IDependencyProperty read get_WidthProperty;
  end;

  // Microsoft.UI.Xaml.Controls.Primitives.Selector
  // Explicitly imported
  // Implements: Microsoft.UI.Xaml.Controls.Primitives.ISelector
  // Statics: "Microsoft.UI.Xaml.Controls.Primitives.ISelectorStatics"
  // Factory: "Microsoft.UI.Xaml.Controls.Primitives.ISelectorFactory"
  // Instantiable: "Primitives_ISelector"
  TPrimitives_Selector = class(TWinRTGenericImportFSI<Primitives_ISelectorFactory, Primitives_ISelectorStatics, Primitives_ISelector>)
  public
    // -> Primitives_ISelectorStatics
    class function get_SelectedIndexProperty: IDependencyProperty; static; inline;
    class function get_SelectedItemProperty: IDependencyProperty; static; inline;
    class function get_SelectedValueProperty: IDependencyProperty; static; inline;
    class function get_SelectedValuePathProperty: IDependencyProperty; static; inline;
    class function get_IsSynchronizedWithCurrentItemProperty: IDependencyProperty; static; inline;
    class function GetIsSelectionActive(element: IDependencyObject): Boolean; static; inline;
    class property IsSynchronizedWithCurrentItemProperty: IDependencyProperty read get_IsSynchronizedWithCurrentItemProperty;
    class property SelectedIndexProperty: IDependencyProperty read get_SelectedIndexProperty;
    class property SelectedItemProperty: IDependencyProperty read get_SelectedItemProperty;
    class property SelectedValuePathProperty: IDependencyProperty read get_SelectedValuePathProperty;
    class property SelectedValueProperty: IDependencyProperty read get_SelectedValueProperty;

    // -> Primitives_ISelectorFactory
  end;

  // Microsoft.UI.Xaml.Controls.ComboBox
  // Explicitly imported
  // Implements: Microsoft.UI.Xaml.Controls.IComboBox
  // Implements: Microsoft.UI.Xaml.Controls.IComboBoxOverrides
  // Statics: "Microsoft.UI.Xaml.Controls.IComboBoxStatics"
  // Factory: "Microsoft.UI.Xaml.Controls.IComboBoxFactory"
  // Instantiable: "IComboBox"
  TComboBox = class(TWinRTGenericImportFSI<IComboBoxFactory, IComboBoxStatics, IComboBox>)
  public
    // -> IComboBoxStatics
    class function get_IsEditableProperty: IDependencyProperty; static; inline;
    class function get_IsDropDownOpenProperty: IDependencyProperty; static; inline;
    class function get_MaxDropDownHeightProperty: IDependencyProperty; static; inline;
    class function get_HeaderProperty: IDependencyProperty; static; inline;
    class function get_HeaderTemplateProperty: IDependencyProperty; static; inline;
    class function get_PlaceholderTextProperty: IDependencyProperty; static; inline;
    class function get_LightDismissOverlayModeProperty: IDependencyProperty; static; inline;
    class function get_IsTextSearchEnabledProperty: IDependencyProperty; static; inline;
    class function get_SelectionChangedTriggerProperty: IDependencyProperty; static; inline;
    class function get_PlaceholderForegroundProperty: IDependencyProperty; static; inline;
    class function get_TextProperty: IDependencyProperty; static; inline;
    class function get_TextBoxStyleProperty: IDependencyProperty; static; inline;
    class function get_DescriptionProperty: IDependencyProperty; static; inline;
    class property DescriptionProperty: IDependencyProperty read get_DescriptionProperty;
    class property HeaderProperty: IDependencyProperty read get_HeaderProperty;
    class property HeaderTemplateProperty: IDependencyProperty read get_HeaderTemplateProperty;
    class property IsDropDownOpenProperty: IDependencyProperty read get_IsDropDownOpenProperty;
    class property IsEditableProperty: IDependencyProperty read get_IsEditableProperty;
    class property IsTextSearchEnabledProperty: IDependencyProperty read get_IsTextSearchEnabledProperty;
    class property LightDismissOverlayModeProperty: IDependencyProperty read get_LightDismissOverlayModeProperty;
    class property MaxDropDownHeightProperty: IDependencyProperty read get_MaxDropDownHeightProperty;
    class property PlaceholderForegroundProperty: IDependencyProperty read get_PlaceholderForegroundProperty;
    class property PlaceholderTextProperty: IDependencyProperty read get_PlaceholderTextProperty;
    class property SelectionChangedTriggerProperty: IDependencyProperty read get_SelectionChangedTriggerProperty;
    class property TextBoxStyleProperty: IDependencyProperty read get_TextBoxStyleProperty;
    class property TextProperty: IDependencyProperty read get_TextProperty;

    // -> IComboBoxFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IComboBox; static; inline;
  end;

  // Microsoft.UI.Xaml.Controls.Primitives.SelectorItem
  // Explicitly imported
  // Implements: Microsoft.UI.Xaml.Controls.Primitives.ISelectorItem
  // Statics: "Microsoft.UI.Xaml.Controls.Primitives.ISelectorItemStatics"
  // Factory: "Microsoft.UI.Xaml.Controls.Primitives.ISelectorItemFactory"
  // Instantiable: "Primitives_ISelectorItem"
  TPrimitives_SelectorItem = class(TWinRTGenericImportFSI<Primitives_ISelectorItemFactory, Primitives_ISelectorItemStatics, Primitives_ISelectorItem>)
  public
    // -> Primitives_ISelectorItemStatics
    class function get_IsSelectedProperty: IDependencyProperty; static; inline;
    class property IsSelectedProperty: IDependencyProperty read get_IsSelectedProperty;

    // -> Primitives_ISelectorItemFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): Primitives_ISelectorItem; static; inline;
  end;

  // Microsoft.UI.Xaml.Controls.ComboBoxItem
  // Explicitly imported
  // Implements: Microsoft.UI.Xaml.Controls.IComboBoxItem
  // Factory: "Microsoft.UI.Xaml.Controls.IComboBoxItemFactory"
  // Instantiable: "IComboBoxItem"
  TComboBoxItem = class(TWinRTGenericImportFI<IComboBoxItemFactory, IComboBoxItem>)
  public
    // -> IComboBoxItemFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IComboBoxItem; static; inline;
  end;

  // Microsoft.UI.Xaml.Controls.CommandBar
  // Explicitly imported
  // Implements: Microsoft.UI.Xaml.Controls.ICommandBar
  // Statics: "Microsoft.UI.Xaml.Controls.ICommandBarStatics"
  // Factory: "Microsoft.UI.Xaml.Controls.ICommandBarFactory"
  // Instantiable: "ICommandBar"
  TCommandBar = class(TWinRTGenericImportFSI<ICommandBarFactory, ICommandBarStatics, ICommandBar>)
  public
    // -> ICommandBarStatics
    class function get_PrimaryCommandsProperty: IDependencyProperty; static; inline;
    class function get_SecondaryCommandsProperty: IDependencyProperty; static; inline;
    class function get_CommandBarOverflowPresenterStyleProperty: IDependencyProperty; static; inline;
    class function get_DefaultLabelPositionProperty: IDependencyProperty; static; inline;
    class function get_OverflowButtonVisibilityProperty: IDependencyProperty; static; inline;
    class function get_IsDynamicOverflowEnabledProperty: IDependencyProperty; static; inline;
    class property CommandBarOverflowPresenterStyleProperty: IDependencyProperty read get_CommandBarOverflowPresenterStyleProperty;
    class property DefaultLabelPositionProperty: IDependencyProperty read get_DefaultLabelPositionProperty;
    class property IsDynamicOverflowEnabledProperty: IDependencyProperty read get_IsDynamicOverflowEnabledProperty;
    class property OverflowButtonVisibilityProperty: IDependencyProperty read get_OverflowButtonVisibilityProperty;
    class property PrimaryCommandsProperty: IDependencyProperty read get_PrimaryCommandsProperty;
    class property SecondaryCommandsProperty: IDependencyProperty read get_SecondaryCommandsProperty;

    // -> ICommandBarFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): ICommandBar; static; inline;
  end;

  // Microsoft.UI.Xaml.Controls.Primitives.FlyoutBase
  // Explicitly imported
  // Implements: Microsoft.UI.Xaml.Controls.Primitives.IFlyoutBase
  // Implements: Microsoft.UI.Xaml.Controls.Primitives.IFlyoutBaseOverrides
  // Statics: "Microsoft.UI.Xaml.Controls.Primitives.IFlyoutBaseStatics"
  // Factory: "Microsoft.UI.Xaml.Controls.Primitives.IFlyoutBaseFactory"
  // Instantiable: "Primitives_IFlyoutBase"
  TPrimitives_FlyoutBase = class(TWinRTGenericImportFSI<Primitives_IFlyoutBaseFactory, Primitives_IFlyoutBaseStatics, Primitives_IFlyoutBase>)
  public
    // -> Primitives_IFlyoutBaseStatics
    class function get_TargetProperty: IDependencyProperty; static; inline;
    class function get_PlacementProperty: IDependencyProperty; static; inline;
    class function get_AllowFocusOnInteractionProperty: IDependencyProperty; static; inline;
    class function get_LightDismissOverlayModeProperty: IDependencyProperty; static; inline;
    class function get_AllowFocusWhenDisabledProperty: IDependencyProperty; static; inline;
    class function get_ShowModeProperty: IDependencyProperty; static; inline;
    class function get_InputDevicePrefersPrimaryCommandsProperty: IDependencyProperty; static; inline;
    class function get_AreOpenCloseAnimationsEnabledProperty: IDependencyProperty; static; inline;
    class function get_ShouldConstrainToRootBoundsProperty: IDependencyProperty; static; inline;
    class function get_ElementSoundModeProperty: IDependencyProperty; static; inline;
    class function get_OverlayInputPassThroughElementProperty: IDependencyProperty; static; inline;
    class function get_IsOpenProperty: IDependencyProperty; static; inline;
    class function get_AttachedFlyoutProperty: IDependencyProperty; static; inline;
    class function GetAttachedFlyout(element: IFrameworkElement): Primitives_IFlyoutBase; static; inline;
    class procedure SetAttachedFlyout(element: IFrameworkElement; value: Primitives_IFlyoutBase); static; inline;
    class procedure ShowAttachedFlyout(flyoutOwner: IFrameworkElement); static; inline;
    class property AllowFocusOnInteractionProperty: IDependencyProperty read get_AllowFocusOnInteractionProperty;
    class property AllowFocusWhenDisabledProperty: IDependencyProperty read get_AllowFocusWhenDisabledProperty;
    class property AreOpenCloseAnimationsEnabledProperty: IDependencyProperty read get_AreOpenCloseAnimationsEnabledProperty;
    class property AttachedFlyoutProperty: IDependencyProperty read get_AttachedFlyoutProperty;
    class property ElementSoundModeProperty: IDependencyProperty read get_ElementSoundModeProperty;
    class property InputDevicePrefersPrimaryCommandsProperty: IDependencyProperty read get_InputDevicePrefersPrimaryCommandsProperty;
    class property IsOpenProperty: IDependencyProperty read get_IsOpenProperty;
    class property LightDismissOverlayModeProperty: IDependencyProperty read get_LightDismissOverlayModeProperty;
    class property OverlayInputPassThroughElementProperty: IDependencyProperty read get_OverlayInputPassThroughElementProperty;
    class property PlacementProperty: IDependencyProperty read get_PlacementProperty;
    class property ShouldConstrainToRootBoundsProperty: IDependencyProperty read get_ShouldConstrainToRootBoundsProperty;
    class property ShowModeProperty: IDependencyProperty read get_ShowModeProperty;
    class property TargetProperty: IDependencyProperty read get_TargetProperty;

    // -> Primitives_IFlyoutBaseFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): Primitives_IFlyoutBase; static; inline;
  end;

  // Microsoft.UI.Xaml.Controls.CommandBarFlyout
  // Explicitly imported
  // Implements: Microsoft.UI.Xaml.Controls.ICommandBarFlyout
  // Implements: Microsoft.UI.Xaml.Controls.ICommandBarFlyout2
  // Factory: "Microsoft.UI.Xaml.Controls.ICommandBarFlyoutFactory"
  // Instantiable: "ICommandBarFlyout"
  TCommandBarFlyout = class(TWinRTGenericImportFI<ICommandBarFlyoutFactory, ICommandBarFlyout>)
  public
    // -> ICommandBarFlyoutFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): ICommandBarFlyout; static; inline;
  end;

  // Microsoft.UI.Xaml.Controls.CommandBarOverflowPresenter
  // Explicitly imported
  // Implements: Microsoft.UI.Xaml.Controls.ICommandBarOverflowPresenter
  // Factory: "Microsoft.UI.Xaml.Controls.ICommandBarOverflowPresenterFactory"
  // Instantiable: "ICommandBarOverflowPresenter"
  TCommandBarOverflowPresenter = class(TWinRTGenericImportFI<ICommandBarOverflowPresenterFactory, ICommandBarOverflowPresenter>)
  public
    // -> ICommandBarOverflowPresenterFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): ICommandBarOverflowPresenter; static; inline;
  end;

  // Microsoft.UI.Xaml.Controls.ContainerContentChangingEventArgs
  // Explicitly imported
  // Implements: Microsoft.UI.Xaml.Controls.IContainerContentChangingEventArgs
  // Instantiable: "IContainerContentChangingEventArgs"
  TContainerContentChangingEventArgs = class(TWinRTGenericImportI<IContainerContentChangingEventArgs>) end;

  // Microsoft.UI.Xaml.Controls.ContentDialog
  // Explicitly imported
  // Implements: Microsoft.UI.Xaml.Controls.IContentDialog
  // Statics: "Microsoft.UI.Xaml.Controls.IContentDialogStatics"
  // Factory: "Microsoft.UI.Xaml.Controls.IContentDialogFactory"
  // Instantiable: "IContentDialog"
  TContentDialog = class(TWinRTGenericImportFSI<IContentDialogFactory, IContentDialogStatics, IContentDialog>)
  public
    // -> IContentDialogStatics
    class function get_TitleProperty: IDependencyProperty; static; inline;
    class function get_TitleTemplateProperty: IDependencyProperty; static; inline;
    class function get_FullSizeDesiredProperty: IDependencyProperty; static; inline;
    class function get_PrimaryButtonTextProperty: IDependencyProperty; static; inline;
    class function get_SecondaryButtonTextProperty: IDependencyProperty; static; inline;
    class function get_CloseButtonTextProperty: IDependencyProperty; static; inline;
    class function get_PrimaryButtonCommandProperty: IDependencyProperty; static; inline;
    class function get_SecondaryButtonCommandProperty: IDependencyProperty; static; inline;
    class function get_CloseButtonCommandProperty: IDependencyProperty; static; inline;
    class function get_PrimaryButtonCommandParameterProperty: IDependencyProperty; static; inline;
    class function get_SecondaryButtonCommandParameterProperty: IDependencyProperty; static; inline;
    class function get_CloseButtonCommandParameterProperty: IDependencyProperty; static; inline;
    class function get_IsPrimaryButtonEnabledProperty: IDependencyProperty; static; inline;
    class function get_IsSecondaryButtonEnabledProperty: IDependencyProperty; static; inline;
    class function get_PrimaryButtonStyleProperty: IDependencyProperty; static; inline;
    class function get_SecondaryButtonStyleProperty: IDependencyProperty; static; inline;
    class function get_CloseButtonStyleProperty: IDependencyProperty; static; inline;
    class function get_DefaultButtonProperty: IDependencyProperty; static; inline;
    class property CloseButtonCommandParameterProperty: IDependencyProperty read get_CloseButtonCommandParameterProperty;
    class property CloseButtonCommandProperty: IDependencyProperty read get_CloseButtonCommandProperty;
    class property CloseButtonStyleProperty: IDependencyProperty read get_CloseButtonStyleProperty;
    class property CloseButtonTextProperty: IDependencyProperty read get_CloseButtonTextProperty;
    class property DefaultButtonProperty: IDependencyProperty read get_DefaultButtonProperty;
    class property FullSizeDesiredProperty: IDependencyProperty read get_FullSizeDesiredProperty;
    class property IsPrimaryButtonEnabledProperty: IDependencyProperty read get_IsPrimaryButtonEnabledProperty;
    class property IsSecondaryButtonEnabledProperty: IDependencyProperty read get_IsSecondaryButtonEnabledProperty;
    class property PrimaryButtonCommandParameterProperty: IDependencyProperty read get_PrimaryButtonCommandParameterProperty;
    class property PrimaryButtonCommandProperty: IDependencyProperty read get_PrimaryButtonCommandProperty;
    class property PrimaryButtonStyleProperty: IDependencyProperty read get_PrimaryButtonStyleProperty;
    class property PrimaryButtonTextProperty: IDependencyProperty read get_PrimaryButtonTextProperty;
    class property SecondaryButtonCommandParameterProperty: IDependencyProperty read get_SecondaryButtonCommandParameterProperty;
    class property SecondaryButtonCommandProperty: IDependencyProperty read get_SecondaryButtonCommandProperty;
    class property SecondaryButtonStyleProperty: IDependencyProperty read get_SecondaryButtonStyleProperty;
    class property SecondaryButtonTextProperty: IDependencyProperty read get_SecondaryButtonTextProperty;
    class property TitleProperty: IDependencyProperty read get_TitleProperty;
    class property TitleTemplateProperty: IDependencyProperty read get_TitleTemplateProperty;

    // -> IContentDialogFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IContentDialog; static; inline;
  end;

  // Microsoft.UI.Xaml.Controls.ContentPresenter
  // Explicitly imported
  // Implements: Microsoft.UI.Xaml.Controls.IContentPresenter
  // Implements: Microsoft.UI.Xaml.Controls.IContentPresenterOverrides
  // Statics: "Microsoft.UI.Xaml.Controls.IContentPresenterStatics"
  // Factory: "Microsoft.UI.Xaml.Controls.IContentPresenterFactory"
  // Instantiable: "IContentPresenter"
  TContentPresenter = class(TWinRTGenericImportFSI<IContentPresenterFactory, IContentPresenterStatics, IContentPresenter>)
  public
    // -> IContentPresenterStatics
    class function get_ContentProperty: IDependencyProperty; static; inline;
    class function get_ContentTemplateProperty: IDependencyProperty; static; inline;
    class function get_ContentTemplateSelectorProperty: IDependencyProperty; static; inline;
    class function get_ContentTransitionsProperty: IDependencyProperty; static; inline;
    class function get_FontSizeProperty: IDependencyProperty; static; inline;
    class function get_FontFamilyProperty: IDependencyProperty; static; inline;
    class function get_FontWeightProperty: IDependencyProperty; static; inline;
    class function get_FontStyleProperty: IDependencyProperty; static; inline;
    class function get_FontStretchProperty: IDependencyProperty; static; inline;
    class function get_CharacterSpacingProperty: IDependencyProperty; static; inline;
    class function get_ForegroundProperty: IDependencyProperty; static; inline;
    class function get_OpticalMarginAlignmentProperty: IDependencyProperty; static; inline;
    class function get_TextLineBoundsProperty: IDependencyProperty; static; inline;
    class function get_IsTextScaleFactorEnabledProperty: IDependencyProperty; static; inline;
    class function get_TextWrappingProperty: IDependencyProperty; static; inline;
    class function get_MaxLinesProperty: IDependencyProperty; static; inline;
    class function get_LineStackingStrategyProperty: IDependencyProperty; static; inline;
    class function get_LineHeightProperty: IDependencyProperty; static; inline;
    class function get_BorderBrushProperty: IDependencyProperty; static; inline;
    class function get_BorderThicknessProperty: IDependencyProperty; static; inline;
    class function get_CornerRadiusProperty: IDependencyProperty; static; inline;
    class function get_PaddingProperty: IDependencyProperty; static; inline;
    class function get_BackgroundProperty: IDependencyProperty; static; inline;
    class function get_BackgroundSizingProperty: IDependencyProperty; static; inline;
    class function get_HorizontalContentAlignmentProperty: IDependencyProperty; static; inline;
    class function get_VerticalContentAlignmentProperty: IDependencyProperty; static; inline;
    class property BackgroundProperty: IDependencyProperty read get_BackgroundProperty;
    class property BackgroundSizingProperty: IDependencyProperty read get_BackgroundSizingProperty;
    class property BorderBrushProperty: IDependencyProperty read get_BorderBrushProperty;
    class property BorderThicknessProperty: IDependencyProperty read get_BorderThicknessProperty;
    class property CharacterSpacingProperty: IDependencyProperty read get_CharacterSpacingProperty;
    class property ContentProperty: IDependencyProperty read get_ContentProperty;
    class property ContentTemplateProperty: IDependencyProperty read get_ContentTemplateProperty;
    class property ContentTemplateSelectorProperty: IDependencyProperty read get_ContentTemplateSelectorProperty;
    class property ContentTransitionsProperty: IDependencyProperty read get_ContentTransitionsProperty;
    class property CornerRadiusProperty: IDependencyProperty read get_CornerRadiusProperty;
    class property FontFamilyProperty: IDependencyProperty read get_FontFamilyProperty;
    class property FontSizeProperty: IDependencyProperty read get_FontSizeProperty;
    class property FontStretchProperty: IDependencyProperty read get_FontStretchProperty;
    class property FontStyleProperty: IDependencyProperty read get_FontStyleProperty;
    class property FontWeightProperty: IDependencyProperty read get_FontWeightProperty;
    class property ForegroundProperty: IDependencyProperty read get_ForegroundProperty;
    class property HorizontalContentAlignmentProperty: IDependencyProperty read get_HorizontalContentAlignmentProperty;
    class property IsTextScaleFactorEnabledProperty: IDependencyProperty read get_IsTextScaleFactorEnabledProperty;
    class property LineHeightProperty: IDependencyProperty read get_LineHeightProperty;
    class property LineStackingStrategyProperty: IDependencyProperty read get_LineStackingStrategyProperty;
    class property MaxLinesProperty: IDependencyProperty read get_MaxLinesProperty;
    class property OpticalMarginAlignmentProperty: IDependencyProperty read get_OpticalMarginAlignmentProperty;
    class property PaddingProperty: IDependencyProperty read get_PaddingProperty;
    class property TextLineBoundsProperty: IDependencyProperty read get_TextLineBoundsProperty;
    class property TextWrappingProperty: IDependencyProperty read get_TextWrappingProperty;
    class property VerticalContentAlignmentProperty: IDependencyProperty read get_VerticalContentAlignmentProperty;

    // -> IContentPresenterFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IContentPresenter; static; inline;
  end;

  // Microsoft.UI.Xaml.Controls.ControlTemplate
  // Explicitly imported
  // Implements: Microsoft.UI.Xaml.Controls.IControlTemplate
  // Instantiable: "IControlTemplate"
  TControlTemplate = class(TWinRTGenericImportI<IControlTemplate>) end;

  // Microsoft.UI.Xaml.Controls.DataTemplateSelector
  // Explicitly imported
  // Implements: Microsoft.UI.Xaml.Controls.IDataTemplateSelector
  // Implements: Microsoft.UI.Xaml.Controls.IDataTemplateSelectorOverrides
  // Implements: Microsoft.UI.Xaml.IElementFactory
  // Factory: "Microsoft.UI.Xaml.Controls.IDataTemplateSelectorFactory"
  // Instantiable: "IDataTemplateSelector"
  TDataTemplateSelector = class(TWinRTGenericImportFI<IDataTemplateSelectorFactory, IDataTemplateSelector>)
  public
    // -> IDataTemplateSelectorFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IDataTemplateSelector; static; inline;
  end;

  // Microsoft.UI.Xaml.Controls.DatePickedEventArgs
  // Explicitly imported
  // Implements: Microsoft.UI.Xaml.Controls.IDatePickedEventArgs
  // Instantiable: "IDatePickedEventArgs"
  TDatePickedEventArgs = class(TWinRTGenericImportI<IDatePickedEventArgs>) end;

  // Microsoft.UI.Xaml.Controls.DatePicker
  // Explicitly imported
  // Implements: Microsoft.UI.Xaml.Controls.IDatePicker
  // Statics: "Microsoft.UI.Xaml.Controls.IDatePickerStatics"
  // Factory: "Microsoft.UI.Xaml.Controls.IDatePickerFactory"
  // Instantiable: "IDatePicker"
  TDatePicker = class(TWinRTGenericImportFSI<IDatePickerFactory, IDatePickerStatics, IDatePicker>)
  public
    // -> IDatePickerStatics
    class function get_HeaderProperty: IDependencyProperty; static; inline;
    class function get_HeaderTemplateProperty: IDependencyProperty; static; inline;
    class function get_CalendarIdentifierProperty: IDependencyProperty; static; inline;
    class function get_DateProperty: IDependencyProperty; static; inline;
    class function get_DayVisibleProperty: IDependencyProperty; static; inline;
    class function get_MonthVisibleProperty: IDependencyProperty; static; inline;
    class function get_YearVisibleProperty: IDependencyProperty; static; inline;
    class function get_DayFormatProperty: IDependencyProperty; static; inline;
    class function get_MonthFormatProperty: IDependencyProperty; static; inline;
    class function get_YearFormatProperty: IDependencyProperty; static; inline;
    class function get_MinYearProperty: IDependencyProperty; static; inline;
    class function get_MaxYearProperty: IDependencyProperty; static; inline;
    class function get_OrientationProperty: IDependencyProperty; static; inline;
    class function get_LightDismissOverlayModeProperty: IDependencyProperty; static; inline;
    class function get_SelectedDateProperty: IDependencyProperty; static; inline;
    class property CalendarIdentifierProperty: IDependencyProperty read get_CalendarIdentifierProperty;
    class property DateProperty: IDependencyProperty read get_DateProperty;
    class property DayFormatProperty: IDependencyProperty read get_DayFormatProperty;
    class property DayVisibleProperty: IDependencyProperty read get_DayVisibleProperty;
    class property HeaderProperty: IDependencyProperty read get_HeaderProperty;
    class property HeaderTemplateProperty: IDependencyProperty read get_HeaderTemplateProperty;
    class property LightDismissOverlayModeProperty: IDependencyProperty read get_LightDismissOverlayModeProperty;
    class property MaxYearProperty: IDependencyProperty read get_MaxYearProperty;
    class property MinYearProperty: IDependencyProperty read get_MinYearProperty;
    class property MonthFormatProperty: IDependencyProperty read get_MonthFormatProperty;
    class property MonthVisibleProperty: IDependencyProperty read get_MonthVisibleProperty;
    class property OrientationProperty: IDependencyProperty read get_OrientationProperty;
    class property SelectedDateProperty: IDependencyProperty read get_SelectedDateProperty;
    class property YearFormatProperty: IDependencyProperty read get_YearFormatProperty;
    class property YearVisibleProperty: IDependencyProperty read get_YearVisibleProperty;

    // -> IDatePickerFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IDatePicker; static; inline;
  end;

  // Microsoft.UI.Xaml.Controls.Primitives.PickerFlyoutBase
  // Explicitly imported
  // Implements: Microsoft.UI.Xaml.Controls.Primitives.IPickerFlyoutBase
  // Implements: Microsoft.UI.Xaml.Controls.Primitives.IPickerFlyoutBaseOverrides
  // Statics: "Microsoft.UI.Xaml.Controls.Primitives.IPickerFlyoutBaseStatics"
  // Factory: "Microsoft.UI.Xaml.Controls.Primitives.IPickerFlyoutBaseFactory"
  // Instantiable: "Primitives_IPickerFlyoutBase"
  TPrimitives_PickerFlyoutBase = class(TWinRTGenericImportFSI<Primitives_IPickerFlyoutBaseFactory, Primitives_IPickerFlyoutBaseStatics, Primitives_IPickerFlyoutBase>)
  public
    // -> Primitives_IPickerFlyoutBaseStatics
    class function get_TitleProperty: IDependencyProperty; static; inline;
    class function GetTitle(element: IDependencyObject): HSTRING; static; inline;
    class procedure SetTitle(element: IDependencyObject; value: HSTRING); static; inline;
    class property TitleProperty: IDependencyProperty read get_TitleProperty;

    // -> Primitives_IPickerFlyoutBaseFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): Primitives_IPickerFlyoutBase; static; inline;
  end;

  // Microsoft.UI.Xaml.Controls.DatePickerFlyout
  // Explicitly imported
  // Implements: Microsoft.UI.Xaml.Controls.IDatePickerFlyout
  // Statics: "Microsoft.UI.Xaml.Controls.IDatePickerFlyoutStatics"
  // Instantiable: "IDatePickerFlyout"
  TDatePickerFlyout = class(TWinRTGenericImportSI<IDatePickerFlyoutStatics, IDatePickerFlyout>)
  public
    // -> IDatePickerFlyoutStatics
    class function get_CalendarIdentifierProperty: IDependencyProperty; static; inline;
    class function get_DateProperty: IDependencyProperty; static; inline;
    class function get_DayVisibleProperty: IDependencyProperty; static; inline;
    class function get_MonthVisibleProperty: IDependencyProperty; static; inline;
    class function get_YearVisibleProperty: IDependencyProperty; static; inline;
    class function get_MinYearProperty: IDependencyProperty; static; inline;
    class function get_MaxYearProperty: IDependencyProperty; static; inline;
    class function get_DayFormatProperty: IDependencyProperty; static; inline;
    class function get_MonthFormatProperty: IDependencyProperty; static; inline;
    class function get_YearFormatProperty: IDependencyProperty; static; inline;
    class property CalendarIdentifierProperty: IDependencyProperty read get_CalendarIdentifierProperty;
    class property DateProperty: IDependencyProperty read get_DateProperty;
    class property DayFormatProperty: IDependencyProperty read get_DayFormatProperty;
    class property DayVisibleProperty: IDependencyProperty read get_DayVisibleProperty;
    class property MaxYearProperty: IDependencyProperty read get_MaxYearProperty;
    class property MinYearProperty: IDependencyProperty read get_MinYearProperty;
    class property MonthFormatProperty: IDependencyProperty read get_MonthFormatProperty;
    class property MonthVisibleProperty: IDependencyProperty read get_MonthVisibleProperty;
    class property YearFormatProperty: IDependencyProperty read get_YearFormatProperty;
    class property YearVisibleProperty: IDependencyProperty read get_YearVisibleProperty;
  end;

  // Microsoft.UI.Xaml.Controls.DatePickerFlyoutItem
  // Explicitly imported
  // Implements: Microsoft.UI.Xaml.Controls.IDatePickerFlyoutItem
  // Implements: Microsoft.UI.Xaml.Data.ICustomPropertyProvider
  // Statics: "Microsoft.UI.Xaml.Controls.IDatePickerFlyoutItemStatics"
  TDatePickerFlyoutItem = class(TWinRTGenericImportS<IDatePickerFlyoutItemStatics>)
  public
    // -> IDatePickerFlyoutItemStatics
    class function get_PrimaryTextProperty: IDependencyProperty; static; inline;
    class function get_SecondaryTextProperty: IDependencyProperty; static; inline;
    class property PrimaryTextProperty: IDependencyProperty read get_PrimaryTextProperty;
    class property SecondaryTextProperty: IDependencyProperty read get_SecondaryTextProperty;
  end;

  // Microsoft.UI.Xaml.Controls.DatePickerFlyoutPresenter
  // Explicitly imported
  // Implements: Microsoft.UI.Xaml.Controls.IDatePickerFlyoutPresenter
  // Statics: "Microsoft.UI.Xaml.Controls.IDatePickerFlyoutPresenterStatics"
  TDatePickerFlyoutPresenter = class(TWinRTGenericImportS<IDatePickerFlyoutPresenterStatics>)
  public
    // -> IDatePickerFlyoutPresenterStatics
    class function get_IsDefaultShadowEnabledProperty: IDependencyProperty; static; inline;
    class property IsDefaultShadowEnabledProperty: IDependencyProperty read get_IsDefaultShadowEnabledProperty;
  end;

  // Microsoft.UI.Xaml.Controls.DragItemsStartingEventArgs
  // Explicitly imported
  // Implements: Microsoft.UI.Xaml.Controls.IDragItemsStartingEventArgs
  // Instantiable: "IDragItemsStartingEventArgs"
  TDragItemsStartingEventArgs = class(TWinRTGenericImportI<IDragItemsStartingEventArgs>) end;

  // Microsoft.UI.Xaml.Controls.DropDownButton
  // Explicitly imported
  // Implements: Microsoft.UI.Xaml.Controls.IDropDownButton
  // Factory: "Microsoft.UI.Xaml.Controls.IDropDownButtonFactory"
  // Instantiable: "IDropDownButton"
  TDropDownButton = class(TWinRTGenericImportFI<IDropDownButtonFactory, IDropDownButton>)
  public
    // -> IDropDownButtonFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IDropDownButton; static; inline;
  end;

  // Microsoft.UI.Xaml.Controls.DynamicOverflowItemsChangingEventArgs
  // Explicitly imported
  // Implements: Microsoft.UI.Xaml.Controls.IDynamicOverflowItemsChangingEventArgs
  // Instantiable: "IDynamicOverflowItemsChangingEventArgs"
  TDynamicOverflowItemsChangingEventArgs = class(TWinRTGenericImportI<IDynamicOverflowItemsChangingEventArgs>) end;

  // Microsoft.UI.Xaml.Controls.Expander
  // Explicitly imported
  // Implements: Microsoft.UI.Xaml.Controls.IExpander
  // Statics: "Microsoft.UI.Xaml.Controls.IExpanderStatics"
  // Factory: "Microsoft.UI.Xaml.Controls.IExpanderFactory"
  // Instantiable: "IExpander"
  TExpander = class(TWinRTGenericImportFSI<IExpanderFactory, IExpanderStatics, IExpander>)
  public
    // -> IExpanderStatics
    class function get_HeaderProperty: IDependencyProperty; static; inline;
    class function get_HeaderTemplateProperty: IDependencyProperty; static; inline;
    class function get_HeaderTemplateSelectorProperty: IDependencyProperty; static; inline;
    class function get_IsExpandedProperty: IDependencyProperty; static; inline;
    class function get_ExpandDirectionProperty: IDependencyProperty; static; inline;
    class property ExpandDirectionProperty: IDependencyProperty read get_ExpandDirectionProperty;
    class property HeaderProperty: IDependencyProperty read get_HeaderProperty;
    class property HeaderTemplateProperty: IDependencyProperty read get_HeaderTemplateProperty;
    class property HeaderTemplateSelectorProperty: IDependencyProperty read get_HeaderTemplateSelectorProperty;
    class property IsExpandedProperty: IDependencyProperty read get_IsExpandedProperty;

    // -> IExpanderFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IExpander; static; inline;
  end;

  // Microsoft.UI.Xaml.Controls.FlipView
  // Explicitly imported
  // Implements: Microsoft.UI.Xaml.Controls.IFlipView
  // Statics: "Microsoft.UI.Xaml.Controls.IFlipViewStatics"
  // Factory: "Microsoft.UI.Xaml.Controls.IFlipViewFactory"
  // Instantiable: "IFlipView"
  TFlipView = class(TWinRTGenericImportFSI<IFlipViewFactory, IFlipViewStatics, IFlipView>)
  public
    // -> IFlipViewStatics
    class function get_UseTouchAnimationsForAllNavigationProperty: IDependencyProperty; static; inline;
    class property UseTouchAnimationsForAllNavigationProperty: IDependencyProperty read get_UseTouchAnimationsForAllNavigationProperty;

    // -> IFlipViewFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IFlipView; static; inline;
  end;

  // Microsoft.UI.Xaml.Controls.FlipViewItem
  // Explicitly imported
  // Implements: Microsoft.UI.Xaml.Controls.IFlipViewItem
  // Factory: "Microsoft.UI.Xaml.Controls.IFlipViewItemFactory"
  // Instantiable: "IFlipViewItem"
  TFlipViewItem = class(TWinRTGenericImportFI<IFlipViewItemFactory, IFlipViewItem>)
  public
    // -> IFlipViewItemFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IFlipViewItem; static; inline;
  end;

  // Microsoft.UI.Xaml.Controls.Flyout
  // Explicitly imported
  // Implements: Microsoft.UI.Xaml.Controls.IFlyout
  // Statics: "Microsoft.UI.Xaml.Controls.IFlyoutStatics"
  // Factory: "Microsoft.UI.Xaml.Controls.IFlyoutFactory"
  // Instantiable: "IFlyout"
  TFlyout = class(TWinRTGenericImportFSI<IFlyoutFactory, IFlyoutStatics, IFlyout>)
  public
    // -> IFlyoutStatics
    class function get_ContentProperty: IDependencyProperty; static; inline;
    class function get_FlyoutPresenterStyleProperty: IDependencyProperty; static; inline;
    class property ContentProperty: IDependencyProperty read get_ContentProperty;
    class property FlyoutPresenterStyleProperty: IDependencyProperty read get_FlyoutPresenterStyleProperty;

    // -> IFlyoutFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IFlyout; static; inline;
  end;

  // Microsoft.UI.Xaml.Controls.FlyoutPresenter
  // Explicitly imported
  // Implements: Microsoft.UI.Xaml.Controls.IFlyoutPresenter
  // Statics: "Microsoft.UI.Xaml.Controls.IFlyoutPresenterStatics"
  // Factory: "Microsoft.UI.Xaml.Controls.IFlyoutPresenterFactory"
  // Instantiable: "IFlyoutPresenter"
  TFlyoutPresenter = class(TWinRTGenericImportFSI<IFlyoutPresenterFactory, IFlyoutPresenterStatics, IFlyoutPresenter>)
  public
    // -> IFlyoutPresenterStatics
    class function get_IsDefaultShadowEnabledProperty: IDependencyProperty; static; inline;
    class property IsDefaultShadowEnabledProperty: IDependencyProperty read get_IsDefaultShadowEnabledProperty;

    // -> IFlyoutPresenterFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IFlyoutPresenter; static; inline;
  end;

  // Microsoft.UI.Xaml.Controls.FontIcon
  // Explicitly imported
  // Implements: Microsoft.UI.Xaml.Controls.IFontIcon
  // Statics: "Microsoft.UI.Xaml.Controls.IFontIconStatics"
  // Factory: "Microsoft.UI.Xaml.Controls.IFontIconFactory"
  // Instantiable: "IFontIcon"
  TFontIcon = class(TWinRTGenericImportFSI<IFontIconFactory, IFontIconStatics, IFontIcon>)
  public
    // -> IFontIconStatics
    class function get_GlyphProperty: IDependencyProperty; static; inline;
    class function get_FontSizeProperty: IDependencyProperty; static; inline;
    class function get_FontFamilyProperty: IDependencyProperty; static; inline;
    class function get_FontWeightProperty: IDependencyProperty; static; inline;
    class function get_FontStyleProperty: IDependencyProperty; static; inline;
    class function get_IsTextScaleFactorEnabledProperty: IDependencyProperty; static; inline;
    class function get_MirroredWhenRightToLeftProperty: IDependencyProperty; static; inline;
    class property FontFamilyProperty: IDependencyProperty read get_FontFamilyProperty;
    class property FontSizeProperty: IDependencyProperty read get_FontSizeProperty;
    class property FontStyleProperty: IDependencyProperty read get_FontStyleProperty;
    class property FontWeightProperty: IDependencyProperty read get_FontWeightProperty;
    class property GlyphProperty: IDependencyProperty read get_GlyphProperty;
    class property IsTextScaleFactorEnabledProperty: IDependencyProperty read get_IsTextScaleFactorEnabledProperty;
    class property MirroredWhenRightToLeftProperty: IDependencyProperty read get_MirroredWhenRightToLeftProperty;

    // -> IFontIconFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IFontIcon; static; inline;
  end;

  // Microsoft.UI.Xaml.Controls.FontIconSource
  // Explicitly imported
  // Implements: Microsoft.UI.Xaml.Controls.IFontIconSource
  // Statics: "Microsoft.UI.Xaml.Controls.IFontIconSourceStatics"
  // Factory: "Microsoft.UI.Xaml.Controls.IFontIconSourceFactory"
  // Instantiable: "IFontIconSource"
  TFontIconSource = class(TWinRTGenericImportFSI<IFontIconSourceFactory, IFontIconSourceStatics, IFontIconSource>)
  public
    // -> IFontIconSourceStatics
    class function get_GlyphProperty: IDependencyProperty; static; inline;
    class function get_FontSizeProperty: IDependencyProperty; static; inline;
    class function get_FontFamilyProperty: IDependencyProperty; static; inline;
    class function get_FontWeightProperty: IDependencyProperty; static; inline;
    class function get_FontStyleProperty: IDependencyProperty; static; inline;
    class function get_IsTextScaleFactorEnabledProperty: IDependencyProperty; static; inline;
    class function get_MirroredWhenRightToLeftProperty: IDependencyProperty; static; inline;
    class property FontFamilyProperty: IDependencyProperty read get_FontFamilyProperty;
    class property FontSizeProperty: IDependencyProperty read get_FontSizeProperty;
    class property FontStyleProperty: IDependencyProperty read get_FontStyleProperty;
    class property FontWeightProperty: IDependencyProperty read get_FontWeightProperty;
    class property GlyphProperty: IDependencyProperty read get_GlyphProperty;
    class property IsTextScaleFactorEnabledProperty: IDependencyProperty read get_IsTextScaleFactorEnabledProperty;
    class property MirroredWhenRightToLeftProperty: IDependencyProperty read get_MirroredWhenRightToLeftProperty;

    // -> IFontIconSourceFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IFontIconSource; static; inline;
  end;

  // Microsoft.UI.Xaml.Controls.Frame
  // Explicitly imported
  // Implements: Microsoft.UI.Xaml.Controls.IFrame
  // Implements: Microsoft.UI.Xaml.Controls.INavigate
  // Statics: "Microsoft.UI.Xaml.Controls.IFrameStatics"
  // Factory: "Microsoft.UI.Xaml.Controls.IFrameFactory"
  // Instantiable: "IFrame"
  TFrame = class(TWinRTGenericImportFSI<IFrameFactory, IFrameStatics, IFrame>)
  public
    // -> IFrameStatics
    class function get_CacheSizeProperty: IDependencyProperty; static; inline;
    class function get_CanGoBackProperty: IDependencyProperty; static; inline;
    class function get_CanGoForwardProperty: IDependencyProperty; static; inline;
    class function get_CurrentSourcePageTypeProperty: IDependencyProperty; static; inline;
    class function get_SourcePageTypeProperty: IDependencyProperty; static; inline;
    class function get_BackStackDepthProperty: IDependencyProperty; static; inline;
    class function get_BackStackProperty: IDependencyProperty; static; inline;
    class function get_ForwardStackProperty: IDependencyProperty; static; inline;
    class function get_IsNavigationStackEnabledProperty: IDependencyProperty; static; inline;
    class property BackStackDepthProperty: IDependencyProperty read get_BackStackDepthProperty;
    class property BackStackProperty: IDependencyProperty read get_BackStackProperty;
    class property CacheSizeProperty: IDependencyProperty read get_CacheSizeProperty;
    class property CanGoBackProperty: IDependencyProperty read get_CanGoBackProperty;
    class property CanGoForwardProperty: IDependencyProperty read get_CanGoForwardProperty;
    class property CurrentSourcePageTypeProperty: IDependencyProperty read get_CurrentSourcePageTypeProperty;
    class property ForwardStackProperty: IDependencyProperty read get_ForwardStackProperty;
    class property IsNavigationStackEnabledProperty: IDependencyProperty read get_IsNavigationStackEnabledProperty;
    class property SourcePageTypeProperty: IDependencyProperty read get_SourcePageTypeProperty;

    // -> IFrameFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IFrame; static; inline;
  end;

  // Microsoft.UI.Xaml.Controls.Grid
  // Explicitly imported
  // Implements: Microsoft.UI.Xaml.Controls.IGrid
  // Statics: "Microsoft.UI.Xaml.Controls.IGridStatics"
  // Factory: "Microsoft.UI.Xaml.Controls.IGridFactory"
  // Instantiable: "IGrid"
  TGrid = class(TWinRTGenericImportFSI<IGridFactory, IGridStatics, IGrid>)
  public
    // -> IGridStatics
    class function get_BackgroundSizingProperty: IDependencyProperty; static; inline;
    class function get_BorderBrushProperty: IDependencyProperty; static; inline;
    class function get_BorderThicknessProperty: IDependencyProperty; static; inline;
    class function get_CornerRadiusProperty: IDependencyProperty; static; inline;
    class function get_PaddingProperty: IDependencyProperty; static; inline;
    class function get_RowSpacingProperty: IDependencyProperty; static; inline;
    class function get_ColumnSpacingProperty: IDependencyProperty; static; inline;
    class function get_RowProperty: IDependencyProperty; static; inline;
    class function GetRow(element: IFrameworkElement): Integer; static; inline;
    class procedure SetRow(element: IFrameworkElement; value: Integer); static; inline;
    class function get_ColumnProperty: IDependencyProperty; static; inline;
    class function GetColumn(element: IFrameworkElement): Integer; static; inline;
    class procedure SetColumn(element: IFrameworkElement; value: Integer); static; inline;
    class function get_RowSpanProperty: IDependencyProperty; static; inline;
    class function GetRowSpan(element: IFrameworkElement): Integer; static; inline;
    class procedure SetRowSpan(element: IFrameworkElement; value: Integer); static; inline;
    class function get_ColumnSpanProperty: IDependencyProperty; static; inline;
    class function GetColumnSpan(element: IFrameworkElement): Integer; static; inline;
    class procedure SetColumnSpan(element: IFrameworkElement; value: Integer); static; inline;
    class property BackgroundSizingProperty: IDependencyProperty read get_BackgroundSizingProperty;
    class property BorderBrushProperty: IDependencyProperty read get_BorderBrushProperty;
    class property BorderThicknessProperty: IDependencyProperty read get_BorderThicknessProperty;
    class property ColumnProperty: IDependencyProperty read get_ColumnProperty;
    class property ColumnSpacingProperty: IDependencyProperty read get_ColumnSpacingProperty;
    class property ColumnSpanProperty: IDependencyProperty read get_ColumnSpanProperty;
    class property CornerRadiusProperty: IDependencyProperty read get_CornerRadiusProperty;
    class property PaddingProperty: IDependencyProperty read get_PaddingProperty;
    class property RowProperty: IDependencyProperty read get_RowProperty;
    class property RowSpacingProperty: IDependencyProperty read get_RowSpacingProperty;
    class property RowSpanProperty: IDependencyProperty read get_RowSpanProperty;

    // -> IGridFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IGrid; static; inline;
  end;

  // Microsoft.UI.Xaml.Controls.ListViewBase
  // Explicitly imported
  // Implements: Microsoft.UI.Xaml.Controls.IListViewBase
  // Implements: Microsoft.UI.Xaml.Controls.ISemanticZoomInformation
  // Statics: "Microsoft.UI.Xaml.Controls.IListViewBaseStatics"
  // Factory: "Microsoft.UI.Xaml.Controls.IListViewBaseFactory"
  // Instantiable: "IListViewBase"
  TListViewBase = class(TWinRTGenericImportFSI<IListViewBaseFactory, IListViewBaseStatics, IListViewBase>)
  public
    // -> IListViewBaseStatics
    class function get_SelectionModeProperty: IDependencyProperty; static; inline;
    class function get_IsSwipeEnabledProperty: IDependencyProperty; static; inline;
    class function get_CanDragItemsProperty: IDependencyProperty; static; inline;
    class function get_CanReorderItemsProperty: IDependencyProperty; static; inline;
    class function get_IsItemClickEnabledProperty: IDependencyProperty; static; inline;
    class function get_DataFetchSizeProperty: IDependencyProperty; static; inline;
    class function get_IncrementalLoadingThresholdProperty: IDependencyProperty; static; inline;
    class function get_IncrementalLoadingTriggerProperty: IDependencyProperty; static; inline;
    class function get_ShowsScrollingPlaceholdersProperty: IDependencyProperty; static; inline;
    class function get_ReorderModeProperty: IDependencyProperty; static; inline;
    class function get_IsMultiSelectCheckBoxEnabledProperty: IDependencyProperty; static; inline;
    class function get_SingleSelectionFollowsFocusProperty: IDependencyProperty; static; inline;
    class function get_SemanticZoomOwnerProperty: IDependencyProperty; static; inline;
    class function get_IsActiveViewProperty: IDependencyProperty; static; inline;
    class function get_IsZoomedInViewProperty: IDependencyProperty; static; inline;
    class function get_HeaderProperty: IDependencyProperty; static; inline;
    class function get_HeaderTemplateProperty: IDependencyProperty; static; inline;
    class function get_HeaderTransitionsProperty: IDependencyProperty; static; inline;
    class function get_FooterProperty: IDependencyProperty; static; inline;
    class function get_FooterTemplateProperty: IDependencyProperty; static; inline;
    class function get_FooterTransitionsProperty: IDependencyProperty; static; inline;
    class property CanDragItemsProperty: IDependencyProperty read get_CanDragItemsProperty;
    class property CanReorderItemsProperty: IDependencyProperty read get_CanReorderItemsProperty;
    class property DataFetchSizeProperty: IDependencyProperty read get_DataFetchSizeProperty;
    class property FooterProperty: IDependencyProperty read get_FooterProperty;
    class property FooterTemplateProperty: IDependencyProperty read get_FooterTemplateProperty;
    class property FooterTransitionsProperty: IDependencyProperty read get_FooterTransitionsProperty;
    class property HeaderProperty: IDependencyProperty read get_HeaderProperty;
    class property HeaderTemplateProperty: IDependencyProperty read get_HeaderTemplateProperty;
    class property HeaderTransitionsProperty: IDependencyProperty read get_HeaderTransitionsProperty;
    class property IncrementalLoadingThresholdProperty: IDependencyProperty read get_IncrementalLoadingThresholdProperty;
    class property IncrementalLoadingTriggerProperty: IDependencyProperty read get_IncrementalLoadingTriggerProperty;
    class property IsActiveViewProperty: IDependencyProperty read get_IsActiveViewProperty;
    class property IsItemClickEnabledProperty: IDependencyProperty read get_IsItemClickEnabledProperty;
    class property IsMultiSelectCheckBoxEnabledProperty: IDependencyProperty read get_IsMultiSelectCheckBoxEnabledProperty;
    class property IsSwipeEnabledProperty: IDependencyProperty read get_IsSwipeEnabledProperty;
    class property IsZoomedInViewProperty: IDependencyProperty read get_IsZoomedInViewProperty;
    class property ReorderModeProperty: IDependencyProperty read get_ReorderModeProperty;
    class property SelectionModeProperty: IDependencyProperty read get_SelectionModeProperty;
    class property SemanticZoomOwnerProperty: IDependencyProperty read get_SemanticZoomOwnerProperty;
    class property ShowsScrollingPlaceholdersProperty: IDependencyProperty read get_ShowsScrollingPlaceholdersProperty;
    class property SingleSelectionFollowsFocusProperty: IDependencyProperty read get_SingleSelectionFollowsFocusProperty;

    // -> IListViewBaseFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IListViewBase; static; inline;
  end;

  // Microsoft.UI.Xaml.Controls.GridView
  // Explicitly imported
  // Implements: Microsoft.UI.Xaml.Controls.IGridView
  // Factory: "Microsoft.UI.Xaml.Controls.IGridViewFactory"
  // Instantiable: "IGridView"
  TGridView = class(TWinRTGenericImportFI<IGridViewFactory, IGridView>)
  public
    // -> IGridViewFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IGridView; static; inline;
  end;

  // Microsoft.UI.Xaml.Controls.ListViewBaseHeaderItem
  // Explicitly imported
  // Implements: Microsoft.UI.Xaml.Controls.IListViewBaseHeaderItem
  // Factory: "Microsoft.UI.Xaml.Controls.IListViewBaseHeaderItemFactory"
  // Instantiable: "IListViewBaseHeaderItem"
  TListViewBaseHeaderItem = class(TWinRTGenericImportFI<IListViewBaseHeaderItemFactory, IListViewBaseHeaderItem>)
  public
    // -> IListViewBaseHeaderItemFactory
  end;

  // Microsoft.UI.Xaml.Controls.GridViewHeaderItem
  // Explicitly imported
  // Implements: Microsoft.UI.Xaml.Controls.IGridViewHeaderItem
  // Factory: "Microsoft.UI.Xaml.Controls.IGridViewHeaderItemFactory"
  // Instantiable: "IGridViewHeaderItem"
  TGridViewHeaderItem = class(TWinRTGenericImportFI<IGridViewHeaderItemFactory, IGridViewHeaderItem>)
  public
    // -> IGridViewHeaderItemFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IGridViewHeaderItem; static; inline;
  end;

  // Microsoft.UI.Xaml.Controls.GridViewItem
  // Explicitly imported
  // Implements: Microsoft.UI.Xaml.Controls.IGridViewItem
  // Factory: "Microsoft.UI.Xaml.Controls.IGridViewItemFactory"
  // Instantiable: "IGridViewItem"
  TGridViewItem = class(TWinRTGenericImportFI<IGridViewItemFactory, IGridViewItem>)
  public
    // -> IGridViewItemFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IGridViewItem; static; inline;
  end;

  // Microsoft.UI.Xaml.Controls.GroupItem
  // Explicitly imported
  // Implements: Microsoft.UI.Xaml.Controls.IGroupItem
  // Factory: "Microsoft.UI.Xaml.Controls.IGroupItemFactory"
  // Instantiable: "IGroupItem"
  TGroupItem = class(TWinRTGenericImportFI<IGroupItemFactory, IGroupItem>)
  public
    // -> IGroupItemFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IGroupItem; static; inline;
  end;

  // Microsoft.UI.Xaml.Controls.GroupStyle
  // Explicitly imported
  // Implements: Microsoft.UI.Xaml.Controls.IGroupStyle
  // Implements: Microsoft.UI.Xaml.Data.INotifyPropertyChanged
  // Factory: "Microsoft.UI.Xaml.Controls.IGroupStyleFactory"
  // Instantiable: "IGroupStyle"
  TGroupStyle = class(TWinRTGenericImportFI<IGroupStyleFactory, IGroupStyle>)
  public
    // -> IGroupStyleFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IGroupStyle; static; inline;
  end;

  // Microsoft.UI.Xaml.Controls.GroupStyleSelector
  // Explicitly imported
  // Implements: Microsoft.UI.Xaml.Controls.IGroupStyleSelector
  // Implements: Microsoft.UI.Xaml.Controls.IGroupStyleSelectorOverrides
  // Factory: "Microsoft.UI.Xaml.Controls.IGroupStyleSelectorFactory"
  // Instantiable: "IGroupStyleSelector"
  TGroupStyleSelector = class(TWinRTGenericImportFI<IGroupStyleSelectorFactory, IGroupStyleSelector>)
  public
    // -> IGroupStyleSelectorFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IGroupStyleSelector; static; inline;
  end;

  // Microsoft.UI.Xaml.Controls.Hub
  // Explicitly imported
  // Implements: Microsoft.UI.Xaml.Controls.IHub
  // Implements: Microsoft.UI.Xaml.Controls.ISemanticZoomInformation
  // Statics: "Microsoft.UI.Xaml.Controls.IHubStatics"
  // Factory: "Microsoft.UI.Xaml.Controls.IHubFactory"
  // Instantiable: "IHub"
  THub = class(TWinRTGenericImportFSI<IHubFactory, IHubStatics, IHub>)
  public
    // -> IHubStatics
    class function get_HeaderProperty: IDependencyProperty; static; inline;
    class function get_HeaderTemplateProperty: IDependencyProperty; static; inline;
    class function get_OrientationProperty: IDependencyProperty; static; inline;
    class function get_DefaultSectionIndexProperty: IDependencyProperty; static; inline;
    class function get_SemanticZoomOwnerProperty: IDependencyProperty; static; inline;
    class function get_IsActiveViewProperty: IDependencyProperty; static; inline;
    class function get_IsZoomedInViewProperty: IDependencyProperty; static; inline;
    class property DefaultSectionIndexProperty: IDependencyProperty read get_DefaultSectionIndexProperty;
    class property HeaderProperty: IDependencyProperty read get_HeaderProperty;
    class property HeaderTemplateProperty: IDependencyProperty read get_HeaderTemplateProperty;
    class property IsActiveViewProperty: IDependencyProperty read get_IsActiveViewProperty;
    class property IsZoomedInViewProperty: IDependencyProperty read get_IsZoomedInViewProperty;
    class property OrientationProperty: IDependencyProperty read get_OrientationProperty;
    class property SemanticZoomOwnerProperty: IDependencyProperty read get_SemanticZoomOwnerProperty;

    // -> IHubFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IHub; static; inline;
  end;

  // Microsoft.UI.Xaml.Controls.HubSection
  // Explicitly imported
  // Implements: Microsoft.UI.Xaml.Controls.IHubSection
  // Statics: "Microsoft.UI.Xaml.Controls.IHubSectionStatics"
  // Factory: "Microsoft.UI.Xaml.Controls.IHubSectionFactory"
  // Instantiable: "IHubSection"
  THubSection = class(TWinRTGenericImportFSI<IHubSectionFactory, IHubSectionStatics, IHubSection>)
  public
    // -> IHubSectionStatics
    class function get_HeaderProperty: IDependencyProperty; static; inline;
    class function get_HeaderTemplateProperty: IDependencyProperty; static; inline;
    class function get_ContentTemplateProperty: IDependencyProperty; static; inline;
    class function get_IsHeaderInteractiveProperty: IDependencyProperty; static; inline;
    class property ContentTemplateProperty: IDependencyProperty read get_ContentTemplateProperty;
    class property HeaderProperty: IDependencyProperty read get_HeaderProperty;
    class property HeaderTemplateProperty: IDependencyProperty read get_HeaderTemplateProperty;
    class property IsHeaderInteractiveProperty: IDependencyProperty read get_IsHeaderInteractiveProperty;

    // -> IHubSectionFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IHubSection; static; inline;
  end;

  // Microsoft.UI.Xaml.Controls.HubSectionHeaderClickEventArgs
  // Explicitly imported
  // Implements: Microsoft.UI.Xaml.Controls.IHubSectionHeaderClickEventArgs
  // Instantiable: "IHubSectionHeaderClickEventArgs"
  THubSectionHeaderClickEventArgs = class(TWinRTGenericImportI<IHubSectionHeaderClickEventArgs>) end;

  // Microsoft.UI.Xaml.Controls.HyperlinkButton
  // Explicitly imported
  // Implements: Microsoft.UI.Xaml.Controls.IHyperlinkButton
  // Statics: "Microsoft.UI.Xaml.Controls.IHyperlinkButtonStatics"
  // Factory: "Microsoft.UI.Xaml.Controls.IHyperlinkButtonFactory"
  // Instantiable: "IHyperlinkButton"
  THyperlinkButton = class(TWinRTGenericImportFSI<IHyperlinkButtonFactory, IHyperlinkButtonStatics, IHyperlinkButton>)
  public
    // -> IHyperlinkButtonStatics
    class function get_NavigateUriProperty: IDependencyProperty; static; inline;
    class property NavigateUriProperty: IDependencyProperty read get_NavigateUriProperty;

    // -> IHyperlinkButtonFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IHyperlinkButton; static; inline;
  end;

  // Microsoft.UI.Xaml.Controls.IconSourceElement
  // Explicitly imported
  // Implements: Microsoft.UI.Xaml.Controls.IIconSourceElement
  // Statics: "Microsoft.UI.Xaml.Controls.IIconSourceElementStatics"
  // Factory: "Microsoft.UI.Xaml.Controls.IIconSourceElementFactory"
  // Instantiable: "IIconSourceElement"
  TIconSourceElement = class(TWinRTGenericImportFSI<IIconSourceElementFactory, IIconSourceElementStatics, IIconSourceElement>)
  public
    // -> IIconSourceElementStatics
    class function get_IconSourceProperty: IDependencyProperty; static; inline;
    class property IconSourceProperty: IDependencyProperty read get_IconSourceProperty;

    // -> IIconSourceElementFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IIconSourceElement; static; inline;
  end;

  // Microsoft.UI.Xaml.Controls.Image
  // Explicitly imported
  // Implements: Microsoft.UI.Xaml.Controls.IImage
  // Statics: "Microsoft.UI.Xaml.Controls.IImageStatics"
  // Instantiable: "IImage"
  TImage = class(TWinRTGenericImportSI<IImageStatics, IImage>)
  public
    // -> IImageStatics
    class function get_SourceProperty: IDependencyProperty; static; inline;
    class function get_StretchProperty: IDependencyProperty; static; inline;
    class function get_NineGridProperty: IDependencyProperty; static; inline;
    class property NineGridProperty: IDependencyProperty read get_NineGridProperty;
    class property SourceProperty: IDependencyProperty read get_SourceProperty;
    class property StretchProperty: IDependencyProperty read get_StretchProperty;
  end;

  // Microsoft.UI.Xaml.Controls.ImageIcon
  // Explicitly imported
  // Implements: Microsoft.UI.Xaml.Controls.IImageIcon
  // Statics: "Microsoft.UI.Xaml.Controls.IImageIconStatics"
  // Factory: "Microsoft.UI.Xaml.Controls.IImageIconFactory"
  // Instantiable: "IImageIcon"
  TImageIcon = class(TWinRTGenericImportFSI<IImageIconFactory, IImageIconStatics, IImageIcon>)
  public
    // -> IImageIconStatics
    class function get_SourceProperty: IDependencyProperty; static; inline;
    class property SourceProperty: IDependencyProperty read get_SourceProperty;

    // -> IImageIconFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IImageIcon; static; inline;
  end;

  // Microsoft.UI.Xaml.Controls.ImageIconSource
  // Explicitly imported
  // Implements: Microsoft.UI.Xaml.Controls.IImageIconSource
  // Statics: "Microsoft.UI.Xaml.Controls.IImageIconSourceStatics"
  // Factory: "Microsoft.UI.Xaml.Controls.IImageIconSourceFactory"
  // Instantiable: "IImageIconSource"
  TImageIconSource = class(TWinRTGenericImportFSI<IImageIconSourceFactory, IImageIconSourceStatics, IImageIconSource>)
  public
    // -> IImageIconSourceStatics
    class function get_ImageSourceProperty: IDependencyProperty; static; inline;
    class property ImageSourceProperty: IDependencyProperty read get_ImageSourceProperty;

    // -> IImageIconSourceFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IImageIconSource; static; inline;
  end;

  // Microsoft.UI.Xaml.Controls.InfoBadge
  // Explicitly imported
  // Implements: Microsoft.UI.Xaml.Controls.IInfoBadge
  // Statics: "Microsoft.UI.Xaml.Controls.IInfoBadgeStatics"
  // Factory: "Microsoft.UI.Xaml.Controls.IInfoBadgeFactory"
  // Instantiable: "IInfoBadge"
  TInfoBadge = class(TWinRTGenericImportFSI<IInfoBadgeFactory, IInfoBadgeStatics, IInfoBadge>)
  public
    // -> IInfoBadgeStatics
    class function get_ValueProperty: IDependencyProperty; static; inline;
    class function get_IconSourceProperty: IDependencyProperty; static; inline;
    class function get_TemplateSettingsProperty: IDependencyProperty; static; inline;
    class property IconSourceProperty: IDependencyProperty read get_IconSourceProperty;
    class property TemplateSettingsProperty: IDependencyProperty read get_TemplateSettingsProperty;
    class property ValueProperty: IDependencyProperty read get_ValueProperty;

    // -> IInfoBadgeFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IInfoBadge; static; inline;
  end;

  // Microsoft.UI.Xaml.Controls.InfoBadgeTemplateSettings
  // Explicitly imported
  // Implements: Microsoft.UI.Xaml.Controls.IInfoBadgeTemplateSettings
  // Statics: "Microsoft.UI.Xaml.Controls.IInfoBadgeTemplateSettingsStatics"
  // Factory: "Microsoft.UI.Xaml.Controls.IInfoBadgeTemplateSettingsFactory"
  // Instantiable: "IInfoBadgeTemplateSettings"
  TInfoBadgeTemplateSettings = class(TWinRTGenericImportFSI<IInfoBadgeTemplateSettingsFactory, IInfoBadgeTemplateSettingsStatics, IInfoBadgeTemplateSettings>)
  public
    // -> IInfoBadgeTemplateSettingsStatics
    class function get_InfoBadgeCornerRadiusProperty: IDependencyProperty; static; inline;
    class function get_IconElementProperty: IDependencyProperty; static; inline;
    class property IconElementProperty: IDependencyProperty read get_IconElementProperty;
    class property InfoBadgeCornerRadiusProperty: IDependencyProperty read get_InfoBadgeCornerRadiusProperty;

    // -> IInfoBadgeTemplateSettingsFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IInfoBadgeTemplateSettings; static; inline;
  end;

  // Microsoft.UI.Xaml.Controls.InfoBar
  // Explicitly imported
  // Implements: Microsoft.UI.Xaml.Controls.IInfoBar
  // Statics: "Microsoft.UI.Xaml.Controls.IInfoBarStatics"
  // Factory: "Microsoft.UI.Xaml.Controls.IInfoBarFactory"
  // Instantiable: "IInfoBar"
  TInfoBar = class(TWinRTGenericImportFSI<IInfoBarFactory, IInfoBarStatics, IInfoBar>)
  public
    // -> IInfoBarStatics
    class function get_IsOpenProperty: IDependencyProperty; static; inline;
    class function get_TitleProperty: IDependencyProperty; static; inline;
    class function get_MessageProperty: IDependencyProperty; static; inline;
    class function get_SeverityProperty: IDependencyProperty; static; inline;
    class function get_IconSourceProperty: IDependencyProperty; static; inline;
    class function get_IsIconVisibleProperty: IDependencyProperty; static; inline;
    class function get_IsClosableProperty: IDependencyProperty; static; inline;
    class function get_CloseButtonStyleProperty: IDependencyProperty; static; inline;
    class function get_CloseButtonCommandProperty: IDependencyProperty; static; inline;
    class function get_CloseButtonCommandParameterProperty: IDependencyProperty; static; inline;
    class function get_ActionButtonProperty: IDependencyProperty; static; inline;
    class function get_ContentProperty: IDependencyProperty; static; inline;
    class function get_ContentTemplateProperty: IDependencyProperty; static; inline;
    class function get_TemplateSettingsProperty: IDependencyProperty; static; inline;
    class property ActionButtonProperty: IDependencyProperty read get_ActionButtonProperty;
    class property CloseButtonCommandParameterProperty: IDependencyProperty read get_CloseButtonCommandParameterProperty;
    class property CloseButtonCommandProperty: IDependencyProperty read get_CloseButtonCommandProperty;
    class property CloseButtonStyleProperty: IDependencyProperty read get_CloseButtonStyleProperty;
    class property ContentProperty: IDependencyProperty read get_ContentProperty;
    class property ContentTemplateProperty: IDependencyProperty read get_ContentTemplateProperty;
    class property IconSourceProperty: IDependencyProperty read get_IconSourceProperty;
    class property IsClosableProperty: IDependencyProperty read get_IsClosableProperty;
    class property IsIconVisibleProperty: IDependencyProperty read get_IsIconVisibleProperty;
    class property IsOpenProperty: IDependencyProperty read get_IsOpenProperty;
    class property MessageProperty: IDependencyProperty read get_MessageProperty;
    class property SeverityProperty: IDependencyProperty read get_SeverityProperty;
    class property TemplateSettingsProperty: IDependencyProperty read get_TemplateSettingsProperty;
    class property TitleProperty: IDependencyProperty read get_TitleProperty;

    // -> IInfoBarFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IInfoBar; static; inline;
  end;

  // Microsoft.UI.Xaml.Controls.InfoBarClosedEventArgs
  // Explicitly imported
  // Implements: Microsoft.UI.Xaml.Controls.IInfoBarClosedEventArgs
  // Factory: "Microsoft.UI.Xaml.Controls.IInfoBarClosedEventArgsFactory"
  // Instantiable: "IInfoBarClosedEventArgs"
  TInfoBarClosedEventArgs = class(TWinRTGenericImportFI<IInfoBarClosedEventArgsFactory, IInfoBarClosedEventArgs>)
  public
    // -> IInfoBarClosedEventArgsFactory
  end;

  // Microsoft.UI.Xaml.Controls.InfoBarClosingEventArgs
  // Explicitly imported
  // Implements: Microsoft.UI.Xaml.Controls.IInfoBarClosingEventArgs
  // Factory: "Microsoft.UI.Xaml.Controls.IInfoBarClosingEventArgsFactory"
  // Instantiable: "IInfoBarClosingEventArgs"
  TInfoBarClosingEventArgs = class(TWinRTGenericImportFI<IInfoBarClosingEventArgsFactory, IInfoBarClosingEventArgs>)
  public
    // -> IInfoBarClosingEventArgsFactory
  end;

  // Microsoft.UI.Xaml.Controls.InfoBarTemplateSettings
  // Explicitly imported
  // Implements: Microsoft.UI.Xaml.Controls.IInfoBarTemplateSettings
  // Statics: "Microsoft.UI.Xaml.Controls.IInfoBarTemplateSettingsStatics"
  // Factory: "Microsoft.UI.Xaml.Controls.IInfoBarTemplateSettingsFactory"
  // Instantiable: "IInfoBarTemplateSettings"
  TInfoBarTemplateSettings = class(TWinRTGenericImportFSI<IInfoBarTemplateSettingsFactory, IInfoBarTemplateSettingsStatics, IInfoBarTemplateSettings>)
  public
    // -> IInfoBarTemplateSettingsStatics
    class function get_IconElementProperty: IDependencyProperty; static; inline;
    class property IconElementProperty: IDependencyProperty read get_IconElementProperty;

    // -> IInfoBarTemplateSettingsFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IInfoBarTemplateSettings; static; inline;
  end;

  // Microsoft.UI.Xaml.Controls.ItemClickEventArgs
  // Explicitly imported
  // Implements: Microsoft.UI.Xaml.Controls.IItemClickEventArgs
  // Instantiable: "IItemClickEventArgs"
  TItemClickEventArgs = class(TWinRTGenericImportI<IItemClickEventArgs>) end;

  // Microsoft.UI.Xaml.Controls.ItemsPanelTemplate
  // Explicitly imported
  // Implements: Microsoft.UI.Xaml.Controls.IItemsPanelTemplate
  // Instantiable: "IItemsPanelTemplate"
  TItemsPanelTemplate = class(TWinRTGenericImportI<IItemsPanelTemplate>) end;

  // Microsoft.UI.Xaml.Controls.ItemsPickedEventArgs
  // Explicitly imported
  // Implements: Microsoft.UI.Xaml.Controls.IItemsPickedEventArgs
  // Instantiable: "IItemsPickedEventArgs"
  TItemsPickedEventArgs = class(TWinRTGenericImportI<IItemsPickedEventArgs>) end;

  // Microsoft.UI.Xaml.Controls.ItemsPresenter
  // Explicitly imported
  // Implements: Microsoft.UI.Xaml.Controls.IItemsPresenter
  // Implements: Microsoft.UI.Xaml.Controls.Primitives.IScrollSnapPointsInfo
  // Statics: "Microsoft.UI.Xaml.Controls.IItemsPresenterStatics"
  // Instantiable: "IItemsPresenter"
  TItemsPresenter = class(TWinRTGenericImportSI<IItemsPresenterStatics, IItemsPresenter>)
  public
    // -> IItemsPresenterStatics
    class function get_HeaderProperty: IDependencyProperty; static; inline;
    class function get_HeaderTemplateProperty: IDependencyProperty; static; inline;
    class function get_HeaderTransitionsProperty: IDependencyProperty; static; inline;
    class function get_FooterProperty: IDependencyProperty; static; inline;
    class function get_FooterTemplateProperty: IDependencyProperty; static; inline;
    class function get_FooterTransitionsProperty: IDependencyProperty; static; inline;
    class function get_PaddingProperty: IDependencyProperty; static; inline;
    class property FooterProperty: IDependencyProperty read get_FooterProperty;
    class property FooterTemplateProperty: IDependencyProperty read get_FooterTemplateProperty;
    class property FooterTransitionsProperty: IDependencyProperty read get_FooterTransitionsProperty;
    class property HeaderProperty: IDependencyProperty read get_HeaderProperty;
    class property HeaderTemplateProperty: IDependencyProperty read get_HeaderTemplateProperty;
    class property HeaderTransitionsProperty: IDependencyProperty read get_HeaderTransitionsProperty;
    class property PaddingProperty: IDependencyProperty read get_PaddingProperty;
  end;

  // Microsoft.UI.Xaml.Controls.ItemsRepeater
  // Explicitly imported
  // Implements: Microsoft.UI.Xaml.Controls.IItemsRepeater
  // Statics: "Microsoft.UI.Xaml.Controls.IItemsRepeaterStatics"
  // Factory: "Microsoft.UI.Xaml.Controls.IItemsRepeaterFactory"
  // Instantiable: "IItemsRepeater"
  TItemsRepeater = class(TWinRTGenericImportFSI<IItemsRepeaterFactory, IItemsRepeaterStatics, IItemsRepeater>)
  public
    // -> IItemsRepeaterStatics
    class function get_ItemsSourceProperty: IDependencyProperty; static; inline;
    class function get_ItemTemplateProperty: IDependencyProperty; static; inline;
    class function get_LayoutProperty: IDependencyProperty; static; inline;
    class function get_HorizontalCacheLengthProperty: IDependencyProperty; static; inline;
    class function get_VerticalCacheLengthProperty: IDependencyProperty; static; inline;
    class function get_BackgroundProperty: IDependencyProperty; static; inline;
    class property BackgroundProperty: IDependencyProperty read get_BackgroundProperty;
    class property HorizontalCacheLengthProperty: IDependencyProperty read get_HorizontalCacheLengthProperty;
    class property ItemTemplateProperty: IDependencyProperty read get_ItemTemplateProperty;
    class property ItemsSourceProperty: IDependencyProperty read get_ItemsSourceProperty;
    class property LayoutProperty: IDependencyProperty read get_LayoutProperty;
    class property VerticalCacheLengthProperty: IDependencyProperty read get_VerticalCacheLengthProperty;

    // -> IItemsRepeaterFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IItemsRepeater; static; inline;
  end;

  // Microsoft.UI.Xaml.Controls.ItemsRepeaterScrollHost
  // Explicitly imported
  // Implements: Microsoft.UI.Xaml.Controls.IItemsRepeaterScrollHost
  // Instantiable: "IItemsRepeaterScrollHost"
  TItemsRepeaterScrollHost = class(TWinRTGenericImportI<IItemsRepeaterScrollHost>) end;

  // Microsoft.UI.Xaml.Controls.ItemsSourceView
  // Explicitly imported
  // Implements: Microsoft.UI.Xaml.Controls.IItemsSourceView
  // Implements: Microsoft.UI.Xaml.Interop.INotifyCollectionChanged
  // Factory: "Microsoft.UI.Xaml.Controls.IItemsSourceViewFactory"
  // Instantiable: "IItemsSourceView"
  TItemsSourceView = class(TWinRTGenericImportFI<IItemsSourceViewFactory, IItemsSourceView>)
  public
    // -> IItemsSourceViewFactory
    class function CreateInstance(source: IInspectable; baseInterface: IInspectable; out innerInterface: IInspectable): IItemsSourceView; static; inline;
  end;

  // Microsoft.UI.Xaml.Controls.ItemsStackPanel
  // Explicitly imported
  // Implements: Microsoft.UI.Xaml.Controls.IItemsStackPanel
  // Statics: "Microsoft.UI.Xaml.Controls.IItemsStackPanelStatics"
  // Instantiable: "IItemsStackPanel"
  TItemsStackPanel = class(TWinRTGenericImportSI<IItemsStackPanelStatics, IItemsStackPanel>)
  public
    // -> IItemsStackPanelStatics
    class function get_GroupPaddingProperty: IDependencyProperty; static; inline;
    class function get_OrientationProperty: IDependencyProperty; static; inline;
    class function get_GroupHeaderPlacementProperty: IDependencyProperty; static; inline;
    class function get_CacheLengthProperty: IDependencyProperty; static; inline;
    class function get_AreStickyGroupHeadersEnabledProperty: IDependencyProperty; static; inline;
    class property AreStickyGroupHeadersEnabledProperty: IDependencyProperty read get_AreStickyGroupHeadersEnabledProperty;
    class property CacheLengthProperty: IDependencyProperty read get_CacheLengthProperty;
    class property GroupHeaderPlacementProperty: IDependencyProperty read get_GroupHeaderPlacementProperty;
    class property GroupPaddingProperty: IDependencyProperty read get_GroupPaddingProperty;
    class property OrientationProperty: IDependencyProperty read get_OrientationProperty;
  end;

  // Microsoft.UI.Xaml.Controls.ItemsWrapGrid
  // Explicitly imported
  // Implements: Microsoft.UI.Xaml.Controls.IItemsWrapGrid
  // Statics: "Microsoft.UI.Xaml.Controls.IItemsWrapGridStatics"
  // Instantiable: "IItemsWrapGrid"
  TItemsWrapGrid = class(TWinRTGenericImportSI<IItemsWrapGridStatics, IItemsWrapGrid>)
  public
    // -> IItemsWrapGridStatics
    class function get_GroupPaddingProperty: IDependencyProperty; static; inline;
    class function get_OrientationProperty: IDependencyProperty; static; inline;
    class function get_MaximumRowsOrColumnsProperty: IDependencyProperty; static; inline;
    class function get_ItemWidthProperty: IDependencyProperty; static; inline;
    class function get_ItemHeightProperty: IDependencyProperty; static; inline;
    class function get_GroupHeaderPlacementProperty: IDependencyProperty; static; inline;
    class function get_CacheLengthProperty: IDependencyProperty; static; inline;
    class function get_AreStickyGroupHeadersEnabledProperty: IDependencyProperty; static; inline;
    class property AreStickyGroupHeadersEnabledProperty: IDependencyProperty read get_AreStickyGroupHeadersEnabledProperty;
    class property CacheLengthProperty: IDependencyProperty read get_CacheLengthProperty;
    class property GroupHeaderPlacementProperty: IDependencyProperty read get_GroupHeaderPlacementProperty;
    class property GroupPaddingProperty: IDependencyProperty read get_GroupPaddingProperty;
    class property ItemHeightProperty: IDependencyProperty read get_ItemHeightProperty;
    class property ItemWidthProperty: IDependencyProperty read get_ItemWidthProperty;
    class property MaximumRowsOrColumnsProperty: IDependencyProperty read get_MaximumRowsOrColumnsProperty;
    class property OrientationProperty: IDependencyProperty read get_OrientationProperty;
  end;

  // Microsoft.UI.Xaml.Controls.Layout
  // Explicitly imported
  // Implements: Microsoft.UI.Xaml.Controls.ILayout
  // Implements: Microsoft.UI.Xaml.Controls.ILayoutProtected
  // Factory: "Microsoft.UI.Xaml.Controls.ILayoutFactory"
  // Instantiable: "ILayout"
  TLayout = class(TWinRTGenericImportFI<ILayoutFactory, ILayout>)
  public
    // -> ILayoutFactory
  end;

  // Microsoft.UI.Xaml.Controls.LayoutContext
  // Explicitly imported
  // Implements: Microsoft.UI.Xaml.Controls.ILayoutContext
  // Implements: Microsoft.UI.Xaml.Controls.ILayoutContextOverrides
  // Factory: "Microsoft.UI.Xaml.Controls.ILayoutContextFactory"
  // Instantiable: "ILayoutContext"
  TLayoutContext = class(TWinRTGenericImportFI<ILayoutContextFactory, ILayoutContext>)
  public
    // -> ILayoutContextFactory
  end;

  // Microsoft.UI.Xaml.Controls.ListBox
  // Explicitly imported
  // Implements: Microsoft.UI.Xaml.Controls.IListBox
  // Statics: "Microsoft.UI.Xaml.Controls.IListBoxStatics"
  // Factory: "Microsoft.UI.Xaml.Controls.IListBoxFactory"
  // Instantiable: "IListBox"
  TListBox = class(TWinRTGenericImportFSI<IListBoxFactory, IListBoxStatics, IListBox>)
  public
    // -> IListBoxStatics
    class function get_SelectionModeProperty: IDependencyProperty; static; inline;
    class function get_SingleSelectionFollowsFocusProperty: IDependencyProperty; static; inline;
    class property SelectionModeProperty: IDependencyProperty read get_SelectionModeProperty;
    class property SingleSelectionFollowsFocusProperty: IDependencyProperty read get_SingleSelectionFollowsFocusProperty;

    // -> IListBoxFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IListBox; static; inline;
  end;

  // Microsoft.UI.Xaml.Controls.ListBoxItem
  // Explicitly imported
  // Implements: Microsoft.UI.Xaml.Controls.IListBoxItem
  // Factory: "Microsoft.UI.Xaml.Controls.IListBoxItemFactory"
  // Instantiable: "IListBoxItem"
  TListBoxItem = class(TWinRTGenericImportFI<IListBoxItemFactory, IListBoxItem>)
  public
    // -> IListBoxItemFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IListBoxItem; static; inline;
  end;

  // Microsoft.UI.Xaml.Controls.ListPickerFlyout
  // Explicitly imported
  // Implements: Microsoft.UI.Xaml.Controls.IListPickerFlyout
  // Statics: "Microsoft.UI.Xaml.Controls.IListPickerFlyoutStatics"
  // Instantiable: "IListPickerFlyout"
  TListPickerFlyout = class(TWinRTGenericImportSI<IListPickerFlyoutStatics, IListPickerFlyout>)
  public
    // -> IListPickerFlyoutStatics
    class function get_ItemsSourceProperty: IDependencyProperty; static; inline;
    class function get_ItemTemplateProperty: IDependencyProperty; static; inline;
    class function get_DisplayMemberPathProperty: IDependencyProperty; static; inline;
    class function get_SelectionModeProperty: IDependencyProperty; static; inline;
    class function get_SelectedIndexProperty: IDependencyProperty; static; inline;
    class function get_SelectedItemProperty: IDependencyProperty; static; inline;
    class function get_SelectedValueProperty: IDependencyProperty; static; inline;
    class function get_SelectedValuePathProperty: IDependencyProperty; static; inline;
    class property DisplayMemberPathProperty: IDependencyProperty read get_DisplayMemberPathProperty;
    class property ItemTemplateProperty: IDependencyProperty read get_ItemTemplateProperty;
    class property ItemsSourceProperty: IDependencyProperty read get_ItemsSourceProperty;
    class property SelectedIndexProperty: IDependencyProperty read get_SelectedIndexProperty;
    class property SelectedItemProperty: IDependencyProperty read get_SelectedItemProperty;
    class property SelectedValuePathProperty: IDependencyProperty read get_SelectedValuePathProperty;
    class property SelectedValueProperty: IDependencyProperty read get_SelectedValueProperty;
    class property SelectionModeProperty: IDependencyProperty read get_SelectionModeProperty;
  end;

  // Microsoft.UI.Xaml.Controls.ListView
  // Explicitly imported
  // Implements: Microsoft.UI.Xaml.Controls.IListView
  // Factory: "Microsoft.UI.Xaml.Controls.IListViewFactory"
  // Instantiable: "IListView"
  TListView = class(TWinRTGenericImportFI<IListViewFactory, IListView>)
  public
    // -> IListViewFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IListView; static; inline;
  end;

  // Microsoft.UI.Xaml.Controls.ListViewHeaderItem
  // Explicitly imported
  // Implements: Microsoft.UI.Xaml.Controls.IListViewHeaderItem
  // Factory: "Microsoft.UI.Xaml.Controls.IListViewHeaderItemFactory"
  // Instantiable: "IListViewHeaderItem"
  TListViewHeaderItem = class(TWinRTGenericImportFI<IListViewHeaderItemFactory, IListViewHeaderItem>)
  public
    // -> IListViewHeaderItemFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IListViewHeaderItem; static; inline;
  end;

  // Microsoft.UI.Xaml.Controls.ListViewItem
  // Explicitly imported
  // Implements: Microsoft.UI.Xaml.Controls.IListViewItem
  // Factory: "Microsoft.UI.Xaml.Controls.IListViewItemFactory"
  // Instantiable: "IListViewItem"
  TListViewItem = class(TWinRTGenericImportFI<IListViewItemFactory, IListViewItem>)
  public
    // -> IListViewItemFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IListViewItem; static; inline;
  end;

  // Microsoft.UI.Xaml.Controls.ListViewPersistenceHelper
  // Explicitly imported
  // Implements: Microsoft.UI.Xaml.Controls.IListViewPersistenceHelper
  // Statics: "Microsoft.UI.Xaml.Controls.IListViewPersistenceHelperStatics"
  TListViewPersistenceHelper = class(TWinRTGenericImportS<IListViewPersistenceHelperStatics>)
  public
    // -> IListViewPersistenceHelperStatics
    class function GetRelativeScrollPosition(listViewBase: IListViewBase; itemToKeyHandler: ListViewItemToKeyHandler): HSTRING; static; inline;
    class function SetRelativeScrollPositionAsync(listViewBase: IListViewBase; relativeScrollPosition: HSTRING; keyToItemHandler: ListViewKeyToItemHandler): IAsyncAction; static; inline;
  end;

  // Microsoft.UI.Xaml.Controls.MediaPlayerElement
  // Explicitly imported
  // Implements: Microsoft.UI.Xaml.Controls.IMediaPlayerElement
  // Statics: "Microsoft.UI.Xaml.Controls.IMediaPlayerElementStatics"
  // Factory: "Microsoft.UI.Xaml.Controls.IMediaPlayerElementFactory"
  // Instantiable: "IMediaPlayerElement"
  TMediaPlayerElement = class(TWinRTGenericImportFSI<IMediaPlayerElementFactory, IMediaPlayerElementStatics, IMediaPlayerElement>)
  public
    // -> IMediaPlayerElementStatics
    class function get_SourceProperty: IDependencyProperty; static; inline;
    class function get_AreTransportControlsEnabledProperty: IDependencyProperty; static; inline;
    class function get_PosterSourceProperty: IDependencyProperty; static; inline;
    class function get_StretchProperty: IDependencyProperty; static; inline;
    class function get_AutoPlayProperty: IDependencyProperty; static; inline;
    class function get_IsFullWindowProperty: IDependencyProperty; static; inline;
    class function get_MediaPlayerProperty: IDependencyProperty; static; inline;
    class property AreTransportControlsEnabledProperty: IDependencyProperty read get_AreTransportControlsEnabledProperty;
    class property AutoPlayProperty: IDependencyProperty read get_AutoPlayProperty;
    class property IsFullWindowProperty: IDependencyProperty read get_IsFullWindowProperty;
    class property MediaPlayerProperty: IDependencyProperty read get_MediaPlayerProperty;
    class property PosterSourceProperty: IDependencyProperty read get_PosterSourceProperty;
    class property SourceProperty: IDependencyProperty read get_SourceProperty;
    class property StretchProperty: IDependencyProperty read get_StretchProperty;

    // -> IMediaPlayerElementFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IMediaPlayerElement; static; inline;
  end;

  // Microsoft.UI.Xaml.Controls.MediaPlayerPresenter
  // Explicitly imported
  // Implements: Microsoft.UI.Xaml.Controls.IMediaPlayerPresenter
  // Statics: "Microsoft.UI.Xaml.Controls.IMediaPlayerPresenterStatics"
  // Factory: "Microsoft.UI.Xaml.Controls.IMediaPlayerPresenterFactory"
  // Instantiable: "IMediaPlayerPresenter"
  TMediaPlayerPresenter = class(TWinRTGenericImportFSI<IMediaPlayerPresenterFactory, IMediaPlayerPresenterStatics, IMediaPlayerPresenter>)
  public
    // -> IMediaPlayerPresenterStatics
    class function get_MediaPlayerProperty: IDependencyProperty; static; inline;
    class function get_StretchProperty: IDependencyProperty; static; inline;
    class function get_IsFullWindowProperty: IDependencyProperty; static; inline;
    class property IsFullWindowProperty: IDependencyProperty read get_IsFullWindowProperty;
    class property MediaPlayerProperty: IDependencyProperty read get_MediaPlayerProperty;
    class property StretchProperty: IDependencyProperty read get_StretchProperty;

    // -> IMediaPlayerPresenterFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IMediaPlayerPresenter; static; inline;
  end;

  // Microsoft.UI.Xaml.Controls.MediaTransportControls
  // Explicitly imported
  // Implements: Microsoft.UI.Xaml.Controls.IMediaTransportControls
  // Statics: "Microsoft.UI.Xaml.Controls.IMediaTransportControlsStatics"
  // Factory: "Microsoft.UI.Xaml.Controls.IMediaTransportControlsFactory"
  // Instantiable: "IMediaTransportControls"
  TMediaTransportControls = class(TWinRTGenericImportFSI<IMediaTransportControlsFactory, IMediaTransportControlsStatics, IMediaTransportControls>)
  public
    // -> IMediaTransportControlsStatics
    class function get_IsZoomButtonVisibleProperty: IDependencyProperty; static; inline;
    class function get_IsZoomEnabledProperty: IDependencyProperty; static; inline;
    class function get_IsFastForwardButtonVisibleProperty: IDependencyProperty; static; inline;
    class function get_IsFastForwardEnabledProperty: IDependencyProperty; static; inline;
    class function get_IsFastRewindButtonVisibleProperty: IDependencyProperty; static; inline;
    class function get_IsFastRewindEnabledProperty: IDependencyProperty; static; inline;
    class function get_IsStopButtonVisibleProperty: IDependencyProperty; static; inline;
    class function get_IsStopEnabledProperty: IDependencyProperty; static; inline;
    class function get_IsVolumeButtonVisibleProperty: IDependencyProperty; static; inline;
    class function get_IsVolumeEnabledProperty: IDependencyProperty; static; inline;
    class function get_IsPlaybackRateButtonVisibleProperty: IDependencyProperty; static; inline;
    class function get_IsPlaybackRateEnabledProperty: IDependencyProperty; static; inline;
    class function get_IsSeekBarVisibleProperty: IDependencyProperty; static; inline;
    class function get_IsSeekEnabledProperty: IDependencyProperty; static; inline;
    class function get_IsCompactProperty: IDependencyProperty; static; inline;
    class function get_IsSkipForwardButtonVisibleProperty: IDependencyProperty; static; inline;
    class function get_IsSkipForwardEnabledProperty: IDependencyProperty; static; inline;
    class function get_IsSkipBackwardButtonVisibleProperty: IDependencyProperty; static; inline;
    class function get_IsSkipBackwardEnabledProperty: IDependencyProperty; static; inline;
    class function get_IsNextTrackButtonVisibleProperty: IDependencyProperty; static; inline;
    class function get_IsPreviousTrackButtonVisibleProperty: IDependencyProperty; static; inline;
    class function get_FastPlayFallbackBehaviourProperty: IDependencyProperty; static; inline;
    class function get_ShowAndHideAutomaticallyProperty: IDependencyProperty; static; inline;
    class function get_IsRepeatEnabledProperty: IDependencyProperty; static; inline;
    class function get_IsRepeatButtonVisibleProperty: IDependencyProperty; static; inline;
    class property FastPlayFallbackBehaviourProperty: IDependencyProperty read get_FastPlayFallbackBehaviourProperty;
    class property IsCompactProperty: IDependencyProperty read get_IsCompactProperty;
    class property IsFastForwardButtonVisibleProperty: IDependencyProperty read get_IsFastForwardButtonVisibleProperty;
    class property IsFastForwardEnabledProperty: IDependencyProperty read get_IsFastForwardEnabledProperty;
    class property IsFastRewindButtonVisibleProperty: IDependencyProperty read get_IsFastRewindButtonVisibleProperty;
    class property IsFastRewindEnabledProperty: IDependencyProperty read get_IsFastRewindEnabledProperty;
    class property IsNextTrackButtonVisibleProperty: IDependencyProperty read get_IsNextTrackButtonVisibleProperty;
    class property IsPlaybackRateButtonVisibleProperty: IDependencyProperty read get_IsPlaybackRateButtonVisibleProperty;
    class property IsPlaybackRateEnabledProperty: IDependencyProperty read get_IsPlaybackRateEnabledProperty;
    class property IsPreviousTrackButtonVisibleProperty: IDependencyProperty read get_IsPreviousTrackButtonVisibleProperty;
    class property IsRepeatButtonVisibleProperty: IDependencyProperty read get_IsRepeatButtonVisibleProperty;
    class property IsRepeatEnabledProperty: IDependencyProperty read get_IsRepeatEnabledProperty;
    class property IsSeekBarVisibleProperty: IDependencyProperty read get_IsSeekBarVisibleProperty;
    class property IsSeekEnabledProperty: IDependencyProperty read get_IsSeekEnabledProperty;
    class property IsSkipBackwardButtonVisibleProperty: IDependencyProperty read get_IsSkipBackwardButtonVisibleProperty;
    class property IsSkipBackwardEnabledProperty: IDependencyProperty read get_IsSkipBackwardEnabledProperty;
    class property IsSkipForwardButtonVisibleProperty: IDependencyProperty read get_IsSkipForwardButtonVisibleProperty;
    class property IsSkipForwardEnabledProperty: IDependencyProperty read get_IsSkipForwardEnabledProperty;
    class property IsStopButtonVisibleProperty: IDependencyProperty read get_IsStopButtonVisibleProperty;
    class property IsStopEnabledProperty: IDependencyProperty read get_IsStopEnabledProperty;
    class property IsVolumeButtonVisibleProperty: IDependencyProperty read get_IsVolumeButtonVisibleProperty;
    class property IsVolumeEnabledProperty: IDependencyProperty read get_IsVolumeEnabledProperty;
    class property IsZoomButtonVisibleProperty: IDependencyProperty read get_IsZoomButtonVisibleProperty;
    class property IsZoomEnabledProperty: IDependencyProperty read get_IsZoomEnabledProperty;
    class property ShowAndHideAutomaticallyProperty: IDependencyProperty read get_ShowAndHideAutomaticallyProperty;

    // -> IMediaTransportControlsFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IMediaTransportControls; static; inline;
  end;

  // Microsoft.UI.Xaml.Controls.MediaTransportControlsHelper
  // Explicitly imported
  // Implements: Microsoft.UI.Xaml.Controls.IMediaTransportControlsHelper
  // Statics: "Microsoft.UI.Xaml.Controls.IMediaTransportControlsHelperStatics"
  TMediaTransportControlsHelper = class(TWinRTGenericImportS<IMediaTransportControlsHelperStatics>)
  public
    // -> IMediaTransportControlsHelperStatics
    class function get_DropoutOrderProperty: IDependencyProperty; static; inline;
    class function GetDropoutOrder(element: IUIElement): IReference_1__Integer; static; inline;
    class procedure SetDropoutOrder(element: IUIElement; value: IReference_1__Integer); static; inline;
    class property DropoutOrderProperty: IDependencyProperty read get_DropoutOrderProperty;
  end;

  // Microsoft.UI.Xaml.Controls.MenuBar
  // Explicitly imported
  // Implements: Microsoft.UI.Xaml.Controls.IMenuBar
  // Statics: "Microsoft.UI.Xaml.Controls.IMenuBarStatics"
  // Factory: "Microsoft.UI.Xaml.Controls.IMenuBarFactory"
  // Instantiable: "IMenuBar"
  TMenuBar = class(TWinRTGenericImportFSI<IMenuBarFactory, IMenuBarStatics, IMenuBar>)
  public
    // -> IMenuBarStatics
    class function get_ItemsProperty: IDependencyProperty; static; inline;
    class property ItemsProperty: IDependencyProperty read get_ItemsProperty;

    // -> IMenuBarFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IMenuBar; static; inline;
  end;

  // Microsoft.UI.Xaml.Controls.MenuBarItem
  // Explicitly imported
  // Implements: Microsoft.UI.Xaml.Controls.IMenuBarItem
  // Statics: "Microsoft.UI.Xaml.Controls.IMenuBarItemStatics"
  // Factory: "Microsoft.UI.Xaml.Controls.IMenuBarItemFactory"
  // Instantiable: "IMenuBarItem"
  TMenuBarItem = class(TWinRTGenericImportFSI<IMenuBarItemFactory, IMenuBarItemStatics, IMenuBarItem>)
  public
    // -> IMenuBarItemStatics
    class function get_TitleProperty: IDependencyProperty; static; inline;
    class function get_ItemsProperty: IDependencyProperty; static; inline;
    class property ItemsProperty: IDependencyProperty read get_ItemsProperty;
    class property TitleProperty: IDependencyProperty read get_TitleProperty;

    // -> IMenuBarItemFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IMenuBarItem; static; inline;
  end;

  // Microsoft.UI.Xaml.Controls.MenuFlyout
  // Explicitly imported
  // Implements: Microsoft.UI.Xaml.Controls.IMenuFlyout
  // Statics: "Microsoft.UI.Xaml.Controls.IMenuFlyoutStatics"
  // Factory: "Microsoft.UI.Xaml.Controls.IMenuFlyoutFactory"
  // Instantiable: "IMenuFlyout"
  TMenuFlyout = class(TWinRTGenericImportFSI<IMenuFlyoutFactory, IMenuFlyoutStatics, IMenuFlyout>)
  public
    // -> IMenuFlyoutStatics
    class function get_MenuFlyoutPresenterStyleProperty: IDependencyProperty; static; inline;
    class property MenuFlyoutPresenterStyleProperty: IDependencyProperty read get_MenuFlyoutPresenterStyleProperty;

    // -> IMenuFlyoutFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IMenuFlyout; static; inline;
  end;

  // Microsoft.UI.Xaml.Controls.MenuBarItemFlyout
  // Explicitly imported
  // Implements: Microsoft.UI.Xaml.Controls.IMenuBarItemFlyout
  // Factory: "Microsoft.UI.Xaml.Controls.IMenuBarItemFlyoutFactory"
  // Instantiable: "IMenuBarItemFlyout"
  TMenuBarItemFlyout = class(TWinRTGenericImportFI<IMenuBarItemFlyoutFactory, IMenuBarItemFlyout>)
  public
    // -> IMenuBarItemFlyoutFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IMenuBarItemFlyout; static; inline;
  end;

  // Microsoft.UI.Xaml.Controls.MenuFlyoutItemBase
  // Explicitly imported
  // Implements: Microsoft.UI.Xaml.Controls.IMenuFlyoutItemBase
  // Factory: "Microsoft.UI.Xaml.Controls.IMenuFlyoutItemBaseFactory"
  // Instantiable: "IMenuFlyoutItemBase"
  TMenuFlyoutItemBase = class(TWinRTGenericImportFI<IMenuFlyoutItemBaseFactory, IMenuFlyoutItemBase>)
  public
    // -> IMenuFlyoutItemBaseFactory
  end;

  // Microsoft.UI.Xaml.Controls.MenuFlyoutItem
  // Explicitly imported
  // Implements: Microsoft.UI.Xaml.Controls.IMenuFlyoutItem
  // Statics: "Microsoft.UI.Xaml.Controls.IMenuFlyoutItemStatics"
  // Factory: "Microsoft.UI.Xaml.Controls.IMenuFlyoutItemFactory"
  // Instantiable: "IMenuFlyoutItem"
  TMenuFlyoutItem = class(TWinRTGenericImportFSI<IMenuFlyoutItemFactory, IMenuFlyoutItemStatics, IMenuFlyoutItem>)
  public
    // -> IMenuFlyoutItemStatics
    class function get_TextProperty: IDependencyProperty; static; inline;
    class function get_CommandProperty: IDependencyProperty; static; inline;
    class function get_CommandParameterProperty: IDependencyProperty; static; inline;
    class function get_IconProperty: IDependencyProperty; static; inline;
    class function get_KeyboardAcceleratorTextOverrideProperty: IDependencyProperty; static; inline;
    class property CommandParameterProperty: IDependencyProperty read get_CommandParameterProperty;
    class property CommandProperty: IDependencyProperty read get_CommandProperty;
    class property IconProperty: IDependencyProperty read get_IconProperty;
    class property KeyboardAcceleratorTextOverrideProperty: IDependencyProperty read get_KeyboardAcceleratorTextOverrideProperty;
    class property TextProperty: IDependencyProperty read get_TextProperty;

    // -> IMenuFlyoutItemFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IMenuFlyoutItem; static; inline;
  end;

  // Microsoft.UI.Xaml.Controls.MenuFlyoutPresenter
  // Explicitly imported
  // Implements: Microsoft.UI.Xaml.Controls.IMenuFlyoutPresenter
  // Statics: "Microsoft.UI.Xaml.Controls.IMenuFlyoutPresenterStatics"
  // Factory: "Microsoft.UI.Xaml.Controls.IMenuFlyoutPresenterFactory"
  // Instantiable: "IMenuFlyoutPresenter"
  TMenuFlyoutPresenter = class(TWinRTGenericImportFSI<IMenuFlyoutPresenterFactory, IMenuFlyoutPresenterStatics, IMenuFlyoutPresenter>)
  public
    // -> IMenuFlyoutPresenterStatics
    class function get_IsDefaultShadowEnabledProperty: IDependencyProperty; static; inline;
    class property IsDefaultShadowEnabledProperty: IDependencyProperty read get_IsDefaultShadowEnabledProperty;

    // -> IMenuFlyoutPresenterFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IMenuFlyoutPresenter; static; inline;
  end;

  // Microsoft.UI.Xaml.Controls.MenuFlyoutSeparator
  // Explicitly imported
  // Implements: Microsoft.UI.Xaml.Controls.IMenuFlyoutSeparator
  // Factory: "Microsoft.UI.Xaml.Controls.IMenuFlyoutSeparatorFactory"
  // Instantiable: "IMenuFlyoutSeparator"
  TMenuFlyoutSeparator = class(TWinRTGenericImportFI<IMenuFlyoutSeparatorFactory, IMenuFlyoutSeparator>)
  public
    // -> IMenuFlyoutSeparatorFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IMenuFlyoutSeparator; static; inline;
  end;

  // Microsoft.UI.Xaml.Controls.MenuFlyoutSubItem
  // Explicitly imported
  // Implements: Microsoft.UI.Xaml.Controls.IMenuFlyoutSubItem
  // Statics: "Microsoft.UI.Xaml.Controls.IMenuFlyoutSubItemStatics"
  // Instantiable: "IMenuFlyoutSubItem"
  TMenuFlyoutSubItem = class(TWinRTGenericImportSI<IMenuFlyoutSubItemStatics, IMenuFlyoutSubItem>)
  public
    // -> IMenuFlyoutSubItemStatics
    class function get_TextProperty: IDependencyProperty; static; inline;
    class function get_IconProperty: IDependencyProperty; static; inline;
    class property IconProperty: IDependencyProperty read get_IconProperty;
    class property TextProperty: IDependencyProperty read get_TextProperty;
  end;

  // Microsoft.UI.Xaml.Controls.NavigationView
  // Explicitly imported
  // Implements: Microsoft.UI.Xaml.Controls.INavigationView
  // Implements: Microsoft.UI.Xaml.Controls.INavigationView2
  // Statics: "Microsoft.UI.Xaml.Controls.INavigationViewStatics"
  // Statics: "Microsoft.UI.Xaml.Controls.INavigationViewStatics2"
  // Factory: "Microsoft.UI.Xaml.Controls.INavigationViewFactory"
  // Instantiable: "INavigationView"
  TNavigationView = class(TWinRTGenericImportFS2I<INavigationViewFactory, INavigationViewStatics, INavigationViewStatics2, INavigationView>)
  public
    // -> INavigationViewStatics
    class function get_IsPaneOpenProperty: IDependencyProperty; static; inline;
    class function get_CompactModeThresholdWidthProperty: IDependencyProperty; static; inline;
    class function get_ExpandedModeThresholdWidthProperty: IDependencyProperty; static; inline;
    class function get_FooterMenuItemsProperty: IDependencyProperty; static; inline;
    class function get_FooterMenuItemsSourceProperty: IDependencyProperty; static; inline;
    class function get_PaneFooterProperty: IDependencyProperty; static; inline;
    class function get_HeaderProperty: IDependencyProperty; static; inline;
    class function get_HeaderTemplateProperty: IDependencyProperty; static; inline;
    class function get_DisplayModeProperty: IDependencyProperty; static; inline;
    class function get_IsSettingsVisibleProperty: IDependencyProperty; static; inline;
    class function get_IsPaneToggleButtonVisibleProperty: IDependencyProperty; static; inline;
    class function get_AlwaysShowHeaderProperty: IDependencyProperty; static; inline;
    class function get_CompactPaneLengthProperty: IDependencyProperty; static; inline;
    class function get_OpenPaneLengthProperty: IDependencyProperty; static; inline;
    class function get_PaneToggleButtonStyleProperty: IDependencyProperty; static; inline;
    class function get_MenuItemsProperty: IDependencyProperty; static; inline;
    class function get_MenuItemsSourceProperty: IDependencyProperty; static; inline;
    class function get_SelectedItemProperty: IDependencyProperty; static; inline;
    class function get_SettingsItemProperty: IDependencyProperty; static; inline;
    class function get_AutoSuggestBoxProperty: IDependencyProperty; static; inline;
    class function get_MenuItemTemplateProperty: IDependencyProperty; static; inline;
    class function get_MenuItemTemplateSelectorProperty: IDependencyProperty; static; inline;
    class function get_MenuItemContainerStyleProperty: IDependencyProperty; static; inline;
    class function get_MenuItemContainerStyleSelectorProperty: IDependencyProperty; static; inline;
    class function get_IsTitleBarAutoPaddingEnabledProperty: IDependencyProperty; static; inline;
    class property AlwaysShowHeaderProperty: IDependencyProperty read get_AlwaysShowHeaderProperty;
    class property AutoSuggestBoxProperty: IDependencyProperty read get_AutoSuggestBoxProperty;
    class property CompactModeThresholdWidthProperty: IDependencyProperty read get_CompactModeThresholdWidthProperty;
    class property CompactPaneLengthProperty: IDependencyProperty read get_CompactPaneLengthProperty;
    class property DisplayModeProperty: IDependencyProperty read get_DisplayModeProperty;
    class property ExpandedModeThresholdWidthProperty: IDependencyProperty read get_ExpandedModeThresholdWidthProperty;
    class property FooterMenuItemsProperty: IDependencyProperty read get_FooterMenuItemsProperty;
    class property FooterMenuItemsSourceProperty: IDependencyProperty read get_FooterMenuItemsSourceProperty;
    class property HeaderProperty: IDependencyProperty read get_HeaderProperty;
    class property HeaderTemplateProperty: IDependencyProperty read get_HeaderTemplateProperty;
    class property IsPaneOpenProperty: IDependencyProperty read get_IsPaneOpenProperty;
    class property IsPaneToggleButtonVisibleProperty: IDependencyProperty read get_IsPaneToggleButtonVisibleProperty;
    class property IsSettingsVisibleProperty: IDependencyProperty read get_IsSettingsVisibleProperty;
    class property IsTitleBarAutoPaddingEnabledProperty: IDependencyProperty read get_IsTitleBarAutoPaddingEnabledProperty;
    class property MenuItemContainerStyleProperty: IDependencyProperty read get_MenuItemContainerStyleProperty;
    class property MenuItemContainerStyleSelectorProperty: IDependencyProperty read get_MenuItemContainerStyleSelectorProperty;
    class property MenuItemTemplateProperty: IDependencyProperty read get_MenuItemTemplateProperty;
    class property MenuItemTemplateSelectorProperty: IDependencyProperty read get_MenuItemTemplateSelectorProperty;
    class property MenuItemsProperty: IDependencyProperty read get_MenuItemsProperty;
    class property MenuItemsSourceProperty: IDependencyProperty read get_MenuItemsSourceProperty;
    class property OpenPaneLengthProperty: IDependencyProperty read get_OpenPaneLengthProperty;
    class property PaneFooterProperty: IDependencyProperty read get_PaneFooterProperty;
    class property PaneToggleButtonStyleProperty: IDependencyProperty read get_PaneToggleButtonStyleProperty;
    class property SelectedItemProperty: IDependencyProperty read get_SelectedItemProperty;
    class property SettingsItemProperty: IDependencyProperty read get_SettingsItemProperty;

    // -> INavigationViewStatics2
    class function get_IsBackButtonVisibleProperty: IDependencyProperty; static; inline;
    class function get_IsBackEnabledProperty: IDependencyProperty; static; inline;
    class function get_PaneTitleProperty: IDependencyProperty; static; inline;
    class function get_PaneDisplayModeProperty: IDependencyProperty; static; inline;
    class function get_PaneHeaderProperty: IDependencyProperty; static; inline;
    class function get_PaneCustomContentProperty: IDependencyProperty; static; inline;
    class function get_ContentOverlayProperty: IDependencyProperty; static; inline;
    class function get_IsPaneVisibleProperty: IDependencyProperty; static; inline;
    class function get_SelectionFollowsFocusProperty: IDependencyProperty; static; inline;
    class function get_TemplateSettingsProperty: IDependencyProperty; static; inline;
    class function get_ShoulderNavigationEnabledProperty: IDependencyProperty; static; inline;
    class function get_OverflowLabelModeProperty: IDependencyProperty; static; inline;
    class property ContentOverlayProperty: IDependencyProperty read get_ContentOverlayProperty;
    class property IsBackButtonVisibleProperty: IDependencyProperty read get_IsBackButtonVisibleProperty;
    class property IsBackEnabledProperty: IDependencyProperty read get_IsBackEnabledProperty;
    class property IsPaneVisibleProperty: IDependencyProperty read get_IsPaneVisibleProperty;
    class property OverflowLabelModeProperty: IDependencyProperty read get_OverflowLabelModeProperty;
    class property PaneCustomContentProperty: IDependencyProperty read get_PaneCustomContentProperty;
    class property PaneDisplayModeProperty: IDependencyProperty read get_PaneDisplayModeProperty;
    class property PaneHeaderProperty: IDependencyProperty read get_PaneHeaderProperty;
    class property PaneTitleProperty: IDependencyProperty read get_PaneTitleProperty;
    class property SelectionFollowsFocusProperty: IDependencyProperty read get_SelectionFollowsFocusProperty;
    class property ShoulderNavigationEnabledProperty: IDependencyProperty read get_ShoulderNavigationEnabledProperty;
    class property TemplateSettingsProperty: IDependencyProperty read get_TemplateSettingsProperty;

    // -> INavigationViewFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): INavigationView; static; inline;
  end;

  // Microsoft.UI.Xaml.Controls.NavigationViewItemBase
  // Explicitly imported
  // Implements: Microsoft.UI.Xaml.Controls.INavigationViewItemBase
  // Implements: Microsoft.UI.Xaml.Controls.INavigationViewItemBase2
  // Statics: "Microsoft.UI.Xaml.Controls.INavigationViewItemBaseStatics"
  // Factory: "Microsoft.UI.Xaml.Controls.INavigationViewItemBaseFactory"
  // Instantiable: "INavigationViewItemBase"
  TNavigationViewItemBase = class(TWinRTGenericImportFSI<INavigationViewItemBaseFactory, INavigationViewItemBaseStatics, INavigationViewItemBase>)
  public
    // -> INavigationViewItemBaseStatics
    class function get_IsSelectedProperty: IDependencyProperty; static; inline;
    class property IsSelectedProperty: IDependencyProperty read get_IsSelectedProperty;

    // -> INavigationViewItemBaseFactory
  end;

  // Microsoft.UI.Xaml.Controls.NavigationViewItem
  // Explicitly imported
  // Implements: Microsoft.UI.Xaml.Controls.INavigationViewItem
  // Implements: Microsoft.UI.Xaml.Controls.INavigationViewItem2
  // Implements: Microsoft.UI.Xaml.Controls.INavigationViewItem3
  // Statics: "Microsoft.UI.Xaml.Controls.INavigationViewItemStatics"
  // Statics: "Microsoft.UI.Xaml.Controls.INavigationViewItemStatics2"
  // Statics: "Microsoft.UI.Xaml.Controls.INavigationViewItemStatics3"
  // Factory: "Microsoft.UI.Xaml.Controls.INavigationViewItemFactory"
  // Instantiable: "INavigationViewItem"
  TNavigationViewItem = class(TWinRTGenericImportFS3I<INavigationViewItemFactory, INavigationViewItemStatics, INavigationViewItemStatics2, INavigationViewItemStatics3, INavigationViewItem>)
  public
    // -> INavigationViewItemStatics
    class function get_IconProperty: IDependencyProperty; static; inline;
    class function get_CompactPaneLengthProperty: IDependencyProperty; static; inline;
    class property CompactPaneLengthProperty: IDependencyProperty read get_CompactPaneLengthProperty;
    class property IconProperty: IDependencyProperty read get_IconProperty;

    // -> INavigationViewItemStatics2
    class function get_SelectsOnInvokedProperty: IDependencyProperty; static; inline;
    class function get_IsExpandedProperty: IDependencyProperty; static; inline;
    class function get_HasUnrealizedChildrenProperty: IDependencyProperty; static; inline;
    class function get_IsChildSelectedProperty: IDependencyProperty; static; inline;
    class function get_MenuItemsProperty: IDependencyProperty; static; inline;
    class function get_MenuItemsSourceProperty: IDependencyProperty; static; inline;
    class property HasUnrealizedChildrenProperty: IDependencyProperty read get_HasUnrealizedChildrenProperty;
    class property IsChildSelectedProperty: IDependencyProperty read get_IsChildSelectedProperty;
    class property IsExpandedProperty: IDependencyProperty read get_IsExpandedProperty;
    class property MenuItemsProperty: IDependencyProperty read get_MenuItemsProperty;
    class property MenuItemsSourceProperty: IDependencyProperty read get_MenuItemsSourceProperty;
    class property SelectsOnInvokedProperty: IDependencyProperty read get_SelectsOnInvokedProperty;

    // -> INavigationViewItemStatics3
    class function get_InfoBadgeProperty: IDependencyProperty; static; inline;
    class property InfoBadgeProperty: IDependencyProperty read get_InfoBadgeProperty;

    // -> INavigationViewItemFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): INavigationViewItem; static; inline;
  end;

  // Microsoft.UI.Xaml.Controls.NavigationViewItemHeader
  // Explicitly imported
  // Implements: Microsoft.UI.Xaml.Controls.INavigationViewItemHeader
  // Factory: "Microsoft.UI.Xaml.Controls.INavigationViewItemHeaderFactory"
  // Instantiable: "INavigationViewItemHeader"
  TNavigationViewItemHeader = class(TWinRTGenericImportFI<INavigationViewItemHeaderFactory, INavigationViewItemHeader>)
  public
    // -> INavigationViewItemHeaderFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): INavigationViewItemHeader; static; inline;
  end;

  // Microsoft.UI.Xaml.Controls.NavigationViewItemInvokedEventArgs
  // Explicitly imported
  // Implements: Microsoft.UI.Xaml.Controls.INavigationViewItemInvokedEventArgs
  // Implements: Microsoft.UI.Xaml.Controls.INavigationViewItemInvokedEventArgs2
  // Instantiable: "INavigationViewItemInvokedEventArgs"
  TNavigationViewItemInvokedEventArgs = class(TWinRTGenericImportI<INavigationViewItemInvokedEventArgs>) end;

  // Microsoft.UI.Xaml.Controls.NavigationViewItemSeparator
  // Explicitly imported
  // Implements: Microsoft.UI.Xaml.Controls.INavigationViewItemSeparator
  // Factory: "Microsoft.UI.Xaml.Controls.INavigationViewItemSeparatorFactory"
  // Instantiable: "INavigationViewItemSeparator"
  TNavigationViewItemSeparator = class(TWinRTGenericImportFI<INavigationViewItemSeparatorFactory, INavigationViewItemSeparator>)
  public
    // -> INavigationViewItemSeparatorFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): INavigationViewItemSeparator; static; inline;
  end;

  // Microsoft.UI.Xaml.Controls.NavigationViewTemplateSettings
  // Explicitly imported
  // Implements: Microsoft.UI.Xaml.Controls.INavigationViewTemplateSettings
  // Implements: Microsoft.UI.Xaml.Controls.INavigationViewTemplateSettings2
  // Statics: "Microsoft.UI.Xaml.Controls.INavigationViewTemplateSettingsStatics"
  // Statics: "Microsoft.UI.Xaml.Controls.INavigationViewTemplateSettingsStatics2"
  // Factory: "Microsoft.UI.Xaml.Controls.INavigationViewTemplateSettingsFactory"
  // Instantiable: "INavigationViewTemplateSettings"
  TNavigationViewTemplateSettings = class(TWinRTGenericImportFS2I<INavigationViewTemplateSettingsFactory, INavigationViewTemplateSettingsStatics, INavigationViewTemplateSettingsStatics2, INavigationViewTemplateSettings>)
  public
    // -> INavigationViewTemplateSettingsStatics
    class function get_TopPaddingProperty: IDependencyProperty; static; inline;
    class function get_OverflowButtonVisibilityProperty: IDependencyProperty; static; inline;
    class function get_PaneToggleButtonVisibilityProperty: IDependencyProperty; static; inline;
    class function get_BackButtonVisibilityProperty: IDependencyProperty; static; inline;
    class function get_TopPaneVisibilityProperty: IDependencyProperty; static; inline;
    class function get_LeftPaneVisibilityProperty: IDependencyProperty; static; inline;
    class function get_SingleSelectionFollowsFocusProperty: IDependencyProperty; static; inline;
    class function get_PaneToggleButtonWidthProperty: IDependencyProperty; static; inline;
    class function get_SmallerPaneToggleButtonWidthProperty: IDependencyProperty; static; inline;
    class property BackButtonVisibilityProperty: IDependencyProperty read get_BackButtonVisibilityProperty;
    class property LeftPaneVisibilityProperty: IDependencyProperty read get_LeftPaneVisibilityProperty;
    class property OverflowButtonVisibilityProperty: IDependencyProperty read get_OverflowButtonVisibilityProperty;
    class property PaneToggleButtonVisibilityProperty: IDependencyProperty read get_PaneToggleButtonVisibilityProperty;
    class property PaneToggleButtonWidthProperty: IDependencyProperty read get_PaneToggleButtonWidthProperty;
    class property SingleSelectionFollowsFocusProperty: IDependencyProperty read get_SingleSelectionFollowsFocusProperty;
    class property SmallerPaneToggleButtonWidthProperty: IDependencyProperty read get_SmallerPaneToggleButtonWidthProperty;
    class property TopPaddingProperty: IDependencyProperty read get_TopPaddingProperty;
    class property TopPaneVisibilityProperty: IDependencyProperty read get_TopPaneVisibilityProperty;

    // -> INavigationViewTemplateSettingsStatics2
    class function get_OpenPaneLengthProperty: IDependencyProperty; static; inline;
    class property OpenPaneLengthProperty: IDependencyProperty read get_OpenPaneLengthProperty;

    // -> INavigationViewTemplateSettingsFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): INavigationViewTemplateSettings; static; inline;
  end;

  // Microsoft.UI.Xaml.Controls.NonVirtualizingLayout
  // Explicitly imported
  // Implements: Microsoft.UI.Xaml.Controls.INonVirtualizingLayout
  // Implements: Microsoft.UI.Xaml.Controls.INonVirtualizingLayoutOverrides
  // Factory: "Microsoft.UI.Xaml.Controls.INonVirtualizingLayoutFactory"
  // Instantiable: "INonVirtualizingLayout"
  TNonVirtualizingLayout = class(TWinRTGenericImportFI<INonVirtualizingLayoutFactory, INonVirtualizingLayout>)
  public
    // -> INonVirtualizingLayoutFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): INonVirtualizingLayout; static; inline;
  end;

  // Microsoft.UI.Xaml.Controls.NonVirtualizingLayoutContext
  // Explicitly imported
  // Implements: Microsoft.UI.Xaml.Controls.INonVirtualizingLayoutContext
  // Implements: Microsoft.UI.Xaml.Controls.INonVirtualizingLayoutContextOverrides
  // Factory: "Microsoft.UI.Xaml.Controls.INonVirtualizingLayoutContextFactory"
  // Instantiable: "INonVirtualizingLayoutContext"
  TNonVirtualizingLayoutContext = class(TWinRTGenericImportFI<INonVirtualizingLayoutContextFactory, INonVirtualizingLayoutContext>)
  public
    // -> INonVirtualizingLayoutContextFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): INonVirtualizingLayoutContext; static; inline;
  end;

  // Microsoft.UI.Xaml.Controls.NumberBox
  // Explicitly imported
  // Implements: Microsoft.UI.Xaml.Controls.INumberBox
  // Statics: "Microsoft.UI.Xaml.Controls.INumberBoxStatics"
  // Factory: "Microsoft.UI.Xaml.Controls.INumberBoxFactory"
  // Instantiable: "INumberBox"
  TNumberBox = class(TWinRTGenericImportFSI<INumberBoxFactory, INumberBoxStatics, INumberBox>)
  public
    // -> INumberBoxStatics
    class function get_MinimumProperty: IDependencyProperty; static; inline;
    class function get_MaximumProperty: IDependencyProperty; static; inline;
    class function get_ValueProperty: IDependencyProperty; static; inline;
    class function get_SmallChangeProperty: IDependencyProperty; static; inline;
    class function get_LargeChangeProperty: IDependencyProperty; static; inline;
    class function get_TextProperty: IDependencyProperty; static; inline;
    class function get_HeaderProperty: IDependencyProperty; static; inline;
    class function get_HeaderTemplateProperty: IDependencyProperty; static; inline;
    class function get_PlaceholderTextProperty: IDependencyProperty; static; inline;
    class function get_SelectionFlyoutProperty: IDependencyProperty; static; inline;
    class function get_SelectionHighlightColorProperty: IDependencyProperty; static; inline;
    class function get_TextReadingOrderProperty: IDependencyProperty; static; inline;
    class function get_PreventKeyboardDisplayOnProgrammaticFocusProperty: IDependencyProperty; static; inline;
    class function get_DescriptionProperty: IDependencyProperty; static; inline;
    class function get_ValidationModeProperty: IDependencyProperty; static; inline;
    class function get_SpinButtonPlacementModeProperty: IDependencyProperty; static; inline;
    class function get_IsWrapEnabledProperty: IDependencyProperty; static; inline;
    class function get_AcceptsExpressionProperty: IDependencyProperty; static; inline;
    class function get_NumberFormatterProperty: IDependencyProperty; static; inline;
    class property AcceptsExpressionProperty: IDependencyProperty read get_AcceptsExpressionProperty;
    class property DescriptionProperty: IDependencyProperty read get_DescriptionProperty;
    class property HeaderProperty: IDependencyProperty read get_HeaderProperty;
    class property HeaderTemplateProperty: IDependencyProperty read get_HeaderTemplateProperty;
    class property IsWrapEnabledProperty: IDependencyProperty read get_IsWrapEnabledProperty;
    class property LargeChangeProperty: IDependencyProperty read get_LargeChangeProperty;
    class property MaximumProperty: IDependencyProperty read get_MaximumProperty;
    class property MinimumProperty: IDependencyProperty read get_MinimumProperty;
    class property NumberFormatterProperty: IDependencyProperty read get_NumberFormatterProperty;
    class property PlaceholderTextProperty: IDependencyProperty read get_PlaceholderTextProperty;
    class property PreventKeyboardDisplayOnProgrammaticFocusProperty: IDependencyProperty read get_PreventKeyboardDisplayOnProgrammaticFocusProperty;
    class property SelectionFlyoutProperty: IDependencyProperty read get_SelectionFlyoutProperty;
    class property SelectionHighlightColorProperty: IDependencyProperty read get_SelectionHighlightColorProperty;
    class property SmallChangeProperty: IDependencyProperty read get_SmallChangeProperty;
    class property SpinButtonPlacementModeProperty: IDependencyProperty read get_SpinButtonPlacementModeProperty;
    class property TextProperty: IDependencyProperty read get_TextProperty;
    class property TextReadingOrderProperty: IDependencyProperty read get_TextReadingOrderProperty;
    class property ValidationModeProperty: IDependencyProperty read get_ValidationModeProperty;
    class property ValueProperty: IDependencyProperty read get_ValueProperty;

    // -> INumberBoxFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): INumberBox; static; inline;
  end;

  // Microsoft.UI.Xaml.Controls.UserControl
  // Explicitly imported
  // Implements: Microsoft.UI.Xaml.Controls.IUserControl
  // Statics: "Microsoft.UI.Xaml.Controls.IUserControlStatics"
  // Factory: "Microsoft.UI.Xaml.Controls.IUserControlFactory"
  // Instantiable: "IUserControl"
  TUserControl = class(TWinRTGenericImportFSI<IUserControlFactory, IUserControlStatics, IUserControl>)
  public
    // -> IUserControlStatics
    class function get_ContentProperty: IDependencyProperty; static; inline;
    class property ContentProperty: IDependencyProperty read get_ContentProperty;

    // -> IUserControlFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IUserControl; static; inline;
  end;

  // Microsoft.UI.Xaml.Controls.Page
  // Explicitly imported
  // Implements: Microsoft.UI.Xaml.Controls.IPage
  // Implements: Microsoft.UI.Xaml.Controls.IPageOverrides
  // Statics: "Microsoft.UI.Xaml.Controls.IPageStatics"
  // Factory: "Microsoft.UI.Xaml.Controls.IPageFactory"
  // Instantiable: "IPage"
  TPage = class(TWinRTGenericImportFSI<IPageFactory, IPageStatics, IPage>)
  public
    // -> IPageStatics
    class function get_FrameProperty: IDependencyProperty; static; inline;
    class function get_TopAppBarProperty: IDependencyProperty; static; inline;
    class function get_BottomAppBarProperty: IDependencyProperty; static; inline;
    class property BottomAppBarProperty: IDependencyProperty read get_BottomAppBarProperty;
    class property FrameProperty: IDependencyProperty read get_FrameProperty;
    class property TopAppBarProperty: IDependencyProperty read get_TopAppBarProperty;

    // -> IPageFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IPage; static; inline;
  end;

  // Microsoft.UI.Xaml.Controls.ParallaxView
  // Explicitly imported
  // Implements: Microsoft.UI.Xaml.Controls.IParallaxView
  // Statics: "Microsoft.UI.Xaml.Controls.IParallaxViewStatics"
  // Factory: "Microsoft.UI.Xaml.Controls.IParallaxViewFactory"
  // Instantiable: "IParallaxView"
  TParallaxView = class(TWinRTGenericImportFSI<IParallaxViewFactory, IParallaxViewStatics, IParallaxView>)
  public
    // -> IParallaxViewStatics
    class function get_ChildProperty: IDependencyProperty; static; inline;
    class function get_HorizontalSourceEndOffsetProperty: IDependencyProperty; static; inline;
    class function get_HorizontalSourceOffsetKindProperty: IDependencyProperty; static; inline;
    class function get_HorizontalSourceStartOffsetProperty: IDependencyProperty; static; inline;
    class function get_MaxHorizontalShiftRatioProperty: IDependencyProperty; static; inline;
    class function get_HorizontalShiftProperty: IDependencyProperty; static; inline;
    class function get_IsHorizontalShiftClampedProperty: IDependencyProperty; static; inline;
    class function get_IsVerticalShiftClampedProperty: IDependencyProperty; static; inline;
    class function get_SourceProperty: IDependencyProperty; static; inline;
    class function get_VerticalSourceEndOffsetProperty: IDependencyProperty; static; inline;
    class function get_VerticalSourceOffsetKindProperty: IDependencyProperty; static; inline;
    class function get_VerticalSourceStartOffsetProperty: IDependencyProperty; static; inline;
    class function get_MaxVerticalShiftRatioProperty: IDependencyProperty; static; inline;
    class function get_VerticalShiftProperty: IDependencyProperty; static; inline;
    class property ChildProperty: IDependencyProperty read get_ChildProperty;
    class property HorizontalShiftProperty: IDependencyProperty read get_HorizontalShiftProperty;
    class property HorizontalSourceEndOffsetProperty: IDependencyProperty read get_HorizontalSourceEndOffsetProperty;
    class property HorizontalSourceOffsetKindProperty: IDependencyProperty read get_HorizontalSourceOffsetKindProperty;
    class property HorizontalSourceStartOffsetProperty: IDependencyProperty read get_HorizontalSourceStartOffsetProperty;
    class property IsHorizontalShiftClampedProperty: IDependencyProperty read get_IsHorizontalShiftClampedProperty;
    class property IsVerticalShiftClampedProperty: IDependencyProperty read get_IsVerticalShiftClampedProperty;
    class property MaxHorizontalShiftRatioProperty: IDependencyProperty read get_MaxHorizontalShiftRatioProperty;
    class property MaxVerticalShiftRatioProperty: IDependencyProperty read get_MaxVerticalShiftRatioProperty;
    class property SourceProperty: IDependencyProperty read get_SourceProperty;
    class property VerticalShiftProperty: IDependencyProperty read get_VerticalShiftProperty;
    class property VerticalSourceEndOffsetProperty: IDependencyProperty read get_VerticalSourceEndOffsetProperty;
    class property VerticalSourceOffsetKindProperty: IDependencyProperty read get_VerticalSourceOffsetKindProperty;
    class property VerticalSourceStartOffsetProperty: IDependencyProperty read get_VerticalSourceStartOffsetProperty;

    // -> IParallaxViewFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IParallaxView; static; inline;
  end;

  // Microsoft.UI.Xaml.Controls.PasswordBox
  // Explicitly imported
  // Implements: Microsoft.UI.Xaml.Controls.IPasswordBox
  // Statics: "Microsoft.UI.Xaml.Controls.IPasswordBoxStatics"
  // Instantiable: "IPasswordBox"
  TPasswordBox = class(TWinRTGenericImportSI<IPasswordBoxStatics, IPasswordBox>)
  public
    // -> IPasswordBoxStatics
    class function get_PasswordProperty: IDependencyProperty; static; inline;
    class function get_PasswordCharProperty: IDependencyProperty; static; inline;
    class function get_IsPasswordRevealButtonEnabledProperty: IDependencyProperty; static; inline;
    class function get_MaxLengthProperty: IDependencyProperty; static; inline;
    class function get_HeaderProperty: IDependencyProperty; static; inline;
    class function get_HeaderTemplateProperty: IDependencyProperty; static; inline;
    class function get_PlaceholderTextProperty: IDependencyProperty; static; inline;
    class function get_SelectionHighlightColorProperty: IDependencyProperty; static; inline;
    class function get_PreventKeyboardDisplayOnProgrammaticFocusProperty: IDependencyProperty; static; inline;
    class function get_PasswordRevealModeProperty: IDependencyProperty; static; inline;
    class function get_TextReadingOrderProperty: IDependencyProperty; static; inline;
    class function get_InputScopeProperty: IDependencyProperty; static; inline;
    class function get_CanPasteClipboardContentProperty: IDependencyProperty; static; inline;
    class function get_SelectionFlyoutProperty: IDependencyProperty; static; inline;
    class function get_DescriptionProperty: IDependencyProperty; static; inline;
    class property CanPasteClipboardContentProperty: IDependencyProperty read get_CanPasteClipboardContentProperty;
    class property DescriptionProperty: IDependencyProperty read get_DescriptionProperty;
    class property HeaderProperty: IDependencyProperty read get_HeaderProperty;
    class property HeaderTemplateProperty: IDependencyProperty read get_HeaderTemplateProperty;
    class property InputScopeProperty: IDependencyProperty read get_InputScopeProperty;
    class property IsPasswordRevealButtonEnabledProperty: IDependencyProperty read get_IsPasswordRevealButtonEnabledProperty;
    class property MaxLengthProperty: IDependencyProperty read get_MaxLengthProperty;
    class property PasswordCharProperty: IDependencyProperty read get_PasswordCharProperty;
    class property PasswordProperty: IDependencyProperty read get_PasswordProperty;
    class property PasswordRevealModeProperty: IDependencyProperty read get_PasswordRevealModeProperty;
    class property PlaceholderTextProperty: IDependencyProperty read get_PlaceholderTextProperty;
    class property PreventKeyboardDisplayOnProgrammaticFocusProperty: IDependencyProperty read get_PreventKeyboardDisplayOnProgrammaticFocusProperty;
    class property SelectionFlyoutProperty: IDependencyProperty read get_SelectionFlyoutProperty;
    class property SelectionHighlightColorProperty: IDependencyProperty read get_SelectionHighlightColorProperty;
    class property TextReadingOrderProperty: IDependencyProperty read get_TextReadingOrderProperty;
  end;

  // Microsoft.UI.Xaml.Controls.PathIcon
  // Explicitly imported
  // Implements: Microsoft.UI.Xaml.Controls.IPathIcon
  // Statics: "Microsoft.UI.Xaml.Controls.IPathIconStatics"
  // Factory: "Microsoft.UI.Xaml.Controls.IPathIconFactory"
  // Instantiable: "IPathIcon"
  TPathIcon = class(TWinRTGenericImportFSI<IPathIconFactory, IPathIconStatics, IPathIcon>)
  public
    // -> IPathIconStatics
    class function get_DataProperty: IDependencyProperty; static; inline;
    class property DataProperty: IDependencyProperty read get_DataProperty;

    // -> IPathIconFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IPathIcon; static; inline;
  end;

  // Microsoft.UI.Xaml.Controls.PathIconSource
  // Explicitly imported
  // Implements: Microsoft.UI.Xaml.Controls.IPathIconSource
  // Statics: "Microsoft.UI.Xaml.Controls.IPathIconSourceStatics"
  // Factory: "Microsoft.UI.Xaml.Controls.IPathIconSourceFactory"
  // Instantiable: "IPathIconSource"
  TPathIconSource = class(TWinRTGenericImportFSI<IPathIconSourceFactory, IPathIconSourceStatics, IPathIconSource>)
  public
    // -> IPathIconSourceStatics
    class function get_DataProperty: IDependencyProperty; static; inline;
    class property DataProperty: IDependencyProperty read get_DataProperty;

    // -> IPathIconSourceFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IPathIconSource; static; inline;
  end;

  // Microsoft.UI.Xaml.Controls.PersonPicture
  // Explicitly imported
  // Implements: Microsoft.UI.Xaml.Controls.IPersonPicture
  // Statics: "Microsoft.UI.Xaml.Controls.IPersonPictureStatics"
  // Factory: "Microsoft.UI.Xaml.Controls.IPersonPictureFactory"
  // Instantiable: "IPersonPicture"
  TPersonPicture = class(TWinRTGenericImportFSI<IPersonPictureFactory, IPersonPictureStatics, IPersonPicture>)
  public
    // -> IPersonPictureStatics
    class function get_BadgeNumberProperty: IDependencyProperty; static; inline;
    class function get_BadgeGlyphProperty: IDependencyProperty; static; inline;
    class function get_BadgeImageSourceProperty: IDependencyProperty; static; inline;
    class function get_BadgeTextProperty: IDependencyProperty; static; inline;
    class function get_IsGroupProperty: IDependencyProperty; static; inline;
    class function get_ContactProperty: IDependencyProperty; static; inline;
    class function get_DisplayNameProperty: IDependencyProperty; static; inline;
    class function get_InitialsProperty: IDependencyProperty; static; inline;
    class function get_PreferSmallImageProperty: IDependencyProperty; static; inline;
    class function get_ProfilePictureProperty: IDependencyProperty; static; inline;
    class property BadgeGlyphProperty: IDependencyProperty read get_BadgeGlyphProperty;
    class property BadgeImageSourceProperty: IDependencyProperty read get_BadgeImageSourceProperty;
    class property BadgeNumberProperty: IDependencyProperty read get_BadgeNumberProperty;
    class property BadgeTextProperty: IDependencyProperty read get_BadgeTextProperty;
    class property ContactProperty: IDependencyProperty read get_ContactProperty;
    class property DisplayNameProperty: IDependencyProperty read get_DisplayNameProperty;
    class property InitialsProperty: IDependencyProperty read get_InitialsProperty;
    class property IsGroupProperty: IDependencyProperty read get_IsGroupProperty;
    class property PreferSmallImageProperty: IDependencyProperty read get_PreferSmallImageProperty;
    class property ProfilePictureProperty: IDependencyProperty read get_ProfilePictureProperty;

    // -> IPersonPictureFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IPersonPicture; static; inline;
  end;

  // Microsoft.UI.Xaml.Controls.PickerConfirmedEventArgs
  // Explicitly imported
  // Implements: Microsoft.UI.Xaml.Controls.IPickerConfirmedEventArgs
  // Instantiable: "IPickerConfirmedEventArgs"
  TPickerConfirmedEventArgs = class(TWinRTGenericImportI<IPickerConfirmedEventArgs>) end;

  // Microsoft.UI.Xaml.Controls.PickerFlyout
  // Explicitly imported
  // Implements: Microsoft.UI.Xaml.Controls.IPickerFlyout
  // Statics: "Microsoft.UI.Xaml.Controls.IPickerFlyoutStatics"
  // Instantiable: "IPickerFlyout"
  TPickerFlyout = class(TWinRTGenericImportSI<IPickerFlyoutStatics, IPickerFlyout>)
  public
    // -> IPickerFlyoutStatics
    class function get_ContentProperty: IDependencyProperty; static; inline;
    class function get_ConfirmationButtonsVisibleProperty: IDependencyProperty; static; inline;
    class property ConfirmationButtonsVisibleProperty: IDependencyProperty read get_ConfirmationButtonsVisibleProperty;
    class property ContentProperty: IDependencyProperty read get_ContentProperty;
  end;

  // Microsoft.UI.Xaml.Controls.PipsPager
  // Explicitly imported
  // Implements: Microsoft.UI.Xaml.Controls.IPipsPager
  // Statics: "Microsoft.UI.Xaml.Controls.IPipsPagerStatics"
  // Factory: "Microsoft.UI.Xaml.Controls.IPipsPagerFactory"
  // Instantiable: "IPipsPager"
  TPipsPager = class(TWinRTGenericImportFSI<IPipsPagerFactory, IPipsPagerStatics, IPipsPager>)
  public
    // -> IPipsPagerStatics
    class function get_NumberOfPagesProperty: IDependencyProperty; static; inline;
    class function get_SelectedPageIndexProperty: IDependencyProperty; static; inline;
    class function get_MaxVisiblePipsProperty: IDependencyProperty; static; inline;
    class function get_OrientationProperty: IDependencyProperty; static; inline;
    class function get_PreviousButtonVisibilityProperty: IDependencyProperty; static; inline;
    class function get_NextButtonVisibilityProperty: IDependencyProperty; static; inline;
    class function get_PreviousButtonStyleProperty: IDependencyProperty; static; inline;
    class function get_NextButtonStyleProperty: IDependencyProperty; static; inline;
    class function get_SelectedPipStyleProperty: IDependencyProperty; static; inline;
    class function get_NormalPipStyleProperty: IDependencyProperty; static; inline;
    class property MaxVisiblePipsProperty: IDependencyProperty read get_MaxVisiblePipsProperty;
    class property NextButtonStyleProperty: IDependencyProperty read get_NextButtonStyleProperty;
    class property NextButtonVisibilityProperty: IDependencyProperty read get_NextButtonVisibilityProperty;
    class property NormalPipStyleProperty: IDependencyProperty read get_NormalPipStyleProperty;
    class property NumberOfPagesProperty: IDependencyProperty read get_NumberOfPagesProperty;
    class property OrientationProperty: IDependencyProperty read get_OrientationProperty;
    class property PreviousButtonStyleProperty: IDependencyProperty read get_PreviousButtonStyleProperty;
    class property PreviousButtonVisibilityProperty: IDependencyProperty read get_PreviousButtonVisibilityProperty;
    class property SelectedPageIndexProperty: IDependencyProperty read get_SelectedPageIndexProperty;
    class property SelectedPipStyleProperty: IDependencyProperty read get_SelectedPipStyleProperty;

    // -> IPipsPagerFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IPipsPager; static; inline;
  end;

  // Microsoft.UI.Xaml.Controls.Pivot
  // Explicitly imported
  // Implements: Microsoft.UI.Xaml.Controls.IPivot
  // Statics: "Microsoft.UI.Xaml.Controls.IPivotStatics"
  // Factory: "Microsoft.UI.Xaml.Controls.IPivotFactory"
  // Instantiable: "IPivot"
  TPivot = class(TWinRTGenericImportFSI<IPivotFactory, IPivotStatics, IPivot>)
  public
    // -> IPivotStatics
    class function get_TitleProperty: IDependencyProperty; static; inline;
    class function get_TitleTemplateProperty: IDependencyProperty; static; inline;
    class function get_LeftHeaderProperty: IDependencyProperty; static; inline;
    class function get_LeftHeaderTemplateProperty: IDependencyProperty; static; inline;
    class function get_RightHeaderProperty: IDependencyProperty; static; inline;
    class function get_RightHeaderTemplateProperty: IDependencyProperty; static; inline;
    class function get_HeaderTemplateProperty: IDependencyProperty; static; inline;
    class function get_SelectedIndexProperty: IDependencyProperty; static; inline;
    class function get_SelectedItemProperty: IDependencyProperty; static; inline;
    class function get_IsLockedProperty: IDependencyProperty; static; inline;
    class function get_HeaderFocusVisualPlacementProperty: IDependencyProperty; static; inline;
    class function get_IsHeaderItemsCarouselEnabledProperty: IDependencyProperty; static; inline;
    class function get_SlideInAnimationGroupProperty: IDependencyProperty; static; inline;
    class function GetSlideInAnimationGroup(element: IFrameworkElement): PivotSlideInAnimationGroup; static; inline;
    class procedure SetSlideInAnimationGroup(element: IFrameworkElement; value: PivotSlideInAnimationGroup); static; inline;
    class property HeaderFocusVisualPlacementProperty: IDependencyProperty read get_HeaderFocusVisualPlacementProperty;
    class property HeaderTemplateProperty: IDependencyProperty read get_HeaderTemplateProperty;
    class property IsHeaderItemsCarouselEnabledProperty: IDependencyProperty read get_IsHeaderItemsCarouselEnabledProperty;
    class property IsLockedProperty: IDependencyProperty read get_IsLockedProperty;
    class property LeftHeaderProperty: IDependencyProperty read get_LeftHeaderProperty;
    class property LeftHeaderTemplateProperty: IDependencyProperty read get_LeftHeaderTemplateProperty;
    class property RightHeaderProperty: IDependencyProperty read get_RightHeaderProperty;
    class property RightHeaderTemplateProperty: IDependencyProperty read get_RightHeaderTemplateProperty;
    class property SelectedIndexProperty: IDependencyProperty read get_SelectedIndexProperty;
    class property SelectedItemProperty: IDependencyProperty read get_SelectedItemProperty;
    class property SlideInAnimationGroupProperty: IDependencyProperty read get_SlideInAnimationGroupProperty;
    class property TitleProperty: IDependencyProperty read get_TitleProperty;
    class property TitleTemplateProperty: IDependencyProperty read get_TitleTemplateProperty;

    // -> IPivotFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IPivot; static; inline;
  end;

  // Microsoft.UI.Xaml.Controls.PivotItem
  // Explicitly imported
  // Implements: Microsoft.UI.Xaml.Controls.IPivotItem
  // Statics: "Microsoft.UI.Xaml.Controls.IPivotItemStatics"
  // Factory: "Microsoft.UI.Xaml.Controls.IPivotItemFactory"
  // Instantiable: "IPivotItem"
  TPivotItem = class(TWinRTGenericImportFSI<IPivotItemFactory, IPivotItemStatics, IPivotItem>)
  public
    // -> IPivotItemStatics
    class function get_HeaderProperty: IDependencyProperty; static; inline;
    class property HeaderProperty: IDependencyProperty read get_HeaderProperty;

    // -> IPivotItemFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IPivotItem; static; inline;
  end;

  // Microsoft.UI.Xaml.Controls.PivotItemEventArgs
  // Explicitly imported
  // Implements: Microsoft.UI.Xaml.Controls.IPivotItemEventArgs
  // Instantiable: "IPivotItemEventArgs"
  TPivotItemEventArgs = class(TWinRTGenericImportI<IPivotItemEventArgs>) end;

  // Microsoft.UI.Xaml.Controls.Primitives.AutoSuggestBoxHelper
  // Explicitly imported
  // Implements: Microsoft.UI.Xaml.Controls.Primitives.IAutoSuggestBoxHelper
  // Statics: "Microsoft.UI.Xaml.Controls.Primitives.IAutoSuggestBoxHelperStatics"
  TPrimitives_AutoSuggestBoxHelper = class(TWinRTGenericImportS<Primitives_IAutoSuggestBoxHelperStatics>)
  public
    // -> Primitives_IAutoSuggestBoxHelperStatics
    class function get_KeepInteriorCornersSquareProperty: IDependencyProperty; static; inline;
    class procedure SetKeepInteriorCornersSquare(autoSuggestBox: IAutoSuggestBox; value: Boolean); static; inline;
    class function GetKeepInteriorCornersSquare(autoSuggestBox: IAutoSuggestBox): Boolean; static; inline;
    class property KeepInteriorCornersSquareProperty: IDependencyProperty read get_KeepInteriorCornersSquareProperty;
  end;

  // Microsoft.UI.Xaml.Controls.Primitives.CalendarPanel
  // Explicitly imported
  // Implements: Microsoft.UI.Xaml.Controls.Primitives.ICalendarPanel
  // Instantiable: "Primitives_ICalendarPanel"
  TPrimitives_CalendarPanel = class(TWinRTGenericImportI<Primitives_ICalendarPanel>) end;

  // Microsoft.UI.Xaml.Controls.VirtualizingPanel
  // Explicitly imported
  // Implements: Microsoft.UI.Xaml.Controls.IVirtualizingPanel
  // Implements: Microsoft.UI.Xaml.Controls.IVirtualizingPanelProtected
  // Implements: Microsoft.UI.Xaml.Controls.IVirtualizingPanelOverrides
  // Factory: "Microsoft.UI.Xaml.Controls.IVirtualizingPanelFactory"
  // Instantiable: "IVirtualizingPanel"
  TVirtualizingPanel = class(TWinRTGenericImportFI<IVirtualizingPanelFactory, IVirtualizingPanel>)
  public
    // -> IVirtualizingPanelFactory
  end;

  // Microsoft.UI.Xaml.Controls.Primitives.CarouselPanel
  // Explicitly imported
  // Implements: Microsoft.UI.Xaml.Controls.Primitives.ICarouselPanel
  // Implements: Microsoft.UI.Xaml.Controls.Primitives.IScrollSnapPointsInfo
  // Factory: "Microsoft.UI.Xaml.Controls.Primitives.ICarouselPanelFactory"
  // Instantiable: "Primitives_ICarouselPanel"
  TPrimitives_CarouselPanel = class(TWinRTGenericImportFI<Primitives_ICarouselPanelFactory, Primitives_ICarouselPanel>)
  public
    // -> Primitives_ICarouselPanelFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): Primitives_ICarouselPanel; static; inline;
  end;

  // Microsoft.UI.Xaml.Controls.Primitives.RangeBase
  // Explicitly imported
  // Implements: Microsoft.UI.Xaml.Controls.Primitives.IRangeBase
  // Implements: Microsoft.UI.Xaml.Controls.Primitives.IRangeBaseOverrides
  // Statics: "Microsoft.UI.Xaml.Controls.Primitives.IRangeBaseStatics"
  // Factory: "Microsoft.UI.Xaml.Controls.Primitives.IRangeBaseFactory"
  // Instantiable: "Primitives_IRangeBase"
  TPrimitives_RangeBase = class(TWinRTGenericImportFSI<Primitives_IRangeBaseFactory, Primitives_IRangeBaseStatics, Primitives_IRangeBase>)
  public
    // -> Primitives_IRangeBaseStatics
    class function get_MinimumProperty: IDependencyProperty; static; inline;
    class function get_MaximumProperty: IDependencyProperty; static; inline;
    class function get_SmallChangeProperty: IDependencyProperty; static; inline;
    class function get_LargeChangeProperty: IDependencyProperty; static; inline;
    class function get_ValueProperty: IDependencyProperty; static; inline;
    class property LargeChangeProperty: IDependencyProperty read get_LargeChangeProperty;
    class property MaximumProperty: IDependencyProperty read get_MaximumProperty;
    class property MinimumProperty: IDependencyProperty read get_MinimumProperty;
    class property SmallChangeProperty: IDependencyProperty read get_SmallChangeProperty;
    class property ValueProperty: IDependencyProperty read get_ValueProperty;

    // -> Primitives_IRangeBaseFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): Primitives_IRangeBase; static; inline;
  end;

  // Microsoft.UI.Xaml.Controls.Slider
  // Explicitly imported
  // Implements: Microsoft.UI.Xaml.Controls.ISlider
  // Statics: "Microsoft.UI.Xaml.Controls.ISliderStatics"
  // Factory: "Microsoft.UI.Xaml.Controls.ISliderFactory"
  // Instantiable: "ISlider"
  TSlider = class(TWinRTGenericImportFSI<ISliderFactory, ISliderStatics, ISlider>)
  public
    // -> ISliderStatics
    class function get_IntermediateValueProperty: IDependencyProperty; static; inline;
    class function get_StepFrequencyProperty: IDependencyProperty; static; inline;
    class function get_SnapsToProperty: IDependencyProperty; static; inline;
    class function get_TickFrequencyProperty: IDependencyProperty; static; inline;
    class function get_TickPlacementProperty: IDependencyProperty; static; inline;
    class function get_OrientationProperty: IDependencyProperty; static; inline;
    class function get_IsDirectionReversedProperty: IDependencyProperty; static; inline;
    class function get_IsThumbToolTipEnabledProperty: IDependencyProperty; static; inline;
    class function get_ThumbToolTipValueConverterProperty: IDependencyProperty; static; inline;
    class function get_HeaderProperty: IDependencyProperty; static; inline;
    class function get_HeaderTemplateProperty: IDependencyProperty; static; inline;
    class property HeaderProperty: IDependencyProperty read get_HeaderProperty;
    class property HeaderTemplateProperty: IDependencyProperty read get_HeaderTemplateProperty;
    class property IntermediateValueProperty: IDependencyProperty read get_IntermediateValueProperty;
    class property IsDirectionReversedProperty: IDependencyProperty read get_IsDirectionReversedProperty;
    class property IsThumbToolTipEnabledProperty: IDependencyProperty read get_IsThumbToolTipEnabledProperty;
    class property OrientationProperty: IDependencyProperty read get_OrientationProperty;
    class property SnapsToProperty: IDependencyProperty read get_SnapsToProperty;
    class property StepFrequencyProperty: IDependencyProperty read get_StepFrequencyProperty;
    class property ThumbToolTipValueConverterProperty: IDependencyProperty read get_ThumbToolTipValueConverterProperty;
    class property TickFrequencyProperty: IDependencyProperty read get_TickFrequencyProperty;
    class property TickPlacementProperty: IDependencyProperty read get_TickPlacementProperty;

    // -> ISliderFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): ISlider; static; inline;
  end;

  // Microsoft.UI.Xaml.Controls.Primitives.ColorPickerSlider
  // Explicitly imported
  // Implements: Microsoft.UI.Xaml.Controls.Primitives.IColorPickerSlider
  // Statics: "Microsoft.UI.Xaml.Controls.Primitives.IColorPickerSliderStatics"
  // Factory: "Microsoft.UI.Xaml.Controls.Primitives.IColorPickerSliderFactory"
  // Instantiable: "Primitives_IColorPickerSlider"
  TPrimitives_ColorPickerSlider = class(TWinRTGenericImportFSI<Primitives_IColorPickerSliderFactory, Primitives_IColorPickerSliderStatics, Primitives_IColorPickerSlider>)
  public
    // -> Primitives_IColorPickerSliderStatics
    class function get_ColorChannelProperty: IDependencyProperty; static; inline;
    class property ColorChannelProperty: IDependencyProperty read get_ColorChannelProperty;

    // -> Primitives_IColorPickerSliderFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): Primitives_IColorPickerSlider; static; inline;
  end;

  // Microsoft.UI.Xaml.Controls.Primitives.ColorSpectrum
  // Explicitly imported
  // Implements: Microsoft.UI.Xaml.Controls.Primitives.IColorSpectrum
  // Statics: "Microsoft.UI.Xaml.Controls.Primitives.IColorSpectrumStatics"
  // Factory: "Microsoft.UI.Xaml.Controls.Primitives.IColorSpectrumFactory"
  // Instantiable: "Primitives_IColorSpectrum"
  TPrimitives_ColorSpectrum = class(TWinRTGenericImportFSI<Primitives_IColorSpectrumFactory, Primitives_IColorSpectrumStatics, Primitives_IColorSpectrum>)
  public
    // -> Primitives_IColorSpectrumStatics
    class function get_ColorProperty: IDependencyProperty; static; inline;
    class function get_HsvColorProperty: IDependencyProperty; static; inline;
    class function get_MinHueProperty: IDependencyProperty; static; inline;
    class function get_MaxHueProperty: IDependencyProperty; static; inline;
    class function get_MinSaturationProperty: IDependencyProperty; static; inline;
    class function get_MaxSaturationProperty: IDependencyProperty; static; inline;
    class function get_MinValueProperty: IDependencyProperty; static; inline;
    class function get_MaxValueProperty: IDependencyProperty; static; inline;
    class function get_ShapeProperty: IDependencyProperty; static; inline;
    class function get_ComponentsProperty: IDependencyProperty; static; inline;
    class property ColorProperty: IDependencyProperty read get_ColorProperty;
    class property ComponentsProperty: IDependencyProperty read get_ComponentsProperty;
    class property HsvColorProperty: IDependencyProperty read get_HsvColorProperty;
    class property MaxHueProperty: IDependencyProperty read get_MaxHueProperty;
    class property MaxSaturationProperty: IDependencyProperty read get_MaxSaturationProperty;
    class property MaxValueProperty: IDependencyProperty read get_MaxValueProperty;
    class property MinHueProperty: IDependencyProperty read get_MinHueProperty;
    class property MinSaturationProperty: IDependencyProperty read get_MinSaturationProperty;
    class property MinValueProperty: IDependencyProperty read get_MinValueProperty;
    class property ShapeProperty: IDependencyProperty read get_ShapeProperty;

    // -> Primitives_IColorSpectrumFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): Primitives_IColorSpectrum; static; inline;
  end;

  // Microsoft.UI.Xaml.Controls.Primitives.ColumnMajorUniformToLargestGridLayout
  // Explicitly imported
  // Implements: Microsoft.UI.Xaml.Controls.Primitives.IColumnMajorUniformToLargestGridLayout
  // Statics: "Microsoft.UI.Xaml.Controls.Primitives.IColumnMajorUniformToLargestGridLayoutStatics"
  // Factory: "Microsoft.UI.Xaml.Controls.Primitives.IColumnMajorUniformToLargestGridLayoutFactory"
  // Instantiable: "Primitives_IColumnMajorUniformToLargestGridLayout"
  TPrimitives_ColumnMajorUniformToLargestGridLayout = class(TWinRTGenericImportFSI<Primitives_IColumnMajorUniformToLargestGridLayoutFactory, Primitives_IColumnMajorUniformToLargestGridLayoutStatics, Primitives_IColumnMajorUniformToLargestGridLayout>)
  public
    // -> Primitives_IColumnMajorUniformToLargestGridLayoutStatics
    class function get_MaxColumnsProperty: IDependencyProperty; static; inline;
    class function get_ColumnSpacingProperty: IDependencyProperty; static; inline;
    class function get_RowSpacingProperty: IDependencyProperty; static; inline;
    class property ColumnSpacingProperty: IDependencyProperty read get_ColumnSpacingProperty;
    class property MaxColumnsProperty: IDependencyProperty read get_MaxColumnsProperty;
    class property RowSpacingProperty: IDependencyProperty read get_RowSpacingProperty;

    // -> Primitives_IColumnMajorUniformToLargestGridLayoutFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): Primitives_IColumnMajorUniformToLargestGridLayout; static; inline;
  end;

  // Microsoft.UI.Xaml.Controls.Primitives.ComboBoxHelper
  // Explicitly imported
  // Implements: Microsoft.UI.Xaml.Controls.Primitives.IComboBoxHelper
  // Statics: "Microsoft.UI.Xaml.Controls.Primitives.IComboBoxHelperStatics"
  TPrimitives_ComboBoxHelper = class(TWinRTGenericImportS<Primitives_IComboBoxHelperStatics>)
  public
    // -> Primitives_IComboBoxHelperStatics
    class function get_KeepInteriorCornersSquareProperty: IDependencyProperty; static; inline;
    class procedure SetKeepInteriorCornersSquare(comboBox: IComboBox; value: Boolean); static; inline;
    class function GetKeepInteriorCornersSquare(comboBox: IComboBox): Boolean; static; inline;
    class property KeepInteriorCornersSquareProperty: IDependencyProperty read get_KeepInteriorCornersSquareProperty;
  end;

  // Microsoft.UI.Xaml.Controls.Primitives.CommandBarFlyoutCommandBar
  // Explicitly imported
  // Implements: Microsoft.UI.Xaml.Controls.Primitives.ICommandBarFlyoutCommandBar
  // Factory: "Microsoft.UI.Xaml.Controls.Primitives.ICommandBarFlyoutCommandBarFactory"
  // Instantiable: "Primitives_ICommandBarFlyoutCommandBar"
  TPrimitives_CommandBarFlyoutCommandBar = class(TWinRTGenericImportFI<Primitives_ICommandBarFlyoutCommandBarFactory, Primitives_ICommandBarFlyoutCommandBar>)
  public
    // -> Primitives_ICommandBarFlyoutCommandBarFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): Primitives_ICommandBarFlyoutCommandBar; static; inline;
  end;

  // Microsoft.UI.Xaml.Controls.Primitives.CommandBarFlyoutCommandBarAutomationProperties
  // Explicitly imported
  // Statics: "Microsoft.UI.Xaml.Controls.Primitives.ICommandBarFlyoutCommandBarAutomationPropertiesStatics"
  TPrimitives_CommandBarFlyoutCommandBarAutomationProperties = class(TWinRTGenericImportS<Primitives_ICommandBarFlyoutCommandBarAutomationPropertiesStatics>)
  public
    // -> Primitives_ICommandBarFlyoutCommandBarAutomationPropertiesStatics
    class function get_ControlTypeProperty: IDependencyProperty; static; inline;
    class function GetControlType(element: IUIElement): Automation_Peers_AutomationControlType; static; inline;
    class procedure SetControlType(element: IUIElement; value: Automation_Peers_AutomationControlType); static; inline;
    class property ControlTypeProperty: IDependencyProperty read get_ControlTypeProperty;
  end;

  // Microsoft.UI.Xaml.Controls.Primitives.CornerRadiusFilterConverter
  // Explicitly imported
  // Implements: Microsoft.UI.Xaml.Controls.Primitives.ICornerRadiusFilterConverter
  // Implements: Microsoft.UI.Xaml.Data.IValueConverter
  // Statics: "Microsoft.UI.Xaml.Controls.Primitives.ICornerRadiusFilterConverterStatics"
  // Instantiable: "Primitives_ICornerRadiusFilterConverter"
  TPrimitives_CornerRadiusFilterConverter = class(TWinRTGenericImportSI<Primitives_ICornerRadiusFilterConverterStatics, Primitives_ICornerRadiusFilterConverter>)
  public
    // -> Primitives_ICornerRadiusFilterConverterStatics
    class function get_FilterProperty: IDependencyProperty; static; inline;
    class function get_ScaleProperty: IDependencyProperty; static; inline;
    class property FilterProperty: IDependencyProperty read get_FilterProperty;
    class property ScaleProperty: IDependencyProperty read get_ScaleProperty;
  end;

  // Microsoft.UI.Xaml.Controls.Primitives.CornerRadiusToThicknessConverter
  // Explicitly imported
  // Implements: Microsoft.UI.Xaml.Controls.Primitives.ICornerRadiusToThicknessConverter
  // Implements: Microsoft.UI.Xaml.Data.IValueConverter
  // Statics: "Microsoft.UI.Xaml.Controls.Primitives.ICornerRadiusToThicknessConverterStatics"
  // Instantiable: "Primitives_ICornerRadiusToThicknessConverter"
  TPrimitives_CornerRadiusToThicknessConverter = class(TWinRTGenericImportSI<Primitives_ICornerRadiusToThicknessConverterStatics, Primitives_ICornerRadiusToThicknessConverter>)
  public
    // -> Primitives_ICornerRadiusToThicknessConverterStatics
    class function get_ConversionKindProperty: IDependencyProperty; static; inline;
    class function get_MultiplierProperty: IDependencyProperty; static; inline;
    class property ConversionKindProperty: IDependencyProperty read get_ConversionKindProperty;
    class property MultiplierProperty: IDependencyProperty read get_MultiplierProperty;
  end;

  // Microsoft.UI.Xaml.Controls.Primitives.DragCompletedEventArgs
  // Explicitly imported
  // Implements: Microsoft.UI.Xaml.Controls.Primitives.IDragCompletedEventArgs
  // Factory: "Microsoft.UI.Xaml.Controls.Primitives.IDragCompletedEventArgsFactory"
  // Instantiable: "Primitives_IDragCompletedEventArgs"
  TPrimitives_DragCompletedEventArgs = class(TWinRTGenericImportFI<Primitives_IDragCompletedEventArgsFactory, Primitives_IDragCompletedEventArgs>)
  public
    // -> Primitives_IDragCompletedEventArgsFactory
    class function CreateInstanceWithHorizontalChangeVerticalChangeAndCanceled(horizontalChange: Double; verticalChange: Double; canceled: Boolean; baseInterface: IInspectable; out innerInterface: IInspectable): Primitives_IDragCompletedEventArgs; static; inline;
  end;

  // Microsoft.UI.Xaml.Controls.Primitives.DragDeltaEventArgs
  // Explicitly imported
  // Implements: Microsoft.UI.Xaml.Controls.Primitives.IDragDeltaEventArgs
  // Factory: "Microsoft.UI.Xaml.Controls.Primitives.IDragDeltaEventArgsFactory"
  // Instantiable: "Primitives_IDragDeltaEventArgs"
  TPrimitives_DragDeltaEventArgs = class(TWinRTGenericImportFI<Primitives_IDragDeltaEventArgsFactory, Primitives_IDragDeltaEventArgs>)
  public
    // -> Primitives_IDragDeltaEventArgsFactory
    class function CreateInstanceWithHorizontalChangeAndVerticalChange(horizontalChange: Double; verticalChange: Double; baseInterface: IInspectable; out innerInterface: IInspectable): Primitives_IDragDeltaEventArgs; static; inline;
  end;

  // Microsoft.UI.Xaml.Controls.Primitives.DragStartedEventArgs
  // Explicitly imported
  // Implements: Microsoft.UI.Xaml.Controls.Primitives.IDragStartedEventArgs
  // Factory: "Microsoft.UI.Xaml.Controls.Primitives.IDragStartedEventArgsFactory"
  // Instantiable: "Primitives_IDragStartedEventArgs"
  TPrimitives_DragStartedEventArgs = class(TWinRTGenericImportFI<Primitives_IDragStartedEventArgsFactory, Primitives_IDragStartedEventArgs>)
  public
    // -> Primitives_IDragStartedEventArgsFactory
    class function CreateInstanceWithHorizontalOffsetAndVerticalOffset(horizontalOffset: Double; verticalOffset: Double; baseInterface: IInspectable; out innerInterface: IInspectable): Primitives_IDragStartedEventArgs; static; inline;
  end;

  // Microsoft.UI.Xaml.Controls.Primitives.FlyoutShowOptions
  // Explicitly imported
  // Implements: Microsoft.UI.Xaml.Controls.Primitives.IFlyoutShowOptions
  // Factory: "Microsoft.UI.Xaml.Controls.Primitives.IFlyoutShowOptionsFactory"
  // Instantiable: "Primitives_IFlyoutShowOptions"
  TPrimitives_FlyoutShowOptions = class(TWinRTGenericImportFI<Primitives_IFlyoutShowOptionsFactory, Primitives_IFlyoutShowOptions>)
  public
    // -> Primitives_IFlyoutShowOptionsFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): Primitives_IFlyoutShowOptions; static; inline;
  end;

  // Microsoft.UI.Xaml.Controls.Primitives.GeneratorPositionHelper
  // Explicitly imported
  // Implements: Microsoft.UI.Xaml.Controls.Primitives.IGeneratorPositionHelper
  // Statics: "Microsoft.UI.Xaml.Controls.Primitives.IGeneratorPositionHelperStatics"
  TPrimitives_GeneratorPositionHelper = class(TWinRTGenericImportS<Primitives_IGeneratorPositionHelperStatics>)
  public
    // -> Primitives_IGeneratorPositionHelperStatics
    class function FromIndexAndOffset(index: Integer; offset: Integer): Primitives_GeneratorPosition; static; inline;
  end;

  // Microsoft.UI.Xaml.Controls.Primitives.GridViewItemPresenter
  // Explicitly imported
  // Implements: Microsoft.UI.Xaml.Controls.Primitives.IGridViewItemPresenter
  // Statics: "Microsoft.UI.Xaml.Controls.Primitives.IGridViewItemPresenterStatics"
  // Factory: "Microsoft.UI.Xaml.Controls.Primitives.IGridViewItemPresenterFactory"
  // Instantiable: "Primitives_IGridViewItemPresenter"
  TPrimitives_GridViewItemPresenter = class(TWinRTGenericImportFSI<Primitives_IGridViewItemPresenterFactory, Primitives_IGridViewItemPresenterStatics, Primitives_IGridViewItemPresenter>)
  public
    // -> Primitives_IGridViewItemPresenterStatics
    class function get_SelectionCheckMarkVisualEnabledProperty: IDependencyProperty; static; inline;
    class function get_CheckHintBrushProperty: IDependencyProperty; static; inline;
    class function get_CheckSelectingBrushProperty: IDependencyProperty; static; inline;
    class function get_CheckBrushProperty: IDependencyProperty; static; inline;
    class function get_DragBackgroundProperty: IDependencyProperty; static; inline;
    class function get_DragForegroundProperty: IDependencyProperty; static; inline;
    class function get_FocusBorderBrushProperty: IDependencyProperty; static; inline;
    class function get_PlaceholderBackgroundProperty: IDependencyProperty; static; inline;
    class function get_PointerOverBackgroundProperty: IDependencyProperty; static; inline;
    class function get_SelectedBackgroundProperty: IDependencyProperty; static; inline;
    class function get_SelectedForegroundProperty: IDependencyProperty; static; inline;
    class function get_SelectedPointerOverBackgroundProperty: IDependencyProperty; static; inline;
    class function get_SelectedPointerOverBorderBrushProperty: IDependencyProperty; static; inline;
    class function get_SelectedBorderThicknessProperty: IDependencyProperty; static; inline;
    class function get_DisabledOpacityProperty: IDependencyProperty; static; inline;
    class function get_DragOpacityProperty: IDependencyProperty; static; inline;
    class function get_ReorderHintOffsetProperty: IDependencyProperty; static; inline;
    class function get_GridViewItemPresenterHorizontalContentAlignmentProperty: IDependencyProperty; static; inline;
    class function get_GridViewItemPresenterVerticalContentAlignmentProperty: IDependencyProperty; static; inline;
    class function get_GridViewItemPresenterPaddingProperty: IDependencyProperty; static; inline;
    class function get_PointerOverBackgroundMarginProperty: IDependencyProperty; static; inline;
    class function get_ContentMarginProperty: IDependencyProperty; static; inline;
    class property CheckBrushProperty: IDependencyProperty read get_CheckBrushProperty;
    class property CheckHintBrushProperty: IDependencyProperty read get_CheckHintBrushProperty;
    class property CheckSelectingBrushProperty: IDependencyProperty read get_CheckSelectingBrushProperty;
    class property ContentMarginProperty: IDependencyProperty read get_ContentMarginProperty;
    class property DisabledOpacityProperty: IDependencyProperty read get_DisabledOpacityProperty;
    class property DragBackgroundProperty: IDependencyProperty read get_DragBackgroundProperty;
    class property DragForegroundProperty: IDependencyProperty read get_DragForegroundProperty;
    class property DragOpacityProperty: IDependencyProperty read get_DragOpacityProperty;
    class property FocusBorderBrushProperty: IDependencyProperty read get_FocusBorderBrushProperty;
    class property GridViewItemPresenterHorizontalContentAlignmentProperty: IDependencyProperty read get_GridViewItemPresenterHorizontalContentAlignmentProperty;
    class property GridViewItemPresenterPaddingProperty: IDependencyProperty read get_GridViewItemPresenterPaddingProperty;
    class property GridViewItemPresenterVerticalContentAlignmentProperty: IDependencyProperty read get_GridViewItemPresenterVerticalContentAlignmentProperty;
    class property PlaceholderBackgroundProperty: IDependencyProperty read get_PlaceholderBackgroundProperty;
    class property PointerOverBackgroundMarginProperty: IDependencyProperty read get_PointerOverBackgroundMarginProperty;
    class property PointerOverBackgroundProperty: IDependencyProperty read get_PointerOverBackgroundProperty;
    class property ReorderHintOffsetProperty: IDependencyProperty read get_ReorderHintOffsetProperty;
    class property SelectedBackgroundProperty: IDependencyProperty read get_SelectedBackgroundProperty;
    class property SelectedBorderThicknessProperty: IDependencyProperty read get_SelectedBorderThicknessProperty;
    class property SelectedForegroundProperty: IDependencyProperty read get_SelectedForegroundProperty;
    class property SelectedPointerOverBackgroundProperty: IDependencyProperty read get_SelectedPointerOverBackgroundProperty;
    class property SelectedPointerOverBorderBrushProperty: IDependencyProperty read get_SelectedPointerOverBorderBrushProperty;
    class property SelectionCheckMarkVisualEnabledProperty: IDependencyProperty read get_SelectionCheckMarkVisualEnabledProperty;

    // -> Primitives_IGridViewItemPresenterFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): Primitives_IGridViewItemPresenter; static; inline;
  end;

  // Microsoft.UI.Xaml.Controls.Primitives.InfoBarPanel
  // Explicitly imported
  // Implements: Microsoft.UI.Xaml.Controls.Primitives.IInfoBarPanel
  // Statics: "Microsoft.UI.Xaml.Controls.Primitives.IInfoBarPanelStatics"
  // Factory: "Microsoft.UI.Xaml.Controls.Primitives.IInfoBarPanelFactory"
  // Instantiable: "Primitives_IInfoBarPanel"
  TPrimitives_InfoBarPanel = class(TWinRTGenericImportFSI<Primitives_IInfoBarPanelFactory, Primitives_IInfoBarPanelStatics, Primitives_IInfoBarPanel>)
  public
    // -> Primitives_IInfoBarPanelStatics
    class function get_HorizontalOrientationPaddingProperty: IDependencyProperty; static; inline;
    class function get_VerticalOrientationPaddingProperty: IDependencyProperty; static; inline;
    class procedure SetHorizontalOrientationMargin(&object: IDependencyObject; value: Thickness); static; inline;
    class function GetHorizontalOrientationMargin(&object: IDependencyObject): Thickness; static; inline;
    class function get_HorizontalOrientationMarginProperty: IDependencyProperty; static; inline;
    class procedure SetVerticalOrientationMargin(&object: IDependencyObject; value: Thickness); static; inline;
    class function GetVerticalOrientationMargin(&object: IDependencyObject): Thickness; static; inline;
    class function get_VerticalOrientationMarginProperty: IDependencyProperty; static; inline;
    class property HorizontalOrientationMarginProperty: IDependencyProperty read get_HorizontalOrientationMarginProperty;
    class property HorizontalOrientationPaddingProperty: IDependencyProperty read get_HorizontalOrientationPaddingProperty;
    class property VerticalOrientationMarginProperty: IDependencyProperty read get_VerticalOrientationMarginProperty;
    class property VerticalOrientationPaddingProperty: IDependencyProperty read get_VerticalOrientationPaddingProperty;

    // -> Primitives_IInfoBarPanelFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): Primitives_IInfoBarPanel; static; inline;
  end;

  // Microsoft.UI.Xaml.Controls.Primitives.JumpListItemBackgroundConverter
  // Explicitly imported
  // Implements: Microsoft.UI.Xaml.Controls.Primitives.IJumpListItemBackgroundConverter
  // Implements: Microsoft.UI.Xaml.Data.IValueConverter
  // Statics: "Microsoft.UI.Xaml.Controls.Primitives.IJumpListItemBackgroundConverterStatics"
  // Instantiable: "Primitives_IJumpListItemBackgroundConverter"
  TPrimitives_JumpListItemBackgroundConverter = class(TWinRTGenericImportSI<Primitives_IJumpListItemBackgroundConverterStatics, Primitives_IJumpListItemBackgroundConverter>)
  public
    // -> Primitives_IJumpListItemBackgroundConverterStatics
    class function get_EnabledProperty: IDependencyProperty; static; inline;
    class function get_DisabledProperty: IDependencyProperty; static; inline;
    class property DisabledProperty: IDependencyProperty read get_DisabledProperty;
    class property EnabledProperty: IDependencyProperty read get_EnabledProperty;
  end;

  // Microsoft.UI.Xaml.Controls.Primitives.JumpListItemForegroundConverter
  // Explicitly imported
  // Implements: Microsoft.UI.Xaml.Controls.Primitives.IJumpListItemForegroundConverter
  // Implements: Microsoft.UI.Xaml.Data.IValueConverter
  // Statics: "Microsoft.UI.Xaml.Controls.Primitives.IJumpListItemForegroundConverterStatics"
  // Instantiable: "Primitives_IJumpListItemForegroundConverter"
  TPrimitives_JumpListItemForegroundConverter = class(TWinRTGenericImportSI<Primitives_IJumpListItemForegroundConverterStatics, Primitives_IJumpListItemForegroundConverter>)
  public
    // -> Primitives_IJumpListItemForegroundConverterStatics
    class function get_EnabledProperty: IDependencyProperty; static; inline;
    class function get_DisabledProperty: IDependencyProperty; static; inline;
    class property DisabledProperty: IDependencyProperty read get_DisabledProperty;
    class property EnabledProperty: IDependencyProperty read get_EnabledProperty;
  end;

  // Microsoft.UI.Xaml.Controls.Primitives.LayoutInformation
  // Explicitly imported
  // Implements: Microsoft.UI.Xaml.Controls.Primitives.ILayoutInformation
  // Statics: "Microsoft.UI.Xaml.Controls.Primitives.ILayoutInformationStatics"
  TPrimitives_LayoutInformation = class(TWinRTGenericImportS<Primitives_ILayoutInformationStatics>)
  public
    // -> Primitives_ILayoutInformationStatics
    class function GetLayoutExceptionElement(dispatcher: IInspectable): IUIElement; static; inline;
    class function GetLayoutSlot(element: IFrameworkElement): TRectF; static; inline;
    class function GetAvailableSize(element: IUIElement): TSizeF; static; inline;
  end;

  // Microsoft.UI.Xaml.Controls.Primitives.ListViewItemPresenter
  // Explicitly imported
  // Implements: Microsoft.UI.Xaml.Controls.Primitives.IListViewItemPresenter
  // Statics: "Microsoft.UI.Xaml.Controls.Primitives.IListViewItemPresenterStatics"
  // Factory: "Microsoft.UI.Xaml.Controls.Primitives.IListViewItemPresenterFactory"
  // Instantiable: "Primitives_IListViewItemPresenter"
  TPrimitives_ListViewItemPresenter = class(TWinRTGenericImportFSI<Primitives_IListViewItemPresenterFactory, Primitives_IListViewItemPresenterStatics, Primitives_IListViewItemPresenter>)
  public
    // -> Primitives_IListViewItemPresenterStatics
    class function get_SelectionCheckMarkVisualEnabledProperty: IDependencyProperty; static; inline;
    class function get_CheckHintBrushProperty: IDependencyProperty; static; inline;
    class function get_CheckSelectingBrushProperty: IDependencyProperty; static; inline;
    class function get_CheckBrushProperty: IDependencyProperty; static; inline;
    class function get_DragBackgroundProperty: IDependencyProperty; static; inline;
    class function get_DragForegroundProperty: IDependencyProperty; static; inline;
    class function get_FocusBorderBrushProperty: IDependencyProperty; static; inline;
    class function get_PlaceholderBackgroundProperty: IDependencyProperty; static; inline;
    class function get_PointerOverBackgroundProperty: IDependencyProperty; static; inline;
    class function get_SelectedBackgroundProperty: IDependencyProperty; static; inline;
    class function get_SelectedForegroundProperty: IDependencyProperty; static; inline;
    class function get_SelectedPointerOverBackgroundProperty: IDependencyProperty; static; inline;
    class function get_SelectedPointerOverBorderBrushProperty: IDependencyProperty; static; inline;
    class function get_SelectedBorderThicknessProperty: IDependencyProperty; static; inline;
    class function get_DisabledOpacityProperty: IDependencyProperty; static; inline;
    class function get_DragOpacityProperty: IDependencyProperty; static; inline;
    class function get_ReorderHintOffsetProperty: IDependencyProperty; static; inline;
    class function get_ListViewItemPresenterHorizontalContentAlignmentProperty: IDependencyProperty; static; inline;
    class function get_ListViewItemPresenterVerticalContentAlignmentProperty: IDependencyProperty; static; inline;
    class function get_ListViewItemPresenterPaddingProperty: IDependencyProperty; static; inline;
    class function get_PointerOverBackgroundMarginProperty: IDependencyProperty; static; inline;
    class function get_ContentMarginProperty: IDependencyProperty; static; inline;
    class function get_SelectedPressedBackgroundProperty: IDependencyProperty; static; inline;
    class function get_PressedBackgroundProperty: IDependencyProperty; static; inline;
    class function get_CheckBoxBrushProperty: IDependencyProperty; static; inline;
    class function get_FocusSecondaryBorderBrushProperty: IDependencyProperty; static; inline;
    class function get_CheckModeProperty: IDependencyProperty; static; inline;
    class function get_PointerOverForegroundProperty: IDependencyProperty; static; inline;
    class function get_RevealBackgroundProperty: IDependencyProperty; static; inline;
    class function get_RevealBorderBrushProperty: IDependencyProperty; static; inline;
    class function get_RevealBorderThicknessProperty: IDependencyProperty; static; inline;
    class function get_RevealBackgroundShowsAboveContentProperty: IDependencyProperty; static; inline;
    class function get_SelectedDisabledBackgroundProperty: IDependencyProperty; static; inline;
    class function get_CheckPressedBrushProperty: IDependencyProperty; static; inline;
    class function get_CheckDisabledBrushProperty: IDependencyProperty; static; inline;
    class function get_CheckBoxPointerOverBrushProperty: IDependencyProperty; static; inline;
    class function get_CheckBoxPressedBrushProperty: IDependencyProperty; static; inline;
    class function get_CheckBoxDisabledBrushProperty: IDependencyProperty; static; inline;
    class function get_CheckBoxSelectedBrushProperty: IDependencyProperty; static; inline;
    class function get_CheckBoxSelectedPointerOverBrushProperty: IDependencyProperty; static; inline;
    class function get_CheckBoxSelectedPressedBrushProperty: IDependencyProperty; static; inline;
    class function get_CheckBoxSelectedDisabledBrushProperty: IDependencyProperty; static; inline;
    class function get_CheckBoxBorderBrushProperty: IDependencyProperty; static; inline;
    class function get_CheckBoxPointerOverBorderBrushProperty: IDependencyProperty; static; inline;
    class function get_CheckBoxPressedBorderBrushProperty: IDependencyProperty; static; inline;
    class function get_CheckBoxDisabledBorderBrushProperty: IDependencyProperty; static; inline;
    class function get_CheckBoxCornerRadiusProperty: IDependencyProperty; static; inline;
    class function get_SelectionIndicatorCornerRadiusProperty: IDependencyProperty; static; inline;
    class function get_SelectionIndicatorVisualEnabledProperty: IDependencyProperty; static; inline;
    class function get_SelectionIndicatorModeProperty: IDependencyProperty; static; inline;
    class function get_SelectionIndicatorBrushProperty: IDependencyProperty; static; inline;
    class function get_SelectionIndicatorPointerOverBrushProperty: IDependencyProperty; static; inline;
    class function get_SelectionIndicatorPressedBrushProperty: IDependencyProperty; static; inline;
    class function get_SelectionIndicatorDisabledBrushProperty: IDependencyProperty; static; inline;
    class function get_SelectedBorderBrushProperty: IDependencyProperty; static; inline;
    class function get_SelectedPressedBorderBrushProperty: IDependencyProperty; static; inline;
    class function get_SelectedDisabledBorderBrushProperty: IDependencyProperty; static; inline;
    class function get_SelectedInnerBorderBrushProperty: IDependencyProperty; static; inline;
    class function get_PointerOverBorderBrushProperty: IDependencyProperty; static; inline;
    class property CheckBoxBorderBrushProperty: IDependencyProperty read get_CheckBoxBorderBrushProperty;
    class property CheckBoxBrushProperty: IDependencyProperty read get_CheckBoxBrushProperty;
    class property CheckBoxCornerRadiusProperty: IDependencyProperty read get_CheckBoxCornerRadiusProperty;
    class property CheckBoxDisabledBorderBrushProperty: IDependencyProperty read get_CheckBoxDisabledBorderBrushProperty;
    class property CheckBoxDisabledBrushProperty: IDependencyProperty read get_CheckBoxDisabledBrushProperty;
    class property CheckBoxPointerOverBorderBrushProperty: IDependencyProperty read get_CheckBoxPointerOverBorderBrushProperty;
    class property CheckBoxPointerOverBrushProperty: IDependencyProperty read get_CheckBoxPointerOverBrushProperty;
    class property CheckBoxPressedBorderBrushProperty: IDependencyProperty read get_CheckBoxPressedBorderBrushProperty;
    class property CheckBoxPressedBrushProperty: IDependencyProperty read get_CheckBoxPressedBrushProperty;
    class property CheckBoxSelectedBrushProperty: IDependencyProperty read get_CheckBoxSelectedBrushProperty;
    class property CheckBoxSelectedDisabledBrushProperty: IDependencyProperty read get_CheckBoxSelectedDisabledBrushProperty;
    class property CheckBoxSelectedPointerOverBrushProperty: IDependencyProperty read get_CheckBoxSelectedPointerOverBrushProperty;
    class property CheckBoxSelectedPressedBrushProperty: IDependencyProperty read get_CheckBoxSelectedPressedBrushProperty;
    class property CheckBrushProperty: IDependencyProperty read get_CheckBrushProperty;
    class property CheckDisabledBrushProperty: IDependencyProperty read get_CheckDisabledBrushProperty;
    class property CheckHintBrushProperty: IDependencyProperty read get_CheckHintBrushProperty;
    class property CheckModeProperty: IDependencyProperty read get_CheckModeProperty;
    class property CheckPressedBrushProperty: IDependencyProperty read get_CheckPressedBrushProperty;
    class property CheckSelectingBrushProperty: IDependencyProperty read get_CheckSelectingBrushProperty;
    class property ContentMarginProperty: IDependencyProperty read get_ContentMarginProperty;
    class property DisabledOpacityProperty: IDependencyProperty read get_DisabledOpacityProperty;
    class property DragBackgroundProperty: IDependencyProperty read get_DragBackgroundProperty;
    class property DragForegroundProperty: IDependencyProperty read get_DragForegroundProperty;
    class property DragOpacityProperty: IDependencyProperty read get_DragOpacityProperty;
    class property FocusBorderBrushProperty: IDependencyProperty read get_FocusBorderBrushProperty;
    class property FocusSecondaryBorderBrushProperty: IDependencyProperty read get_FocusSecondaryBorderBrushProperty;
    class property ListViewItemPresenterHorizontalContentAlignmentProperty: IDependencyProperty read get_ListViewItemPresenterHorizontalContentAlignmentProperty;
    class property ListViewItemPresenterPaddingProperty: IDependencyProperty read get_ListViewItemPresenterPaddingProperty;
    class property ListViewItemPresenterVerticalContentAlignmentProperty: IDependencyProperty read get_ListViewItemPresenterVerticalContentAlignmentProperty;
    class property PlaceholderBackgroundProperty: IDependencyProperty read get_PlaceholderBackgroundProperty;
    class property PointerOverBackgroundMarginProperty: IDependencyProperty read get_PointerOverBackgroundMarginProperty;
    class property PointerOverBackgroundProperty: IDependencyProperty read get_PointerOverBackgroundProperty;
    class property PointerOverBorderBrushProperty: IDependencyProperty read get_PointerOverBorderBrushProperty;
    class property PointerOverForegroundProperty: IDependencyProperty read get_PointerOverForegroundProperty;
    class property PressedBackgroundProperty: IDependencyProperty read get_PressedBackgroundProperty;
    class property ReorderHintOffsetProperty: IDependencyProperty read get_ReorderHintOffsetProperty;
    class property RevealBackgroundProperty: IDependencyProperty read get_RevealBackgroundProperty;
    class property RevealBackgroundShowsAboveContentProperty: IDependencyProperty read get_RevealBackgroundShowsAboveContentProperty;
    class property RevealBorderBrushProperty: IDependencyProperty read get_RevealBorderBrushProperty;
    class property RevealBorderThicknessProperty: IDependencyProperty read get_RevealBorderThicknessProperty;
    class property SelectedBackgroundProperty: IDependencyProperty read get_SelectedBackgroundProperty;
    class property SelectedBorderBrushProperty: IDependencyProperty read get_SelectedBorderBrushProperty;
    class property SelectedBorderThicknessProperty: IDependencyProperty read get_SelectedBorderThicknessProperty;
    class property SelectedDisabledBackgroundProperty: IDependencyProperty read get_SelectedDisabledBackgroundProperty;
    class property SelectedDisabledBorderBrushProperty: IDependencyProperty read get_SelectedDisabledBorderBrushProperty;
    class property SelectedForegroundProperty: IDependencyProperty read get_SelectedForegroundProperty;
    class property SelectedInnerBorderBrushProperty: IDependencyProperty read get_SelectedInnerBorderBrushProperty;
    class property SelectedPointerOverBackgroundProperty: IDependencyProperty read get_SelectedPointerOverBackgroundProperty;
    class property SelectedPointerOverBorderBrushProperty: IDependencyProperty read get_SelectedPointerOverBorderBrushProperty;
    class property SelectedPressedBackgroundProperty: IDependencyProperty read get_SelectedPressedBackgroundProperty;
    class property SelectedPressedBorderBrushProperty: IDependencyProperty read get_SelectedPressedBorderBrushProperty;
    class property SelectionCheckMarkVisualEnabledProperty: IDependencyProperty read get_SelectionCheckMarkVisualEnabledProperty;
    class property SelectionIndicatorBrushProperty: IDependencyProperty read get_SelectionIndicatorBrushProperty;
    class property SelectionIndicatorCornerRadiusProperty: IDependencyProperty read get_SelectionIndicatorCornerRadiusProperty;
    class property SelectionIndicatorDisabledBrushProperty: IDependencyProperty read get_SelectionIndicatorDisabledBrushProperty;
    class property SelectionIndicatorModeProperty: IDependencyProperty read get_SelectionIndicatorModeProperty;
    class property SelectionIndicatorPointerOverBrushProperty: IDependencyProperty read get_SelectionIndicatorPointerOverBrushProperty;
    class property SelectionIndicatorPressedBrushProperty: IDependencyProperty read get_SelectionIndicatorPressedBrushProperty;
    class property SelectionIndicatorVisualEnabledProperty: IDependencyProperty read get_SelectionIndicatorVisualEnabledProperty;

    // -> Primitives_IListViewItemPresenterFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): Primitives_IListViewItemPresenter; static; inline;
  end;

  // Microsoft.UI.Xaml.Controls.Primitives.LoopingSelector
  // Explicitly imported
  // Implements: Microsoft.UI.Xaml.Controls.Primitives.ILoopingSelector
  // Statics: "Microsoft.UI.Xaml.Controls.Primitives.ILoopingSelectorStatics"
  TPrimitives_LoopingSelector = class(TWinRTGenericImportS<Primitives_ILoopingSelectorStatics>)
  public
    // -> Primitives_ILoopingSelectorStatics
    class function get_ShouldLoopProperty: IDependencyProperty; static; inline;
    class function get_ItemsProperty: IDependencyProperty; static; inline;
    class function get_SelectedIndexProperty: IDependencyProperty; static; inline;
    class function get_SelectedItemProperty: IDependencyProperty; static; inline;
    class function get_ItemWidthProperty: IDependencyProperty; static; inline;
    class function get_ItemHeightProperty: IDependencyProperty; static; inline;
    class function get_ItemTemplateProperty: IDependencyProperty; static; inline;
    class property ItemHeightProperty: IDependencyProperty read get_ItemHeightProperty;
    class property ItemTemplateProperty: IDependencyProperty read get_ItemTemplateProperty;
    class property ItemWidthProperty: IDependencyProperty read get_ItemWidthProperty;
    class property ItemsProperty: IDependencyProperty read get_ItemsProperty;
    class property SelectedIndexProperty: IDependencyProperty read get_SelectedIndexProperty;
    class property SelectedItemProperty: IDependencyProperty read get_SelectedItemProperty;
    class property ShouldLoopProperty: IDependencyProperty read get_ShouldLoopProperty;
  end;

  // Microsoft.UI.Xaml.Controls.Primitives.MonochromaticOverlayPresenter
  // Explicitly imported
  // Implements: Microsoft.UI.Xaml.Controls.Primitives.IMonochromaticOverlayPresenter
  // Statics: "Microsoft.UI.Xaml.Controls.Primitives.IMonochromaticOverlayPresenterStatics"
  // Factory: "Microsoft.UI.Xaml.Controls.Primitives.IMonochromaticOverlayPresenterFactory"
  // Instantiable: "Primitives_IMonochromaticOverlayPresenter"
  TPrimitives_MonochromaticOverlayPresenter = class(TWinRTGenericImportFSI<Primitives_IMonochromaticOverlayPresenterFactory, Primitives_IMonochromaticOverlayPresenterStatics, Primitives_IMonochromaticOverlayPresenter>)
  public
    // -> Primitives_IMonochromaticOverlayPresenterStatics
    class function get_SourceElementProperty: IDependencyProperty; static; inline;
    class function get_ReplacementColorProperty: IDependencyProperty; static; inline;
    class property ReplacementColorProperty: IDependencyProperty read get_ReplacementColorProperty;
    class property SourceElementProperty: IDependencyProperty read get_SourceElementProperty;

    // -> Primitives_IMonochromaticOverlayPresenterFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): Primitives_IMonochromaticOverlayPresenter; static; inline;
  end;

  // Microsoft.UI.Xaml.Controls.Primitives.NavigationViewItemPresenter
  // Explicitly imported
  // Implements: Microsoft.UI.Xaml.Controls.Primitives.INavigationViewItemPresenter
  // Implements: Microsoft.UI.Xaml.Controls.Primitives.INavigationViewItemPresenter2
  // Statics: "Microsoft.UI.Xaml.Controls.Primitives.INavigationViewItemPresenterStatics"
  // Statics: "Microsoft.UI.Xaml.Controls.Primitives.INavigationViewItemPresenterStatics2"
  // Factory: "Microsoft.UI.Xaml.Controls.Primitives.INavigationViewItemPresenterFactory"
  // Instantiable: "Primitives_INavigationViewItemPresenter"
  TPrimitives_NavigationViewItemPresenter = class(TWinRTGenericImportFS2I<Primitives_INavigationViewItemPresenterFactory, Primitives_INavigationViewItemPresenterStatics, Primitives_INavigationViewItemPresenterStatics2, Primitives_INavigationViewItemPresenter>)
  public
    // -> Primitives_INavigationViewItemPresenterStatics
    class function get_IconProperty: IDependencyProperty; static; inline;
    class function get_TemplateSettingsProperty: IDependencyProperty; static; inline;
    class property IconProperty: IDependencyProperty read get_IconProperty;
    class property TemplateSettingsProperty: IDependencyProperty read get_TemplateSettingsProperty;

    // -> Primitives_INavigationViewItemPresenterStatics2
    class function get_InfoBadgeProperty: IDependencyProperty; static; inline;
    class property InfoBadgeProperty: IDependencyProperty read get_InfoBadgeProperty;

    // -> Primitives_INavigationViewItemPresenterFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): Primitives_INavigationViewItemPresenter; static; inline;
  end;

  // Microsoft.UI.Xaml.Controls.Primitives.NavigationViewItemPresenterTemplateSettings
  // Explicitly imported
  // Implements: Microsoft.UI.Xaml.Controls.Primitives.INavigationViewItemPresenterTemplateSettings
  // Statics: "Microsoft.UI.Xaml.Controls.Primitives.INavigationViewItemPresenterTemplateSettingsStatics"
  // Factory: "Microsoft.UI.Xaml.Controls.Primitives.INavigationViewItemPresenterTemplateSettingsFactory"
  // Instantiable: "Primitives_INavigationViewItemPresenterTemplateSettings"
  TPrimitives_NavigationViewItemPresenterTemplateSettings = class(TWinRTGenericImportFSI<Primitives_INavigationViewItemPresenterTemplateSettingsFactory, Primitives_INavigationViewItemPresenterTemplateSettingsStatics, Primitives_INavigationViewItemPresenterTemplateSettings>)
  public
    // -> Primitives_INavigationViewItemPresenterTemplateSettingsStatics
    class function get_IconWidthProperty: IDependencyProperty; static; inline;
    class function get_SmallerIconWidthProperty: IDependencyProperty; static; inline;
    class property IconWidthProperty: IDependencyProperty read get_IconWidthProperty;
    class property SmallerIconWidthProperty: IDependencyProperty read get_SmallerIconWidthProperty;

    // -> Primitives_INavigationViewItemPresenterTemplateSettingsFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): Primitives_INavigationViewItemPresenterTemplateSettings; static; inline;
  end;

  // Microsoft.UI.Xaml.Controls.Primitives.OrientedVirtualizingPanel
  // Explicitly imported
  // Implements: Microsoft.UI.Xaml.Controls.Primitives.IOrientedVirtualizingPanel
  // Implements: Microsoft.UI.Xaml.Controls.Primitives.IScrollSnapPointsInfo
  // Implements: Microsoft.UI.Xaml.Controls.IInsertionPanel
  // Factory: "Microsoft.UI.Xaml.Controls.Primitives.IOrientedVirtualizingPanelFactory"
  // Instantiable: "Primitives_IOrientedVirtualizingPanel"
  TPrimitives_OrientedVirtualizingPanel = class(TWinRTGenericImportFI<Primitives_IOrientedVirtualizingPanelFactory, Primitives_IOrientedVirtualizingPanel>)
  public
    // -> Primitives_IOrientedVirtualizingPanelFactory
  end;

  // Microsoft.UI.Xaml.Controls.Primitives.PivotHeaderItem
  // Explicitly imported
  // Implements: Microsoft.UI.Xaml.Controls.Primitives.IPivotHeaderItem
  // Factory: "Microsoft.UI.Xaml.Controls.Primitives.IPivotHeaderItemFactory"
  // Instantiable: "Primitives_IPivotHeaderItem"
  TPrimitives_PivotHeaderItem = class(TWinRTGenericImportFI<Primitives_IPivotHeaderItemFactory, Primitives_IPivotHeaderItem>)
  public
    // -> Primitives_IPivotHeaderItemFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): Primitives_IPivotHeaderItem; static; inline;
  end;

  // Microsoft.UI.Xaml.Controls.Primitives.PivotHeaderPanel
  // Explicitly imported
  // Implements: Microsoft.UI.Xaml.Controls.Primitives.IPivotHeaderPanel
  // Instantiable: "Primitives_IPivotHeaderPanel"
  TPrimitives_PivotHeaderPanel = class(TWinRTGenericImportI<Primitives_IPivotHeaderPanel>) end;

  // Microsoft.UI.Xaml.Controls.Primitives.PivotPanel
  // Explicitly imported
  // Implements: Microsoft.UI.Xaml.Controls.Primitives.IPivotPanel
  // Implements: Microsoft.UI.Xaml.Controls.Primitives.IScrollSnapPointsInfo
  // Instantiable: "Primitives_IPivotPanel"
  TPrimitives_PivotPanel = class(TWinRTGenericImportI<Primitives_IPivotPanel>) end;

  // Microsoft.UI.Xaml.Controls.Primitives.Popup
  // Explicitly imported
  // Implements: Microsoft.UI.Xaml.Controls.Primitives.IPopup
  // Implements: Microsoft.UI.Xaml.Controls.Primitives.IPopup2
  // Statics: "Microsoft.UI.Xaml.Controls.Primitives.IPopupStatics"
  // Statics: "Microsoft.UI.Xaml.Controls.Primitives.IPopupStatics2"
  // Instantiable: "Primitives_IPopup"
  TPrimitives_Popup = class(TWinRTGenericImportS2I<Primitives_IPopupStatics, Primitives_IPopupStatics2, Primitives_IPopup>)
  public
    // -> Primitives_IPopupStatics
    class function get_ChildProperty: IDependencyProperty; static; inline;
    class function get_IsOpenProperty: IDependencyProperty; static; inline;
    class function get_HorizontalOffsetProperty: IDependencyProperty; static; inline;
    class function get_VerticalOffsetProperty: IDependencyProperty; static; inline;
    class function get_ChildTransitionsProperty: IDependencyProperty; static; inline;
    class function get_IsLightDismissEnabledProperty: IDependencyProperty; static; inline;
    class function get_LightDismissOverlayModeProperty: IDependencyProperty; static; inline;
    class function get_ShouldConstrainToRootBoundsProperty: IDependencyProperty; static; inline;
    class property ChildProperty: IDependencyProperty read get_ChildProperty;
    class property ChildTransitionsProperty: IDependencyProperty read get_ChildTransitionsProperty;
    class property HorizontalOffsetProperty: IDependencyProperty read get_HorizontalOffsetProperty;
    class property IsLightDismissEnabledProperty: IDependencyProperty read get_IsLightDismissEnabledProperty;
    class property IsOpenProperty: IDependencyProperty read get_IsOpenProperty;
    class property LightDismissOverlayModeProperty: IDependencyProperty read get_LightDismissOverlayModeProperty;
    class property ShouldConstrainToRootBoundsProperty: IDependencyProperty read get_ShouldConstrainToRootBoundsProperty;
    class property VerticalOffsetProperty: IDependencyProperty read get_VerticalOffsetProperty;

    // -> Primitives_IPopupStatics2
    class function get_PlacementTargetProperty: IDependencyProperty; static; inline;
    class function get_DesiredPlacementProperty: IDependencyProperty; static; inline;
    class property DesiredPlacementProperty: IDependencyProperty read get_DesiredPlacementProperty;
    class property PlacementTargetProperty: IDependencyProperty read get_PlacementTargetProperty;
  end;

  // Microsoft.UI.Xaml.Controls.Primitives.RepeatButton
  // Explicitly imported
  // Implements: Microsoft.UI.Xaml.Controls.Primitives.IRepeatButton
  // Statics: "Microsoft.UI.Xaml.Controls.Primitives.IRepeatButtonStatics"
  // Instantiable: "Primitives_IRepeatButton"
  TPrimitives_RepeatButton = class(TWinRTGenericImportSI<Primitives_IRepeatButtonStatics, Primitives_IRepeatButton>)
  public
    // -> Primitives_IRepeatButtonStatics
    class function get_DelayProperty: IDependencyProperty; static; inline;
    class function get_IntervalProperty: IDependencyProperty; static; inline;
    class property DelayProperty: IDependencyProperty read get_DelayProperty;
    class property IntervalProperty: IDependencyProperty read get_IntervalProperty;
  end;

  // Microsoft.UI.Xaml.Controls.Primitives.ScrollBar
  // Explicitly imported
  // Implements: Microsoft.UI.Xaml.Controls.Primitives.IScrollBar
  // Statics: "Microsoft.UI.Xaml.Controls.Primitives.IScrollBarStatics"
  // Instantiable: "Primitives_IScrollBar"
  TPrimitives_ScrollBar = class(TWinRTGenericImportSI<Primitives_IScrollBarStatics, Primitives_IScrollBar>)
  public
    // -> Primitives_IScrollBarStatics
    class function get_OrientationProperty: IDependencyProperty; static; inline;
    class function get_ViewportSizeProperty: IDependencyProperty; static; inline;
    class function get_IndicatorModeProperty: IDependencyProperty; static; inline;
    class property IndicatorModeProperty: IDependencyProperty read get_IndicatorModeProperty;
    class property OrientationProperty: IDependencyProperty read get_OrientationProperty;
    class property ViewportSizeProperty: IDependencyProperty read get_ViewportSizeProperty;
  end;

  // Microsoft.UI.Xaml.Controls.Primitives.ScrollEventArgs
  // Explicitly imported
  // Implements: Microsoft.UI.Xaml.Controls.Primitives.IScrollEventArgs
  // Instantiable: "Primitives_IScrollEventArgs"
  TPrimitives_ScrollEventArgs = class(TWinRTGenericImportI<Primitives_IScrollEventArgs>) end;

  // Microsoft.UI.Xaml.Controls.Primitives.TabViewListView
  // Explicitly imported
  // Implements: Microsoft.UI.Xaml.Controls.Primitives.ITabViewListView
  // Factory: "Microsoft.UI.Xaml.Controls.Primitives.ITabViewListViewFactory"
  // Instantiable: "Primitives_ITabViewListView"
  TPrimitives_TabViewListView = class(TWinRTGenericImportFI<Primitives_ITabViewListViewFactory, Primitives_ITabViewListView>)
  public
    // -> Primitives_ITabViewListViewFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): Primitives_ITabViewListView; static; inline;
  end;

  // Microsoft.UI.Xaml.Controls.Primitives.Thumb
  // Explicitly imported
  // Implements: Microsoft.UI.Xaml.Controls.Primitives.IThumb
  // Statics: "Microsoft.UI.Xaml.Controls.Primitives.IThumbStatics"
  // Instantiable: "Primitives_IThumb"
  TPrimitives_Thumb = class(TWinRTGenericImportSI<Primitives_IThumbStatics, Primitives_IThumb>)
  public
    // -> Primitives_IThumbStatics
    class function get_IsDraggingProperty: IDependencyProperty; static; inline;
    class property IsDraggingProperty: IDependencyProperty read get_IsDraggingProperty;
  end;

  // Microsoft.UI.Xaml.Controls.Primitives.TickBar
  // Explicitly imported
  // Implements: Microsoft.UI.Xaml.Controls.Primitives.ITickBar
  // Statics: "Microsoft.UI.Xaml.Controls.Primitives.ITickBarStatics"
  // Instantiable: "Primitives_ITickBar"
  TPrimitives_TickBar = class(TWinRTGenericImportSI<Primitives_ITickBarStatics, Primitives_ITickBar>)
  public
    // -> Primitives_ITickBarStatics
    class function get_FillProperty: IDependencyProperty; static; inline;
    class property FillProperty: IDependencyProperty read get_FillProperty;
  end;

  // Microsoft.UI.Xaml.Controls.ProgressBar
  // Explicitly imported
  // Implements: Microsoft.UI.Xaml.Controls.IProgressBar
  // Statics: "Microsoft.UI.Xaml.Controls.IProgressBarStatics"
  // Factory: "Microsoft.UI.Xaml.Controls.IProgressBarFactory"
  // Instantiable: "IProgressBar"
  TProgressBar = class(TWinRTGenericImportFSI<IProgressBarFactory, IProgressBarStatics, IProgressBar>)
  public
    // -> IProgressBarStatics
    class function get_IsIndeterminateProperty: IDependencyProperty; static; inline;
    class function get_ShowErrorProperty: IDependencyProperty; static; inline;
    class function get_ShowPausedProperty: IDependencyProperty; static; inline;
    class property IsIndeterminateProperty: IDependencyProperty read get_IsIndeterminateProperty;
    class property ShowErrorProperty: IDependencyProperty read get_ShowErrorProperty;
    class property ShowPausedProperty: IDependencyProperty read get_ShowPausedProperty;

    // -> IProgressBarFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IProgressBar; static; inline;
  end;

  // Microsoft.UI.Xaml.Controls.ProgressRing
  // Explicitly imported
  // Implements: Microsoft.UI.Xaml.Controls.IProgressRing
  // Statics: "Microsoft.UI.Xaml.Controls.IProgressRingStatics"
  // Factory: "Microsoft.UI.Xaml.Controls.IProgressRingFactory"
  // Instantiable: "IProgressRing"
  TProgressRing = class(TWinRTGenericImportFSI<IProgressRingFactory, IProgressRingStatics, IProgressRing>)
  public
    // -> IProgressRingStatics
    class function get_IsActiveProperty: IDependencyProperty; static; inline;
    class function get_IsIndeterminateProperty: IDependencyProperty; static; inline;
    class function get_ValueProperty: IDependencyProperty; static; inline;
    class function get_MinimumProperty: IDependencyProperty; static; inline;
    class function get_MaximumProperty: IDependencyProperty; static; inline;
    class property IsActiveProperty: IDependencyProperty read get_IsActiveProperty;
    class property IsIndeterminateProperty: IDependencyProperty read get_IsIndeterminateProperty;
    class property MaximumProperty: IDependencyProperty read get_MaximumProperty;
    class property MinimumProperty: IDependencyProperty read get_MinimumProperty;
    class property ValueProperty: IDependencyProperty read get_ValueProperty;

    // -> IProgressRingFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IProgressRing; static; inline;
  end;

  // Microsoft.UI.Xaml.Controls.RadioButton
  // Explicitly imported
  // Implements: Microsoft.UI.Xaml.Controls.IRadioButton
  // Statics: "Microsoft.UI.Xaml.Controls.IRadioButtonStatics"
  // Factory: "Microsoft.UI.Xaml.Controls.IRadioButtonFactory"
  // Instantiable: "IRadioButton"
  TRadioButton = class(TWinRTGenericImportFSI<IRadioButtonFactory, IRadioButtonStatics, IRadioButton>)
  public
    // -> IRadioButtonStatics
    class function get_GroupNameProperty: IDependencyProperty; static; inline;
    class property GroupNameProperty: IDependencyProperty read get_GroupNameProperty;

    // -> IRadioButtonFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IRadioButton; static; inline;
  end;

  // Microsoft.UI.Xaml.Controls.RadioButtons
  // Explicitly imported
  // Implements: Microsoft.UI.Xaml.Controls.IRadioButtons
  // Statics: "Microsoft.UI.Xaml.Controls.IRadioButtonsStatics"
  // Factory: "Microsoft.UI.Xaml.Controls.IRadioButtonsFactory"
  // Instantiable: "IRadioButtons"
  TRadioButtons = class(TWinRTGenericImportFSI<IRadioButtonsFactory, IRadioButtonsStatics, IRadioButtons>)
  public
    // -> IRadioButtonsStatics
    class function get_ItemsSourceProperty: IDependencyProperty; static; inline;
    class function get_ItemsProperty: IDependencyProperty; static; inline;
    class function get_ItemTemplateProperty: IDependencyProperty; static; inline;
    class function get_SelectedIndexProperty: IDependencyProperty; static; inline;
    class function get_SelectedItemProperty: IDependencyProperty; static; inline;
    class function get_MaxColumnsProperty: IDependencyProperty; static; inline;
    class function get_HeaderProperty: IDependencyProperty; static; inline;
    class function get_HeaderTemplateProperty: IDependencyProperty; static; inline;
    class property HeaderProperty: IDependencyProperty read get_HeaderProperty;
    class property HeaderTemplateProperty: IDependencyProperty read get_HeaderTemplateProperty;
    class property ItemTemplateProperty: IDependencyProperty read get_ItemTemplateProperty;
    class property ItemsProperty: IDependencyProperty read get_ItemsProperty;
    class property ItemsSourceProperty: IDependencyProperty read get_ItemsSourceProperty;
    class property MaxColumnsProperty: IDependencyProperty read get_MaxColumnsProperty;
    class property SelectedIndexProperty: IDependencyProperty read get_SelectedIndexProperty;
    class property SelectedItemProperty: IDependencyProperty read get_SelectedItemProperty;

    // -> IRadioButtonsFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IRadioButtons; static; inline;
  end;

  // Microsoft.UI.Xaml.Controls.RadioMenuFlyoutItem
  // Explicitly imported
  // Implements: Microsoft.UI.Xaml.Controls.IRadioMenuFlyoutItem
  // Statics: "Microsoft.UI.Xaml.Controls.IRadioMenuFlyoutItemStatics"
  // Statics: "Microsoft.UI.Xaml.Controls.IRadioMenuFlyoutItemStatics2"
  // Factory: "Microsoft.UI.Xaml.Controls.IRadioMenuFlyoutItemFactory"
  // Instantiable: "IRadioMenuFlyoutItem"
  TRadioMenuFlyoutItem = class(TWinRTGenericImportFS2I<IRadioMenuFlyoutItemFactory, IRadioMenuFlyoutItemStatics, IRadioMenuFlyoutItemStatics2, IRadioMenuFlyoutItem>)
  public
    // -> IRadioMenuFlyoutItemStatics
    class function get_IsCheckedProperty: IDependencyProperty; static; inline;
    class function get_GroupNameProperty: IDependencyProperty; static; inline;
    class property GroupNameProperty: IDependencyProperty read get_GroupNameProperty;
    class property IsCheckedProperty: IDependencyProperty read get_IsCheckedProperty;

    // -> IRadioMenuFlyoutItemStatics2
    class function get_AreCheckStatesEnabledProperty: IDependencyProperty; static; inline;
    class procedure SetAreCheckStatesEnabled(&object: IMenuFlyoutSubItem; value: Boolean); static; inline;
    class function GetAreCheckStatesEnabled(&object: IMenuFlyoutSubItem): Boolean; static; inline;
    class property AreCheckStatesEnabledProperty: IDependencyProperty read get_AreCheckStatesEnabledProperty;

    // -> IRadioMenuFlyoutItemFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IRadioMenuFlyoutItem; static; inline;
  end;

  // Microsoft.UI.Xaml.Controls.RatingControl
  // Explicitly imported
  // Implements: Microsoft.UI.Xaml.Controls.IRatingControl
  // Statics: "Microsoft.UI.Xaml.Controls.IRatingControlStatics"
  // Factory: "Microsoft.UI.Xaml.Controls.IRatingControlFactory"
  // Instantiable: "IRatingControl"
  TRatingControl = class(TWinRTGenericImportFSI<IRatingControlFactory, IRatingControlStatics, IRatingControl>)
  public
    // -> IRatingControlStatics
    class function get_CaptionProperty: IDependencyProperty; static; inline;
    class function get_InitialSetValueProperty: IDependencyProperty; static; inline;
    class function get_IsClearEnabledProperty: IDependencyProperty; static; inline;
    class function get_IsReadOnlyProperty: IDependencyProperty; static; inline;
    class function get_MaxRatingProperty: IDependencyProperty; static; inline;
    class function get_PlaceholderValueProperty: IDependencyProperty; static; inline;
    class function get_ItemInfoProperty: IDependencyProperty; static; inline;
    class function get_ValueProperty: IDependencyProperty; static; inline;
    class property CaptionProperty: IDependencyProperty read get_CaptionProperty;
    class property InitialSetValueProperty: IDependencyProperty read get_InitialSetValueProperty;
    class property IsClearEnabledProperty: IDependencyProperty read get_IsClearEnabledProperty;
    class property IsReadOnlyProperty: IDependencyProperty read get_IsReadOnlyProperty;
    class property ItemInfoProperty: IDependencyProperty read get_ItemInfoProperty;
    class property MaxRatingProperty: IDependencyProperty read get_MaxRatingProperty;
    class property PlaceholderValueProperty: IDependencyProperty read get_PlaceholderValueProperty;
    class property ValueProperty: IDependencyProperty read get_ValueProperty;

    // -> IRatingControlFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IRatingControl; static; inline;
  end;

  // Microsoft.UI.Xaml.Controls.RatingItemInfo
  // Explicitly imported
  // Implements: Microsoft.UI.Xaml.Controls.IRatingItemInfo
  // Factory: "Microsoft.UI.Xaml.Controls.IRatingItemInfoFactory"
  // Instantiable: "IRatingItemInfo"
  TRatingItemInfo = class(TWinRTGenericImportFI<IRatingItemInfoFactory, IRatingItemInfo>)
  public
    // -> IRatingItemInfoFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IRatingItemInfo; static; inline;
  end;

  // Microsoft.UI.Xaml.Controls.RatingItemFontInfo
  // Explicitly imported
  // Implements: Microsoft.UI.Xaml.Controls.IRatingItemFontInfo
  // Statics: "Microsoft.UI.Xaml.Controls.IRatingItemFontInfoStatics"
  // Factory: "Microsoft.UI.Xaml.Controls.IRatingItemFontInfoFactory"
  // Instantiable: "IRatingItemFontInfo"
  TRatingItemFontInfo = class(TWinRTGenericImportFSI<IRatingItemFontInfoFactory, IRatingItemFontInfoStatics, IRatingItemFontInfo>)
  public
    // -> IRatingItemFontInfoStatics
    class function get_DisabledGlyphProperty: IDependencyProperty; static; inline;
    class function get_GlyphProperty: IDependencyProperty; static; inline;
    class function get_PlaceholderGlyphProperty: IDependencyProperty; static; inline;
    class function get_PointerOverGlyphProperty: IDependencyProperty; static; inline;
    class function get_PointerOverPlaceholderGlyphProperty: IDependencyProperty; static; inline;
    class function get_UnsetGlyphProperty: IDependencyProperty; static; inline;
    class property DisabledGlyphProperty: IDependencyProperty read get_DisabledGlyphProperty;
    class property GlyphProperty: IDependencyProperty read get_GlyphProperty;
    class property PlaceholderGlyphProperty: IDependencyProperty read get_PlaceholderGlyphProperty;
    class property PointerOverGlyphProperty: IDependencyProperty read get_PointerOverGlyphProperty;
    class property PointerOverPlaceholderGlyphProperty: IDependencyProperty read get_PointerOverPlaceholderGlyphProperty;
    class property UnsetGlyphProperty: IDependencyProperty read get_UnsetGlyphProperty;

    // -> IRatingItemFontInfoFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IRatingItemFontInfo; static; inline;
  end;

  // Microsoft.UI.Xaml.Controls.RatingItemImageInfo
  // Explicitly imported
  // Implements: Microsoft.UI.Xaml.Controls.IRatingItemImageInfo
  // Statics: "Microsoft.UI.Xaml.Controls.IRatingItemImageInfoStatics"
  // Factory: "Microsoft.UI.Xaml.Controls.IRatingItemImageInfoFactory"
  // Instantiable: "IRatingItemImageInfo"
  TRatingItemImageInfo = class(TWinRTGenericImportFSI<IRatingItemImageInfoFactory, IRatingItemImageInfoStatics, IRatingItemImageInfo>)
  public
    // -> IRatingItemImageInfoStatics
    class function get_DisabledImageProperty: IDependencyProperty; static; inline;
    class function get_ImageProperty: IDependencyProperty; static; inline;
    class function get_PlaceholderImageProperty: IDependencyProperty; static; inline;
    class function get_PointerOverImageProperty: IDependencyProperty; static; inline;
    class function get_PointerOverPlaceholderImageProperty: IDependencyProperty; static; inline;
    class function get_UnsetImageProperty: IDependencyProperty; static; inline;
    class property DisabledImageProperty: IDependencyProperty read get_DisabledImageProperty;
    class property ImageProperty: IDependencyProperty read get_ImageProperty;
    class property PlaceholderImageProperty: IDependencyProperty read get_PlaceholderImageProperty;
    class property PointerOverImageProperty: IDependencyProperty read get_PointerOverImageProperty;
    class property PointerOverPlaceholderImageProperty: IDependencyProperty read get_PointerOverPlaceholderImageProperty;
    class property UnsetImageProperty: IDependencyProperty read get_UnsetImageProperty;

    // -> IRatingItemImageInfoFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IRatingItemImageInfo; static; inline;
  end;

  // Microsoft.UI.Xaml.Controls.RefreshContainer
  // Explicitly imported
  // Implements: Microsoft.UI.Xaml.Controls.IRefreshContainer
  // Statics: "Microsoft.UI.Xaml.Controls.IRefreshContainerStatics"
  // Factory: "Microsoft.UI.Xaml.Controls.IRefreshContainerFactory"
  // Instantiable: "IRefreshContainer"
  TRefreshContainer = class(TWinRTGenericImportFSI<IRefreshContainerFactory, IRefreshContainerStatics, IRefreshContainer>)
  public
    // -> IRefreshContainerStatics
    class function get_VisualizerProperty: IDependencyProperty; static; inline;
    class function get_PullDirectionProperty: IDependencyProperty; static; inline;
    class property PullDirectionProperty: IDependencyProperty read get_PullDirectionProperty;
    class property VisualizerProperty: IDependencyProperty read get_VisualizerProperty;

    // -> IRefreshContainerFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IRefreshContainer; static; inline;
  end;

  // Microsoft.UI.Xaml.Controls.RefreshVisualizer
  // Explicitly imported
  // Implements: Microsoft.UI.Xaml.Controls.IRefreshVisualizer
  // Statics: "Microsoft.UI.Xaml.Controls.IRefreshVisualizerStatics"
  // Factory: "Microsoft.UI.Xaml.Controls.IRefreshVisualizerFactory"
  // Instantiable: "IRefreshVisualizer"
  TRefreshVisualizer = class(TWinRTGenericImportFSI<IRefreshVisualizerFactory, IRefreshVisualizerStatics, IRefreshVisualizer>)
  public
    // -> IRefreshVisualizerStatics
    class function get_InfoProviderProperty: IDependencyProperty; static; inline;
    class function get_OrientationProperty: IDependencyProperty; static; inline;
    class function get_ContentProperty: IDependencyProperty; static; inline;
    class function get_StateProperty: IDependencyProperty; static; inline;
    class property ContentProperty: IDependencyProperty read get_ContentProperty;
    class property InfoProviderProperty: IDependencyProperty read get_InfoProviderProperty;
    class property OrientationProperty: IDependencyProperty read get_OrientationProperty;
    class property StateProperty: IDependencyProperty read get_StateProperty;

    // -> IRefreshVisualizerFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IRefreshVisualizer; static; inline;
  end;

  // Microsoft.UI.Xaml.Controls.RelativePanel
  // Explicitly imported
  // Implements: Microsoft.UI.Xaml.Controls.IRelativePanel
  // Statics: "Microsoft.UI.Xaml.Controls.IRelativePanelStatics"
  // Factory: "Microsoft.UI.Xaml.Controls.IRelativePanelFactory"
  // Instantiable: "IRelativePanel"
  TRelativePanel = class(TWinRTGenericImportFSI<IRelativePanelFactory, IRelativePanelStatics, IRelativePanel>)
  public
    // -> IRelativePanelStatics
    class function get_BackgroundSizingProperty: IDependencyProperty; static; inline;
    class function get_LeftOfProperty: IDependencyProperty; static; inline;
    class function GetLeftOf(element: IUIElement): IInspectable; static; inline;
    class procedure SetLeftOf(element: IUIElement; value: IInspectable); static; inline;
    class function get_AboveProperty: IDependencyProperty; static; inline;
    class function GetAbove(element: IUIElement): IInspectable; static; inline;
    class procedure SetAbove(element: IUIElement; value: IInspectable); static; inline;
    class function get_RightOfProperty: IDependencyProperty; static; inline;
    class function GetRightOf(element: IUIElement): IInspectable; static; inline;
    class procedure SetRightOf(element: IUIElement; value: IInspectable); static; inline;
    class function get_BelowProperty: IDependencyProperty; static; inline;
    class function GetBelow(element: IUIElement): IInspectable; static; inline;
    class procedure SetBelow(element: IUIElement; value: IInspectable); static; inline;
    class function get_AlignHorizontalCenterWithProperty: IDependencyProperty; static; inline;
    class function GetAlignHorizontalCenterWith(element: IUIElement): IInspectable; static; inline;
    class procedure SetAlignHorizontalCenterWith(element: IUIElement; value: IInspectable); static; inline;
    class function get_AlignVerticalCenterWithProperty: IDependencyProperty; static; inline;
    class function GetAlignVerticalCenterWith(element: IUIElement): IInspectable; static; inline;
    class procedure SetAlignVerticalCenterWith(element: IUIElement; value: IInspectable); static; inline;
    class function get_AlignLeftWithProperty: IDependencyProperty; static; inline;
    class function GetAlignLeftWith(element: IUIElement): IInspectable; static; inline;
    class procedure SetAlignLeftWith(element: IUIElement; value: IInspectable); static; inline;
    class function get_AlignTopWithProperty: IDependencyProperty; static; inline;
    class function GetAlignTopWith(element: IUIElement): IInspectable; static; inline;
    class procedure SetAlignTopWith(element: IUIElement; value: IInspectable); static; inline;
    class function get_AlignRightWithProperty: IDependencyProperty; static; inline;
    class function GetAlignRightWith(element: IUIElement): IInspectable; static; inline;
    class procedure SetAlignRightWith(element: IUIElement; value: IInspectable); static; inline;
    class function get_AlignBottomWithProperty: IDependencyProperty; static; inline;
    class function GetAlignBottomWith(element: IUIElement): IInspectable; static; inline;
    class procedure SetAlignBottomWith(element: IUIElement; value: IInspectable); static; inline;
    class function get_AlignLeftWithPanelProperty: IDependencyProperty; static; inline;
    class function GetAlignLeftWithPanel(element: IUIElement): Boolean; static; inline;
    class procedure SetAlignLeftWithPanel(element: IUIElement; value: Boolean); static; inline;
    class function get_AlignTopWithPanelProperty: IDependencyProperty; static; inline;
    class function GetAlignTopWithPanel(element: IUIElement): Boolean; static; inline;
    class procedure SetAlignTopWithPanel(element: IUIElement; value: Boolean); static; inline;
    class function get_AlignRightWithPanelProperty: IDependencyProperty; static; inline;
    class function GetAlignRightWithPanel(element: IUIElement): Boolean; static; inline;
    class procedure SetAlignRightWithPanel(element: IUIElement; value: Boolean); static; inline;
    class function get_AlignBottomWithPanelProperty: IDependencyProperty; static; inline;
    class function GetAlignBottomWithPanel(element: IUIElement): Boolean; static; inline;
    class procedure SetAlignBottomWithPanel(element: IUIElement; value: Boolean); static; inline;
    class function get_AlignHorizontalCenterWithPanelProperty: IDependencyProperty; static; inline;
    class function GetAlignHorizontalCenterWithPanel(element: IUIElement): Boolean; static; inline;
    class procedure SetAlignHorizontalCenterWithPanel(element: IUIElement; value: Boolean); static; inline;
    class function get_AlignVerticalCenterWithPanelProperty: IDependencyProperty; static; inline;
    class function GetAlignVerticalCenterWithPanel(element: IUIElement): Boolean; static; inline;
    class procedure SetAlignVerticalCenterWithPanel(element: IUIElement; value: Boolean); static; inline;
    class function get_BorderBrushProperty: IDependencyProperty; static; inline;
    class function get_BorderThicknessProperty: IDependencyProperty; static; inline;
    class function get_CornerRadiusProperty: IDependencyProperty; static; inline;
    class function get_PaddingProperty: IDependencyProperty; static; inline;
    class property AboveProperty: IDependencyProperty read get_AboveProperty;
    class property AlignBottomWithPanelProperty: IDependencyProperty read get_AlignBottomWithPanelProperty;
    class property AlignBottomWithProperty: IDependencyProperty read get_AlignBottomWithProperty;
    class property AlignHorizontalCenterWithPanelProperty: IDependencyProperty read get_AlignHorizontalCenterWithPanelProperty;
    class property AlignHorizontalCenterWithProperty: IDependencyProperty read get_AlignHorizontalCenterWithProperty;
    class property AlignLeftWithPanelProperty: IDependencyProperty read get_AlignLeftWithPanelProperty;
    class property AlignLeftWithProperty: IDependencyProperty read get_AlignLeftWithProperty;
    class property AlignRightWithPanelProperty: IDependencyProperty read get_AlignRightWithPanelProperty;
    class property AlignRightWithProperty: IDependencyProperty read get_AlignRightWithProperty;
    class property AlignTopWithPanelProperty: IDependencyProperty read get_AlignTopWithPanelProperty;
    class property AlignTopWithProperty: IDependencyProperty read get_AlignTopWithProperty;
    class property AlignVerticalCenterWithPanelProperty: IDependencyProperty read get_AlignVerticalCenterWithPanelProperty;
    class property AlignVerticalCenterWithProperty: IDependencyProperty read get_AlignVerticalCenterWithProperty;
    class property BackgroundSizingProperty: IDependencyProperty read get_BackgroundSizingProperty;
    class property BelowProperty: IDependencyProperty read get_BelowProperty;
    class property BorderBrushProperty: IDependencyProperty read get_BorderBrushProperty;
    class property BorderThicknessProperty: IDependencyProperty read get_BorderThicknessProperty;
    class property CornerRadiusProperty: IDependencyProperty read get_CornerRadiusProperty;
    class property LeftOfProperty: IDependencyProperty read get_LeftOfProperty;
    class property PaddingProperty: IDependencyProperty read get_PaddingProperty;
    class property RightOfProperty: IDependencyProperty read get_RightOfProperty;

    // -> IRelativePanelFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IRelativePanel; static; inline;
  end;

  // Microsoft.UI.Xaml.Controls.RevealListViewItemPresenter
  // Explicitly imported
  // Implements: Microsoft.UI.Xaml.Controls.IRevealListViewItemPresenter
  // Factory: "Microsoft.UI.Xaml.Controls.IRevealListViewItemPresenterFactory"
  // Instantiable: "IRevealListViewItemPresenter"
  TRevealListViewItemPresenter = class(TWinRTGenericImportFI<IRevealListViewItemPresenterFactory, IRevealListViewItemPresenter>)
  public
    // -> IRevealListViewItemPresenterFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IRevealListViewItemPresenter; static; inline;
  end;

  // Microsoft.UI.Xaml.Controls.RichEditBox
  // Explicitly imported
  // Implements: Microsoft.UI.Xaml.Controls.IRichEditBox
  // Statics: "Microsoft.UI.Xaml.Controls.IRichEditBoxStatics"
  // Factory: "Microsoft.UI.Xaml.Controls.IRichEditBoxFactory"
  // Instantiable: "IRichEditBox"
  TRichEditBox = class(TWinRTGenericImportFSI<IRichEditBoxFactory, IRichEditBoxStatics, IRichEditBox>)
  public
    // -> IRichEditBoxStatics
    class function get_IsReadOnlyProperty: IDependencyProperty; static; inline;
    class function get_AcceptsReturnProperty: IDependencyProperty; static; inline;
    class function get_TextAlignmentProperty: IDependencyProperty; static; inline;
    class function get_TextWrappingProperty: IDependencyProperty; static; inline;
    class function get_IsSpellCheckEnabledProperty: IDependencyProperty; static; inline;
    class function get_IsTextPredictionEnabledProperty: IDependencyProperty; static; inline;
    class function get_InputScopeProperty: IDependencyProperty; static; inline;
    class function get_HeaderProperty: IDependencyProperty; static; inline;
    class function get_HeaderTemplateProperty: IDependencyProperty; static; inline;
    class function get_PlaceholderTextProperty: IDependencyProperty; static; inline;
    class function get_SelectionHighlightColorProperty: IDependencyProperty; static; inline;
    class function get_PreventKeyboardDisplayOnProgrammaticFocusProperty: IDependencyProperty; static; inline;
    class function get_IsColorFontEnabledProperty: IDependencyProperty; static; inline;
    class function get_SelectionHighlightColorWhenNotFocusedProperty: IDependencyProperty; static; inline;
    class function get_MaxLengthProperty: IDependencyProperty; static; inline;
    class function get_HorizontalTextAlignmentProperty: IDependencyProperty; static; inline;
    class function get_CharacterCasingProperty: IDependencyProperty; static; inline;
    class function get_DisabledFormattingAcceleratorsProperty: IDependencyProperty; static; inline;
    class function get_SelectionFlyoutProperty: IDependencyProperty; static; inline;
    class function get_ProofingMenuFlyoutProperty: IDependencyProperty; static; inline;
    class function get_DescriptionProperty: IDependencyProperty; static; inline;
    class function get_DesiredCandidateWindowAlignmentProperty: IDependencyProperty; static; inline;
    class function get_TextReadingOrderProperty: IDependencyProperty; static; inline;
    class function get_ClipboardCopyFormatProperty: IDependencyProperty; static; inline;
    class property AcceptsReturnProperty: IDependencyProperty read get_AcceptsReturnProperty;
    class property CharacterCasingProperty: IDependencyProperty read get_CharacterCasingProperty;
    class property ClipboardCopyFormatProperty: IDependencyProperty read get_ClipboardCopyFormatProperty;
    class property DescriptionProperty: IDependencyProperty read get_DescriptionProperty;
    class property DesiredCandidateWindowAlignmentProperty: IDependencyProperty read get_DesiredCandidateWindowAlignmentProperty;
    class property DisabledFormattingAcceleratorsProperty: IDependencyProperty read get_DisabledFormattingAcceleratorsProperty;
    class property HeaderProperty: IDependencyProperty read get_HeaderProperty;
    class property HeaderTemplateProperty: IDependencyProperty read get_HeaderTemplateProperty;
    class property HorizontalTextAlignmentProperty: IDependencyProperty read get_HorizontalTextAlignmentProperty;
    class property InputScopeProperty: IDependencyProperty read get_InputScopeProperty;
    class property IsColorFontEnabledProperty: IDependencyProperty read get_IsColorFontEnabledProperty;
    class property IsReadOnlyProperty: IDependencyProperty read get_IsReadOnlyProperty;
    class property IsSpellCheckEnabledProperty: IDependencyProperty read get_IsSpellCheckEnabledProperty;
    class property IsTextPredictionEnabledProperty: IDependencyProperty read get_IsTextPredictionEnabledProperty;
    class property MaxLengthProperty: IDependencyProperty read get_MaxLengthProperty;
    class property PlaceholderTextProperty: IDependencyProperty read get_PlaceholderTextProperty;
    class property PreventKeyboardDisplayOnProgrammaticFocusProperty: IDependencyProperty read get_PreventKeyboardDisplayOnProgrammaticFocusProperty;
    class property ProofingMenuFlyoutProperty: IDependencyProperty read get_ProofingMenuFlyoutProperty;
    class property SelectionFlyoutProperty: IDependencyProperty read get_SelectionFlyoutProperty;
    class property SelectionHighlightColorProperty: IDependencyProperty read get_SelectionHighlightColorProperty;
    class property SelectionHighlightColorWhenNotFocusedProperty: IDependencyProperty read get_SelectionHighlightColorWhenNotFocusedProperty;
    class property TextAlignmentProperty: IDependencyProperty read get_TextAlignmentProperty;
    class property TextReadingOrderProperty: IDependencyProperty read get_TextReadingOrderProperty;
    class property TextWrappingProperty: IDependencyProperty read get_TextWrappingProperty;

    // -> IRichEditBoxFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IRichEditBox; static; inline;
  end;

  // Microsoft.UI.Xaml.Controls.RichTextBlock
  // Explicitly imported
  // Implements: Microsoft.UI.Xaml.Controls.IRichTextBlock
  // Statics: "Microsoft.UI.Xaml.Controls.IRichTextBlockStatics"
  // Instantiable: "IRichTextBlock"
  TRichTextBlock = class(TWinRTGenericImportSI<IRichTextBlockStatics, IRichTextBlock>)
  public
    // -> IRichTextBlockStatics
    class function get_FontSizeProperty: IDependencyProperty; static; inline;
    class function get_FontFamilyProperty: IDependencyProperty; static; inline;
    class function get_FontWeightProperty: IDependencyProperty; static; inline;
    class function get_FontStyleProperty: IDependencyProperty; static; inline;
    class function get_FontStretchProperty: IDependencyProperty; static; inline;
    class function get_ForegroundProperty: IDependencyProperty; static; inline;
    class function get_TextWrappingProperty: IDependencyProperty; static; inline;
    class function get_TextTrimmingProperty: IDependencyProperty; static; inline;
    class function get_TextAlignmentProperty: IDependencyProperty; static; inline;
    class function get_PaddingProperty: IDependencyProperty; static; inline;
    class function get_LineHeightProperty: IDependencyProperty; static; inline;
    class function get_LineStackingStrategyProperty: IDependencyProperty; static; inline;
    class function get_CharacterSpacingProperty: IDependencyProperty; static; inline;
    class function get_OverflowContentTargetProperty: IDependencyProperty; static; inline;
    class function get_IsTextSelectionEnabledProperty: IDependencyProperty; static; inline;
    class function get_HasOverflowContentProperty: IDependencyProperty; static; inline;
    class function get_SelectedTextProperty: IDependencyProperty; static; inline;
    class function get_MaxLinesProperty: IDependencyProperty; static; inline;
    class function get_TextLineBoundsProperty: IDependencyProperty; static; inline;
    class function get_SelectionHighlightColorProperty: IDependencyProperty; static; inline;
    class function get_OpticalMarginAlignmentProperty: IDependencyProperty; static; inline;
    class function get_IsColorFontEnabledProperty: IDependencyProperty; static; inline;
    class function get_TextReadingOrderProperty: IDependencyProperty; static; inline;
    class function get_IsTextScaleFactorEnabledProperty: IDependencyProperty; static; inline;
    class function get_TextDecorationsProperty: IDependencyProperty; static; inline;
    class function get_IsTextTrimmedProperty: IDependencyProperty; static; inline;
    class function get_HorizontalTextAlignmentProperty: IDependencyProperty; static; inline;
    class function get_SelectionFlyoutProperty: IDependencyProperty; static; inline;
    class function get_TextIndentProperty: IDependencyProperty; static; inline;
    class property CharacterSpacingProperty: IDependencyProperty read get_CharacterSpacingProperty;
    class property FontFamilyProperty: IDependencyProperty read get_FontFamilyProperty;
    class property FontSizeProperty: IDependencyProperty read get_FontSizeProperty;
    class property FontStretchProperty: IDependencyProperty read get_FontStretchProperty;
    class property FontStyleProperty: IDependencyProperty read get_FontStyleProperty;
    class property FontWeightProperty: IDependencyProperty read get_FontWeightProperty;
    class property ForegroundProperty: IDependencyProperty read get_ForegroundProperty;
    class property HasOverflowContentProperty: IDependencyProperty read get_HasOverflowContentProperty;
    class property HorizontalTextAlignmentProperty: IDependencyProperty read get_HorizontalTextAlignmentProperty;
    class property IsColorFontEnabledProperty: IDependencyProperty read get_IsColorFontEnabledProperty;
    class property IsTextScaleFactorEnabledProperty: IDependencyProperty read get_IsTextScaleFactorEnabledProperty;
    class property IsTextSelectionEnabledProperty: IDependencyProperty read get_IsTextSelectionEnabledProperty;
    class property IsTextTrimmedProperty: IDependencyProperty read get_IsTextTrimmedProperty;
    class property LineHeightProperty: IDependencyProperty read get_LineHeightProperty;
    class property LineStackingStrategyProperty: IDependencyProperty read get_LineStackingStrategyProperty;
    class property MaxLinesProperty: IDependencyProperty read get_MaxLinesProperty;
    class property OpticalMarginAlignmentProperty: IDependencyProperty read get_OpticalMarginAlignmentProperty;
    class property OverflowContentTargetProperty: IDependencyProperty read get_OverflowContentTargetProperty;
    class property PaddingProperty: IDependencyProperty read get_PaddingProperty;
    class property SelectedTextProperty: IDependencyProperty read get_SelectedTextProperty;
    class property SelectionFlyoutProperty: IDependencyProperty read get_SelectionFlyoutProperty;
    class property SelectionHighlightColorProperty: IDependencyProperty read get_SelectionHighlightColorProperty;
    class property TextAlignmentProperty: IDependencyProperty read get_TextAlignmentProperty;
    class property TextDecorationsProperty: IDependencyProperty read get_TextDecorationsProperty;
    class property TextIndentProperty: IDependencyProperty read get_TextIndentProperty;
    class property TextLineBoundsProperty: IDependencyProperty read get_TextLineBoundsProperty;
    class property TextReadingOrderProperty: IDependencyProperty read get_TextReadingOrderProperty;
    class property TextTrimmingProperty: IDependencyProperty read get_TextTrimmingProperty;
    class property TextWrappingProperty: IDependencyProperty read get_TextWrappingProperty;
  end;

  // Microsoft.UI.Xaml.Controls.RichTextBlockOverflow
  // Explicitly imported
  // Implements: Microsoft.UI.Xaml.Controls.IRichTextBlockOverflow
  // Statics: "Microsoft.UI.Xaml.Controls.IRichTextBlockOverflowStatics"
  // Instantiable: "IRichTextBlockOverflow"
  TRichTextBlockOverflow = class(TWinRTGenericImportSI<IRichTextBlockOverflowStatics, IRichTextBlockOverflow>)
  public
    // -> IRichTextBlockOverflowStatics
    class function get_OverflowContentTargetProperty: IDependencyProperty; static; inline;
    class function get_PaddingProperty: IDependencyProperty; static; inline;
    class function get_HasOverflowContentProperty: IDependencyProperty; static; inline;
    class function get_MaxLinesProperty: IDependencyProperty; static; inline;
    class function get_IsTextTrimmedProperty: IDependencyProperty; static; inline;
    class property HasOverflowContentProperty: IDependencyProperty read get_HasOverflowContentProperty;
    class property IsTextTrimmedProperty: IDependencyProperty read get_IsTextTrimmedProperty;
    class property MaxLinesProperty: IDependencyProperty read get_MaxLinesProperty;
    class property OverflowContentTargetProperty: IDependencyProperty read get_OverflowContentTargetProperty;
    class property PaddingProperty: IDependencyProperty read get_PaddingProperty;
  end;

  // Microsoft.UI.Xaml.Controls.RowDefinition
  // Explicitly imported
  // Implements: Microsoft.UI.Xaml.Controls.IRowDefinition
  // Statics: "Microsoft.UI.Xaml.Controls.IRowDefinitionStatics"
  // Instantiable: "IRowDefinition"
  TRowDefinition = class(TWinRTGenericImportSI<IRowDefinitionStatics, IRowDefinition>)
  public
    // -> IRowDefinitionStatics
    class function get_HeightProperty: IDependencyProperty; static; inline;
    class function get_MaxHeightProperty: IDependencyProperty; static; inline;
    class function get_MinHeightProperty: IDependencyProperty; static; inline;
    class property HeightProperty: IDependencyProperty read get_HeightProperty;
    class property MaxHeightProperty: IDependencyProperty read get_MaxHeightProperty;
    class property MinHeightProperty: IDependencyProperty read get_MinHeightProperty;
  end;

  // Microsoft.UI.Xaml.Controls.ScrollContentPresenter
  // Explicitly imported
  // Implements: Microsoft.UI.Xaml.Controls.IScrollContentPresenter
  // Statics: "Microsoft.UI.Xaml.Controls.IScrollContentPresenterStatics"
  // Instantiable: "IScrollContentPresenter"
  TScrollContentPresenter = class(TWinRTGenericImportSI<IScrollContentPresenterStatics, IScrollContentPresenter>)
  public
    // -> IScrollContentPresenterStatics
    class function get_CanContentRenderOutsideBoundsProperty: IDependencyProperty; static; inline;
    class function get_SizesContentToTemplatedParentProperty: IDependencyProperty; static; inline;
    class property CanContentRenderOutsideBoundsProperty: IDependencyProperty read get_CanContentRenderOutsideBoundsProperty;
    class property SizesContentToTemplatedParentProperty: IDependencyProperty read get_SizesContentToTemplatedParentProperty;
  end;

  // Microsoft.UI.Xaml.Controls.ScrollViewer
  // Explicitly imported
  // Implements: Microsoft.UI.Xaml.Controls.IScrollViewer
  // Implements: Microsoft.UI.Xaml.Controls.IScrollAnchorProvider
  // Statics: "Microsoft.UI.Xaml.Controls.IScrollViewerStatics"
  // Instantiable: "IScrollViewer"
  TScrollViewer = class(TWinRTGenericImportSI<IScrollViewerStatics, IScrollViewer>)
  public
    // -> IScrollViewerStatics
    class function get_HorizontalSnapPointsAlignmentProperty: IDependencyProperty; static; inline;
    class function get_VerticalSnapPointsAlignmentProperty: IDependencyProperty; static; inline;
    class function get_HorizontalSnapPointsTypeProperty: IDependencyProperty; static; inline;
    class function get_VerticalSnapPointsTypeProperty: IDependencyProperty; static; inline;
    class function get_ZoomSnapPointsTypeProperty: IDependencyProperty; static; inline;
    class function get_HorizontalOffsetProperty: IDependencyProperty; static; inline;
    class function get_ViewportWidthProperty: IDependencyProperty; static; inline;
    class function get_ScrollableWidthProperty: IDependencyProperty; static; inline;
    class function get_ComputedHorizontalScrollBarVisibilityProperty: IDependencyProperty; static; inline;
    class function get_ExtentWidthProperty: IDependencyProperty; static; inline;
    class function get_VerticalOffsetProperty: IDependencyProperty; static; inline;
    class function get_ViewportHeightProperty: IDependencyProperty; static; inline;
    class function get_ScrollableHeightProperty: IDependencyProperty; static; inline;
    class function get_ComputedVerticalScrollBarVisibilityProperty: IDependencyProperty; static; inline;
    class function get_ExtentHeightProperty: IDependencyProperty; static; inline;
    class function get_MinZoomFactorProperty: IDependencyProperty; static; inline;
    class function get_MaxZoomFactorProperty: IDependencyProperty; static; inline;
    class function get_ZoomFactorProperty: IDependencyProperty; static; inline;
    class function get_ZoomSnapPointsProperty: IDependencyProperty; static; inline;
    class function get_TopLeftHeaderProperty: IDependencyProperty; static; inline;
    class function get_LeftHeaderProperty: IDependencyProperty; static; inline;
    class function get_TopHeaderProperty: IDependencyProperty; static; inline;
    class function get_ReduceViewportForCoreInputViewOcclusionsProperty: IDependencyProperty; static; inline;
    class function get_HorizontalAnchorRatioProperty: IDependencyProperty; static; inline;
    class function get_VerticalAnchorRatioProperty: IDependencyProperty; static; inline;
    class function get_HorizontalScrollBarVisibilityProperty: IDependencyProperty; static; inline;
    class function GetHorizontalScrollBarVisibility(element: IDependencyObject): ScrollBarVisibility; static; inline;
    class procedure SetHorizontalScrollBarVisibility(element: IDependencyObject; horizontalScrollBarVisibility: ScrollBarVisibility); static; inline;
    class function get_VerticalScrollBarVisibilityProperty: IDependencyProperty; static; inline;
    class function GetVerticalScrollBarVisibility(element: IDependencyObject): ScrollBarVisibility; static; inline;
    class procedure SetVerticalScrollBarVisibility(element: IDependencyObject; verticalScrollBarVisibility: ScrollBarVisibility); static; inline;
    class function get_IsHorizontalRailEnabledProperty: IDependencyProperty; static; inline;
    class function GetIsHorizontalRailEnabled(element: IDependencyObject): Boolean; static; inline;
    class procedure SetIsHorizontalRailEnabled(element: IDependencyObject; isHorizontalRailEnabled: Boolean); static; inline;
    class function get_IsVerticalRailEnabledProperty: IDependencyProperty; static; inline;
    class function GetIsVerticalRailEnabled(element: IDependencyObject): Boolean; static; inline;
    class procedure SetIsVerticalRailEnabled(element: IDependencyObject; isVerticalRailEnabled: Boolean); static; inline;
    class function get_IsHorizontalScrollChainingEnabledProperty: IDependencyProperty; static; inline;
    class function GetIsHorizontalScrollChainingEnabled(element: IDependencyObject): Boolean; static; inline;
    class procedure SetIsHorizontalScrollChainingEnabled(element: IDependencyObject; isHorizontalScrollChainingEnabled: Boolean); static; inline;
    class function get_IsVerticalScrollChainingEnabledProperty: IDependencyProperty; static; inline;
    class function GetIsVerticalScrollChainingEnabled(element: IDependencyObject): Boolean; static; inline;
    class procedure SetIsVerticalScrollChainingEnabled(element: IDependencyObject; isVerticalScrollChainingEnabled: Boolean); static; inline;
    class function get_IsZoomChainingEnabledProperty: IDependencyProperty; static; inline;
    class function GetIsZoomChainingEnabled(element: IDependencyObject): Boolean; static; inline;
    class procedure SetIsZoomChainingEnabled(element: IDependencyObject; isZoomChainingEnabled: Boolean); static; inline;
    class function get_IsScrollInertiaEnabledProperty: IDependencyProperty; static; inline;
    class function GetIsScrollInertiaEnabled(element: IDependencyObject): Boolean; static; inline;
    class procedure SetIsScrollInertiaEnabled(element: IDependencyObject; isScrollInertiaEnabled: Boolean); static; inline;
    class function get_IsZoomInertiaEnabledProperty: IDependencyProperty; static; inline;
    class function GetIsZoomInertiaEnabled(element: IDependencyObject): Boolean; static; inline;
    class procedure SetIsZoomInertiaEnabled(element: IDependencyObject; isZoomInertiaEnabled: Boolean); static; inline;
    class function get_HorizontalScrollModeProperty: IDependencyProperty; static; inline;
    class function GetHorizontalScrollMode(element: IDependencyObject): ScrollMode; static; inline;
    class procedure SetHorizontalScrollMode(element: IDependencyObject; horizontalScrollMode: ScrollMode); static; inline;
    class function get_VerticalScrollModeProperty: IDependencyProperty; static; inline;
    class function GetVerticalScrollMode(element: IDependencyObject): ScrollMode; static; inline;
    class procedure SetVerticalScrollMode(element: IDependencyObject; verticalScrollMode: ScrollMode); static; inline;
    class function get_ZoomModeProperty: IDependencyProperty; static; inline;
    class function GetZoomMode(element: IDependencyObject): ZoomMode; static; inline;
    class procedure SetZoomMode(element: IDependencyObject; zoomMode: ZoomMode); static; inline;
    class function get_CanContentRenderOutsideBoundsProperty: IDependencyProperty; static; inline;
    class function GetCanContentRenderOutsideBounds(element: IDependencyObject): Boolean; static; inline;
    class procedure SetCanContentRenderOutsideBounds(element: IDependencyObject; canContentRenderOutsideBounds: Boolean); static; inline;
    class function get_IsDeferredScrollingEnabledProperty: IDependencyProperty; static; inline;
    class function GetIsDeferredScrollingEnabled(element: IDependencyObject): Boolean; static; inline;
    class procedure SetIsDeferredScrollingEnabled(element: IDependencyObject; isDeferredScrollingEnabled: Boolean); static; inline;
    class function get_BringIntoViewOnFocusChangeProperty: IDependencyProperty; static; inline;
    class function GetBringIntoViewOnFocusChange(element: IDependencyObject): Boolean; static; inline;
    class procedure SetBringIntoViewOnFocusChange(element: IDependencyObject; bringIntoViewOnFocusChange: Boolean); static; inline;
    class property BringIntoViewOnFocusChangeProperty: IDependencyProperty read get_BringIntoViewOnFocusChangeProperty;
    class property CanContentRenderOutsideBoundsProperty: IDependencyProperty read get_CanContentRenderOutsideBoundsProperty;
    class property ComputedHorizontalScrollBarVisibilityProperty: IDependencyProperty read get_ComputedHorizontalScrollBarVisibilityProperty;
    class property ComputedVerticalScrollBarVisibilityProperty: IDependencyProperty read get_ComputedVerticalScrollBarVisibilityProperty;
    class property ExtentHeightProperty: IDependencyProperty read get_ExtentHeightProperty;
    class property ExtentWidthProperty: IDependencyProperty read get_ExtentWidthProperty;
    class property HorizontalAnchorRatioProperty: IDependencyProperty read get_HorizontalAnchorRatioProperty;
    class property HorizontalOffsetProperty: IDependencyProperty read get_HorizontalOffsetProperty;
    class property HorizontalScrollBarVisibilityProperty: IDependencyProperty read get_HorizontalScrollBarVisibilityProperty;
    class property HorizontalScrollModeProperty: IDependencyProperty read get_HorizontalScrollModeProperty;
    class property HorizontalSnapPointsAlignmentProperty: IDependencyProperty read get_HorizontalSnapPointsAlignmentProperty;
    class property HorizontalSnapPointsTypeProperty: IDependencyProperty read get_HorizontalSnapPointsTypeProperty;
    class property IsDeferredScrollingEnabledProperty: IDependencyProperty read get_IsDeferredScrollingEnabledProperty;
    class property IsHorizontalRailEnabledProperty: IDependencyProperty read get_IsHorizontalRailEnabledProperty;
    class property IsHorizontalScrollChainingEnabledProperty: IDependencyProperty read get_IsHorizontalScrollChainingEnabledProperty;
    class property IsScrollInertiaEnabledProperty: IDependencyProperty read get_IsScrollInertiaEnabledProperty;
    class property IsVerticalRailEnabledProperty: IDependencyProperty read get_IsVerticalRailEnabledProperty;
    class property IsVerticalScrollChainingEnabledProperty: IDependencyProperty read get_IsVerticalScrollChainingEnabledProperty;
    class property IsZoomChainingEnabledProperty: IDependencyProperty read get_IsZoomChainingEnabledProperty;
    class property IsZoomInertiaEnabledProperty: IDependencyProperty read get_IsZoomInertiaEnabledProperty;
    class property LeftHeaderProperty: IDependencyProperty read get_LeftHeaderProperty;
    class property MaxZoomFactorProperty: IDependencyProperty read get_MaxZoomFactorProperty;
    class property MinZoomFactorProperty: IDependencyProperty read get_MinZoomFactorProperty;
    class property ReduceViewportForCoreInputViewOcclusionsProperty: IDependencyProperty read get_ReduceViewportForCoreInputViewOcclusionsProperty;
    class property ScrollableHeightProperty: IDependencyProperty read get_ScrollableHeightProperty;
    class property ScrollableWidthProperty: IDependencyProperty read get_ScrollableWidthProperty;
    class property TopHeaderProperty: IDependencyProperty read get_TopHeaderProperty;
    class property TopLeftHeaderProperty: IDependencyProperty read get_TopLeftHeaderProperty;
    class property VerticalAnchorRatioProperty: IDependencyProperty read get_VerticalAnchorRatioProperty;
    class property VerticalOffsetProperty: IDependencyProperty read get_VerticalOffsetProperty;
    class property VerticalScrollBarVisibilityProperty: IDependencyProperty read get_VerticalScrollBarVisibilityProperty;
    class property VerticalScrollModeProperty: IDependencyProperty read get_VerticalScrollModeProperty;
    class property VerticalSnapPointsAlignmentProperty: IDependencyProperty read get_VerticalSnapPointsAlignmentProperty;
    class property VerticalSnapPointsTypeProperty: IDependencyProperty read get_VerticalSnapPointsTypeProperty;
    class property ViewportHeightProperty: IDependencyProperty read get_ViewportHeightProperty;
    class property ViewportWidthProperty: IDependencyProperty read get_ViewportWidthProperty;
    class property ZoomFactorProperty: IDependencyProperty read get_ZoomFactorProperty;
    class property ZoomModeProperty: IDependencyProperty read get_ZoomModeProperty;
    class property ZoomSnapPointsProperty: IDependencyProperty read get_ZoomSnapPointsProperty;
    class property ZoomSnapPointsTypeProperty: IDependencyProperty read get_ZoomSnapPointsTypeProperty;
  end;

  // Microsoft.UI.Xaml.Controls.ScrollViewerViewChangedEventArgs
  // Explicitly imported
  // Implements: Microsoft.UI.Xaml.Controls.IScrollViewerViewChangedEventArgs
  // Instantiable: "IScrollViewerViewChangedEventArgs"
  TScrollViewerViewChangedEventArgs = class(TWinRTGenericImportI<IScrollViewerViewChangedEventArgs>) end;

  // Microsoft.UI.Xaml.Controls.SectionsInViewChangedEventArgs
  // Explicitly imported
  // Implements: Microsoft.UI.Xaml.Controls.ISectionsInViewChangedEventArgs
  // Factory: "Microsoft.UI.Xaml.Controls.ISectionsInViewChangedEventArgsFactory"
  // Instantiable: "ISectionsInViewChangedEventArgs"
  TSectionsInViewChangedEventArgs = class(TWinRTGenericImportFI<ISectionsInViewChangedEventArgsFactory, ISectionsInViewChangedEventArgs>)
  public
    // -> ISectionsInViewChangedEventArgsFactory
  end;

  // Microsoft.UI.Xaml.Controls.SelectionChangedEventArgs
  // Explicitly imported
  // Implements: Microsoft.UI.Xaml.Controls.ISelectionChangedEventArgs
  // Factory: "Microsoft.UI.Xaml.Controls.ISelectionChangedEventArgsFactory"
  // Instantiable: "ISelectionChangedEventArgs"
  TSelectionChangedEventArgs = class(TWinRTGenericImportFI<ISelectionChangedEventArgsFactory, ISelectionChangedEventArgs>)
  public
    // -> ISelectionChangedEventArgsFactory
    class function CreateInstanceWithRemovedItemsAndAddedItems(removedItems: IVector_1__IInspectable; addedItems: IVector_1__IInspectable; baseInterface: IInspectable; out innerInterface: IInspectable): ISelectionChangedEventArgs; static; inline;
  end;

  // Microsoft.UI.Xaml.Controls.SemanticZoom
  // Explicitly imported
  // Implements: Microsoft.UI.Xaml.Controls.ISemanticZoom
  // Statics: "Microsoft.UI.Xaml.Controls.ISemanticZoomStatics"
  // Instantiable: "ISemanticZoom"
  TSemanticZoom = class(TWinRTGenericImportSI<ISemanticZoomStatics, ISemanticZoom>)
  public
    // -> ISemanticZoomStatics
    class function get_ZoomedInViewProperty: IDependencyProperty; static; inline;
    class function get_ZoomedOutViewProperty: IDependencyProperty; static; inline;
    class function get_IsZoomedInViewActiveProperty: IDependencyProperty; static; inline;
    class function get_CanChangeViewsProperty: IDependencyProperty; static; inline;
    class function get_IsZoomOutButtonEnabledProperty: IDependencyProperty; static; inline;
    class property CanChangeViewsProperty: IDependencyProperty read get_CanChangeViewsProperty;
    class property IsZoomOutButtonEnabledProperty: IDependencyProperty read get_IsZoomOutButtonEnabledProperty;
    class property IsZoomedInViewActiveProperty: IDependencyProperty read get_IsZoomedInViewActiveProperty;
    class property ZoomedInViewProperty: IDependencyProperty read get_ZoomedInViewProperty;
    class property ZoomedOutViewProperty: IDependencyProperty read get_ZoomedOutViewProperty;
  end;

  // Microsoft.UI.Xaml.Controls.SemanticZoomLocation
  // Explicitly imported
  // Implements: Microsoft.UI.Xaml.Controls.ISemanticZoomLocation
  // Instantiable: "ISemanticZoomLocation"
  TSemanticZoomLocation = class(TWinRTGenericImportI<ISemanticZoomLocation>) end;

  // Microsoft.UI.Xaml.Controls.SemanticZoomViewChangedEventArgs
  // Explicitly imported
  // Implements: Microsoft.UI.Xaml.Controls.ISemanticZoomViewChangedEventArgs
  // Instantiable: "ISemanticZoomViewChangedEventArgs"
  TSemanticZoomViewChangedEventArgs = class(TWinRTGenericImportI<ISemanticZoomViewChangedEventArgs>) end;

  // Microsoft.UI.Xaml.Controls.SplitButton
  // Explicitly imported
  // Implements: Microsoft.UI.Xaml.Controls.ISplitButton
  // Statics: "Microsoft.UI.Xaml.Controls.ISplitButtonStatics"
  // Factory: "Microsoft.UI.Xaml.Controls.ISplitButtonFactory"
  // Instantiable: "ISplitButton"
  TSplitButton = class(TWinRTGenericImportFSI<ISplitButtonFactory, ISplitButtonStatics, ISplitButton>)
  public
    // -> ISplitButtonStatics
    class function get_FlyoutProperty: IDependencyProperty; static; inline;
    class function get_CommandProperty: IDependencyProperty; static; inline;
    class function get_CommandParameterProperty: IDependencyProperty; static; inline;
    class property CommandParameterProperty: IDependencyProperty read get_CommandParameterProperty;
    class property CommandProperty: IDependencyProperty read get_CommandProperty;
    class property FlyoutProperty: IDependencyProperty read get_FlyoutProperty;

    // -> ISplitButtonFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): ISplitButton; static; inline;
  end;

  // Microsoft.UI.Xaml.Controls.SplitView
  // Explicitly imported
  // Implements: Microsoft.UI.Xaml.Controls.ISplitView
  // Statics: "Microsoft.UI.Xaml.Controls.ISplitViewStatics"
  // Factory: "Microsoft.UI.Xaml.Controls.ISplitViewFactory"
  // Instantiable: "ISplitView"
  TSplitView = class(TWinRTGenericImportFSI<ISplitViewFactory, ISplitViewStatics, ISplitView>)
  public
    // -> ISplitViewStatics
    class function get_ContentProperty: IDependencyProperty; static; inline;
    class function get_PaneProperty: IDependencyProperty; static; inline;
    class function get_IsPaneOpenProperty: IDependencyProperty; static; inline;
    class function get_OpenPaneLengthProperty: IDependencyProperty; static; inline;
    class function get_CompactPaneLengthProperty: IDependencyProperty; static; inline;
    class function get_PanePlacementProperty: IDependencyProperty; static; inline;
    class function get_DisplayModeProperty: IDependencyProperty; static; inline;
    class function get_TemplateSettingsProperty: IDependencyProperty; static; inline;
    class function get_PaneBackgroundProperty: IDependencyProperty; static; inline;
    class function get_LightDismissOverlayModeProperty: IDependencyProperty; static; inline;
    class property CompactPaneLengthProperty: IDependencyProperty read get_CompactPaneLengthProperty;
    class property ContentProperty: IDependencyProperty read get_ContentProperty;
    class property DisplayModeProperty: IDependencyProperty read get_DisplayModeProperty;
    class property IsPaneOpenProperty: IDependencyProperty read get_IsPaneOpenProperty;
    class property LightDismissOverlayModeProperty: IDependencyProperty read get_LightDismissOverlayModeProperty;
    class property OpenPaneLengthProperty: IDependencyProperty read get_OpenPaneLengthProperty;
    class property PaneBackgroundProperty: IDependencyProperty read get_PaneBackgroundProperty;
    class property PanePlacementProperty: IDependencyProperty read get_PanePlacementProperty;
    class property PaneProperty: IDependencyProperty read get_PaneProperty;
    class property TemplateSettingsProperty: IDependencyProperty read get_TemplateSettingsProperty;

    // -> ISplitViewFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): ISplitView; static; inline;
  end;

  // Microsoft.UI.Xaml.Controls.VirtualizingLayout
  // Explicitly imported
  // Implements: Microsoft.UI.Xaml.Controls.IVirtualizingLayout
  // Implements: Microsoft.UI.Xaml.Controls.IVirtualizingLayoutOverrides
  // Factory: "Microsoft.UI.Xaml.Controls.IVirtualizingLayoutFactory"
  // Instantiable: "IVirtualizingLayout"
  TVirtualizingLayout = class(TWinRTGenericImportFI<IVirtualizingLayoutFactory, IVirtualizingLayout>)
  public
    // -> IVirtualizingLayoutFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IVirtualizingLayout; static; inline;
  end;

  // Microsoft.UI.Xaml.Controls.StackLayout
  // Explicitly imported
  // Implements: Microsoft.UI.Xaml.Controls.IStackLayout
  // Statics: "Microsoft.UI.Xaml.Controls.IStackLayoutStatics"
  // Factory: "Microsoft.UI.Xaml.Controls.IStackLayoutFactory"
  // Instantiable: "IStackLayout"
  TStackLayout = class(TWinRTGenericImportFSI<IStackLayoutFactory, IStackLayoutStatics, IStackLayout>)
  public
    // -> IStackLayoutStatics
    class function get_OrientationProperty: IDependencyProperty; static; inline;
    class function get_SpacingProperty: IDependencyProperty; static; inline;
    class property OrientationProperty: IDependencyProperty read get_OrientationProperty;
    class property SpacingProperty: IDependencyProperty read get_SpacingProperty;

    // -> IStackLayoutFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IStackLayout; static; inline;
  end;

  // Microsoft.UI.Xaml.Controls.StackPanel
  // Explicitly imported
  // Implements: Microsoft.UI.Xaml.Controls.IStackPanel
  // Implements: Microsoft.UI.Xaml.Controls.Primitives.IScrollSnapPointsInfo
  // Implements: Microsoft.UI.Xaml.Controls.IInsertionPanel
  // Statics: "Microsoft.UI.Xaml.Controls.IStackPanelStatics"
  // Factory: "Microsoft.UI.Xaml.Controls.IStackPanelFactory"
  // Instantiable: "IStackPanel"
  TStackPanel = class(TWinRTGenericImportFSI<IStackPanelFactory, IStackPanelStatics, IStackPanel>)
  public
    // -> IStackPanelStatics
    class function get_AreScrollSnapPointsRegularProperty: IDependencyProperty; static; inline;
    class function get_OrientationProperty: IDependencyProperty; static; inline;
    class function get_BackgroundSizingProperty: IDependencyProperty; static; inline;
    class function get_BorderBrushProperty: IDependencyProperty; static; inline;
    class function get_BorderThicknessProperty: IDependencyProperty; static; inline;
    class function get_CornerRadiusProperty: IDependencyProperty; static; inline;
    class function get_PaddingProperty: IDependencyProperty; static; inline;
    class function get_SpacingProperty: IDependencyProperty; static; inline;
    class property AreScrollSnapPointsRegularProperty: IDependencyProperty read get_AreScrollSnapPointsRegularProperty;
    class property BackgroundSizingProperty: IDependencyProperty read get_BackgroundSizingProperty;
    class property BorderBrushProperty: IDependencyProperty read get_BorderBrushProperty;
    class property BorderThicknessProperty: IDependencyProperty read get_BorderThicknessProperty;
    class property CornerRadiusProperty: IDependencyProperty read get_CornerRadiusProperty;
    class property OrientationProperty: IDependencyProperty read get_OrientationProperty;
    class property PaddingProperty: IDependencyProperty read get_PaddingProperty;
    class property SpacingProperty: IDependencyProperty read get_SpacingProperty;

    // -> IStackPanelFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IStackPanel; static; inline;
  end;

  // Microsoft.UI.Xaml.Controls.StyleSelector
  // Explicitly imported
  // Implements: Microsoft.UI.Xaml.Controls.IStyleSelector
  // Implements: Microsoft.UI.Xaml.Controls.IStyleSelectorOverrides
  // Factory: "Microsoft.UI.Xaml.Controls.IStyleSelectorFactory"
  // Instantiable: "IStyleSelector"
  TStyleSelector = class(TWinRTGenericImportFI<IStyleSelectorFactory, IStyleSelector>)
  public
    // -> IStyleSelectorFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IStyleSelector; static; inline;
  end;

  // Microsoft.UI.Xaml.Controls.SwapChainBackgroundPanel
  // Explicitly imported
  // Implements: Microsoft.UI.Xaml.Controls.ISwapChainBackgroundPanel
  // Factory: "Microsoft.UI.Xaml.Controls.ISwapChainBackgroundPanelFactory"
  // Instantiable: "ISwapChainBackgroundPanel"
  TSwapChainBackgroundPanel = class(TWinRTGenericImportFI<ISwapChainBackgroundPanelFactory, ISwapChainBackgroundPanel>)
  public
    // -> ISwapChainBackgroundPanelFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): ISwapChainBackgroundPanel; static; inline;
  end;

  // Microsoft.UI.Xaml.Controls.SwapChainPanel
  // Explicitly imported
  // Implements: Microsoft.UI.Xaml.Controls.ISwapChainPanel
  // Statics: "Microsoft.UI.Xaml.Controls.ISwapChainPanelStatics"
  // Factory: "Microsoft.UI.Xaml.Controls.ISwapChainPanelFactory"
  // Instantiable: "ISwapChainPanel"
  TSwapChainPanel = class(TWinRTGenericImportFSI<ISwapChainPanelFactory, ISwapChainPanelStatics, ISwapChainPanel>)
  public
    // -> ISwapChainPanelStatics
    class function get_CompositionScaleXProperty: IDependencyProperty; static; inline;
    class function get_CompositionScaleYProperty: IDependencyProperty; static; inline;
    class property CompositionScaleXProperty: IDependencyProperty read get_CompositionScaleXProperty;
    class property CompositionScaleYProperty: IDependencyProperty read get_CompositionScaleYProperty;

    // -> ISwapChainPanelFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): ISwapChainPanel; static; inline;
  end;

  // Microsoft.UI.Xaml.Controls.SwipeControl
  // Explicitly imported
  // Implements: Microsoft.UI.Xaml.Controls.ISwipeControl
  // Statics: "Microsoft.UI.Xaml.Controls.ISwipeControlStatics"
  // Factory: "Microsoft.UI.Xaml.Controls.ISwipeControlFactory"
  // Instantiable: "ISwipeControl"
  TSwipeControl = class(TWinRTGenericImportFSI<ISwipeControlFactory, ISwipeControlStatics, ISwipeControl>)
  public
    // -> ISwipeControlStatics
    class function get_LeftItemsProperty: IDependencyProperty; static; inline;
    class function get_RightItemsProperty: IDependencyProperty; static; inline;
    class function get_TopItemsProperty: IDependencyProperty; static; inline;
    class function get_BottomItemsProperty: IDependencyProperty; static; inline;
    class property BottomItemsProperty: IDependencyProperty read get_BottomItemsProperty;
    class property LeftItemsProperty: IDependencyProperty read get_LeftItemsProperty;
    class property RightItemsProperty: IDependencyProperty read get_RightItemsProperty;
    class property TopItemsProperty: IDependencyProperty read get_TopItemsProperty;

    // -> ISwipeControlFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): ISwipeControl; static; inline;
  end;

  // Microsoft.UI.Xaml.Controls.SwipeItem
  // Explicitly imported
  // Implements: Microsoft.UI.Xaml.Controls.ISwipeItem
  // Statics: "Microsoft.UI.Xaml.Controls.ISwipeItemStatics"
  // Factory: "Microsoft.UI.Xaml.Controls.ISwipeItemFactory"
  // Instantiable: "ISwipeItem"
  TSwipeItem = class(TWinRTGenericImportFSI<ISwipeItemFactory, ISwipeItemStatics, ISwipeItem>)
  public
    // -> ISwipeItemStatics
    class function get_IconSourceProperty: IDependencyProperty; static; inline;
    class function get_TextProperty: IDependencyProperty; static; inline;
    class function get_BackgroundProperty: IDependencyProperty; static; inline;
    class function get_ForegroundProperty: IDependencyProperty; static; inline;
    class function get_CommandProperty: IDependencyProperty; static; inline;
    class function get_CommandParameterProperty: IDependencyProperty; static; inline;
    class function get_BehaviorOnInvokedProperty: IDependencyProperty; static; inline;
    class property BackgroundProperty: IDependencyProperty read get_BackgroundProperty;
    class property BehaviorOnInvokedProperty: IDependencyProperty read get_BehaviorOnInvokedProperty;
    class property CommandParameterProperty: IDependencyProperty read get_CommandParameterProperty;
    class property CommandProperty: IDependencyProperty read get_CommandProperty;
    class property ForegroundProperty: IDependencyProperty read get_ForegroundProperty;
    class property IconSourceProperty: IDependencyProperty read get_IconSourceProperty;
    class property TextProperty: IDependencyProperty read get_TextProperty;

    // -> ISwipeItemFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): ISwipeItem; static; inline;
  end;

  // Microsoft.UI.Xaml.Controls.SwipeItems
  // Explicitly imported
  // Implements: Microsoft.UI.Xaml.Controls.ISwipeItems
  // Implements: Windows.Foundation.Collections.IVector`1<Microsoft.UI.Xaml.Controls.SwipeItem>
  // Implements: Windows.Foundation.Collections.IIterable`1<Microsoft.UI.Xaml.Controls.SwipeItem>
  // Statics: "Microsoft.UI.Xaml.Controls.ISwipeItemsStatics"
  // Factory: "Microsoft.UI.Xaml.Controls.ISwipeItemsFactory"
  // Instantiable: "ISwipeItems"
  TSwipeItems = class(TWinRTGenericImportFSI<ISwipeItemsFactory, ISwipeItemsStatics, ISwipeItems>)
  public
    // -> ISwipeItemsStatics
    class function get_ModeProperty: IDependencyProperty; static; inline;
    class property ModeProperty: IDependencyProperty read get_ModeProperty;

    // -> ISwipeItemsFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): ISwipeItems; static; inline;
  end;

  // Microsoft.UI.Xaml.Controls.SymbolIcon
  // Explicitly imported
  // Implements: Microsoft.UI.Xaml.Controls.ISymbolIcon
  // Statics: "Microsoft.UI.Xaml.Controls.ISymbolIconStatics"
  // Factory: "Microsoft.UI.Xaml.Controls.ISymbolIconFactory"
  // Instantiable: "ISymbolIcon"
  TSymbolIcon = class(TWinRTGenericImportFSI<ISymbolIconFactory, ISymbolIconStatics, ISymbolIcon>)
  public
    // -> ISymbolIconStatics
    class function get_SymbolProperty: IDependencyProperty; static; inline;
    class property SymbolProperty: IDependencyProperty read get_SymbolProperty;

    // -> ISymbolIconFactory
    class function CreateInstanceWithSymbol(symbol: Symbol): ISymbolIcon; static; inline;
  end;

  // Microsoft.UI.Xaml.Controls.SymbolIconSource
  // Explicitly imported
  // Implements: Microsoft.UI.Xaml.Controls.ISymbolIconSource
  // Statics: "Microsoft.UI.Xaml.Controls.ISymbolIconSourceStatics"
  // Factory: "Microsoft.UI.Xaml.Controls.ISymbolIconSourceFactory"
  // Instantiable: "ISymbolIconSource"
  TSymbolIconSource = class(TWinRTGenericImportFSI<ISymbolIconSourceFactory, ISymbolIconSourceStatics, ISymbolIconSource>)
  public
    // -> ISymbolIconSourceStatics
    class function get_SymbolProperty: IDependencyProperty; static; inline;
    class property SymbolProperty: IDependencyProperty read get_SymbolProperty;

    // -> ISymbolIconSourceFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): ISymbolIconSource; static; inline;
  end;

  // Microsoft.UI.Xaml.Controls.TabView
  // Explicitly imported
  // Implements: Microsoft.UI.Xaml.Controls.ITabView
  // Statics: "Microsoft.UI.Xaml.Controls.ITabViewStatics"
  // Factory: "Microsoft.UI.Xaml.Controls.ITabViewFactory"
  // Instantiable: "ITabView"
  TTabView = class(TWinRTGenericImportFSI<ITabViewFactory, ITabViewStatics, ITabView>)
  public
    // -> ITabViewStatics
    class function get_TabWidthModeProperty: IDependencyProperty; static; inline;
    class function get_TabStripHeaderProperty: IDependencyProperty; static; inline;
    class function get_TabStripHeaderTemplateProperty: IDependencyProperty; static; inline;
    class function get_TabStripFooterProperty: IDependencyProperty; static; inline;
    class function get_TabStripFooterTemplateProperty: IDependencyProperty; static; inline;
    class function get_IsAddTabButtonVisibleProperty: IDependencyProperty; static; inline;
    class function get_AddTabButtonCommandProperty: IDependencyProperty; static; inline;
    class function get_AddTabButtonCommandParameterProperty: IDependencyProperty; static; inline;
    class function get_TabItemsSourceProperty: IDependencyProperty; static; inline;
    class function get_TabItemsProperty: IDependencyProperty; static; inline;
    class function get_TabItemTemplateProperty: IDependencyProperty; static; inline;
    class function get_TabItemTemplateSelectorProperty: IDependencyProperty; static; inline;
    class function get_CloseButtonOverlayModeProperty: IDependencyProperty; static; inline;
    class function get_CanDragTabsProperty: IDependencyProperty; static; inline;
    class function get_CanReorderTabsProperty: IDependencyProperty; static; inline;
    class function get_AllowDropTabsProperty: IDependencyProperty; static; inline;
    class function get_SelectedIndexProperty: IDependencyProperty; static; inline;
    class function get_SelectedItemProperty: IDependencyProperty; static; inline;
    class property AddTabButtonCommandParameterProperty: IDependencyProperty read get_AddTabButtonCommandParameterProperty;
    class property AddTabButtonCommandProperty: IDependencyProperty read get_AddTabButtonCommandProperty;
    class property AllowDropTabsProperty: IDependencyProperty read get_AllowDropTabsProperty;
    class property CanDragTabsProperty: IDependencyProperty read get_CanDragTabsProperty;
    class property CanReorderTabsProperty: IDependencyProperty read get_CanReorderTabsProperty;
    class property CloseButtonOverlayModeProperty: IDependencyProperty read get_CloseButtonOverlayModeProperty;
    class property IsAddTabButtonVisibleProperty: IDependencyProperty read get_IsAddTabButtonVisibleProperty;
    class property SelectedIndexProperty: IDependencyProperty read get_SelectedIndexProperty;
    class property SelectedItemProperty: IDependencyProperty read get_SelectedItemProperty;
    class property TabItemTemplateProperty: IDependencyProperty read get_TabItemTemplateProperty;
    class property TabItemTemplateSelectorProperty: IDependencyProperty read get_TabItemTemplateSelectorProperty;
    class property TabItemsProperty: IDependencyProperty read get_TabItemsProperty;
    class property TabItemsSourceProperty: IDependencyProperty read get_TabItemsSourceProperty;
    class property TabStripFooterProperty: IDependencyProperty read get_TabStripFooterProperty;
    class property TabStripFooterTemplateProperty: IDependencyProperty read get_TabStripFooterTemplateProperty;
    class property TabStripHeaderProperty: IDependencyProperty read get_TabStripHeaderProperty;
    class property TabStripHeaderTemplateProperty: IDependencyProperty read get_TabStripHeaderTemplateProperty;
    class property TabWidthModeProperty: IDependencyProperty read get_TabWidthModeProperty;

    // -> ITabViewFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): ITabView; static; inline;
  end;

  // Microsoft.UI.Xaml.Controls.TabViewItem
  // Explicitly imported
  // Implements: Microsoft.UI.Xaml.Controls.ITabViewItem
  // Statics: "Microsoft.UI.Xaml.Controls.ITabViewItemStatics"
  // Factory: "Microsoft.UI.Xaml.Controls.ITabViewItemFactory"
  // Instantiable: "ITabViewItem"
  TTabViewItem = class(TWinRTGenericImportFSI<ITabViewItemFactory, ITabViewItemStatics, ITabViewItem>)
  public
    // -> ITabViewItemStatics
    class function get_HeaderProperty: IDependencyProperty; static; inline;
    class function get_HeaderTemplateProperty: IDependencyProperty; static; inline;
    class function get_IconSourceProperty: IDependencyProperty; static; inline;
    class function get_IsClosableProperty: IDependencyProperty; static; inline;
    class function get_TabViewTemplateSettingsProperty: IDependencyProperty; static; inline;
    class property HeaderProperty: IDependencyProperty read get_HeaderProperty;
    class property HeaderTemplateProperty: IDependencyProperty read get_HeaderTemplateProperty;
    class property IconSourceProperty: IDependencyProperty read get_IconSourceProperty;
    class property IsClosableProperty: IDependencyProperty read get_IsClosableProperty;
    class property TabViewTemplateSettingsProperty: IDependencyProperty read get_TabViewTemplateSettingsProperty;

    // -> ITabViewItemFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): ITabViewItem; static; inline;
  end;

  // Microsoft.UI.Xaml.Controls.TabViewItemTemplateSettings
  // Explicitly imported
  // Implements: Microsoft.UI.Xaml.Controls.ITabViewItemTemplateSettings
  // Implements: Microsoft.UI.Xaml.Controls.ITabViewItemTemplateSettings2
  // Statics: "Microsoft.UI.Xaml.Controls.ITabViewItemTemplateSettingsStatics"
  // Statics: "Microsoft.UI.Xaml.Controls.ITabViewItemTemplateSettingsStatics2"
  // Factory: "Microsoft.UI.Xaml.Controls.ITabViewItemTemplateSettingsFactory"
  // Instantiable: "ITabViewItemTemplateSettings"
  TTabViewItemTemplateSettings = class(TWinRTGenericImportFS2I<ITabViewItemTemplateSettingsFactory, ITabViewItemTemplateSettingsStatics, ITabViewItemTemplateSettingsStatics2, ITabViewItemTemplateSettings>)
  public
    // -> ITabViewItemTemplateSettingsStatics
    class function get_IconElementProperty: IDependencyProperty; static; inline;
    class property IconElementProperty: IDependencyProperty read get_IconElementProperty;

    // -> ITabViewItemTemplateSettingsStatics2
    class function get_TabGeometryProperty: IDependencyProperty; static; inline;
    class property TabGeometryProperty: IDependencyProperty read get_TabGeometryProperty;

    // -> ITabViewItemTemplateSettingsFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): ITabViewItemTemplateSettings; static; inline;
  end;

  // Microsoft.UI.Xaml.Controls.TeachingTip
  // Explicitly imported
  // Implements: Microsoft.UI.Xaml.Controls.ITeachingTip
  // Statics: "Microsoft.UI.Xaml.Controls.ITeachingTipStatics"
  // Factory: "Microsoft.UI.Xaml.Controls.ITeachingTipFactory"
  // Instantiable: "ITeachingTip"
  TTeachingTip = class(TWinRTGenericImportFSI<ITeachingTipFactory, ITeachingTipStatics, ITeachingTip>)
  public
    // -> ITeachingTipStatics
    class function get_IsOpenProperty: IDependencyProperty; static; inline;
    class function get_TargetProperty: IDependencyProperty; static; inline;
    class function get_TailVisibilityProperty: IDependencyProperty; static; inline;
    class function get_TitleProperty: IDependencyProperty; static; inline;
    class function get_SubtitleProperty: IDependencyProperty; static; inline;
    class function get_ActionButtonContentProperty: IDependencyProperty; static; inline;
    class function get_ActionButtonStyleProperty: IDependencyProperty; static; inline;
    class function get_ActionButtonCommandProperty: IDependencyProperty; static; inline;
    class function get_ActionButtonCommandParameterProperty: IDependencyProperty; static; inline;
    class function get_CloseButtonContentProperty: IDependencyProperty; static; inline;
    class function get_CloseButtonStyleProperty: IDependencyProperty; static; inline;
    class function get_CloseButtonCommandProperty: IDependencyProperty; static; inline;
    class function get_CloseButtonCommandParameterProperty: IDependencyProperty; static; inline;
    class function get_PlacementMarginProperty: IDependencyProperty; static; inline;
    class function get_ShouldConstrainToRootBoundsProperty: IDependencyProperty; static; inline;
    class function get_IsLightDismissEnabledProperty: IDependencyProperty; static; inline;
    class function get_PreferredPlacementProperty: IDependencyProperty; static; inline;
    class function get_HeroContentPlacementProperty: IDependencyProperty; static; inline;
    class function get_HeroContentProperty: IDependencyProperty; static; inline;
    class function get_IconSourceProperty: IDependencyProperty; static; inline;
    class function get_TemplateSettingsProperty: IDependencyProperty; static; inline;
    class property ActionButtonCommandParameterProperty: IDependencyProperty read get_ActionButtonCommandParameterProperty;
    class property ActionButtonCommandProperty: IDependencyProperty read get_ActionButtonCommandProperty;
    class property ActionButtonContentProperty: IDependencyProperty read get_ActionButtonContentProperty;
    class property ActionButtonStyleProperty: IDependencyProperty read get_ActionButtonStyleProperty;
    class property CloseButtonCommandParameterProperty: IDependencyProperty read get_CloseButtonCommandParameterProperty;
    class property CloseButtonCommandProperty: IDependencyProperty read get_CloseButtonCommandProperty;
    class property CloseButtonContentProperty: IDependencyProperty read get_CloseButtonContentProperty;
    class property CloseButtonStyleProperty: IDependencyProperty read get_CloseButtonStyleProperty;
    class property HeroContentPlacementProperty: IDependencyProperty read get_HeroContentPlacementProperty;
    class property HeroContentProperty: IDependencyProperty read get_HeroContentProperty;
    class property IconSourceProperty: IDependencyProperty read get_IconSourceProperty;
    class property IsLightDismissEnabledProperty: IDependencyProperty read get_IsLightDismissEnabledProperty;
    class property IsOpenProperty: IDependencyProperty read get_IsOpenProperty;
    class property PlacementMarginProperty: IDependencyProperty read get_PlacementMarginProperty;
    class property PreferredPlacementProperty: IDependencyProperty read get_PreferredPlacementProperty;
    class property ShouldConstrainToRootBoundsProperty: IDependencyProperty read get_ShouldConstrainToRootBoundsProperty;
    class property SubtitleProperty: IDependencyProperty read get_SubtitleProperty;
    class property TailVisibilityProperty: IDependencyProperty read get_TailVisibilityProperty;
    class property TargetProperty: IDependencyProperty read get_TargetProperty;
    class property TemplateSettingsProperty: IDependencyProperty read get_TemplateSettingsProperty;
    class property TitleProperty: IDependencyProperty read get_TitleProperty;

    // -> ITeachingTipFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): ITeachingTip; static; inline;
  end;

  // Microsoft.UI.Xaml.Controls.TeachingTipTemplateSettings
  // Explicitly imported
  // Implements: Microsoft.UI.Xaml.Controls.ITeachingTipTemplateSettings
  // Statics: "Microsoft.UI.Xaml.Controls.ITeachingTipTemplateSettingsStatics"
  // Factory: "Microsoft.UI.Xaml.Controls.ITeachingTipTemplateSettingsFactory"
  // Instantiable: "ITeachingTipTemplateSettings"
  TTeachingTipTemplateSettings = class(TWinRTGenericImportFSI<ITeachingTipTemplateSettingsFactory, ITeachingTipTemplateSettingsStatics, ITeachingTipTemplateSettings>)
  public
    // -> ITeachingTipTemplateSettingsStatics
    class function get_TopRightHighlightMarginProperty: IDependencyProperty; static; inline;
    class function get_TopLeftHighlightMarginProperty: IDependencyProperty; static; inline;
    class function get_IconElementProperty: IDependencyProperty; static; inline;
    class property IconElementProperty: IDependencyProperty read get_IconElementProperty;
    class property TopLeftHighlightMarginProperty: IDependencyProperty read get_TopLeftHighlightMarginProperty;
    class property TopRightHighlightMarginProperty: IDependencyProperty read get_TopRightHighlightMarginProperty;

    // -> ITeachingTipTemplateSettingsFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): ITeachingTipTemplateSettings; static; inline;
  end;

  // Microsoft.UI.Xaml.Controls.TextBlock
  // Explicitly imported
  // Implements: Microsoft.UI.Xaml.Controls.ITextBlock
  // Statics: "Microsoft.UI.Xaml.Controls.ITextBlockStatics"
  // Instantiable: "ITextBlock"
  TTextBlock = class(TWinRTGenericImportSI<ITextBlockStatics, ITextBlock>)
  public
    // -> ITextBlockStatics
    class function get_FontSizeProperty: IDependencyProperty; static; inline;
    class function get_FontFamilyProperty: IDependencyProperty; static; inline;
    class function get_FontWeightProperty: IDependencyProperty; static; inline;
    class function get_FontStyleProperty: IDependencyProperty; static; inline;
    class function get_FontStretchProperty: IDependencyProperty; static; inline;
    class function get_CharacterSpacingProperty: IDependencyProperty; static; inline;
    class function get_ForegroundProperty: IDependencyProperty; static; inline;
    class function get_TextWrappingProperty: IDependencyProperty; static; inline;
    class function get_TextTrimmingProperty: IDependencyProperty; static; inline;
    class function get_TextAlignmentProperty: IDependencyProperty; static; inline;
    class function get_TextProperty: IDependencyProperty; static; inline;
    class function get_PaddingProperty: IDependencyProperty; static; inline;
    class function get_LineHeightProperty: IDependencyProperty; static; inline;
    class function get_LineStackingStrategyProperty: IDependencyProperty; static; inline;
    class function get_IsTextSelectionEnabledProperty: IDependencyProperty; static; inline;
    class function get_SelectedTextProperty: IDependencyProperty; static; inline;
    class function get_SelectionHighlightColorProperty: IDependencyProperty; static; inline;
    class function get_MaxLinesProperty: IDependencyProperty; static; inline;
    class function get_TextLineBoundsProperty: IDependencyProperty; static; inline;
    class function get_OpticalMarginAlignmentProperty: IDependencyProperty; static; inline;
    class function get_IsColorFontEnabledProperty: IDependencyProperty; static; inline;
    class function get_TextReadingOrderProperty: IDependencyProperty; static; inline;
    class function get_IsTextScaleFactorEnabledProperty: IDependencyProperty; static; inline;
    class function get_TextDecorationsProperty: IDependencyProperty; static; inline;
    class function get_IsTextTrimmedProperty: IDependencyProperty; static; inline;
    class function get_HorizontalTextAlignmentProperty: IDependencyProperty; static; inline;
    class function get_SelectionFlyoutProperty: IDependencyProperty; static; inline;
    class property CharacterSpacingProperty: IDependencyProperty read get_CharacterSpacingProperty;
    class property FontFamilyProperty: IDependencyProperty read get_FontFamilyProperty;
    class property FontSizeProperty: IDependencyProperty read get_FontSizeProperty;
    class property FontStretchProperty: IDependencyProperty read get_FontStretchProperty;
    class property FontStyleProperty: IDependencyProperty read get_FontStyleProperty;
    class property FontWeightProperty: IDependencyProperty read get_FontWeightProperty;
    class property ForegroundProperty: IDependencyProperty read get_ForegroundProperty;
    class property HorizontalTextAlignmentProperty: IDependencyProperty read get_HorizontalTextAlignmentProperty;
    class property IsColorFontEnabledProperty: IDependencyProperty read get_IsColorFontEnabledProperty;
    class property IsTextScaleFactorEnabledProperty: IDependencyProperty read get_IsTextScaleFactorEnabledProperty;
    class property IsTextSelectionEnabledProperty: IDependencyProperty read get_IsTextSelectionEnabledProperty;
    class property IsTextTrimmedProperty: IDependencyProperty read get_IsTextTrimmedProperty;
    class property LineHeightProperty: IDependencyProperty read get_LineHeightProperty;
    class property LineStackingStrategyProperty: IDependencyProperty read get_LineStackingStrategyProperty;
    class property MaxLinesProperty: IDependencyProperty read get_MaxLinesProperty;
    class property OpticalMarginAlignmentProperty: IDependencyProperty read get_OpticalMarginAlignmentProperty;
    class property PaddingProperty: IDependencyProperty read get_PaddingProperty;
    class property SelectedTextProperty: IDependencyProperty read get_SelectedTextProperty;
    class property SelectionFlyoutProperty: IDependencyProperty read get_SelectionFlyoutProperty;
    class property SelectionHighlightColorProperty: IDependencyProperty read get_SelectionHighlightColorProperty;
    class property TextAlignmentProperty: IDependencyProperty read get_TextAlignmentProperty;
    class property TextDecorationsProperty: IDependencyProperty read get_TextDecorationsProperty;
    class property TextLineBoundsProperty: IDependencyProperty read get_TextLineBoundsProperty;
    class property TextProperty: IDependencyProperty read get_TextProperty;
    class property TextReadingOrderProperty: IDependencyProperty read get_TextReadingOrderProperty;
    class property TextTrimmingProperty: IDependencyProperty read get_TextTrimmingProperty;
    class property TextWrappingProperty: IDependencyProperty read get_TextWrappingProperty;
  end;

  // Microsoft.UI.Xaml.Controls.TextBox
  // Explicitly imported
  // Implements: Microsoft.UI.Xaml.Controls.ITextBox
  // Statics: "Microsoft.UI.Xaml.Controls.ITextBoxStatics"
  // Factory: "Microsoft.UI.Xaml.Controls.ITextBoxFactory"
  // Instantiable: "ITextBox"
  TTextBox = class(TWinRTGenericImportFSI<ITextBoxFactory, ITextBoxStatics, ITextBox>)
  public
    // -> ITextBoxStatics
    class function get_TextProperty: IDependencyProperty; static; inline;
    class function get_MaxLengthProperty: IDependencyProperty; static; inline;
    class function get_IsReadOnlyProperty: IDependencyProperty; static; inline;
    class function get_AcceptsReturnProperty: IDependencyProperty; static; inline;
    class function get_TextAlignmentProperty: IDependencyProperty; static; inline;
    class function get_TextWrappingProperty: IDependencyProperty; static; inline;
    class function get_IsSpellCheckEnabledProperty: IDependencyProperty; static; inline;
    class function get_IsTextPredictionEnabledProperty: IDependencyProperty; static; inline;
    class function get_InputScopeProperty: IDependencyProperty; static; inline;
    class function get_HeaderProperty: IDependencyProperty; static; inline;
    class function get_HeaderTemplateProperty: IDependencyProperty; static; inline;
    class function get_PlaceholderTextProperty: IDependencyProperty; static; inline;
    class function get_SelectionHighlightColorProperty: IDependencyProperty; static; inline;
    class function get_PreventKeyboardDisplayOnProgrammaticFocusProperty: IDependencyProperty; static; inline;
    class function get_IsColorFontEnabledProperty: IDependencyProperty; static; inline;
    class function get_SelectionHighlightColorWhenNotFocusedProperty: IDependencyProperty; static; inline;
    class function get_HorizontalTextAlignmentProperty: IDependencyProperty; static; inline;
    class function get_CharacterCasingProperty: IDependencyProperty; static; inline;
    class function get_PlaceholderForegroundProperty: IDependencyProperty; static; inline;
    class function get_CanPasteClipboardContentProperty: IDependencyProperty; static; inline;
    class function get_CanUndoProperty: IDependencyProperty; static; inline;
    class function get_CanRedoProperty: IDependencyProperty; static; inline;
    class function get_SelectionFlyoutProperty: IDependencyProperty; static; inline;
    class function get_ProofingMenuFlyoutProperty: IDependencyProperty; static; inline;
    class function get_DescriptionProperty: IDependencyProperty; static; inline;
    class function get_DesiredCandidateWindowAlignmentProperty: IDependencyProperty; static; inline;
    class function get_TextReadingOrderProperty: IDependencyProperty; static; inline;
    class property AcceptsReturnProperty: IDependencyProperty read get_AcceptsReturnProperty;
    class property CanPasteClipboardContentProperty: IDependencyProperty read get_CanPasteClipboardContentProperty;
    class property CanRedoProperty: IDependencyProperty read get_CanRedoProperty;
    class property CanUndoProperty: IDependencyProperty read get_CanUndoProperty;
    class property CharacterCasingProperty: IDependencyProperty read get_CharacterCasingProperty;
    class property DescriptionProperty: IDependencyProperty read get_DescriptionProperty;
    class property DesiredCandidateWindowAlignmentProperty: IDependencyProperty read get_DesiredCandidateWindowAlignmentProperty;
    class property HeaderProperty: IDependencyProperty read get_HeaderProperty;
    class property HeaderTemplateProperty: IDependencyProperty read get_HeaderTemplateProperty;
    class property HorizontalTextAlignmentProperty: IDependencyProperty read get_HorizontalTextAlignmentProperty;
    class property InputScopeProperty: IDependencyProperty read get_InputScopeProperty;
    class property IsColorFontEnabledProperty: IDependencyProperty read get_IsColorFontEnabledProperty;
    class property IsReadOnlyProperty: IDependencyProperty read get_IsReadOnlyProperty;
    class property IsSpellCheckEnabledProperty: IDependencyProperty read get_IsSpellCheckEnabledProperty;
    class property IsTextPredictionEnabledProperty: IDependencyProperty read get_IsTextPredictionEnabledProperty;
    class property MaxLengthProperty: IDependencyProperty read get_MaxLengthProperty;
    class property PlaceholderForegroundProperty: IDependencyProperty read get_PlaceholderForegroundProperty;
    class property PlaceholderTextProperty: IDependencyProperty read get_PlaceholderTextProperty;
    class property PreventKeyboardDisplayOnProgrammaticFocusProperty: IDependencyProperty read get_PreventKeyboardDisplayOnProgrammaticFocusProperty;
    class property ProofingMenuFlyoutProperty: IDependencyProperty read get_ProofingMenuFlyoutProperty;
    class property SelectionFlyoutProperty: IDependencyProperty read get_SelectionFlyoutProperty;
    class property SelectionHighlightColorProperty: IDependencyProperty read get_SelectionHighlightColorProperty;
    class property SelectionHighlightColorWhenNotFocusedProperty: IDependencyProperty read get_SelectionHighlightColorWhenNotFocusedProperty;
    class property TextAlignmentProperty: IDependencyProperty read get_TextAlignmentProperty;
    class property TextProperty: IDependencyProperty read get_TextProperty;
    class property TextReadingOrderProperty: IDependencyProperty read get_TextReadingOrderProperty;
    class property TextWrappingProperty: IDependencyProperty read get_TextWrappingProperty;

    // -> ITextBoxFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): ITextBox; static; inline;
  end;

  // Microsoft.UI.Xaml.Controls.TextCommandBarFlyout
  // Explicitly imported
  // Implements: Microsoft.UI.Xaml.Controls.ITextCommandBarFlyout
  // Factory: "Microsoft.UI.Xaml.Controls.ITextCommandBarFlyoutFactory"
  // Instantiable: "ITextCommandBarFlyout"
  TTextCommandBarFlyout = class(TWinRTGenericImportFI<ITextCommandBarFlyoutFactory, ITextCommandBarFlyout>)
  public
    // -> ITextCommandBarFlyoutFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): ITextCommandBarFlyout; static; inline;
  end;

  // Microsoft.UI.Xaml.Controls.TimePickedEventArgs
  // Explicitly imported
  // Implements: Microsoft.UI.Xaml.Controls.ITimePickedEventArgs
  // Instantiable: "ITimePickedEventArgs"
  TTimePickedEventArgs = class(TWinRTGenericImportI<ITimePickedEventArgs>) end;

  // Microsoft.UI.Xaml.Controls.TimePicker
  // Explicitly imported
  // Implements: Microsoft.UI.Xaml.Controls.ITimePicker
  // Statics: "Microsoft.UI.Xaml.Controls.ITimePickerStatics"
  // Factory: "Microsoft.UI.Xaml.Controls.ITimePickerFactory"
  // Instantiable: "ITimePicker"
  TTimePicker = class(TWinRTGenericImportFSI<ITimePickerFactory, ITimePickerStatics, ITimePicker>)
  public
    // -> ITimePickerStatics
    class function get_HeaderProperty: IDependencyProperty; static; inline;
    class function get_HeaderTemplateProperty: IDependencyProperty; static; inline;
    class function get_ClockIdentifierProperty: IDependencyProperty; static; inline;
    class function get_MinuteIncrementProperty: IDependencyProperty; static; inline;
    class function get_TimeProperty: IDependencyProperty; static; inline;
    class function get_LightDismissOverlayModeProperty: IDependencyProperty; static; inline;
    class function get_SelectedTimeProperty: IDependencyProperty; static; inline;
    class property ClockIdentifierProperty: IDependencyProperty read get_ClockIdentifierProperty;
    class property HeaderProperty: IDependencyProperty read get_HeaderProperty;
    class property HeaderTemplateProperty: IDependencyProperty read get_HeaderTemplateProperty;
    class property LightDismissOverlayModeProperty: IDependencyProperty read get_LightDismissOverlayModeProperty;
    class property MinuteIncrementProperty: IDependencyProperty read get_MinuteIncrementProperty;
    class property SelectedTimeProperty: IDependencyProperty read get_SelectedTimeProperty;
    class property TimeProperty: IDependencyProperty read get_TimeProperty;

    // -> ITimePickerFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): ITimePicker; static; inline;
  end;

  // Microsoft.UI.Xaml.Controls.TimePickerFlyout
  // Explicitly imported
  // Implements: Microsoft.UI.Xaml.Controls.ITimePickerFlyout
  // Statics: "Microsoft.UI.Xaml.Controls.ITimePickerFlyoutStatics"
  // Instantiable: "ITimePickerFlyout"
  TTimePickerFlyout = class(TWinRTGenericImportSI<ITimePickerFlyoutStatics, ITimePickerFlyout>)
  public
    // -> ITimePickerFlyoutStatics
    class function get_ClockIdentifierProperty: IDependencyProperty; static; inline;
    class function get_TimeProperty: IDependencyProperty; static; inline;
    class function get_MinuteIncrementProperty: IDependencyProperty; static; inline;
    class property ClockIdentifierProperty: IDependencyProperty read get_ClockIdentifierProperty;
    class property MinuteIncrementProperty: IDependencyProperty read get_MinuteIncrementProperty;
    class property TimeProperty: IDependencyProperty read get_TimeProperty;
  end;

  // Microsoft.UI.Xaml.Controls.TimePickerFlyoutPresenter
  // Explicitly imported
  // Implements: Microsoft.UI.Xaml.Controls.ITimePickerFlyoutPresenter
  // Statics: "Microsoft.UI.Xaml.Controls.ITimePickerFlyoutPresenterStatics"
  TTimePickerFlyoutPresenter = class(TWinRTGenericImportS<ITimePickerFlyoutPresenterStatics>)
  public
    // -> ITimePickerFlyoutPresenterStatics
    class function get_IsDefaultShadowEnabledProperty: IDependencyProperty; static; inline;
    class property IsDefaultShadowEnabledProperty: IDependencyProperty read get_IsDefaultShadowEnabledProperty;
  end;

  // Microsoft.UI.Xaml.Controls.ToggleMenuFlyoutItem
  // Explicitly imported
  // Implements: Microsoft.UI.Xaml.Controls.IToggleMenuFlyoutItem
  // Statics: "Microsoft.UI.Xaml.Controls.IToggleMenuFlyoutItemStatics"
  // Factory: "Microsoft.UI.Xaml.Controls.IToggleMenuFlyoutItemFactory"
  // Instantiable: "IToggleMenuFlyoutItem"
  TToggleMenuFlyoutItem = class(TWinRTGenericImportFSI<IToggleMenuFlyoutItemFactory, IToggleMenuFlyoutItemStatics, IToggleMenuFlyoutItem>)
  public
    // -> IToggleMenuFlyoutItemStatics
    class function get_IsCheckedProperty: IDependencyProperty; static; inline;
    class property IsCheckedProperty: IDependencyProperty read get_IsCheckedProperty;

    // -> IToggleMenuFlyoutItemFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IToggleMenuFlyoutItem; static; inline;
  end;

  // Microsoft.UI.Xaml.Controls.ToggleSplitButton
  // Explicitly imported
  // Implements: Microsoft.UI.Xaml.Controls.IToggleSplitButton
  // Statics: "Microsoft.UI.Xaml.Controls.IToggleSplitButtonStatics"
  // Factory: "Microsoft.UI.Xaml.Controls.IToggleSplitButtonFactory"
  // Instantiable: "IToggleSplitButton"
  TToggleSplitButton = class(TWinRTGenericImportFSI<IToggleSplitButtonFactory, IToggleSplitButtonStatics, IToggleSplitButton>)
  public
    // -> IToggleSplitButtonStatics
    class function get_IsCheckedProperty: IDependencyProperty; static; inline;
    class property IsCheckedProperty: IDependencyProperty read get_IsCheckedProperty;

    // -> IToggleSplitButtonFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IToggleSplitButton; static; inline;
  end;

  // Microsoft.UI.Xaml.Controls.ToggleSwitch
  // Explicitly imported
  // Implements: Microsoft.UI.Xaml.Controls.IToggleSwitch
  // Implements: Microsoft.UI.Xaml.Controls.IToggleSwitchOverrides
  // Statics: "Microsoft.UI.Xaml.Controls.IToggleSwitchStatics"
  // Instantiable: "IToggleSwitch"
  TToggleSwitch = class(TWinRTGenericImportSI<IToggleSwitchStatics, IToggleSwitch>)
  public
    // -> IToggleSwitchStatics
    class function get_IsOnProperty: IDependencyProperty; static; inline;
    class function get_HeaderProperty: IDependencyProperty; static; inline;
    class function get_HeaderTemplateProperty: IDependencyProperty; static; inline;
    class function get_OnContentProperty: IDependencyProperty; static; inline;
    class function get_OnContentTemplateProperty: IDependencyProperty; static; inline;
    class function get_OffContentProperty: IDependencyProperty; static; inline;
    class function get_OffContentTemplateProperty: IDependencyProperty; static; inline;
    class property HeaderProperty: IDependencyProperty read get_HeaderProperty;
    class property HeaderTemplateProperty: IDependencyProperty read get_HeaderTemplateProperty;
    class property IsOnProperty: IDependencyProperty read get_IsOnProperty;
    class property OffContentProperty: IDependencyProperty read get_OffContentProperty;
    class property OffContentTemplateProperty: IDependencyProperty read get_OffContentTemplateProperty;
    class property OnContentProperty: IDependencyProperty read get_OnContentProperty;
    class property OnContentTemplateProperty: IDependencyProperty read get_OnContentTemplateProperty;
  end;

  // Microsoft.UI.Xaml.Controls.ToolTip
  // Explicitly imported
  // Implements: Microsoft.UI.Xaml.Controls.IToolTip
  // Statics: "Microsoft.UI.Xaml.Controls.IToolTipStatics"
  // Factory: "Microsoft.UI.Xaml.Controls.IToolTipFactory"
  // Instantiable: "IToolTip"
  TToolTip = class(TWinRTGenericImportFSI<IToolTipFactory, IToolTipStatics, IToolTip>)
  public
    // -> IToolTipStatics
    class function get_HorizontalOffsetProperty: IDependencyProperty; static; inline;
    class function get_IsOpenProperty: IDependencyProperty; static; inline;
    class function get_PlacementProperty: IDependencyProperty; static; inline;
    class function get_PlacementTargetProperty: IDependencyProperty; static; inline;
    class function get_PlacementRectProperty: IDependencyProperty; static; inline;
    class function get_VerticalOffsetProperty: IDependencyProperty; static; inline;
    class property HorizontalOffsetProperty: IDependencyProperty read get_HorizontalOffsetProperty;
    class property IsOpenProperty: IDependencyProperty read get_IsOpenProperty;
    class property PlacementProperty: IDependencyProperty read get_PlacementProperty;
    class property PlacementRectProperty: IDependencyProperty read get_PlacementRectProperty;
    class property PlacementTargetProperty: IDependencyProperty read get_PlacementTargetProperty;
    class property VerticalOffsetProperty: IDependencyProperty read get_VerticalOffsetProperty;

    // -> IToolTipFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IToolTip; static; inline;
  end;

  // Microsoft.UI.Xaml.Controls.ToolTipService
  // Explicitly imported
  // Implements: Microsoft.UI.Xaml.Controls.IToolTipService
  // Statics: "Microsoft.UI.Xaml.Controls.IToolTipServiceStatics"
  TToolTipService = class(TWinRTGenericImportS<IToolTipServiceStatics>)
  public
    // -> IToolTipServiceStatics
    class function get_PlacementProperty: IDependencyProperty; static; inline;
    class function GetPlacement(element: IDependencyObject): Primitives_PlacementMode; static; inline;
    class procedure SetPlacement(element: IDependencyObject; value: Primitives_PlacementMode); static; inline;
    class function get_PlacementTargetProperty: IDependencyProperty; static; inline;
    class function GetPlacementTarget(element: IDependencyObject): IUIElement; static; inline;
    class procedure SetPlacementTarget(element: IDependencyObject; value: IUIElement); static; inline;
    class function get_ToolTipProperty: IDependencyProperty; static; inline;
    class function GetToolTip(element: IDependencyObject): IInspectable; static; inline;
    class procedure SetToolTip(element: IDependencyObject; value: IInspectable); static; inline;
    class property PlacementProperty: IDependencyProperty read get_PlacementProperty;
    class property PlacementTargetProperty: IDependencyProperty read get_PlacementTargetProperty;
    class property ToolTipProperty: IDependencyProperty read get_ToolTipProperty;
  end;

  // Microsoft.UI.Xaml.Controls.TreeView
  // Explicitly imported
  // Implements: Microsoft.UI.Xaml.Controls.ITreeView
  // Implements: Microsoft.UI.Xaml.Controls.ITreeView2
  // Statics: "Microsoft.UI.Xaml.Controls.ITreeViewStatics"
  // Statics: "Microsoft.UI.Xaml.Controls.ITreeViewStatics2"
  // Factory: "Microsoft.UI.Xaml.Controls.ITreeViewFactory"
  // Instantiable: "ITreeView"
  TTreeView = class(TWinRTGenericImportFS2I<ITreeViewFactory, ITreeViewStatics, ITreeViewStatics2, ITreeView>)
  public
    // -> ITreeViewStatics
    class function get_SelectedItemProperty: IDependencyProperty; static; inline;
    class function get_SelectionModeProperty: IDependencyProperty; static; inline;
    class property SelectedItemProperty: IDependencyProperty read get_SelectedItemProperty;
    class property SelectionModeProperty: IDependencyProperty read get_SelectionModeProperty;

    // -> ITreeViewStatics2
    class function get_CanDragItemsProperty: IDependencyProperty; static; inline;
    class function get_CanReorderItemsProperty: IDependencyProperty; static; inline;
    class function get_ItemTemplateProperty: IDependencyProperty; static; inline;
    class function get_ItemTemplateSelectorProperty: IDependencyProperty; static; inline;
    class function get_ItemContainerStyleProperty: IDependencyProperty; static; inline;
    class function get_ItemContainerStyleSelectorProperty: IDependencyProperty; static; inline;
    class function get_ItemContainerTransitionsProperty: IDependencyProperty; static; inline;
    class function get_ItemsSourceProperty: IDependencyProperty; static; inline;
    class property CanDragItemsProperty: IDependencyProperty read get_CanDragItemsProperty;
    class property CanReorderItemsProperty: IDependencyProperty read get_CanReorderItemsProperty;
    class property ItemContainerStyleProperty: IDependencyProperty read get_ItemContainerStyleProperty;
    class property ItemContainerStyleSelectorProperty: IDependencyProperty read get_ItemContainerStyleSelectorProperty;
    class property ItemContainerTransitionsProperty: IDependencyProperty read get_ItemContainerTransitionsProperty;
    class property ItemTemplateProperty: IDependencyProperty read get_ItemTemplateProperty;
    class property ItemTemplateSelectorProperty: IDependencyProperty read get_ItemTemplateSelectorProperty;
    class property ItemsSourceProperty: IDependencyProperty read get_ItemsSourceProperty;

    // -> ITreeViewFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): ITreeView; static; inline;
  end;

  // Microsoft.UI.Xaml.Controls.TreeViewItem
  // Explicitly imported
  // Implements: Microsoft.UI.Xaml.Controls.ITreeViewItem
  // Implements: Microsoft.UI.Xaml.Controls.ITreeViewItem2
  // Statics: "Microsoft.UI.Xaml.Controls.ITreeViewItemStatics"
  // Statics: "Microsoft.UI.Xaml.Controls.ITreeViewItemStatics2"
  // Factory: "Microsoft.UI.Xaml.Controls.ITreeViewItemFactory"
  // Instantiable: "ITreeViewItem"
  TTreeViewItem = class(TWinRTGenericImportFS2I<ITreeViewItemFactory, ITreeViewItemStatics, ITreeViewItemStatics2, ITreeViewItem>)
  public
    // -> ITreeViewItemStatics
    class function get_GlyphOpacityProperty: IDependencyProperty; static; inline;
    class function get_GlyphBrushProperty: IDependencyProperty; static; inline;
    class function get_ExpandedGlyphProperty: IDependencyProperty; static; inline;
    class function get_CollapsedGlyphProperty: IDependencyProperty; static; inline;
    class function get_GlyphSizeProperty: IDependencyProperty; static; inline;
    class function get_IsExpandedProperty: IDependencyProperty; static; inline;
    class function get_TreeViewItemTemplateSettingsProperty: IDependencyProperty; static; inline;
    class property CollapsedGlyphProperty: IDependencyProperty read get_CollapsedGlyphProperty;
    class property ExpandedGlyphProperty: IDependencyProperty read get_ExpandedGlyphProperty;
    class property GlyphBrushProperty: IDependencyProperty read get_GlyphBrushProperty;
    class property GlyphOpacityProperty: IDependencyProperty read get_GlyphOpacityProperty;
    class property GlyphSizeProperty: IDependencyProperty read get_GlyphSizeProperty;
    class property IsExpandedProperty: IDependencyProperty read get_IsExpandedProperty;
    class property TreeViewItemTemplateSettingsProperty: IDependencyProperty read get_TreeViewItemTemplateSettingsProperty;

    // -> ITreeViewItemStatics2
    class function get_HasUnrealizedChildrenProperty: IDependencyProperty; static; inline;
    class function get_ItemsSourceProperty: IDependencyProperty; static; inline;
    class property HasUnrealizedChildrenProperty: IDependencyProperty read get_HasUnrealizedChildrenProperty;
    class property ItemsSourceProperty: IDependencyProperty read get_ItemsSourceProperty;

    // -> ITreeViewItemFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): ITreeViewItem; static; inline;
  end;

  // Microsoft.UI.Xaml.Controls.TreeViewItemTemplateSettings
  // Explicitly imported
  // Implements: Microsoft.UI.Xaml.Controls.ITreeViewItemTemplateSettings
  // Statics: "Microsoft.UI.Xaml.Controls.ITreeViewItemTemplateSettingsStatics"
  // Factory: "Microsoft.UI.Xaml.Controls.ITreeViewItemTemplateSettingsFactory"
  // Instantiable: "ITreeViewItemTemplateSettings"
  TTreeViewItemTemplateSettings = class(TWinRTGenericImportFSI<ITreeViewItemTemplateSettingsFactory, ITreeViewItemTemplateSettingsStatics, ITreeViewItemTemplateSettings>)
  public
    // -> ITreeViewItemTemplateSettingsStatics
    class function get_ExpandedGlyphVisibilityProperty: IDependencyProperty; static; inline;
    class function get_CollapsedGlyphVisibilityProperty: IDependencyProperty; static; inline;
    class function get_IndentationProperty: IDependencyProperty; static; inline;
    class function get_DragItemsCountProperty: IDependencyProperty; static; inline;
    class property CollapsedGlyphVisibilityProperty: IDependencyProperty read get_CollapsedGlyphVisibilityProperty;
    class property DragItemsCountProperty: IDependencyProperty read get_DragItemsCountProperty;
    class property ExpandedGlyphVisibilityProperty: IDependencyProperty read get_ExpandedGlyphVisibilityProperty;
    class property IndentationProperty: IDependencyProperty read get_IndentationProperty;

    // -> ITreeViewItemTemplateSettingsFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): ITreeViewItemTemplateSettings; static; inline;
  end;

  // Microsoft.UI.Xaml.Controls.TreeViewList
  // Explicitly imported
  // Implements: Microsoft.UI.Xaml.Controls.ITreeViewList
  // Factory: "Microsoft.UI.Xaml.Controls.ITreeViewListFactory"
  // Instantiable: "ITreeViewList"
  TTreeViewList = class(TWinRTGenericImportFI<ITreeViewListFactory, ITreeViewList>)
  public
    // -> ITreeViewListFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): ITreeViewList; static; inline;
  end;

  // Microsoft.UI.Xaml.Controls.TreeViewNode
  // Explicitly imported
  // Implements: Microsoft.UI.Xaml.Controls.ITreeViewNode
  // Statics: "Microsoft.UI.Xaml.Controls.ITreeViewNodeStatics"
  // Factory: "Microsoft.UI.Xaml.Controls.ITreeViewNodeFactory"
  // Instantiable: "ITreeViewNode"
  TTreeViewNode = class(TWinRTGenericImportFSI<ITreeViewNodeFactory, ITreeViewNodeStatics, ITreeViewNode>)
  public
    // -> ITreeViewNodeStatics
    class function get_ContentProperty: IDependencyProperty; static; inline;
    class function get_DepthProperty: IDependencyProperty; static; inline;
    class function get_IsExpandedProperty: IDependencyProperty; static; inline;
    class function get_HasChildrenProperty: IDependencyProperty; static; inline;
    class property ContentProperty: IDependencyProperty read get_ContentProperty;
    class property DepthProperty: IDependencyProperty read get_DepthProperty;
    class property HasChildrenProperty: IDependencyProperty read get_HasChildrenProperty;
    class property IsExpandedProperty: IDependencyProperty read get_IsExpandedProperty;

    // -> ITreeViewNodeFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): ITreeViewNode; static; inline;
  end;

  // Microsoft.UI.Xaml.Controls.TwoPaneView
  // Explicitly imported
  // Implements: Microsoft.UI.Xaml.Controls.ITwoPaneView
  // Statics: "Microsoft.UI.Xaml.Controls.ITwoPaneViewStatics"
  // Factory: "Microsoft.UI.Xaml.Controls.ITwoPaneViewFactory"
  // Instantiable: "ITwoPaneView"
  TTwoPaneView = class(TWinRTGenericImportFSI<ITwoPaneViewFactory, ITwoPaneViewStatics, ITwoPaneView>)
  public
    // -> ITwoPaneViewStatics
    class function get_Pane1Property: IDependencyProperty; static; inline;
    class function get_Pane2Property: IDependencyProperty; static; inline;
    class function get_Pane1LengthProperty: IDependencyProperty; static; inline;
    class function get_Pane2LengthProperty: IDependencyProperty; static; inline;
    class function get_PanePriorityProperty: IDependencyProperty; static; inline;
    class function get_ModeProperty: IDependencyProperty; static; inline;
    class function get_WideModeConfigurationProperty: IDependencyProperty; static; inline;
    class function get_TallModeConfigurationProperty: IDependencyProperty; static; inline;
    class function get_MinWideModeWidthProperty: IDependencyProperty; static; inline;
    class function get_MinTallModeHeightProperty: IDependencyProperty; static; inline;
    class property MinTallModeHeightProperty: IDependencyProperty read get_MinTallModeHeightProperty;
    class property MinWideModeWidthProperty: IDependencyProperty read get_MinWideModeWidthProperty;
    class property ModeProperty: IDependencyProperty read get_ModeProperty;
    class property Pane1LengthProperty: IDependencyProperty read get_Pane1LengthProperty;
    class property Pane1Property: IDependencyProperty read get_Pane1Property;
    class property Pane2LengthProperty: IDependencyProperty read get_Pane2LengthProperty;
    class property Pane2Property: IDependencyProperty read get_Pane2Property;
    class property PanePriorityProperty: IDependencyProperty read get_PanePriorityProperty;
    class property TallModeConfigurationProperty: IDependencyProperty read get_TallModeConfigurationProperty;
    class property WideModeConfigurationProperty: IDependencyProperty read get_WideModeConfigurationProperty;

    // -> ITwoPaneViewFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): ITwoPaneView; static; inline;
  end;

  // Microsoft.UI.Xaml.Controls.UniformGridLayout
  // Explicitly imported
  // Implements: Microsoft.UI.Xaml.Controls.IUniformGridLayout
  // Statics: "Microsoft.UI.Xaml.Controls.IUniformGridLayoutStatics"
  // Factory: "Microsoft.UI.Xaml.Controls.IUniformGridLayoutFactory"
  // Instantiable: "IUniformGridLayout"
  TUniformGridLayout = class(TWinRTGenericImportFSI<IUniformGridLayoutFactory, IUniformGridLayoutStatics, IUniformGridLayout>)
  public
    // -> IUniformGridLayoutStatics
    class function get_OrientationProperty: IDependencyProperty; static; inline;
    class function get_MinItemWidthProperty: IDependencyProperty; static; inline;
    class function get_MinItemHeightProperty: IDependencyProperty; static; inline;
    class function get_MinRowSpacingProperty: IDependencyProperty; static; inline;
    class function get_MinColumnSpacingProperty: IDependencyProperty; static; inline;
    class function get_ItemsJustificationProperty: IDependencyProperty; static; inline;
    class function get_ItemsStretchProperty: IDependencyProperty; static; inline;
    class function get_MaximumRowsOrColumnsProperty: IDependencyProperty; static; inline;
    class property ItemsJustificationProperty: IDependencyProperty read get_ItemsJustificationProperty;
    class property ItemsStretchProperty: IDependencyProperty read get_ItemsStretchProperty;
    class property MaximumRowsOrColumnsProperty: IDependencyProperty read get_MaximumRowsOrColumnsProperty;
    class property MinColumnSpacingProperty: IDependencyProperty read get_MinColumnSpacingProperty;
    class property MinItemHeightProperty: IDependencyProperty read get_MinItemHeightProperty;
    class property MinItemWidthProperty: IDependencyProperty read get_MinItemWidthProperty;
    class property MinRowSpacingProperty: IDependencyProperty read get_MinRowSpacingProperty;
    class property OrientationProperty: IDependencyProperty read get_OrientationProperty;

    // -> IUniformGridLayoutFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IUniformGridLayout; static; inline;
  end;

  // Microsoft.UI.Xaml.Controls.VariableSizedWrapGrid
  // Explicitly imported
  // Implements: Microsoft.UI.Xaml.Controls.IVariableSizedWrapGrid
  // Statics: "Microsoft.UI.Xaml.Controls.IVariableSizedWrapGridStatics"
  // Instantiable: "IVariableSizedWrapGrid"
  TVariableSizedWrapGrid = class(TWinRTGenericImportSI<IVariableSizedWrapGridStatics, IVariableSizedWrapGrid>)
  public
    // -> IVariableSizedWrapGridStatics
    class function get_ItemHeightProperty: IDependencyProperty; static; inline;
    class function get_ItemWidthProperty: IDependencyProperty; static; inline;
    class function get_OrientationProperty: IDependencyProperty; static; inline;
    class function get_HorizontalChildrenAlignmentProperty: IDependencyProperty; static; inline;
    class function get_VerticalChildrenAlignmentProperty: IDependencyProperty; static; inline;
    class function get_MaximumRowsOrColumnsProperty: IDependencyProperty; static; inline;
    class function get_RowSpanProperty: IDependencyProperty; static; inline;
    class function GetRowSpan(element: IUIElement): Integer; static; inline;
    class procedure SetRowSpan(element: IUIElement; value: Integer); static; inline;
    class function get_ColumnSpanProperty: IDependencyProperty; static; inline;
    class function GetColumnSpan(element: IUIElement): Integer; static; inline;
    class procedure SetColumnSpan(element: IUIElement; value: Integer); static; inline;
    class property ColumnSpanProperty: IDependencyProperty read get_ColumnSpanProperty;
    class property HorizontalChildrenAlignmentProperty: IDependencyProperty read get_HorizontalChildrenAlignmentProperty;
    class property ItemHeightProperty: IDependencyProperty read get_ItemHeightProperty;
    class property ItemWidthProperty: IDependencyProperty read get_ItemWidthProperty;
    class property MaximumRowsOrColumnsProperty: IDependencyProperty read get_MaximumRowsOrColumnsProperty;
    class property OrientationProperty: IDependencyProperty read get_OrientationProperty;
    class property RowSpanProperty: IDependencyProperty read get_RowSpanProperty;
    class property VerticalChildrenAlignmentProperty: IDependencyProperty read get_VerticalChildrenAlignmentProperty;
  end;

  // Microsoft.UI.Xaml.Controls.Viewbox
  // Explicitly imported
  // Implements: Microsoft.UI.Xaml.Controls.IViewbox
  // Statics: "Microsoft.UI.Xaml.Controls.IViewboxStatics"
  // Instantiable: "IViewbox"
  TViewbox = class(TWinRTGenericImportSI<IViewboxStatics, IViewbox>)
  public
    // -> IViewboxStatics
    class function get_StretchProperty: IDependencyProperty; static; inline;
    class function get_StretchDirectionProperty: IDependencyProperty; static; inline;
    class property StretchDirectionProperty: IDependencyProperty read get_StretchDirectionProperty;
    class property StretchProperty: IDependencyProperty read get_StretchProperty;
  end;

  // Microsoft.UI.Xaml.Controls.VirtualizingLayoutContext
  // Explicitly imported
  // Implements: Microsoft.UI.Xaml.Controls.IVirtualizingLayoutContext
  // Implements: Microsoft.UI.Xaml.Controls.IVirtualizingLayoutContextOverrides
  // Factory: "Microsoft.UI.Xaml.Controls.IVirtualizingLayoutContextFactory"
  // Instantiable: "IVirtualizingLayoutContext"
  TVirtualizingLayoutContext = class(TWinRTGenericImportFI<IVirtualizingLayoutContextFactory, IVirtualizingLayoutContext>)
  public
    // -> IVirtualizingLayoutContextFactory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IVirtualizingLayoutContext; static; inline;
  end;

  // Microsoft.UI.Xaml.Controls.VirtualizingStackPanel
  // Explicitly imported
  // Implements: Microsoft.UI.Xaml.Controls.IVirtualizingStackPanel
  // Implements: Microsoft.UI.Xaml.Controls.IVirtualizingStackPanelOverrides
  // Statics: "Microsoft.UI.Xaml.Controls.IVirtualizingStackPanelStatics"
  // Instantiable: "IVirtualizingStackPanel"
  TVirtualizingStackPanel = class(TWinRTGenericImportSI<IVirtualizingStackPanelStatics, IVirtualizingStackPanel>)
  public
    // -> IVirtualizingStackPanelStatics
    class function get_AreScrollSnapPointsRegularProperty: IDependencyProperty; static; inline;
    class function get_OrientationProperty: IDependencyProperty; static; inline;
    class function get_VirtualizationModeProperty: IDependencyProperty; static; inline;
    class function GetVirtualizationMode(element: IDependencyObject): VirtualizationMode; static; inline;
    class procedure SetVirtualizationMode(element: IDependencyObject; value: VirtualizationMode); static; inline;
    class function get_IsVirtualizingProperty: IDependencyProperty; static; inline;
    class function GetIsVirtualizing(o: IDependencyObject): Boolean; static; inline;
    class property AreScrollSnapPointsRegularProperty: IDependencyProperty read get_AreScrollSnapPointsRegularProperty;
    class property IsVirtualizingProperty: IDependencyProperty read get_IsVirtualizingProperty;
    class property OrientationProperty: IDependencyProperty read get_OrientationProperty;
    class property VirtualizationModeProperty: IDependencyProperty read get_VirtualizationModeProperty;
  end;

  // Microsoft.UI.Xaml.Controls.WebView2
  // Explicitly imported
  // Implements: Microsoft.UI.Xaml.Controls.IWebView2
  // Statics: "Microsoft.UI.Xaml.Controls.IWebView2Statics"
  // Factory: "Microsoft.UI.Xaml.Controls.IWebView2Factory"
  // Instantiable: "IWebView2"
  TWebView2 = class(TWinRTGenericImportFSI<IWebView2Factory, IWebView2Statics, IWebView2>)
  public
    // -> IWebView2Statics
    class function get_SourceProperty: IDependencyProperty; static; inline;
    class function get_CanGoForwardProperty: IDependencyProperty; static; inline;
    class function get_CanGoBackProperty: IDependencyProperty; static; inline;
    class function get_DefaultBackgroundColorProperty: IDependencyProperty; static; inline;
    class property CanGoBackProperty: IDependencyProperty read get_CanGoBackProperty;
    class property CanGoForwardProperty: IDependencyProperty read get_CanGoForwardProperty;
    class property DefaultBackgroundColorProperty: IDependencyProperty read get_DefaultBackgroundColorProperty;
    class property SourceProperty: IDependencyProperty read get_SourceProperty;

    // -> IWebView2Factory
    class function CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IWebView2; static; inline;
  end;

  // Microsoft.UI.Xaml.Controls.WrapGrid
  // Explicitly imported
  // Implements: Microsoft.UI.Xaml.Controls.IWrapGrid
  // Statics: "Microsoft.UI.Xaml.Controls.IWrapGridStatics"
  // Instantiable: "IWrapGrid"
  TWrapGrid = class(TWinRTGenericImportSI<IWrapGridStatics, IWrapGrid>)
  public
    // -> IWrapGridStatics
    class function get_ItemWidthProperty: IDependencyProperty; static; inline;
    class function get_ItemHeightProperty: IDependencyProperty; static; inline;
    class function get_OrientationProperty: IDependencyProperty; static; inline;
    class function get_HorizontalChildrenAlignmentProperty: IDependencyProperty; static; inline;
    class function get_VerticalChildrenAlignmentProperty: IDependencyProperty; static; inline;
    class function get_MaximumRowsOrColumnsProperty: IDependencyProperty; static; inline;
    class property HorizontalChildrenAlignmentProperty: IDependencyProperty read get_HorizontalChildrenAlignmentProperty;
    class property ItemHeightProperty: IDependencyProperty read get_ItemHeightProperty;
    class property ItemWidthProperty: IDependencyProperty read get_ItemWidthProperty;
    class property MaximumRowsOrColumnsProperty: IDependencyProperty read get_MaximumRowsOrColumnsProperty;
    class property OrientationProperty: IDependencyProperty read get_OrientationProperty;
    class property VerticalChildrenAlignmentProperty: IDependencyProperty read get_VerticalChildrenAlignmentProperty;
  end;

  // Microsoft.UI.Xaml.Controls.XamlControlsResources
  // Explicitly imported
  // Implements: Microsoft.UI.Xaml.Controls.IXamlControlsResources
  // Statics: "Microsoft.UI.Xaml.Controls.IXamlControlsResourcesStatics"
  // Instantiable: "IXamlControlsResources"
  TXamlControlsResources = class(TWinRTGenericImportSI<IXamlControlsResourcesStatics, IXamlControlsResources>)
  public
    // -> IXamlControlsResourcesStatics
    class procedure EnsureRevealLights(element: IUIElement); static; inline;
    class function get_UseCompactResourcesProperty: IDependencyProperty; static; inline;
    class property UseCompactResourcesProperty: IDependencyProperty read get_UseCompactResourcesProperty;
  end;

implementation

{ TIconElement }

class function TIconElement.get_ForegroundProperty: IDependencyProperty;
begin
  Result := Statics.get_ForegroundProperty;
end;

// Factories for : "IconElement"
// Factory: "Microsoft.UI.Xaml.Controls.IIconElementFactory"
// -> IIconElementFactory


{ TAnimatedIcon }

class function TAnimatedIcon.get_StateProperty: IDependencyProperty;
begin
  Result := Statics.get_StateProperty;
end;

class procedure TAnimatedIcon.SetState(&object: IDependencyObject; value: HSTRING);
begin
  Statics.SetState(&object, value);
end;

class function TAnimatedIcon.GetState(&object: IDependencyObject): HSTRING;
begin
  Result := Statics.GetState(&object);
end;

class function TAnimatedIcon.get_SourceProperty: IDependencyProperty;
begin
  Result := Statics.get_SourceProperty;
end;

class function TAnimatedIcon.get_FallbackIconSourceProperty: IDependencyProperty;
begin
  Result := Statics.get_FallbackIconSourceProperty;
end;

class function TAnimatedIcon.get_MirroredWhenRightToLeftProperty: IDependencyProperty;
begin
  Result := Statics.get_MirroredWhenRightToLeftProperty;
end;

// Factories for : "AnimatedIcon"
// Factory: "Microsoft.UI.Xaml.Controls.IAnimatedIconFactory"
// -> IAnimatedIconFactory

class function TAnimatedIcon.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IAnimatedIcon;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TIconSource }

class function TIconSource.get_ForegroundProperty: IDependencyProperty;
begin
  Result := Statics.get_ForegroundProperty;
end;

// Factories for : "IconSource"
// Factory: "Microsoft.UI.Xaml.Controls.IIconSourceFactory"
// -> IIconSourceFactory


{ TAnimatedIconSource }

class function TAnimatedIconSource.get_SourceProperty: IDependencyProperty;
begin
  Result := Statics.get_SourceProperty;
end;

class function TAnimatedIconSource.get_FallbackIconSourceProperty: IDependencyProperty;
begin
  Result := Statics.get_FallbackIconSourceProperty;
end;

class function TAnimatedIconSource.get_MirroredWhenRightToLeftProperty: IDependencyProperty;
begin
  Result := Statics.get_MirroredWhenRightToLeftProperty;
end;

// Factories for : "AnimatedIconSource"
// Factory: "Microsoft.UI.Xaml.Controls.IAnimatedIconSourceFactory"
// -> IAnimatedIconSourceFactory

class function TAnimatedIconSource.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IAnimatedIconSource;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TAnimatedVisualPlayer }

class function TAnimatedVisualPlayer.get_AutoPlayProperty: IDependencyProperty;
begin
  Result := Statics.get_AutoPlayProperty;
end;

class function TAnimatedVisualPlayer.get_DiagnosticsProperty: IDependencyProperty;
begin
  Result := Statics.get_DiagnosticsProperty;
end;

class function TAnimatedVisualPlayer.get_DurationProperty: IDependencyProperty;
begin
  Result := Statics.get_DurationProperty;
end;

class function TAnimatedVisualPlayer.get_FallbackContentProperty: IDependencyProperty;
begin
  Result := Statics.get_FallbackContentProperty;
end;

class function TAnimatedVisualPlayer.get_IsAnimatedVisualLoadedProperty: IDependencyProperty;
begin
  Result := Statics.get_IsAnimatedVisualLoadedProperty;
end;

class function TAnimatedVisualPlayer.get_IsPlayingProperty: IDependencyProperty;
begin
  Result := Statics.get_IsPlayingProperty;
end;

class function TAnimatedVisualPlayer.get_PlaybackRateProperty: IDependencyProperty;
begin
  Result := Statics.get_PlaybackRateProperty;
end;

class function TAnimatedVisualPlayer.get_SourceProperty: IDependencyProperty;
begin
  Result := Statics.get_SourceProperty;
end;

class function TAnimatedVisualPlayer.get_StretchProperty: IDependencyProperty;
begin
  Result := Statics.get_StretchProperty;
end;


class function TAnimatedVisualPlayer.get_AnimationOptimizationProperty: IDependencyProperty;
begin
  Result := Statics2.get_AnimationOptimizationProperty;
end;

// Factories for : "AnimatedVisualPlayer"
// Factory: "Microsoft.UI.Xaml.Controls.IAnimatedVisualPlayerFactory"
// -> IAnimatedVisualPlayerFactory

class function TAnimatedVisualPlayer.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IAnimatedVisualPlayer;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TAnimatedVisuals_AnimatedAcceptVisualSource }

{ TAnimatedVisuals_AnimatedBackVisualSource }

{ TAnimatedVisuals_AnimatedChevronDownSmallVisualSource }

{ TAnimatedVisuals_AnimatedChevronRightDownSmallVisualSource }

{ TAnimatedVisuals_AnimatedChevronUpDownSmallVisualSource }

{ TAnimatedVisuals_AnimatedFindVisualSource }

{ TAnimatedVisuals_AnimatedGlobalNavigationButtonVisualSource }

{ TAnimatedVisuals_AnimatedSettingsVisualSource }

{ TControl }

class function TControl.get_IsFocusEngagementEnabledProperty: IDependencyProperty;
begin
  Result := Statics.get_IsFocusEngagementEnabledProperty;
end;

class function TControl.get_IsFocusEngagedProperty: IDependencyProperty;
begin
  Result := Statics.get_IsFocusEngagedProperty;
end;

class function TControl.get_RequiresPointerProperty: IDependencyProperty;
begin
  Result := Statics.get_RequiresPointerProperty;
end;

class function TControl.get_FontSizeProperty: IDependencyProperty;
begin
  Result := Statics.get_FontSizeProperty;
end;

class function TControl.get_FontFamilyProperty: IDependencyProperty;
begin
  Result := Statics.get_FontFamilyProperty;
end;

class function TControl.get_FontWeightProperty: IDependencyProperty;
begin
  Result := Statics.get_FontWeightProperty;
end;

class function TControl.get_FontStyleProperty: IDependencyProperty;
begin
  Result := Statics.get_FontStyleProperty;
end;

class function TControl.get_FontStretchProperty: IDependencyProperty;
begin
  Result := Statics.get_FontStretchProperty;
end;

class function TControl.get_CharacterSpacingProperty: IDependencyProperty;
begin
  Result := Statics.get_CharacterSpacingProperty;
end;

class function TControl.get_ForegroundProperty: IDependencyProperty;
begin
  Result := Statics.get_ForegroundProperty;
end;

class function TControl.get_IsTextScaleFactorEnabledProperty: IDependencyProperty;
begin
  Result := Statics.get_IsTextScaleFactorEnabledProperty;
end;

class function TControl.get_IsEnabledProperty: IDependencyProperty;
begin
  Result := Statics.get_IsEnabledProperty;
end;

class function TControl.get_TabNavigationProperty: IDependencyProperty;
begin
  Result := Statics.get_TabNavigationProperty;
end;

class function TControl.get_TemplateProperty: IDependencyProperty;
begin
  Result := Statics.get_TemplateProperty;
end;

class function TControl.get_PaddingProperty: IDependencyProperty;
begin
  Result := Statics.get_PaddingProperty;
end;

class function TControl.get_HorizontalContentAlignmentProperty: IDependencyProperty;
begin
  Result := Statics.get_HorizontalContentAlignmentProperty;
end;

class function TControl.get_VerticalContentAlignmentProperty: IDependencyProperty;
begin
  Result := Statics.get_VerticalContentAlignmentProperty;
end;

class function TControl.get_BackgroundProperty: IDependencyProperty;
begin
  Result := Statics.get_BackgroundProperty;
end;

class function TControl.get_BackgroundSizingProperty: IDependencyProperty;
begin
  Result := Statics.get_BackgroundSizingProperty;
end;

class function TControl.get_BorderThicknessProperty: IDependencyProperty;
begin
  Result := Statics.get_BorderThicknessProperty;
end;

class function TControl.get_BorderBrushProperty: IDependencyProperty;
begin
  Result := Statics.get_BorderBrushProperty;
end;

class function TControl.get_DefaultStyleKeyProperty: IDependencyProperty;
begin
  Result := Statics.get_DefaultStyleKeyProperty;
end;

class function TControl.get_DefaultStyleResourceUriProperty: IDependencyProperty;
begin
  Result := Statics.get_DefaultStyleResourceUriProperty;
end;

class function TControl.get_ElementSoundModeProperty: IDependencyProperty;
begin
  Result := Statics.get_ElementSoundModeProperty;
end;

class function TControl.get_CornerRadiusProperty: IDependencyProperty;
begin
  Result := Statics.get_CornerRadiusProperty;
end;

class function TControl.get_IsTemplateFocusTargetProperty: IDependencyProperty;
begin
  Result := Statics.get_IsTemplateFocusTargetProperty;
end;

class function TControl.GetIsTemplateFocusTarget(element: IFrameworkElement): Boolean;
begin
  Result := Statics.GetIsTemplateFocusTarget(element);
end;

class procedure TControl.SetIsTemplateFocusTarget(element: IFrameworkElement; value: Boolean);
begin
  Statics.SetIsTemplateFocusTarget(element, value);
end;

class function TControl.get_IsTemplateKeyTipTargetProperty: IDependencyProperty;
begin
  Result := Statics.get_IsTemplateKeyTipTargetProperty;
end;

class function TControl.GetIsTemplateKeyTipTarget(element: IDependencyObject): Boolean;
begin
  Result := Statics.GetIsTemplateKeyTipTarget(element);
end;

class procedure TControl.SetIsTemplateKeyTipTarget(element: IDependencyObject; value: Boolean);
begin
  Statics.SetIsTemplateKeyTipTarget(element, value);
end;

// Factories for : "Control"
// Factory: "Microsoft.UI.Xaml.Controls.IControlFactory"
// -> IControlFactory

class function TControl.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IControl;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TContentControl }

class function TContentControl.get_ContentProperty: IDependencyProperty;
begin
  Result := Statics.get_ContentProperty;
end;

class function TContentControl.get_ContentTemplateProperty: IDependencyProperty;
begin
  Result := Statics.get_ContentTemplateProperty;
end;

class function TContentControl.get_ContentTemplateSelectorProperty: IDependencyProperty;
begin
  Result := Statics.get_ContentTemplateSelectorProperty;
end;

class function TContentControl.get_ContentTransitionsProperty: IDependencyProperty;
begin
  Result := Statics.get_ContentTransitionsProperty;
end;

// Factories for : "ContentControl"
// Factory: "Microsoft.UI.Xaml.Controls.IContentControlFactory"
// -> IContentControlFactory

class function TContentControl.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IContentControl;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TAppBar }

class function TAppBar.get_IsOpenProperty: IDependencyProperty;
begin
  Result := Statics.get_IsOpenProperty;
end;

class function TAppBar.get_IsStickyProperty: IDependencyProperty;
begin
  Result := Statics.get_IsStickyProperty;
end;

class function TAppBar.get_ClosedDisplayModeProperty: IDependencyProperty;
begin
  Result := Statics.get_ClosedDisplayModeProperty;
end;

class function TAppBar.get_LightDismissOverlayModeProperty: IDependencyProperty;
begin
  Result := Statics.get_LightDismissOverlayModeProperty;
end;

// Factories for : "AppBar"
// Factory: "Microsoft.UI.Xaml.Controls.IAppBarFactory"
// -> IAppBarFactory

class function TAppBar.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IAppBar;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TPrimitives_ButtonBase }

class function TPrimitives_ButtonBase.get_ClickModeProperty: IDependencyProperty;
begin
  Result := Statics.get_ClickModeProperty;
end;

class function TPrimitives_ButtonBase.get_IsPointerOverProperty: IDependencyProperty;
begin
  Result := Statics.get_IsPointerOverProperty;
end;

class function TPrimitives_ButtonBase.get_IsPressedProperty: IDependencyProperty;
begin
  Result := Statics.get_IsPressedProperty;
end;

class function TPrimitives_ButtonBase.get_CommandProperty: IDependencyProperty;
begin
  Result := Statics.get_CommandProperty;
end;

class function TPrimitives_ButtonBase.get_CommandParameterProperty: IDependencyProperty;
begin
  Result := Statics.get_CommandParameterProperty;
end;

// Factories for : "Primitives_ButtonBase"
// Factory: "Microsoft.UI.Xaml.Controls.Primitives.IButtonBaseFactory"
// -> Primitives_IButtonBaseFactory

class function TPrimitives_ButtonBase.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): Primitives_IButtonBase;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TButton }

class function TButton.get_FlyoutProperty: IDependencyProperty;
begin
  Result := Statics.get_FlyoutProperty;
end;

// Factories for : "Button"
// Factory: "Microsoft.UI.Xaml.Controls.IButtonFactory"
// -> IButtonFactory

class function TButton.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IButton;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TAppBarButton }

class function TAppBarButton.get_LabelProperty: IDependencyProperty;
begin
  Result := Statics.get_LabelProperty;
end;

class function TAppBarButton.get_IconProperty: IDependencyProperty;
begin
  Result := Statics.get_IconProperty;
end;

class function TAppBarButton.get_LabelPositionProperty: IDependencyProperty;
begin
  Result := Statics.get_LabelPositionProperty;
end;

class function TAppBarButton.get_KeyboardAcceleratorTextOverrideProperty: IDependencyProperty;
begin
  Result := Statics.get_KeyboardAcceleratorTextOverrideProperty;
end;

class function TAppBarButton.get_IsCompactProperty: IDependencyProperty;
begin
  Result := Statics.get_IsCompactProperty;
end;

class function TAppBarButton.get_IsInOverflowProperty: IDependencyProperty;
begin
  Result := Statics.get_IsInOverflowProperty;
end;

class function TAppBarButton.get_DynamicOverflowOrderProperty: IDependencyProperty;
begin
  Result := Statics.get_DynamicOverflowOrderProperty;
end;

// Factories for : "AppBarButton"
// Factory: "Microsoft.UI.Xaml.Controls.IAppBarButtonFactory"
// -> IAppBarButtonFactory

class function TAppBarButton.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IAppBarButton;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TAppBarElementContainer }

class function TAppBarElementContainer.get_IsCompactProperty: IDependencyProperty;
begin
  Result := Statics.get_IsCompactProperty;
end;

class function TAppBarElementContainer.get_IsInOverflowProperty: IDependencyProperty;
begin
  Result := Statics.get_IsInOverflowProperty;
end;

class function TAppBarElementContainer.get_DynamicOverflowOrderProperty: IDependencyProperty;
begin
  Result := Statics.get_DynamicOverflowOrderProperty;
end;

// Factories for : "AppBarElementContainer"
// Factory: "Microsoft.UI.Xaml.Controls.IAppBarElementContainerFactory"
// -> IAppBarElementContainerFactory

class function TAppBarElementContainer.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IAppBarElementContainer;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TAppBarSeparator }

class function TAppBarSeparator.get_IsCompactProperty: IDependencyProperty;
begin
  Result := Statics.get_IsCompactProperty;
end;

class function TAppBarSeparator.get_IsInOverflowProperty: IDependencyProperty;
begin
  Result := Statics.get_IsInOverflowProperty;
end;

class function TAppBarSeparator.get_DynamicOverflowOrderProperty: IDependencyProperty;
begin
  Result := Statics.get_DynamicOverflowOrderProperty;
end;

// Factories for : "AppBarSeparator"
// Factory: "Microsoft.UI.Xaml.Controls.IAppBarSeparatorFactory"
// -> IAppBarSeparatorFactory

class function TAppBarSeparator.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IAppBarSeparator;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TPrimitives_ToggleButton }

class function TPrimitives_ToggleButton.get_IsCheckedProperty: IDependencyProperty;
begin
  Result := Statics.get_IsCheckedProperty;
end;

class function TPrimitives_ToggleButton.get_IsThreeStateProperty: IDependencyProperty;
begin
  Result := Statics.get_IsThreeStateProperty;
end;

// Factories for : "Primitives_ToggleButton"
// Factory: "Microsoft.UI.Xaml.Controls.Primitives.IToggleButtonFactory"
// -> Primitives_IToggleButtonFactory

class function TPrimitives_ToggleButton.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): Primitives_IToggleButton;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TAppBarToggleButton }

class function TAppBarToggleButton.get_LabelProperty: IDependencyProperty;
begin
  Result := Statics.get_LabelProperty;
end;

class function TAppBarToggleButton.get_IconProperty: IDependencyProperty;
begin
  Result := Statics.get_IconProperty;
end;

class function TAppBarToggleButton.get_LabelPositionProperty: IDependencyProperty;
begin
  Result := Statics.get_LabelPositionProperty;
end;

class function TAppBarToggleButton.get_KeyboardAcceleratorTextOverrideProperty: IDependencyProperty;
begin
  Result := Statics.get_KeyboardAcceleratorTextOverrideProperty;
end;

class function TAppBarToggleButton.get_IsCompactProperty: IDependencyProperty;
begin
  Result := Statics.get_IsCompactProperty;
end;

class function TAppBarToggleButton.get_IsInOverflowProperty: IDependencyProperty;
begin
  Result := Statics.get_IsInOverflowProperty;
end;

class function TAppBarToggleButton.get_DynamicOverflowOrderProperty: IDependencyProperty;
begin
  Result := Statics.get_DynamicOverflowOrderProperty;
end;

// Factories for : "AppBarToggleButton"
// Factory: "Microsoft.UI.Xaml.Controls.IAppBarToggleButtonFactory"
// -> IAppBarToggleButtonFactory

class function TAppBarToggleButton.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IAppBarToggleButton;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TItemsControl }

class function TItemsControl.get_ItemsSourceProperty: IDependencyProperty;
begin
  Result := Statics.get_ItemsSourceProperty;
end;

class function TItemsControl.get_ItemTemplateProperty: IDependencyProperty;
begin
  Result := Statics.get_ItemTemplateProperty;
end;

class function TItemsControl.get_ItemTemplateSelectorProperty: IDependencyProperty;
begin
  Result := Statics.get_ItemTemplateSelectorProperty;
end;

class function TItemsControl.get_ItemsPanelProperty: IDependencyProperty;
begin
  Result := Statics.get_ItemsPanelProperty;
end;

class function TItemsControl.get_DisplayMemberPathProperty: IDependencyProperty;
begin
  Result := Statics.get_DisplayMemberPathProperty;
end;

class function TItemsControl.get_ItemContainerStyleProperty: IDependencyProperty;
begin
  Result := Statics.get_ItemContainerStyleProperty;
end;

class function TItemsControl.get_ItemContainerStyleSelectorProperty: IDependencyProperty;
begin
  Result := Statics.get_ItemContainerStyleSelectorProperty;
end;

class function TItemsControl.get_ItemContainerTransitionsProperty: IDependencyProperty;
begin
  Result := Statics.get_ItemContainerTransitionsProperty;
end;

class function TItemsControl.get_GroupStyleSelectorProperty: IDependencyProperty;
begin
  Result := Statics.get_GroupStyleSelectorProperty;
end;

class function TItemsControl.get_IsGroupingProperty: IDependencyProperty;
begin
  Result := Statics.get_IsGroupingProperty;
end;

class function TItemsControl.GetItemsOwner(element: IDependencyObject): IItemsControl;
begin
  Result := Statics.GetItemsOwner(element);
end;

class function TItemsControl.ItemsControlFromItemContainer(container: IDependencyObject): IItemsControl;
begin
  Result := Statics.ItemsControlFromItemContainer(container);
end;

// Factories for : "ItemsControl"
// Factory: "Microsoft.UI.Xaml.Controls.IItemsControlFactory"
// -> IItemsControlFactory

class function TItemsControl.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IItemsControl;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TAutoSuggestBox }

class function TAutoSuggestBox.get_MaxSuggestionListHeightProperty: IDependencyProperty;
begin
  Result := Statics.get_MaxSuggestionListHeightProperty;
end;

class function TAutoSuggestBox.get_IsSuggestionListOpenProperty: IDependencyProperty;
begin
  Result := Statics.get_IsSuggestionListOpenProperty;
end;

class function TAutoSuggestBox.get_TextMemberPathProperty: IDependencyProperty;
begin
  Result := Statics.get_TextMemberPathProperty;
end;

class function TAutoSuggestBox.get_TextProperty: IDependencyProperty;
begin
  Result := Statics.get_TextProperty;
end;

class function TAutoSuggestBox.get_UpdateTextOnSelectProperty: IDependencyProperty;
begin
  Result := Statics.get_UpdateTextOnSelectProperty;
end;

class function TAutoSuggestBox.get_PlaceholderTextProperty: IDependencyProperty;
begin
  Result := Statics.get_PlaceholderTextProperty;
end;

class function TAutoSuggestBox.get_HeaderProperty: IDependencyProperty;
begin
  Result := Statics.get_HeaderProperty;
end;

class function TAutoSuggestBox.get_AutoMaximizeSuggestionAreaProperty: IDependencyProperty;
begin
  Result := Statics.get_AutoMaximizeSuggestionAreaProperty;
end;

class function TAutoSuggestBox.get_TextBoxStyleProperty: IDependencyProperty;
begin
  Result := Statics.get_TextBoxStyleProperty;
end;

class function TAutoSuggestBox.get_QueryIconProperty: IDependencyProperty;
begin
  Result := Statics.get_QueryIconProperty;
end;

class function TAutoSuggestBox.get_LightDismissOverlayModeProperty: IDependencyProperty;
begin
  Result := Statics.get_LightDismissOverlayModeProperty;
end;

class function TAutoSuggestBox.get_DescriptionProperty: IDependencyProperty;
begin
  Result := Statics.get_DescriptionProperty;
end;


{ TAutoSuggestBoxQuerySubmittedEventArgs }

{ TAutoSuggestBoxSuggestionChosenEventArgs }

{ TAutoSuggestBoxTextChangedEventArgs }

class function TAutoSuggestBoxTextChangedEventArgs.get_ReasonProperty: IDependencyProperty;
begin
  Result := Statics.get_ReasonProperty;
end;


{ TBitmapIcon }

class function TBitmapIcon.get_UriSourceProperty: IDependencyProperty;
begin
  Result := Statics.get_UriSourceProperty;
end;

class function TBitmapIcon.get_ShowAsMonochromeProperty: IDependencyProperty;
begin
  Result := Statics.get_ShowAsMonochromeProperty;
end;

// Factories for : "BitmapIcon"
// Factory: "Microsoft.UI.Xaml.Controls.IBitmapIconFactory"
// -> IBitmapIconFactory

class function TBitmapIcon.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IBitmapIcon;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TBitmapIconSource }

class function TBitmapIconSource.get_UriSourceProperty: IDependencyProperty;
begin
  Result := Statics.get_UriSourceProperty;
end;

class function TBitmapIconSource.get_ShowAsMonochromeProperty: IDependencyProperty;
begin
  Result := Statics.get_ShowAsMonochromeProperty;
end;

// Factories for : "BitmapIconSource"
// Factory: "Microsoft.UI.Xaml.Controls.IBitmapIconSourceFactory"
// -> IBitmapIconSourceFactory

class function TBitmapIconSource.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IBitmapIconSource;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TBorder }

class function TBorder.get_BorderBrushProperty: IDependencyProperty;
begin
  Result := Statics.get_BorderBrushProperty;
end;

class function TBorder.get_BorderThicknessProperty: IDependencyProperty;
begin
  Result := Statics.get_BorderThicknessProperty;
end;

class function TBorder.get_BackgroundProperty: IDependencyProperty;
begin
  Result := Statics.get_BackgroundProperty;
end;

class function TBorder.get_BackgroundSizingProperty: IDependencyProperty;
begin
  Result := Statics.get_BackgroundSizingProperty;
end;

class function TBorder.get_CornerRadiusProperty: IDependencyProperty;
begin
  Result := Statics.get_CornerRadiusProperty;
end;

class function TBorder.get_PaddingProperty: IDependencyProperty;
begin
  Result := Statics.get_PaddingProperty;
end;

class function TBorder.get_ChildTransitionsProperty: IDependencyProperty;
begin
  Result := Statics.get_ChildTransitionsProperty;
end;


{ TBreadcrumbBar }

class function TBreadcrumbBar.get_ItemsSourceProperty: IDependencyProperty;
begin
  Result := Statics.get_ItemsSourceProperty;
end;

class function TBreadcrumbBar.get_ItemTemplateProperty: IDependencyProperty;
begin
  Result := Statics.get_ItemTemplateProperty;
end;

// Factories for : "BreadcrumbBar"
// Factory: "Microsoft.UI.Xaml.Controls.IBreadcrumbBarFactory"
// -> IBreadcrumbBarFactory

class function TBreadcrumbBar.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IBreadcrumbBar;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TBreadcrumbBarItem }
// Factories for : "BreadcrumbBarItem"
// Factory: "Microsoft.UI.Xaml.Controls.IBreadcrumbBarItemFactory"
// -> IBreadcrumbBarItemFactory

class function TBreadcrumbBarItem.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IBreadcrumbBarItem;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TCalendarDatePicker }

class function TCalendarDatePicker.get_DateProperty: IDependencyProperty;
begin
  Result := Statics.get_DateProperty;
end;

class function TCalendarDatePicker.get_IsCalendarOpenProperty: IDependencyProperty;
begin
  Result := Statics.get_IsCalendarOpenProperty;
end;

class function TCalendarDatePicker.get_DateFormatProperty: IDependencyProperty;
begin
  Result := Statics.get_DateFormatProperty;
end;

class function TCalendarDatePicker.get_PlaceholderTextProperty: IDependencyProperty;
begin
  Result := Statics.get_PlaceholderTextProperty;
end;

class function TCalendarDatePicker.get_HeaderProperty: IDependencyProperty;
begin
  Result := Statics.get_HeaderProperty;
end;

class function TCalendarDatePicker.get_HeaderTemplateProperty: IDependencyProperty;
begin
  Result := Statics.get_HeaderTemplateProperty;
end;

class function TCalendarDatePicker.get_CalendarViewStyleProperty: IDependencyProperty;
begin
  Result := Statics.get_CalendarViewStyleProperty;
end;

class function TCalendarDatePicker.get_LightDismissOverlayModeProperty: IDependencyProperty;
begin
  Result := Statics.get_LightDismissOverlayModeProperty;
end;

class function TCalendarDatePicker.get_DescriptionProperty: IDependencyProperty;
begin
  Result := Statics.get_DescriptionProperty;
end;

class function TCalendarDatePicker.get_MinDateProperty: IDependencyProperty;
begin
  Result := Statics.get_MinDateProperty;
end;

class function TCalendarDatePicker.get_MaxDateProperty: IDependencyProperty;
begin
  Result := Statics.get_MaxDateProperty;
end;

class function TCalendarDatePicker.get_IsTodayHighlightedProperty: IDependencyProperty;
begin
  Result := Statics.get_IsTodayHighlightedProperty;
end;

class function TCalendarDatePicker.get_DisplayModeProperty: IDependencyProperty;
begin
  Result := Statics.get_DisplayModeProperty;
end;

class function TCalendarDatePicker.get_FirstDayOfWeekProperty: IDependencyProperty;
begin
  Result := Statics.get_FirstDayOfWeekProperty;
end;

class function TCalendarDatePicker.get_DayOfWeekFormatProperty: IDependencyProperty;
begin
  Result := Statics.get_DayOfWeekFormatProperty;
end;

class function TCalendarDatePicker.get_CalendarIdentifierProperty: IDependencyProperty;
begin
  Result := Statics.get_CalendarIdentifierProperty;
end;

class function TCalendarDatePicker.get_IsOutOfScopeEnabledProperty: IDependencyProperty;
begin
  Result := Statics.get_IsOutOfScopeEnabledProperty;
end;

class function TCalendarDatePicker.get_IsGroupLabelVisibleProperty: IDependencyProperty;
begin
  Result := Statics.get_IsGroupLabelVisibleProperty;
end;

// Factories for : "CalendarDatePicker"
// Factory: "Microsoft.UI.Xaml.Controls.ICalendarDatePickerFactory"
// -> ICalendarDatePickerFactory

class function TCalendarDatePicker.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): ICalendarDatePicker;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TCalendarView }

class function TCalendarView.get_CalendarIdentifierProperty: IDependencyProperty;
begin
  Result := Statics.get_CalendarIdentifierProperty;
end;

class function TCalendarView.get_DayOfWeekFormatProperty: IDependencyProperty;
begin
  Result := Statics.get_DayOfWeekFormatProperty;
end;

class function TCalendarView.get_IsGroupLabelVisibleProperty: IDependencyProperty;
begin
  Result := Statics.get_IsGroupLabelVisibleProperty;
end;

class function TCalendarView.get_DisplayModeProperty: IDependencyProperty;
begin
  Result := Statics.get_DisplayModeProperty;
end;

class function TCalendarView.get_FirstDayOfWeekProperty: IDependencyProperty;
begin
  Result := Statics.get_FirstDayOfWeekProperty;
end;

class function TCalendarView.get_IsOutOfScopeEnabledProperty: IDependencyProperty;
begin
  Result := Statics.get_IsOutOfScopeEnabledProperty;
end;

class function TCalendarView.get_IsTodayHighlightedProperty: IDependencyProperty;
begin
  Result := Statics.get_IsTodayHighlightedProperty;
end;

class function TCalendarView.get_MaxDateProperty: IDependencyProperty;
begin
  Result := Statics.get_MaxDateProperty;
end;

class function TCalendarView.get_MinDateProperty: IDependencyProperty;
begin
  Result := Statics.get_MinDateProperty;
end;

class function TCalendarView.get_NumberOfWeeksInViewProperty: IDependencyProperty;
begin
  Result := Statics.get_NumberOfWeeksInViewProperty;
end;

class function TCalendarView.get_SelectedDatesProperty: IDependencyProperty;
begin
  Result := Statics.get_SelectedDatesProperty;
end;

class function TCalendarView.get_SelectionModeProperty: IDependencyProperty;
begin
  Result := Statics.get_SelectionModeProperty;
end;

class function TCalendarView.get_TemplateSettingsProperty: IDependencyProperty;
begin
  Result := Statics.get_TemplateSettingsProperty;
end;

class function TCalendarView.get_FocusBorderBrushProperty: IDependencyProperty;
begin
  Result := Statics.get_FocusBorderBrushProperty;
end;

class function TCalendarView.get_SelectedHoverBorderBrushProperty: IDependencyProperty;
begin
  Result := Statics.get_SelectedHoverBorderBrushProperty;
end;

class function TCalendarView.get_SelectedPressedBorderBrushProperty: IDependencyProperty;
begin
  Result := Statics.get_SelectedPressedBorderBrushProperty;
end;

class function TCalendarView.get_SelectedDisabledBorderBrushProperty: IDependencyProperty;
begin
  Result := Statics.get_SelectedDisabledBorderBrushProperty;
end;

class function TCalendarView.get_SelectedBorderBrushProperty: IDependencyProperty;
begin
  Result := Statics.get_SelectedBorderBrushProperty;
end;

class function TCalendarView.get_HoverBorderBrushProperty: IDependencyProperty;
begin
  Result := Statics.get_HoverBorderBrushProperty;
end;

class function TCalendarView.get_PressedBorderBrushProperty: IDependencyProperty;
begin
  Result := Statics.get_PressedBorderBrushProperty;
end;

class function TCalendarView.get_TodaySelectedInnerBorderBrushProperty: IDependencyProperty;
begin
  Result := Statics.get_TodaySelectedInnerBorderBrushProperty;
end;

class function TCalendarView.get_BlackoutStrikethroughBrushProperty: IDependencyProperty;
begin
  Result := Statics.get_BlackoutStrikethroughBrushProperty;
end;

class function TCalendarView.get_CalendarItemBorderBrushProperty: IDependencyProperty;
begin
  Result := Statics.get_CalendarItemBorderBrushProperty;
end;

class function TCalendarView.get_BlackoutBackgroundProperty: IDependencyProperty;
begin
  Result := Statics.get_BlackoutBackgroundProperty;
end;

class function TCalendarView.get_OutOfScopeBackgroundProperty: IDependencyProperty;
begin
  Result := Statics.get_OutOfScopeBackgroundProperty;
end;

class function TCalendarView.get_CalendarItemBackgroundProperty: IDependencyProperty;
begin
  Result := Statics.get_CalendarItemBackgroundProperty;
end;

class function TCalendarView.get_CalendarItemHoverBackgroundProperty: IDependencyProperty;
begin
  Result := Statics.get_CalendarItemHoverBackgroundProperty;
end;

class function TCalendarView.get_CalendarItemPressedBackgroundProperty: IDependencyProperty;
begin
  Result := Statics.get_CalendarItemPressedBackgroundProperty;
end;

class function TCalendarView.get_CalendarItemDisabledBackgroundProperty: IDependencyProperty;
begin
  Result := Statics.get_CalendarItemDisabledBackgroundProperty;
end;

class function TCalendarView.get_TodayBackgroundProperty: IDependencyProperty;
begin
  Result := Statics.get_TodayBackgroundProperty;
end;

class function TCalendarView.get_TodayBlackoutBackgroundProperty: IDependencyProperty;
begin
  Result := Statics.get_TodayBlackoutBackgroundProperty;
end;

class function TCalendarView.get_TodayHoverBackgroundProperty: IDependencyProperty;
begin
  Result := Statics.get_TodayHoverBackgroundProperty;
end;

class function TCalendarView.get_TodayPressedBackgroundProperty: IDependencyProperty;
begin
  Result := Statics.get_TodayPressedBackgroundProperty;
end;

class function TCalendarView.get_TodayDisabledBackgroundProperty: IDependencyProperty;
begin
  Result := Statics.get_TodayDisabledBackgroundProperty;
end;

class function TCalendarView.get_PressedForegroundProperty: IDependencyProperty;
begin
  Result := Statics.get_PressedForegroundProperty;
end;

class function TCalendarView.get_TodayForegroundProperty: IDependencyProperty;
begin
  Result := Statics.get_TodayForegroundProperty;
end;

class function TCalendarView.get_BlackoutForegroundProperty: IDependencyProperty;
begin
  Result := Statics.get_BlackoutForegroundProperty;
end;

class function TCalendarView.get_TodayBlackoutForegroundProperty: IDependencyProperty;
begin
  Result := Statics.get_TodayBlackoutForegroundProperty;
end;

class function TCalendarView.get_SelectedForegroundProperty: IDependencyProperty;
begin
  Result := Statics.get_SelectedForegroundProperty;
end;

class function TCalendarView.get_SelectedHoverForegroundProperty: IDependencyProperty;
begin
  Result := Statics.get_SelectedHoverForegroundProperty;
end;

class function TCalendarView.get_SelectedPressedForegroundProperty: IDependencyProperty;
begin
  Result := Statics.get_SelectedPressedForegroundProperty;
end;

class function TCalendarView.get_SelectedDisabledForegroundProperty: IDependencyProperty;
begin
  Result := Statics.get_SelectedDisabledForegroundProperty;
end;

class function TCalendarView.get_OutOfScopeForegroundProperty: IDependencyProperty;
begin
  Result := Statics.get_OutOfScopeForegroundProperty;
end;

class function TCalendarView.get_OutOfScopeHoverForegroundProperty: IDependencyProperty;
begin
  Result := Statics.get_OutOfScopeHoverForegroundProperty;
end;

class function TCalendarView.get_OutOfScopePressedForegroundProperty: IDependencyProperty;
begin
  Result := Statics.get_OutOfScopePressedForegroundProperty;
end;

class function TCalendarView.get_CalendarItemForegroundProperty: IDependencyProperty;
begin
  Result := Statics.get_CalendarItemForegroundProperty;
end;

class function TCalendarView.get_DisabledForegroundProperty: IDependencyProperty;
begin
  Result := Statics.get_DisabledForegroundProperty;
end;

class function TCalendarView.get_DayItemFontFamilyProperty: IDependencyProperty;
begin
  Result := Statics.get_DayItemFontFamilyProperty;
end;

class function TCalendarView.get_DayItemFontSizeProperty: IDependencyProperty;
begin
  Result := Statics.get_DayItemFontSizeProperty;
end;

class function TCalendarView.get_DayItemFontStyleProperty: IDependencyProperty;
begin
  Result := Statics.get_DayItemFontStyleProperty;
end;

class function TCalendarView.get_DayItemFontWeightProperty: IDependencyProperty;
begin
  Result := Statics.get_DayItemFontWeightProperty;
end;

class function TCalendarView.get_TodayFontWeightProperty: IDependencyProperty;
begin
  Result := Statics.get_TodayFontWeightProperty;
end;

class function TCalendarView.get_FirstOfMonthLabelFontFamilyProperty: IDependencyProperty;
begin
  Result := Statics.get_FirstOfMonthLabelFontFamilyProperty;
end;

class function TCalendarView.get_FirstOfMonthLabelFontSizeProperty: IDependencyProperty;
begin
  Result := Statics.get_FirstOfMonthLabelFontSizeProperty;
end;

class function TCalendarView.get_FirstOfMonthLabelFontStyleProperty: IDependencyProperty;
begin
  Result := Statics.get_FirstOfMonthLabelFontStyleProperty;
end;

class function TCalendarView.get_FirstOfMonthLabelFontWeightProperty: IDependencyProperty;
begin
  Result := Statics.get_FirstOfMonthLabelFontWeightProperty;
end;

class function TCalendarView.get_MonthYearItemFontFamilyProperty: IDependencyProperty;
begin
  Result := Statics.get_MonthYearItemFontFamilyProperty;
end;

class function TCalendarView.get_MonthYearItemFontSizeProperty: IDependencyProperty;
begin
  Result := Statics.get_MonthYearItemFontSizeProperty;
end;

class function TCalendarView.get_MonthYearItemFontStyleProperty: IDependencyProperty;
begin
  Result := Statics.get_MonthYearItemFontStyleProperty;
end;

class function TCalendarView.get_MonthYearItemFontWeightProperty: IDependencyProperty;
begin
  Result := Statics.get_MonthYearItemFontWeightProperty;
end;

class function TCalendarView.get_FirstOfYearDecadeLabelFontFamilyProperty: IDependencyProperty;
begin
  Result := Statics.get_FirstOfYearDecadeLabelFontFamilyProperty;
end;

class function TCalendarView.get_FirstOfYearDecadeLabelFontSizeProperty: IDependencyProperty;
begin
  Result := Statics.get_FirstOfYearDecadeLabelFontSizeProperty;
end;

class function TCalendarView.get_FirstOfYearDecadeLabelFontStyleProperty: IDependencyProperty;
begin
  Result := Statics.get_FirstOfYearDecadeLabelFontStyleProperty;
end;

class function TCalendarView.get_FirstOfYearDecadeLabelFontWeightProperty: IDependencyProperty;
begin
  Result := Statics.get_FirstOfYearDecadeLabelFontWeightProperty;
end;

class function TCalendarView.get_DayItemMarginProperty: IDependencyProperty;
begin
  Result := Statics.get_DayItemMarginProperty;
end;

class function TCalendarView.get_MonthYearItemMarginProperty: IDependencyProperty;
begin
  Result := Statics.get_MonthYearItemMarginProperty;
end;

class function TCalendarView.get_FirstOfMonthLabelMarginProperty: IDependencyProperty;
begin
  Result := Statics.get_FirstOfMonthLabelMarginProperty;
end;

class function TCalendarView.get_FirstOfYearDecadeLabelMarginProperty: IDependencyProperty;
begin
  Result := Statics.get_FirstOfYearDecadeLabelMarginProperty;
end;

class function TCalendarView.get_HorizontalDayItemAlignmentProperty: IDependencyProperty;
begin
  Result := Statics.get_HorizontalDayItemAlignmentProperty;
end;

class function TCalendarView.get_VerticalDayItemAlignmentProperty: IDependencyProperty;
begin
  Result := Statics.get_VerticalDayItemAlignmentProperty;
end;

class function TCalendarView.get_HorizontalFirstOfMonthLabelAlignmentProperty: IDependencyProperty;
begin
  Result := Statics.get_HorizontalFirstOfMonthLabelAlignmentProperty;
end;

class function TCalendarView.get_VerticalFirstOfMonthLabelAlignmentProperty: IDependencyProperty;
begin
  Result := Statics.get_VerticalFirstOfMonthLabelAlignmentProperty;
end;

class function TCalendarView.get_CalendarItemBorderThicknessProperty: IDependencyProperty;
begin
  Result := Statics.get_CalendarItemBorderThicknessProperty;
end;

class function TCalendarView.get_CalendarViewDayItemStyleProperty: IDependencyProperty;
begin
  Result := Statics.get_CalendarViewDayItemStyleProperty;
end;

class function TCalendarView.get_CalendarItemCornerRadiusProperty: IDependencyProperty;
begin
  Result := Statics.get_CalendarItemCornerRadiusProperty;
end;

// Factories for : "CalendarView"
// Factory: "Microsoft.UI.Xaml.Controls.ICalendarViewFactory"
// -> ICalendarViewFactory

class function TCalendarView.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): ICalendarView;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TCalendarViewDayItem }

class function TCalendarViewDayItem.get_IsBlackoutProperty: IDependencyProperty;
begin
  Result := Statics.get_IsBlackoutProperty;
end;

class function TCalendarViewDayItem.get_DateProperty: IDependencyProperty;
begin
  Result := Statics.get_DateProperty;
end;

// Factories for : "CalendarViewDayItem"
// Factory: "Microsoft.UI.Xaml.Controls.ICalendarViewDayItemFactory"
// -> ICalendarViewDayItemFactory

class function TCalendarViewDayItem.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): ICalendarViewDayItem;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TPanel }

class function TPanel.get_BackgroundProperty: IDependencyProperty;
begin
  Result := Statics.get_BackgroundProperty;
end;

class function TPanel.get_IsItemsHostProperty: IDependencyProperty;
begin
  Result := Statics.get_IsItemsHostProperty;
end;

class function TPanel.get_ChildrenTransitionsProperty: IDependencyProperty;
begin
  Result := Statics.get_ChildrenTransitionsProperty;
end;

// Factories for : "Panel"
// Factory: "Microsoft.UI.Xaml.Controls.IPanelFactory"
// -> IPanelFactory

class function TPanel.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IPanel;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TCanvas }

class function TCanvas.get_LeftProperty: IDependencyProperty;
begin
  Result := Statics.get_LeftProperty;
end;

class function TCanvas.GetLeft(element: IUIElement): Double;
begin
  Result := Statics.GetLeft(element);
end;

class procedure TCanvas.SetLeft(element: IUIElement; length: Double);
begin
  Statics.SetLeft(element, length);
end;

class function TCanvas.get_TopProperty: IDependencyProperty;
begin
  Result := Statics.get_TopProperty;
end;

class function TCanvas.GetTop(element: IUIElement): Double;
begin
  Result := Statics.GetTop(element);
end;

class procedure TCanvas.SetTop(element: IUIElement; length: Double);
begin
  Statics.SetTop(element, length);
end;

class function TCanvas.get_ZIndexProperty: IDependencyProperty;
begin
  Result := Statics.get_ZIndexProperty;
end;

class function TCanvas.GetZIndex(element: IUIElement): Integer;
begin
  Result := Statics.GetZIndex(element);
end;

class procedure TCanvas.SetZIndex(element: IUIElement; value: Integer);
begin
  Statics.SetZIndex(element, value);
end;

// Factories for : "Canvas"
// Factory: "Microsoft.UI.Xaml.Controls.ICanvasFactory"
// -> ICanvasFactory

class function TCanvas.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): ICanvas;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TCheckBox }
// Factories for : "CheckBox"
// Factory: "Microsoft.UI.Xaml.Controls.ICheckBoxFactory"
// -> ICheckBoxFactory

class function TCheckBox.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): ICheckBox;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TChoosingGroupHeaderContainerEventArgs }

{ TChoosingItemContainerEventArgs }

{ TColorPicker }

class function TColorPicker.get_ColorProperty: IDependencyProperty;
begin
  Result := Statics.get_ColorProperty;
end;

class function TColorPicker.get_PreviousColorProperty: IDependencyProperty;
begin
  Result := Statics.get_PreviousColorProperty;
end;

class function TColorPicker.get_IsAlphaEnabledProperty: IDependencyProperty;
begin
  Result := Statics.get_IsAlphaEnabledProperty;
end;

class function TColorPicker.get_IsColorSpectrumVisibleProperty: IDependencyProperty;
begin
  Result := Statics.get_IsColorSpectrumVisibleProperty;
end;

class function TColorPicker.get_IsColorPreviewVisibleProperty: IDependencyProperty;
begin
  Result := Statics.get_IsColorPreviewVisibleProperty;
end;

class function TColorPicker.get_IsColorSliderVisibleProperty: IDependencyProperty;
begin
  Result := Statics.get_IsColorSliderVisibleProperty;
end;

class function TColorPicker.get_IsAlphaSliderVisibleProperty: IDependencyProperty;
begin
  Result := Statics.get_IsAlphaSliderVisibleProperty;
end;

class function TColorPicker.get_IsMoreButtonVisibleProperty: IDependencyProperty;
begin
  Result := Statics.get_IsMoreButtonVisibleProperty;
end;

class function TColorPicker.get_IsColorChannelTextInputVisibleProperty: IDependencyProperty;
begin
  Result := Statics.get_IsColorChannelTextInputVisibleProperty;
end;

class function TColorPicker.get_IsAlphaTextInputVisibleProperty: IDependencyProperty;
begin
  Result := Statics.get_IsAlphaTextInputVisibleProperty;
end;

class function TColorPicker.get_IsHexInputVisibleProperty: IDependencyProperty;
begin
  Result := Statics.get_IsHexInputVisibleProperty;
end;

class function TColorPicker.get_MinHueProperty: IDependencyProperty;
begin
  Result := Statics.get_MinHueProperty;
end;

class function TColorPicker.get_MaxHueProperty: IDependencyProperty;
begin
  Result := Statics.get_MaxHueProperty;
end;

class function TColorPicker.get_MinSaturationProperty: IDependencyProperty;
begin
  Result := Statics.get_MinSaturationProperty;
end;

class function TColorPicker.get_MaxSaturationProperty: IDependencyProperty;
begin
  Result := Statics.get_MaxSaturationProperty;
end;

class function TColorPicker.get_MinValueProperty: IDependencyProperty;
begin
  Result := Statics.get_MinValueProperty;
end;

class function TColorPicker.get_MaxValueProperty: IDependencyProperty;
begin
  Result := Statics.get_MaxValueProperty;
end;

class function TColorPicker.get_ColorSpectrumShapeProperty: IDependencyProperty;
begin
  Result := Statics.get_ColorSpectrumShapeProperty;
end;

class function TColorPicker.get_ColorSpectrumComponentsProperty: IDependencyProperty;
begin
  Result := Statics.get_ColorSpectrumComponentsProperty;
end;


class function TColorPicker.get_OrientationProperty: IDependencyProperty;
begin
  Result := Statics2.get_OrientationProperty;
end;

// Factories for : "ColorPicker"
// Factory: "Microsoft.UI.Xaml.Controls.IColorPickerFactory"
// -> IColorPickerFactory

class function TColorPicker.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IColorPicker;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TColumnDefinition }

class function TColumnDefinition.get_WidthProperty: IDependencyProperty;
begin
  Result := Statics.get_WidthProperty;
end;

class function TColumnDefinition.get_MaxWidthProperty: IDependencyProperty;
begin
  Result := Statics.get_MaxWidthProperty;
end;

class function TColumnDefinition.get_MinWidthProperty: IDependencyProperty;
begin
  Result := Statics.get_MinWidthProperty;
end;


{ TPrimitives_Selector }

class function TPrimitives_Selector.get_SelectedIndexProperty: IDependencyProperty;
begin
  Result := Statics.get_SelectedIndexProperty;
end;

class function TPrimitives_Selector.get_SelectedItemProperty: IDependencyProperty;
begin
  Result := Statics.get_SelectedItemProperty;
end;

class function TPrimitives_Selector.get_SelectedValueProperty: IDependencyProperty;
begin
  Result := Statics.get_SelectedValueProperty;
end;

class function TPrimitives_Selector.get_SelectedValuePathProperty: IDependencyProperty;
begin
  Result := Statics.get_SelectedValuePathProperty;
end;

class function TPrimitives_Selector.get_IsSynchronizedWithCurrentItemProperty: IDependencyProperty;
begin
  Result := Statics.get_IsSynchronizedWithCurrentItemProperty;
end;

class function TPrimitives_Selector.GetIsSelectionActive(element: IDependencyObject): Boolean;
begin
  Result := Statics.GetIsSelectionActive(element);
end;

// Factories for : "Primitives_Selector"
// Factory: "Microsoft.UI.Xaml.Controls.Primitives.ISelectorFactory"
// -> Primitives_ISelectorFactory


{ TComboBox }

class function TComboBox.get_IsEditableProperty: IDependencyProperty;
begin
  Result := Statics.get_IsEditableProperty;
end;

class function TComboBox.get_IsDropDownOpenProperty: IDependencyProperty;
begin
  Result := Statics.get_IsDropDownOpenProperty;
end;

class function TComboBox.get_MaxDropDownHeightProperty: IDependencyProperty;
begin
  Result := Statics.get_MaxDropDownHeightProperty;
end;

class function TComboBox.get_HeaderProperty: IDependencyProperty;
begin
  Result := Statics.get_HeaderProperty;
end;

class function TComboBox.get_HeaderTemplateProperty: IDependencyProperty;
begin
  Result := Statics.get_HeaderTemplateProperty;
end;

class function TComboBox.get_PlaceholderTextProperty: IDependencyProperty;
begin
  Result := Statics.get_PlaceholderTextProperty;
end;

class function TComboBox.get_LightDismissOverlayModeProperty: IDependencyProperty;
begin
  Result := Statics.get_LightDismissOverlayModeProperty;
end;

class function TComboBox.get_IsTextSearchEnabledProperty: IDependencyProperty;
begin
  Result := Statics.get_IsTextSearchEnabledProperty;
end;

class function TComboBox.get_SelectionChangedTriggerProperty: IDependencyProperty;
begin
  Result := Statics.get_SelectionChangedTriggerProperty;
end;

class function TComboBox.get_PlaceholderForegroundProperty: IDependencyProperty;
begin
  Result := Statics.get_PlaceholderForegroundProperty;
end;

class function TComboBox.get_TextProperty: IDependencyProperty;
begin
  Result := Statics.get_TextProperty;
end;

class function TComboBox.get_TextBoxStyleProperty: IDependencyProperty;
begin
  Result := Statics.get_TextBoxStyleProperty;
end;

class function TComboBox.get_DescriptionProperty: IDependencyProperty;
begin
  Result := Statics.get_DescriptionProperty;
end;

// Factories for : "ComboBox"
// Factory: "Microsoft.UI.Xaml.Controls.IComboBoxFactory"
// -> IComboBoxFactory

class function TComboBox.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IComboBox;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TPrimitives_SelectorItem }

class function TPrimitives_SelectorItem.get_IsSelectedProperty: IDependencyProperty;
begin
  Result := Statics.get_IsSelectedProperty;
end;

// Factories for : "Primitives_SelectorItem"
// Factory: "Microsoft.UI.Xaml.Controls.Primitives.ISelectorItemFactory"
// -> Primitives_ISelectorItemFactory

class function TPrimitives_SelectorItem.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): Primitives_ISelectorItem;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TComboBoxItem }
// Factories for : "ComboBoxItem"
// Factory: "Microsoft.UI.Xaml.Controls.IComboBoxItemFactory"
// -> IComboBoxItemFactory

class function TComboBoxItem.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IComboBoxItem;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TCommandBar }

class function TCommandBar.get_PrimaryCommandsProperty: IDependencyProperty;
begin
  Result := Statics.get_PrimaryCommandsProperty;
end;

class function TCommandBar.get_SecondaryCommandsProperty: IDependencyProperty;
begin
  Result := Statics.get_SecondaryCommandsProperty;
end;

class function TCommandBar.get_CommandBarOverflowPresenterStyleProperty: IDependencyProperty;
begin
  Result := Statics.get_CommandBarOverflowPresenterStyleProperty;
end;

class function TCommandBar.get_DefaultLabelPositionProperty: IDependencyProperty;
begin
  Result := Statics.get_DefaultLabelPositionProperty;
end;

class function TCommandBar.get_OverflowButtonVisibilityProperty: IDependencyProperty;
begin
  Result := Statics.get_OverflowButtonVisibilityProperty;
end;

class function TCommandBar.get_IsDynamicOverflowEnabledProperty: IDependencyProperty;
begin
  Result := Statics.get_IsDynamicOverflowEnabledProperty;
end;

// Factories for : "CommandBar"
// Factory: "Microsoft.UI.Xaml.Controls.ICommandBarFactory"
// -> ICommandBarFactory

class function TCommandBar.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): ICommandBar;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TPrimitives_FlyoutBase }

class function TPrimitives_FlyoutBase.get_TargetProperty: IDependencyProperty;
begin
  Result := Statics.get_TargetProperty;
end;

class function TPrimitives_FlyoutBase.get_PlacementProperty: IDependencyProperty;
begin
  Result := Statics.get_PlacementProperty;
end;

class function TPrimitives_FlyoutBase.get_AllowFocusOnInteractionProperty: IDependencyProperty;
begin
  Result := Statics.get_AllowFocusOnInteractionProperty;
end;

class function TPrimitives_FlyoutBase.get_LightDismissOverlayModeProperty: IDependencyProperty;
begin
  Result := Statics.get_LightDismissOverlayModeProperty;
end;

class function TPrimitives_FlyoutBase.get_AllowFocusWhenDisabledProperty: IDependencyProperty;
begin
  Result := Statics.get_AllowFocusWhenDisabledProperty;
end;

class function TPrimitives_FlyoutBase.get_ShowModeProperty: IDependencyProperty;
begin
  Result := Statics.get_ShowModeProperty;
end;

class function TPrimitives_FlyoutBase.get_InputDevicePrefersPrimaryCommandsProperty: IDependencyProperty;
begin
  Result := Statics.get_InputDevicePrefersPrimaryCommandsProperty;
end;

class function TPrimitives_FlyoutBase.get_AreOpenCloseAnimationsEnabledProperty: IDependencyProperty;
begin
  Result := Statics.get_AreOpenCloseAnimationsEnabledProperty;
end;

class function TPrimitives_FlyoutBase.get_ShouldConstrainToRootBoundsProperty: IDependencyProperty;
begin
  Result := Statics.get_ShouldConstrainToRootBoundsProperty;
end;

class function TPrimitives_FlyoutBase.get_ElementSoundModeProperty: IDependencyProperty;
begin
  Result := Statics.get_ElementSoundModeProperty;
end;

class function TPrimitives_FlyoutBase.get_OverlayInputPassThroughElementProperty: IDependencyProperty;
begin
  Result := Statics.get_OverlayInputPassThroughElementProperty;
end;

class function TPrimitives_FlyoutBase.get_IsOpenProperty: IDependencyProperty;
begin
  Result := Statics.get_IsOpenProperty;
end;

class function TPrimitives_FlyoutBase.get_AttachedFlyoutProperty: IDependencyProperty;
begin
  Result := Statics.get_AttachedFlyoutProperty;
end;

class function TPrimitives_FlyoutBase.GetAttachedFlyout(element: IFrameworkElement): Primitives_IFlyoutBase;
begin
  Result := Statics.GetAttachedFlyout(element);
end;

class procedure TPrimitives_FlyoutBase.SetAttachedFlyout(element: IFrameworkElement; value: Primitives_IFlyoutBase);
begin
  Statics.SetAttachedFlyout(element, value);
end;

class procedure TPrimitives_FlyoutBase.ShowAttachedFlyout(flyoutOwner: IFrameworkElement);
begin
  Statics.ShowAttachedFlyout(flyoutOwner);
end;

// Factories for : "Primitives_FlyoutBase"
// Factory: "Microsoft.UI.Xaml.Controls.Primitives.IFlyoutBaseFactory"
// -> Primitives_IFlyoutBaseFactory

class function TPrimitives_FlyoutBase.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): Primitives_IFlyoutBase;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TCommandBarFlyout }
// Factories for : "CommandBarFlyout"
// Factory: "Microsoft.UI.Xaml.Controls.ICommandBarFlyoutFactory"
// -> ICommandBarFlyoutFactory

class function TCommandBarFlyout.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): ICommandBarFlyout;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TCommandBarOverflowPresenter }
// Factories for : "CommandBarOverflowPresenter"
// Factory: "Microsoft.UI.Xaml.Controls.ICommandBarOverflowPresenterFactory"
// -> ICommandBarOverflowPresenterFactory

class function TCommandBarOverflowPresenter.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): ICommandBarOverflowPresenter;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TContainerContentChangingEventArgs }

{ TContentDialog }

class function TContentDialog.get_TitleProperty: IDependencyProperty;
begin
  Result := Statics.get_TitleProperty;
end;

class function TContentDialog.get_TitleTemplateProperty: IDependencyProperty;
begin
  Result := Statics.get_TitleTemplateProperty;
end;

class function TContentDialog.get_FullSizeDesiredProperty: IDependencyProperty;
begin
  Result := Statics.get_FullSizeDesiredProperty;
end;

class function TContentDialog.get_PrimaryButtonTextProperty: IDependencyProperty;
begin
  Result := Statics.get_PrimaryButtonTextProperty;
end;

class function TContentDialog.get_SecondaryButtonTextProperty: IDependencyProperty;
begin
  Result := Statics.get_SecondaryButtonTextProperty;
end;

class function TContentDialog.get_CloseButtonTextProperty: IDependencyProperty;
begin
  Result := Statics.get_CloseButtonTextProperty;
end;

class function TContentDialog.get_PrimaryButtonCommandProperty: IDependencyProperty;
begin
  Result := Statics.get_PrimaryButtonCommandProperty;
end;

class function TContentDialog.get_SecondaryButtonCommandProperty: IDependencyProperty;
begin
  Result := Statics.get_SecondaryButtonCommandProperty;
end;

class function TContentDialog.get_CloseButtonCommandProperty: IDependencyProperty;
begin
  Result := Statics.get_CloseButtonCommandProperty;
end;

class function TContentDialog.get_PrimaryButtonCommandParameterProperty: IDependencyProperty;
begin
  Result := Statics.get_PrimaryButtonCommandParameterProperty;
end;

class function TContentDialog.get_SecondaryButtonCommandParameterProperty: IDependencyProperty;
begin
  Result := Statics.get_SecondaryButtonCommandParameterProperty;
end;

class function TContentDialog.get_CloseButtonCommandParameterProperty: IDependencyProperty;
begin
  Result := Statics.get_CloseButtonCommandParameterProperty;
end;

class function TContentDialog.get_IsPrimaryButtonEnabledProperty: IDependencyProperty;
begin
  Result := Statics.get_IsPrimaryButtonEnabledProperty;
end;

class function TContentDialog.get_IsSecondaryButtonEnabledProperty: IDependencyProperty;
begin
  Result := Statics.get_IsSecondaryButtonEnabledProperty;
end;

class function TContentDialog.get_PrimaryButtonStyleProperty: IDependencyProperty;
begin
  Result := Statics.get_PrimaryButtonStyleProperty;
end;

class function TContentDialog.get_SecondaryButtonStyleProperty: IDependencyProperty;
begin
  Result := Statics.get_SecondaryButtonStyleProperty;
end;

class function TContentDialog.get_CloseButtonStyleProperty: IDependencyProperty;
begin
  Result := Statics.get_CloseButtonStyleProperty;
end;

class function TContentDialog.get_DefaultButtonProperty: IDependencyProperty;
begin
  Result := Statics.get_DefaultButtonProperty;
end;

// Factories for : "ContentDialog"
// Factory: "Microsoft.UI.Xaml.Controls.IContentDialogFactory"
// -> IContentDialogFactory

class function TContentDialog.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IContentDialog;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TContentPresenter }

class function TContentPresenter.get_ContentProperty: IDependencyProperty;
begin
  Result := Statics.get_ContentProperty;
end;

class function TContentPresenter.get_ContentTemplateProperty: IDependencyProperty;
begin
  Result := Statics.get_ContentTemplateProperty;
end;

class function TContentPresenter.get_ContentTemplateSelectorProperty: IDependencyProperty;
begin
  Result := Statics.get_ContentTemplateSelectorProperty;
end;

class function TContentPresenter.get_ContentTransitionsProperty: IDependencyProperty;
begin
  Result := Statics.get_ContentTransitionsProperty;
end;

class function TContentPresenter.get_FontSizeProperty: IDependencyProperty;
begin
  Result := Statics.get_FontSizeProperty;
end;

class function TContentPresenter.get_FontFamilyProperty: IDependencyProperty;
begin
  Result := Statics.get_FontFamilyProperty;
end;

class function TContentPresenter.get_FontWeightProperty: IDependencyProperty;
begin
  Result := Statics.get_FontWeightProperty;
end;

class function TContentPresenter.get_FontStyleProperty: IDependencyProperty;
begin
  Result := Statics.get_FontStyleProperty;
end;

class function TContentPresenter.get_FontStretchProperty: IDependencyProperty;
begin
  Result := Statics.get_FontStretchProperty;
end;

class function TContentPresenter.get_CharacterSpacingProperty: IDependencyProperty;
begin
  Result := Statics.get_CharacterSpacingProperty;
end;

class function TContentPresenter.get_ForegroundProperty: IDependencyProperty;
begin
  Result := Statics.get_ForegroundProperty;
end;

class function TContentPresenter.get_OpticalMarginAlignmentProperty: IDependencyProperty;
begin
  Result := Statics.get_OpticalMarginAlignmentProperty;
end;

class function TContentPresenter.get_TextLineBoundsProperty: IDependencyProperty;
begin
  Result := Statics.get_TextLineBoundsProperty;
end;

class function TContentPresenter.get_IsTextScaleFactorEnabledProperty: IDependencyProperty;
begin
  Result := Statics.get_IsTextScaleFactorEnabledProperty;
end;

class function TContentPresenter.get_TextWrappingProperty: IDependencyProperty;
begin
  Result := Statics.get_TextWrappingProperty;
end;

class function TContentPresenter.get_MaxLinesProperty: IDependencyProperty;
begin
  Result := Statics.get_MaxLinesProperty;
end;

class function TContentPresenter.get_LineStackingStrategyProperty: IDependencyProperty;
begin
  Result := Statics.get_LineStackingStrategyProperty;
end;

class function TContentPresenter.get_LineHeightProperty: IDependencyProperty;
begin
  Result := Statics.get_LineHeightProperty;
end;

class function TContentPresenter.get_BorderBrushProperty: IDependencyProperty;
begin
  Result := Statics.get_BorderBrushProperty;
end;

class function TContentPresenter.get_BorderThicknessProperty: IDependencyProperty;
begin
  Result := Statics.get_BorderThicknessProperty;
end;

class function TContentPresenter.get_CornerRadiusProperty: IDependencyProperty;
begin
  Result := Statics.get_CornerRadiusProperty;
end;

class function TContentPresenter.get_PaddingProperty: IDependencyProperty;
begin
  Result := Statics.get_PaddingProperty;
end;

class function TContentPresenter.get_BackgroundProperty: IDependencyProperty;
begin
  Result := Statics.get_BackgroundProperty;
end;

class function TContentPresenter.get_BackgroundSizingProperty: IDependencyProperty;
begin
  Result := Statics.get_BackgroundSizingProperty;
end;

class function TContentPresenter.get_HorizontalContentAlignmentProperty: IDependencyProperty;
begin
  Result := Statics.get_HorizontalContentAlignmentProperty;
end;

class function TContentPresenter.get_VerticalContentAlignmentProperty: IDependencyProperty;
begin
  Result := Statics.get_VerticalContentAlignmentProperty;
end;

// Factories for : "ContentPresenter"
// Factory: "Microsoft.UI.Xaml.Controls.IContentPresenterFactory"
// -> IContentPresenterFactory

class function TContentPresenter.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IContentPresenter;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TControlTemplate }

{ TDataTemplateSelector }
// Factories for : "DataTemplateSelector"
// Factory: "Microsoft.UI.Xaml.Controls.IDataTemplateSelectorFactory"
// -> IDataTemplateSelectorFactory

class function TDataTemplateSelector.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IDataTemplateSelector;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TDatePickedEventArgs }

{ TDatePicker }

class function TDatePicker.get_HeaderProperty: IDependencyProperty;
begin
  Result := Statics.get_HeaderProperty;
end;

class function TDatePicker.get_HeaderTemplateProperty: IDependencyProperty;
begin
  Result := Statics.get_HeaderTemplateProperty;
end;

class function TDatePicker.get_CalendarIdentifierProperty: IDependencyProperty;
begin
  Result := Statics.get_CalendarIdentifierProperty;
end;

class function TDatePicker.get_DateProperty: IDependencyProperty;
begin
  Result := Statics.get_DateProperty;
end;

class function TDatePicker.get_DayVisibleProperty: IDependencyProperty;
begin
  Result := Statics.get_DayVisibleProperty;
end;

class function TDatePicker.get_MonthVisibleProperty: IDependencyProperty;
begin
  Result := Statics.get_MonthVisibleProperty;
end;

class function TDatePicker.get_YearVisibleProperty: IDependencyProperty;
begin
  Result := Statics.get_YearVisibleProperty;
end;

class function TDatePicker.get_DayFormatProperty: IDependencyProperty;
begin
  Result := Statics.get_DayFormatProperty;
end;

class function TDatePicker.get_MonthFormatProperty: IDependencyProperty;
begin
  Result := Statics.get_MonthFormatProperty;
end;

class function TDatePicker.get_YearFormatProperty: IDependencyProperty;
begin
  Result := Statics.get_YearFormatProperty;
end;

class function TDatePicker.get_MinYearProperty: IDependencyProperty;
begin
  Result := Statics.get_MinYearProperty;
end;

class function TDatePicker.get_MaxYearProperty: IDependencyProperty;
begin
  Result := Statics.get_MaxYearProperty;
end;

class function TDatePicker.get_OrientationProperty: IDependencyProperty;
begin
  Result := Statics.get_OrientationProperty;
end;

class function TDatePicker.get_LightDismissOverlayModeProperty: IDependencyProperty;
begin
  Result := Statics.get_LightDismissOverlayModeProperty;
end;

class function TDatePicker.get_SelectedDateProperty: IDependencyProperty;
begin
  Result := Statics.get_SelectedDateProperty;
end;

// Factories for : "DatePicker"
// Factory: "Microsoft.UI.Xaml.Controls.IDatePickerFactory"
// -> IDatePickerFactory

class function TDatePicker.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IDatePicker;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TPrimitives_PickerFlyoutBase }

class function TPrimitives_PickerFlyoutBase.get_TitleProperty: IDependencyProperty;
begin
  Result := Statics.get_TitleProperty;
end;

class function TPrimitives_PickerFlyoutBase.GetTitle(element: IDependencyObject): HSTRING;
begin
  Result := Statics.GetTitle(element);
end;

class procedure TPrimitives_PickerFlyoutBase.SetTitle(element: IDependencyObject; value: HSTRING);
begin
  Statics.SetTitle(element, value);
end;

// Factories for : "Primitives_PickerFlyoutBase"
// Factory: "Microsoft.UI.Xaml.Controls.Primitives.IPickerFlyoutBaseFactory"
// -> Primitives_IPickerFlyoutBaseFactory

class function TPrimitives_PickerFlyoutBase.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): Primitives_IPickerFlyoutBase;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TDatePickerFlyout }

class function TDatePickerFlyout.get_CalendarIdentifierProperty: IDependencyProperty;
begin
  Result := Statics.get_CalendarIdentifierProperty;
end;

class function TDatePickerFlyout.get_DateProperty: IDependencyProperty;
begin
  Result := Statics.get_DateProperty;
end;

class function TDatePickerFlyout.get_DayVisibleProperty: IDependencyProperty;
begin
  Result := Statics.get_DayVisibleProperty;
end;

class function TDatePickerFlyout.get_MonthVisibleProperty: IDependencyProperty;
begin
  Result := Statics.get_MonthVisibleProperty;
end;

class function TDatePickerFlyout.get_YearVisibleProperty: IDependencyProperty;
begin
  Result := Statics.get_YearVisibleProperty;
end;

class function TDatePickerFlyout.get_MinYearProperty: IDependencyProperty;
begin
  Result := Statics.get_MinYearProperty;
end;

class function TDatePickerFlyout.get_MaxYearProperty: IDependencyProperty;
begin
  Result := Statics.get_MaxYearProperty;
end;

class function TDatePickerFlyout.get_DayFormatProperty: IDependencyProperty;
begin
  Result := Statics.get_DayFormatProperty;
end;

class function TDatePickerFlyout.get_MonthFormatProperty: IDependencyProperty;
begin
  Result := Statics.get_MonthFormatProperty;
end;

class function TDatePickerFlyout.get_YearFormatProperty: IDependencyProperty;
begin
  Result := Statics.get_YearFormatProperty;
end;


{ TDatePickerFlyoutItem }

class function TDatePickerFlyoutItem.get_PrimaryTextProperty: IDependencyProperty;
begin
  Result := Statics.get_PrimaryTextProperty;
end;

class function TDatePickerFlyoutItem.get_SecondaryTextProperty: IDependencyProperty;
begin
  Result := Statics.get_SecondaryTextProperty;
end;


{ TDatePickerFlyoutPresenter }

class function TDatePickerFlyoutPresenter.get_IsDefaultShadowEnabledProperty: IDependencyProperty;
begin
  Result := Statics.get_IsDefaultShadowEnabledProperty;
end;


{ TDragItemsStartingEventArgs }

{ TDropDownButton }
// Factories for : "DropDownButton"
// Factory: "Microsoft.UI.Xaml.Controls.IDropDownButtonFactory"
// -> IDropDownButtonFactory

class function TDropDownButton.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IDropDownButton;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TDynamicOverflowItemsChangingEventArgs }

{ TExpander }

class function TExpander.get_HeaderProperty: IDependencyProperty;
begin
  Result := Statics.get_HeaderProperty;
end;

class function TExpander.get_HeaderTemplateProperty: IDependencyProperty;
begin
  Result := Statics.get_HeaderTemplateProperty;
end;

class function TExpander.get_HeaderTemplateSelectorProperty: IDependencyProperty;
begin
  Result := Statics.get_HeaderTemplateSelectorProperty;
end;

class function TExpander.get_IsExpandedProperty: IDependencyProperty;
begin
  Result := Statics.get_IsExpandedProperty;
end;

class function TExpander.get_ExpandDirectionProperty: IDependencyProperty;
begin
  Result := Statics.get_ExpandDirectionProperty;
end;

// Factories for : "Expander"
// Factory: "Microsoft.UI.Xaml.Controls.IExpanderFactory"
// -> IExpanderFactory

class function TExpander.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IExpander;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TFlipView }

class function TFlipView.get_UseTouchAnimationsForAllNavigationProperty: IDependencyProperty;
begin
  Result := Statics.get_UseTouchAnimationsForAllNavigationProperty;
end;

// Factories for : "FlipView"
// Factory: "Microsoft.UI.Xaml.Controls.IFlipViewFactory"
// -> IFlipViewFactory

class function TFlipView.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IFlipView;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TFlipViewItem }
// Factories for : "FlipViewItem"
// Factory: "Microsoft.UI.Xaml.Controls.IFlipViewItemFactory"
// -> IFlipViewItemFactory

class function TFlipViewItem.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IFlipViewItem;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TFlyout }

class function TFlyout.get_ContentProperty: IDependencyProperty;
begin
  Result := Statics.get_ContentProperty;
end;

class function TFlyout.get_FlyoutPresenterStyleProperty: IDependencyProperty;
begin
  Result := Statics.get_FlyoutPresenterStyleProperty;
end;

// Factories for : "Flyout"
// Factory: "Microsoft.UI.Xaml.Controls.IFlyoutFactory"
// -> IFlyoutFactory

class function TFlyout.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IFlyout;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TFlyoutPresenter }

class function TFlyoutPresenter.get_IsDefaultShadowEnabledProperty: IDependencyProperty;
begin
  Result := Statics.get_IsDefaultShadowEnabledProperty;
end;

// Factories for : "FlyoutPresenter"
// Factory: "Microsoft.UI.Xaml.Controls.IFlyoutPresenterFactory"
// -> IFlyoutPresenterFactory

class function TFlyoutPresenter.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IFlyoutPresenter;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TFontIcon }

class function TFontIcon.get_GlyphProperty: IDependencyProperty;
begin
  Result := Statics.get_GlyphProperty;
end;

class function TFontIcon.get_FontSizeProperty: IDependencyProperty;
begin
  Result := Statics.get_FontSizeProperty;
end;

class function TFontIcon.get_FontFamilyProperty: IDependencyProperty;
begin
  Result := Statics.get_FontFamilyProperty;
end;

class function TFontIcon.get_FontWeightProperty: IDependencyProperty;
begin
  Result := Statics.get_FontWeightProperty;
end;

class function TFontIcon.get_FontStyleProperty: IDependencyProperty;
begin
  Result := Statics.get_FontStyleProperty;
end;

class function TFontIcon.get_IsTextScaleFactorEnabledProperty: IDependencyProperty;
begin
  Result := Statics.get_IsTextScaleFactorEnabledProperty;
end;

class function TFontIcon.get_MirroredWhenRightToLeftProperty: IDependencyProperty;
begin
  Result := Statics.get_MirroredWhenRightToLeftProperty;
end;

// Factories for : "FontIcon"
// Factory: "Microsoft.UI.Xaml.Controls.IFontIconFactory"
// -> IFontIconFactory

class function TFontIcon.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IFontIcon;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TFontIconSource }

class function TFontIconSource.get_GlyphProperty: IDependencyProperty;
begin
  Result := Statics.get_GlyphProperty;
end;

class function TFontIconSource.get_FontSizeProperty: IDependencyProperty;
begin
  Result := Statics.get_FontSizeProperty;
end;

class function TFontIconSource.get_FontFamilyProperty: IDependencyProperty;
begin
  Result := Statics.get_FontFamilyProperty;
end;

class function TFontIconSource.get_FontWeightProperty: IDependencyProperty;
begin
  Result := Statics.get_FontWeightProperty;
end;

class function TFontIconSource.get_FontStyleProperty: IDependencyProperty;
begin
  Result := Statics.get_FontStyleProperty;
end;

class function TFontIconSource.get_IsTextScaleFactorEnabledProperty: IDependencyProperty;
begin
  Result := Statics.get_IsTextScaleFactorEnabledProperty;
end;

class function TFontIconSource.get_MirroredWhenRightToLeftProperty: IDependencyProperty;
begin
  Result := Statics.get_MirroredWhenRightToLeftProperty;
end;

// Factories for : "FontIconSource"
// Factory: "Microsoft.UI.Xaml.Controls.IFontIconSourceFactory"
// -> IFontIconSourceFactory

class function TFontIconSource.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IFontIconSource;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TFrame }

class function TFrame.get_CacheSizeProperty: IDependencyProperty;
begin
  Result := Statics.get_CacheSizeProperty;
end;

class function TFrame.get_CanGoBackProperty: IDependencyProperty;
begin
  Result := Statics.get_CanGoBackProperty;
end;

class function TFrame.get_CanGoForwardProperty: IDependencyProperty;
begin
  Result := Statics.get_CanGoForwardProperty;
end;

class function TFrame.get_CurrentSourcePageTypeProperty: IDependencyProperty;
begin
  Result := Statics.get_CurrentSourcePageTypeProperty;
end;

class function TFrame.get_SourcePageTypeProperty: IDependencyProperty;
begin
  Result := Statics.get_SourcePageTypeProperty;
end;

class function TFrame.get_BackStackDepthProperty: IDependencyProperty;
begin
  Result := Statics.get_BackStackDepthProperty;
end;

class function TFrame.get_BackStackProperty: IDependencyProperty;
begin
  Result := Statics.get_BackStackProperty;
end;

class function TFrame.get_ForwardStackProperty: IDependencyProperty;
begin
  Result := Statics.get_ForwardStackProperty;
end;

class function TFrame.get_IsNavigationStackEnabledProperty: IDependencyProperty;
begin
  Result := Statics.get_IsNavigationStackEnabledProperty;
end;

// Factories for : "Frame"
// Factory: "Microsoft.UI.Xaml.Controls.IFrameFactory"
// -> IFrameFactory

class function TFrame.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IFrame;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TGrid }

class function TGrid.get_BackgroundSizingProperty: IDependencyProperty;
begin
  Result := Statics.get_BackgroundSizingProperty;
end;

class function TGrid.get_BorderBrushProperty: IDependencyProperty;
begin
  Result := Statics.get_BorderBrushProperty;
end;

class function TGrid.get_BorderThicknessProperty: IDependencyProperty;
begin
  Result := Statics.get_BorderThicknessProperty;
end;

class function TGrid.get_CornerRadiusProperty: IDependencyProperty;
begin
  Result := Statics.get_CornerRadiusProperty;
end;

class function TGrid.get_PaddingProperty: IDependencyProperty;
begin
  Result := Statics.get_PaddingProperty;
end;

class function TGrid.get_RowSpacingProperty: IDependencyProperty;
begin
  Result := Statics.get_RowSpacingProperty;
end;

class function TGrid.get_ColumnSpacingProperty: IDependencyProperty;
begin
  Result := Statics.get_ColumnSpacingProperty;
end;

class function TGrid.get_RowProperty: IDependencyProperty;
begin
  Result := Statics.get_RowProperty;
end;

class function TGrid.GetRow(element: IFrameworkElement): Integer;
begin
  Result := Statics.GetRow(element);
end;

class procedure TGrid.SetRow(element: IFrameworkElement; value: Integer);
begin
  Statics.SetRow(element, value);
end;

class function TGrid.get_ColumnProperty: IDependencyProperty;
begin
  Result := Statics.get_ColumnProperty;
end;

class function TGrid.GetColumn(element: IFrameworkElement): Integer;
begin
  Result := Statics.GetColumn(element);
end;

class procedure TGrid.SetColumn(element: IFrameworkElement; value: Integer);
begin
  Statics.SetColumn(element, value);
end;

class function TGrid.get_RowSpanProperty: IDependencyProperty;
begin
  Result := Statics.get_RowSpanProperty;
end;

class function TGrid.GetRowSpan(element: IFrameworkElement): Integer;
begin
  Result := Statics.GetRowSpan(element);
end;

class procedure TGrid.SetRowSpan(element: IFrameworkElement; value: Integer);
begin
  Statics.SetRowSpan(element, value);
end;

class function TGrid.get_ColumnSpanProperty: IDependencyProperty;
begin
  Result := Statics.get_ColumnSpanProperty;
end;

class function TGrid.GetColumnSpan(element: IFrameworkElement): Integer;
begin
  Result := Statics.GetColumnSpan(element);
end;

class procedure TGrid.SetColumnSpan(element: IFrameworkElement; value: Integer);
begin
  Statics.SetColumnSpan(element, value);
end;

// Factories for : "Grid"
// Factory: "Microsoft.UI.Xaml.Controls.IGridFactory"
// -> IGridFactory

class function TGrid.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IGrid;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TListViewBase }

class function TListViewBase.get_SelectionModeProperty: IDependencyProperty;
begin
  Result := Statics.get_SelectionModeProperty;
end;

class function TListViewBase.get_IsSwipeEnabledProperty: IDependencyProperty;
begin
  Result := Statics.get_IsSwipeEnabledProperty;
end;

class function TListViewBase.get_CanDragItemsProperty: IDependencyProperty;
begin
  Result := Statics.get_CanDragItemsProperty;
end;

class function TListViewBase.get_CanReorderItemsProperty: IDependencyProperty;
begin
  Result := Statics.get_CanReorderItemsProperty;
end;

class function TListViewBase.get_IsItemClickEnabledProperty: IDependencyProperty;
begin
  Result := Statics.get_IsItemClickEnabledProperty;
end;

class function TListViewBase.get_DataFetchSizeProperty: IDependencyProperty;
begin
  Result := Statics.get_DataFetchSizeProperty;
end;

class function TListViewBase.get_IncrementalLoadingThresholdProperty: IDependencyProperty;
begin
  Result := Statics.get_IncrementalLoadingThresholdProperty;
end;

class function TListViewBase.get_IncrementalLoadingTriggerProperty: IDependencyProperty;
begin
  Result := Statics.get_IncrementalLoadingTriggerProperty;
end;

class function TListViewBase.get_ShowsScrollingPlaceholdersProperty: IDependencyProperty;
begin
  Result := Statics.get_ShowsScrollingPlaceholdersProperty;
end;

class function TListViewBase.get_ReorderModeProperty: IDependencyProperty;
begin
  Result := Statics.get_ReorderModeProperty;
end;

class function TListViewBase.get_IsMultiSelectCheckBoxEnabledProperty: IDependencyProperty;
begin
  Result := Statics.get_IsMultiSelectCheckBoxEnabledProperty;
end;

class function TListViewBase.get_SingleSelectionFollowsFocusProperty: IDependencyProperty;
begin
  Result := Statics.get_SingleSelectionFollowsFocusProperty;
end;

class function TListViewBase.get_SemanticZoomOwnerProperty: IDependencyProperty;
begin
  Result := Statics.get_SemanticZoomOwnerProperty;
end;

class function TListViewBase.get_IsActiveViewProperty: IDependencyProperty;
begin
  Result := Statics.get_IsActiveViewProperty;
end;

class function TListViewBase.get_IsZoomedInViewProperty: IDependencyProperty;
begin
  Result := Statics.get_IsZoomedInViewProperty;
end;

class function TListViewBase.get_HeaderProperty: IDependencyProperty;
begin
  Result := Statics.get_HeaderProperty;
end;

class function TListViewBase.get_HeaderTemplateProperty: IDependencyProperty;
begin
  Result := Statics.get_HeaderTemplateProperty;
end;

class function TListViewBase.get_HeaderTransitionsProperty: IDependencyProperty;
begin
  Result := Statics.get_HeaderTransitionsProperty;
end;

class function TListViewBase.get_FooterProperty: IDependencyProperty;
begin
  Result := Statics.get_FooterProperty;
end;

class function TListViewBase.get_FooterTemplateProperty: IDependencyProperty;
begin
  Result := Statics.get_FooterTemplateProperty;
end;

class function TListViewBase.get_FooterTransitionsProperty: IDependencyProperty;
begin
  Result := Statics.get_FooterTransitionsProperty;
end;

// Factories for : "ListViewBase"
// Factory: "Microsoft.UI.Xaml.Controls.IListViewBaseFactory"
// -> IListViewBaseFactory

class function TListViewBase.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IListViewBase;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TGridView }
// Factories for : "GridView"
// Factory: "Microsoft.UI.Xaml.Controls.IGridViewFactory"
// -> IGridViewFactory

class function TGridView.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IGridView;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TListViewBaseHeaderItem }
// Factories for : "ListViewBaseHeaderItem"
// Factory: "Microsoft.UI.Xaml.Controls.IListViewBaseHeaderItemFactory"
// -> IListViewBaseHeaderItemFactory


{ TGridViewHeaderItem }
// Factories for : "GridViewHeaderItem"
// Factory: "Microsoft.UI.Xaml.Controls.IGridViewHeaderItemFactory"
// -> IGridViewHeaderItemFactory

class function TGridViewHeaderItem.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IGridViewHeaderItem;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TGridViewItem }
// Factories for : "GridViewItem"
// Factory: "Microsoft.UI.Xaml.Controls.IGridViewItemFactory"
// -> IGridViewItemFactory

class function TGridViewItem.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IGridViewItem;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TGroupItem }
// Factories for : "GroupItem"
// Factory: "Microsoft.UI.Xaml.Controls.IGroupItemFactory"
// -> IGroupItemFactory

class function TGroupItem.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IGroupItem;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TGroupStyle }
// Factories for : "GroupStyle"
// Factory: "Microsoft.UI.Xaml.Controls.IGroupStyleFactory"
// -> IGroupStyleFactory

class function TGroupStyle.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IGroupStyle;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TGroupStyleSelector }
// Factories for : "GroupStyleSelector"
// Factory: "Microsoft.UI.Xaml.Controls.IGroupStyleSelectorFactory"
// -> IGroupStyleSelectorFactory

class function TGroupStyleSelector.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IGroupStyleSelector;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ THub }

class function THub.get_HeaderProperty: IDependencyProperty;
begin
  Result := Statics.get_HeaderProperty;
end;

class function THub.get_HeaderTemplateProperty: IDependencyProperty;
begin
  Result := Statics.get_HeaderTemplateProperty;
end;

class function THub.get_OrientationProperty: IDependencyProperty;
begin
  Result := Statics.get_OrientationProperty;
end;

class function THub.get_DefaultSectionIndexProperty: IDependencyProperty;
begin
  Result := Statics.get_DefaultSectionIndexProperty;
end;

class function THub.get_SemanticZoomOwnerProperty: IDependencyProperty;
begin
  Result := Statics.get_SemanticZoomOwnerProperty;
end;

class function THub.get_IsActiveViewProperty: IDependencyProperty;
begin
  Result := Statics.get_IsActiveViewProperty;
end;

class function THub.get_IsZoomedInViewProperty: IDependencyProperty;
begin
  Result := Statics.get_IsZoomedInViewProperty;
end;

// Factories for : "Hub"
// Factory: "Microsoft.UI.Xaml.Controls.IHubFactory"
// -> IHubFactory

class function THub.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IHub;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ THubSection }

class function THubSection.get_HeaderProperty: IDependencyProperty;
begin
  Result := Statics.get_HeaderProperty;
end;

class function THubSection.get_HeaderTemplateProperty: IDependencyProperty;
begin
  Result := Statics.get_HeaderTemplateProperty;
end;

class function THubSection.get_ContentTemplateProperty: IDependencyProperty;
begin
  Result := Statics.get_ContentTemplateProperty;
end;

class function THubSection.get_IsHeaderInteractiveProperty: IDependencyProperty;
begin
  Result := Statics.get_IsHeaderInteractiveProperty;
end;

// Factories for : "HubSection"
// Factory: "Microsoft.UI.Xaml.Controls.IHubSectionFactory"
// -> IHubSectionFactory

class function THubSection.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IHubSection;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ THubSectionHeaderClickEventArgs }

{ THyperlinkButton }

class function THyperlinkButton.get_NavigateUriProperty: IDependencyProperty;
begin
  Result := Statics.get_NavigateUriProperty;
end;

// Factories for : "HyperlinkButton"
// Factory: "Microsoft.UI.Xaml.Controls.IHyperlinkButtonFactory"
// -> IHyperlinkButtonFactory

class function THyperlinkButton.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IHyperlinkButton;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TIconSourceElement }

class function TIconSourceElement.get_IconSourceProperty: IDependencyProperty;
begin
  Result := Statics.get_IconSourceProperty;
end;

// Factories for : "IconSourceElement"
// Factory: "Microsoft.UI.Xaml.Controls.IIconSourceElementFactory"
// -> IIconSourceElementFactory

class function TIconSourceElement.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IIconSourceElement;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TImage }

class function TImage.get_SourceProperty: IDependencyProperty;
begin
  Result := Statics.get_SourceProperty;
end;

class function TImage.get_StretchProperty: IDependencyProperty;
begin
  Result := Statics.get_StretchProperty;
end;

class function TImage.get_NineGridProperty: IDependencyProperty;
begin
  Result := Statics.get_NineGridProperty;
end;


{ TImageIcon }

class function TImageIcon.get_SourceProperty: IDependencyProperty;
begin
  Result := Statics.get_SourceProperty;
end;

// Factories for : "ImageIcon"
// Factory: "Microsoft.UI.Xaml.Controls.IImageIconFactory"
// -> IImageIconFactory

class function TImageIcon.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IImageIcon;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TImageIconSource }

class function TImageIconSource.get_ImageSourceProperty: IDependencyProperty;
begin
  Result := Statics.get_ImageSourceProperty;
end;

// Factories for : "ImageIconSource"
// Factory: "Microsoft.UI.Xaml.Controls.IImageIconSourceFactory"
// -> IImageIconSourceFactory

class function TImageIconSource.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IImageIconSource;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TInfoBadge }

class function TInfoBadge.get_ValueProperty: IDependencyProperty;
begin
  Result := Statics.get_ValueProperty;
end;

class function TInfoBadge.get_IconSourceProperty: IDependencyProperty;
begin
  Result := Statics.get_IconSourceProperty;
end;

class function TInfoBadge.get_TemplateSettingsProperty: IDependencyProperty;
begin
  Result := Statics.get_TemplateSettingsProperty;
end;

// Factories for : "InfoBadge"
// Factory: "Microsoft.UI.Xaml.Controls.IInfoBadgeFactory"
// -> IInfoBadgeFactory

class function TInfoBadge.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IInfoBadge;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TInfoBadgeTemplateSettings }

class function TInfoBadgeTemplateSettings.get_InfoBadgeCornerRadiusProperty: IDependencyProperty;
begin
  Result := Statics.get_InfoBadgeCornerRadiusProperty;
end;

class function TInfoBadgeTemplateSettings.get_IconElementProperty: IDependencyProperty;
begin
  Result := Statics.get_IconElementProperty;
end;

// Factories for : "InfoBadgeTemplateSettings"
// Factory: "Microsoft.UI.Xaml.Controls.IInfoBadgeTemplateSettingsFactory"
// -> IInfoBadgeTemplateSettingsFactory

class function TInfoBadgeTemplateSettings.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IInfoBadgeTemplateSettings;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TInfoBar }

class function TInfoBar.get_IsOpenProperty: IDependencyProperty;
begin
  Result := Statics.get_IsOpenProperty;
end;

class function TInfoBar.get_TitleProperty: IDependencyProperty;
begin
  Result := Statics.get_TitleProperty;
end;

class function TInfoBar.get_MessageProperty: IDependencyProperty;
begin
  Result := Statics.get_MessageProperty;
end;

class function TInfoBar.get_SeverityProperty: IDependencyProperty;
begin
  Result := Statics.get_SeverityProperty;
end;

class function TInfoBar.get_IconSourceProperty: IDependencyProperty;
begin
  Result := Statics.get_IconSourceProperty;
end;

class function TInfoBar.get_IsIconVisibleProperty: IDependencyProperty;
begin
  Result := Statics.get_IsIconVisibleProperty;
end;

class function TInfoBar.get_IsClosableProperty: IDependencyProperty;
begin
  Result := Statics.get_IsClosableProperty;
end;

class function TInfoBar.get_CloseButtonStyleProperty: IDependencyProperty;
begin
  Result := Statics.get_CloseButtonStyleProperty;
end;

class function TInfoBar.get_CloseButtonCommandProperty: IDependencyProperty;
begin
  Result := Statics.get_CloseButtonCommandProperty;
end;

class function TInfoBar.get_CloseButtonCommandParameterProperty: IDependencyProperty;
begin
  Result := Statics.get_CloseButtonCommandParameterProperty;
end;

class function TInfoBar.get_ActionButtonProperty: IDependencyProperty;
begin
  Result := Statics.get_ActionButtonProperty;
end;

class function TInfoBar.get_ContentProperty: IDependencyProperty;
begin
  Result := Statics.get_ContentProperty;
end;

class function TInfoBar.get_ContentTemplateProperty: IDependencyProperty;
begin
  Result := Statics.get_ContentTemplateProperty;
end;

class function TInfoBar.get_TemplateSettingsProperty: IDependencyProperty;
begin
  Result := Statics.get_TemplateSettingsProperty;
end;

// Factories for : "InfoBar"
// Factory: "Microsoft.UI.Xaml.Controls.IInfoBarFactory"
// -> IInfoBarFactory

class function TInfoBar.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IInfoBar;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TInfoBarClosedEventArgs }
// Factories for : "InfoBarClosedEventArgs"
// Factory: "Microsoft.UI.Xaml.Controls.IInfoBarClosedEventArgsFactory"
// -> IInfoBarClosedEventArgsFactory


{ TInfoBarClosingEventArgs }
// Factories for : "InfoBarClosingEventArgs"
// Factory: "Microsoft.UI.Xaml.Controls.IInfoBarClosingEventArgsFactory"
// -> IInfoBarClosingEventArgsFactory


{ TInfoBarTemplateSettings }

class function TInfoBarTemplateSettings.get_IconElementProperty: IDependencyProperty;
begin
  Result := Statics.get_IconElementProperty;
end;

// Factories for : "InfoBarTemplateSettings"
// Factory: "Microsoft.UI.Xaml.Controls.IInfoBarTemplateSettingsFactory"
// -> IInfoBarTemplateSettingsFactory

class function TInfoBarTemplateSettings.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IInfoBarTemplateSettings;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TItemClickEventArgs }

{ TItemsPanelTemplate }

{ TItemsPickedEventArgs }

{ TItemsPresenter }

class function TItemsPresenter.get_HeaderProperty: IDependencyProperty;
begin
  Result := Statics.get_HeaderProperty;
end;

class function TItemsPresenter.get_HeaderTemplateProperty: IDependencyProperty;
begin
  Result := Statics.get_HeaderTemplateProperty;
end;

class function TItemsPresenter.get_HeaderTransitionsProperty: IDependencyProperty;
begin
  Result := Statics.get_HeaderTransitionsProperty;
end;

class function TItemsPresenter.get_FooterProperty: IDependencyProperty;
begin
  Result := Statics.get_FooterProperty;
end;

class function TItemsPresenter.get_FooterTemplateProperty: IDependencyProperty;
begin
  Result := Statics.get_FooterTemplateProperty;
end;

class function TItemsPresenter.get_FooterTransitionsProperty: IDependencyProperty;
begin
  Result := Statics.get_FooterTransitionsProperty;
end;

class function TItemsPresenter.get_PaddingProperty: IDependencyProperty;
begin
  Result := Statics.get_PaddingProperty;
end;


{ TItemsRepeater }

class function TItemsRepeater.get_ItemsSourceProperty: IDependencyProperty;
begin
  Result := Statics.get_ItemsSourceProperty;
end;

class function TItemsRepeater.get_ItemTemplateProperty: IDependencyProperty;
begin
  Result := Statics.get_ItemTemplateProperty;
end;

class function TItemsRepeater.get_LayoutProperty: IDependencyProperty;
begin
  Result := Statics.get_LayoutProperty;
end;

class function TItemsRepeater.get_HorizontalCacheLengthProperty: IDependencyProperty;
begin
  Result := Statics.get_HorizontalCacheLengthProperty;
end;

class function TItemsRepeater.get_VerticalCacheLengthProperty: IDependencyProperty;
begin
  Result := Statics.get_VerticalCacheLengthProperty;
end;

class function TItemsRepeater.get_BackgroundProperty: IDependencyProperty;
begin
  Result := Statics.get_BackgroundProperty;
end;

// Factories for : "ItemsRepeater"
// Factory: "Microsoft.UI.Xaml.Controls.IItemsRepeaterFactory"
// -> IItemsRepeaterFactory

class function TItemsRepeater.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IItemsRepeater;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TItemsRepeaterScrollHost }

{ TItemsSourceView }
// Factories for : "ItemsSourceView"
// Factory: "Microsoft.UI.Xaml.Controls.IItemsSourceViewFactory"
// -> IItemsSourceViewFactory

class function TItemsSourceView.CreateInstance(source: IInspectable; baseInterface: IInspectable; out innerInterface: IInspectable): IItemsSourceView;
begin
  Result := Factory.CreateInstance(source, baseInterface, innerInterface);
end;


{ TItemsStackPanel }

class function TItemsStackPanel.get_GroupPaddingProperty: IDependencyProperty;
begin
  Result := Statics.get_GroupPaddingProperty;
end;

class function TItemsStackPanel.get_OrientationProperty: IDependencyProperty;
begin
  Result := Statics.get_OrientationProperty;
end;

class function TItemsStackPanel.get_GroupHeaderPlacementProperty: IDependencyProperty;
begin
  Result := Statics.get_GroupHeaderPlacementProperty;
end;

class function TItemsStackPanel.get_CacheLengthProperty: IDependencyProperty;
begin
  Result := Statics.get_CacheLengthProperty;
end;

class function TItemsStackPanel.get_AreStickyGroupHeadersEnabledProperty: IDependencyProperty;
begin
  Result := Statics.get_AreStickyGroupHeadersEnabledProperty;
end;


{ TItemsWrapGrid }

class function TItemsWrapGrid.get_GroupPaddingProperty: IDependencyProperty;
begin
  Result := Statics.get_GroupPaddingProperty;
end;

class function TItemsWrapGrid.get_OrientationProperty: IDependencyProperty;
begin
  Result := Statics.get_OrientationProperty;
end;

class function TItemsWrapGrid.get_MaximumRowsOrColumnsProperty: IDependencyProperty;
begin
  Result := Statics.get_MaximumRowsOrColumnsProperty;
end;

class function TItemsWrapGrid.get_ItemWidthProperty: IDependencyProperty;
begin
  Result := Statics.get_ItemWidthProperty;
end;

class function TItemsWrapGrid.get_ItemHeightProperty: IDependencyProperty;
begin
  Result := Statics.get_ItemHeightProperty;
end;

class function TItemsWrapGrid.get_GroupHeaderPlacementProperty: IDependencyProperty;
begin
  Result := Statics.get_GroupHeaderPlacementProperty;
end;

class function TItemsWrapGrid.get_CacheLengthProperty: IDependencyProperty;
begin
  Result := Statics.get_CacheLengthProperty;
end;

class function TItemsWrapGrid.get_AreStickyGroupHeadersEnabledProperty: IDependencyProperty;
begin
  Result := Statics.get_AreStickyGroupHeadersEnabledProperty;
end;


{ TLayout }
// Factories for : "Layout"
// Factory: "Microsoft.UI.Xaml.Controls.ILayoutFactory"
// -> ILayoutFactory


{ TLayoutContext }
// Factories for : "LayoutContext"
// Factory: "Microsoft.UI.Xaml.Controls.ILayoutContextFactory"
// -> ILayoutContextFactory


{ TListBox }

class function TListBox.get_SelectionModeProperty: IDependencyProperty;
begin
  Result := Statics.get_SelectionModeProperty;
end;

class function TListBox.get_SingleSelectionFollowsFocusProperty: IDependencyProperty;
begin
  Result := Statics.get_SingleSelectionFollowsFocusProperty;
end;

// Factories for : "ListBox"
// Factory: "Microsoft.UI.Xaml.Controls.IListBoxFactory"
// -> IListBoxFactory

class function TListBox.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IListBox;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TListBoxItem }
// Factories for : "ListBoxItem"
// Factory: "Microsoft.UI.Xaml.Controls.IListBoxItemFactory"
// -> IListBoxItemFactory

class function TListBoxItem.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IListBoxItem;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TListPickerFlyout }

class function TListPickerFlyout.get_ItemsSourceProperty: IDependencyProperty;
begin
  Result := Statics.get_ItemsSourceProperty;
end;

class function TListPickerFlyout.get_ItemTemplateProperty: IDependencyProperty;
begin
  Result := Statics.get_ItemTemplateProperty;
end;

class function TListPickerFlyout.get_DisplayMemberPathProperty: IDependencyProperty;
begin
  Result := Statics.get_DisplayMemberPathProperty;
end;

class function TListPickerFlyout.get_SelectionModeProperty: IDependencyProperty;
begin
  Result := Statics.get_SelectionModeProperty;
end;

class function TListPickerFlyout.get_SelectedIndexProperty: IDependencyProperty;
begin
  Result := Statics.get_SelectedIndexProperty;
end;

class function TListPickerFlyout.get_SelectedItemProperty: IDependencyProperty;
begin
  Result := Statics.get_SelectedItemProperty;
end;

class function TListPickerFlyout.get_SelectedValueProperty: IDependencyProperty;
begin
  Result := Statics.get_SelectedValueProperty;
end;

class function TListPickerFlyout.get_SelectedValuePathProperty: IDependencyProperty;
begin
  Result := Statics.get_SelectedValuePathProperty;
end;


{ TListView }
// Factories for : "ListView"
// Factory: "Microsoft.UI.Xaml.Controls.IListViewFactory"
// -> IListViewFactory

class function TListView.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IListView;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TListViewHeaderItem }
// Factories for : "ListViewHeaderItem"
// Factory: "Microsoft.UI.Xaml.Controls.IListViewHeaderItemFactory"
// -> IListViewHeaderItemFactory

class function TListViewHeaderItem.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IListViewHeaderItem;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TListViewItem }
// Factories for : "ListViewItem"
// Factory: "Microsoft.UI.Xaml.Controls.IListViewItemFactory"
// -> IListViewItemFactory

class function TListViewItem.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IListViewItem;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TListViewPersistenceHelper }

class function TListViewPersistenceHelper.GetRelativeScrollPosition(listViewBase: IListViewBase; itemToKeyHandler: ListViewItemToKeyHandler): HSTRING;
begin
  Result := Statics.GetRelativeScrollPosition(listViewBase, itemToKeyHandler);
end;

class function TListViewPersistenceHelper.SetRelativeScrollPositionAsync(listViewBase: IListViewBase; relativeScrollPosition: HSTRING; keyToItemHandler: ListViewKeyToItemHandler): IAsyncAction;
begin
  Result := Statics.SetRelativeScrollPositionAsync(listViewBase, relativeScrollPosition, keyToItemHandler);
end;


{ TMediaPlayerElement }

class function TMediaPlayerElement.get_SourceProperty: IDependencyProperty;
begin
  Result := Statics.get_SourceProperty;
end;

class function TMediaPlayerElement.get_AreTransportControlsEnabledProperty: IDependencyProperty;
begin
  Result := Statics.get_AreTransportControlsEnabledProperty;
end;

class function TMediaPlayerElement.get_PosterSourceProperty: IDependencyProperty;
begin
  Result := Statics.get_PosterSourceProperty;
end;

class function TMediaPlayerElement.get_StretchProperty: IDependencyProperty;
begin
  Result := Statics.get_StretchProperty;
end;

class function TMediaPlayerElement.get_AutoPlayProperty: IDependencyProperty;
begin
  Result := Statics.get_AutoPlayProperty;
end;

class function TMediaPlayerElement.get_IsFullWindowProperty: IDependencyProperty;
begin
  Result := Statics.get_IsFullWindowProperty;
end;

class function TMediaPlayerElement.get_MediaPlayerProperty: IDependencyProperty;
begin
  Result := Statics.get_MediaPlayerProperty;
end;

// Factories for : "MediaPlayerElement"
// Factory: "Microsoft.UI.Xaml.Controls.IMediaPlayerElementFactory"
// -> IMediaPlayerElementFactory

class function TMediaPlayerElement.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IMediaPlayerElement;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TMediaPlayerPresenter }

class function TMediaPlayerPresenter.get_MediaPlayerProperty: IDependencyProperty;
begin
  Result := Statics.get_MediaPlayerProperty;
end;

class function TMediaPlayerPresenter.get_StretchProperty: IDependencyProperty;
begin
  Result := Statics.get_StretchProperty;
end;

class function TMediaPlayerPresenter.get_IsFullWindowProperty: IDependencyProperty;
begin
  Result := Statics.get_IsFullWindowProperty;
end;

// Factories for : "MediaPlayerPresenter"
// Factory: "Microsoft.UI.Xaml.Controls.IMediaPlayerPresenterFactory"
// -> IMediaPlayerPresenterFactory

class function TMediaPlayerPresenter.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IMediaPlayerPresenter;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TMediaTransportControls }

class function TMediaTransportControls.get_IsZoomButtonVisibleProperty: IDependencyProperty;
begin
  Result := Statics.get_IsZoomButtonVisibleProperty;
end;

class function TMediaTransportControls.get_IsZoomEnabledProperty: IDependencyProperty;
begin
  Result := Statics.get_IsZoomEnabledProperty;
end;

class function TMediaTransportControls.get_IsFastForwardButtonVisibleProperty: IDependencyProperty;
begin
  Result := Statics.get_IsFastForwardButtonVisibleProperty;
end;

class function TMediaTransportControls.get_IsFastForwardEnabledProperty: IDependencyProperty;
begin
  Result := Statics.get_IsFastForwardEnabledProperty;
end;

class function TMediaTransportControls.get_IsFastRewindButtonVisibleProperty: IDependencyProperty;
begin
  Result := Statics.get_IsFastRewindButtonVisibleProperty;
end;

class function TMediaTransportControls.get_IsFastRewindEnabledProperty: IDependencyProperty;
begin
  Result := Statics.get_IsFastRewindEnabledProperty;
end;

class function TMediaTransportControls.get_IsStopButtonVisibleProperty: IDependencyProperty;
begin
  Result := Statics.get_IsStopButtonVisibleProperty;
end;

class function TMediaTransportControls.get_IsStopEnabledProperty: IDependencyProperty;
begin
  Result := Statics.get_IsStopEnabledProperty;
end;

class function TMediaTransportControls.get_IsVolumeButtonVisibleProperty: IDependencyProperty;
begin
  Result := Statics.get_IsVolumeButtonVisibleProperty;
end;

class function TMediaTransportControls.get_IsVolumeEnabledProperty: IDependencyProperty;
begin
  Result := Statics.get_IsVolumeEnabledProperty;
end;

class function TMediaTransportControls.get_IsPlaybackRateButtonVisibleProperty: IDependencyProperty;
begin
  Result := Statics.get_IsPlaybackRateButtonVisibleProperty;
end;

class function TMediaTransportControls.get_IsPlaybackRateEnabledProperty: IDependencyProperty;
begin
  Result := Statics.get_IsPlaybackRateEnabledProperty;
end;

class function TMediaTransportControls.get_IsSeekBarVisibleProperty: IDependencyProperty;
begin
  Result := Statics.get_IsSeekBarVisibleProperty;
end;

class function TMediaTransportControls.get_IsSeekEnabledProperty: IDependencyProperty;
begin
  Result := Statics.get_IsSeekEnabledProperty;
end;

class function TMediaTransportControls.get_IsCompactProperty: IDependencyProperty;
begin
  Result := Statics.get_IsCompactProperty;
end;

class function TMediaTransportControls.get_IsSkipForwardButtonVisibleProperty: IDependencyProperty;
begin
  Result := Statics.get_IsSkipForwardButtonVisibleProperty;
end;

class function TMediaTransportControls.get_IsSkipForwardEnabledProperty: IDependencyProperty;
begin
  Result := Statics.get_IsSkipForwardEnabledProperty;
end;

class function TMediaTransportControls.get_IsSkipBackwardButtonVisibleProperty: IDependencyProperty;
begin
  Result := Statics.get_IsSkipBackwardButtonVisibleProperty;
end;

class function TMediaTransportControls.get_IsSkipBackwardEnabledProperty: IDependencyProperty;
begin
  Result := Statics.get_IsSkipBackwardEnabledProperty;
end;

class function TMediaTransportControls.get_IsNextTrackButtonVisibleProperty: IDependencyProperty;
begin
  Result := Statics.get_IsNextTrackButtonVisibleProperty;
end;

class function TMediaTransportControls.get_IsPreviousTrackButtonVisibleProperty: IDependencyProperty;
begin
  Result := Statics.get_IsPreviousTrackButtonVisibleProperty;
end;

class function TMediaTransportControls.get_FastPlayFallbackBehaviourProperty: IDependencyProperty;
begin
  Result := Statics.get_FastPlayFallbackBehaviourProperty;
end;

class function TMediaTransportControls.get_ShowAndHideAutomaticallyProperty: IDependencyProperty;
begin
  Result := Statics.get_ShowAndHideAutomaticallyProperty;
end;

class function TMediaTransportControls.get_IsRepeatEnabledProperty: IDependencyProperty;
begin
  Result := Statics.get_IsRepeatEnabledProperty;
end;

class function TMediaTransportControls.get_IsRepeatButtonVisibleProperty: IDependencyProperty;
begin
  Result := Statics.get_IsRepeatButtonVisibleProperty;
end;

// Factories for : "MediaTransportControls"
// Factory: "Microsoft.UI.Xaml.Controls.IMediaTransportControlsFactory"
// -> IMediaTransportControlsFactory

class function TMediaTransportControls.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IMediaTransportControls;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TMediaTransportControlsHelper }

class function TMediaTransportControlsHelper.get_DropoutOrderProperty: IDependencyProperty;
begin
  Result := Statics.get_DropoutOrderProperty;
end;

class function TMediaTransportControlsHelper.GetDropoutOrder(element: IUIElement): IReference_1__Integer;
begin
  Result := Statics.GetDropoutOrder(element);
end;

class procedure TMediaTransportControlsHelper.SetDropoutOrder(element: IUIElement; value: IReference_1__Integer);
begin
  Statics.SetDropoutOrder(element, value);
end;


{ TMenuBar }

class function TMenuBar.get_ItemsProperty: IDependencyProperty;
begin
  Result := Statics.get_ItemsProperty;
end;

// Factories for : "MenuBar"
// Factory: "Microsoft.UI.Xaml.Controls.IMenuBarFactory"
// -> IMenuBarFactory

class function TMenuBar.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IMenuBar;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TMenuBarItem }

class function TMenuBarItem.get_TitleProperty: IDependencyProperty;
begin
  Result := Statics.get_TitleProperty;
end;

class function TMenuBarItem.get_ItemsProperty: IDependencyProperty;
begin
  Result := Statics.get_ItemsProperty;
end;

// Factories for : "MenuBarItem"
// Factory: "Microsoft.UI.Xaml.Controls.IMenuBarItemFactory"
// -> IMenuBarItemFactory

class function TMenuBarItem.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IMenuBarItem;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TMenuFlyout }

class function TMenuFlyout.get_MenuFlyoutPresenterStyleProperty: IDependencyProperty;
begin
  Result := Statics.get_MenuFlyoutPresenterStyleProperty;
end;

// Factories for : "MenuFlyout"
// Factory: "Microsoft.UI.Xaml.Controls.IMenuFlyoutFactory"
// -> IMenuFlyoutFactory

class function TMenuFlyout.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IMenuFlyout;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TMenuBarItemFlyout }
// Factories for : "MenuBarItemFlyout"
// Factory: "Microsoft.UI.Xaml.Controls.IMenuBarItemFlyoutFactory"
// -> IMenuBarItemFlyoutFactory

class function TMenuBarItemFlyout.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IMenuBarItemFlyout;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TMenuFlyoutItemBase }
// Factories for : "MenuFlyoutItemBase"
// Factory: "Microsoft.UI.Xaml.Controls.IMenuFlyoutItemBaseFactory"
// -> IMenuFlyoutItemBaseFactory


{ TMenuFlyoutItem }

class function TMenuFlyoutItem.get_TextProperty: IDependencyProperty;
begin
  Result := Statics.get_TextProperty;
end;

class function TMenuFlyoutItem.get_CommandProperty: IDependencyProperty;
begin
  Result := Statics.get_CommandProperty;
end;

class function TMenuFlyoutItem.get_CommandParameterProperty: IDependencyProperty;
begin
  Result := Statics.get_CommandParameterProperty;
end;

class function TMenuFlyoutItem.get_IconProperty: IDependencyProperty;
begin
  Result := Statics.get_IconProperty;
end;

class function TMenuFlyoutItem.get_KeyboardAcceleratorTextOverrideProperty: IDependencyProperty;
begin
  Result := Statics.get_KeyboardAcceleratorTextOverrideProperty;
end;

// Factories for : "MenuFlyoutItem"
// Factory: "Microsoft.UI.Xaml.Controls.IMenuFlyoutItemFactory"
// -> IMenuFlyoutItemFactory

class function TMenuFlyoutItem.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IMenuFlyoutItem;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TMenuFlyoutPresenter }

class function TMenuFlyoutPresenter.get_IsDefaultShadowEnabledProperty: IDependencyProperty;
begin
  Result := Statics.get_IsDefaultShadowEnabledProperty;
end;

// Factories for : "MenuFlyoutPresenter"
// Factory: "Microsoft.UI.Xaml.Controls.IMenuFlyoutPresenterFactory"
// -> IMenuFlyoutPresenterFactory

class function TMenuFlyoutPresenter.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IMenuFlyoutPresenter;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TMenuFlyoutSeparator }
// Factories for : "MenuFlyoutSeparator"
// Factory: "Microsoft.UI.Xaml.Controls.IMenuFlyoutSeparatorFactory"
// -> IMenuFlyoutSeparatorFactory

class function TMenuFlyoutSeparator.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IMenuFlyoutSeparator;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TMenuFlyoutSubItem }

class function TMenuFlyoutSubItem.get_TextProperty: IDependencyProperty;
begin
  Result := Statics.get_TextProperty;
end;

class function TMenuFlyoutSubItem.get_IconProperty: IDependencyProperty;
begin
  Result := Statics.get_IconProperty;
end;


{ TNavigationView }

class function TNavigationView.get_IsPaneOpenProperty: IDependencyProperty;
begin
  Result := Statics.get_IsPaneOpenProperty;
end;

class function TNavigationView.get_CompactModeThresholdWidthProperty: IDependencyProperty;
begin
  Result := Statics.get_CompactModeThresholdWidthProperty;
end;

class function TNavigationView.get_ExpandedModeThresholdWidthProperty: IDependencyProperty;
begin
  Result := Statics.get_ExpandedModeThresholdWidthProperty;
end;

class function TNavigationView.get_FooterMenuItemsProperty: IDependencyProperty;
begin
  Result := Statics.get_FooterMenuItemsProperty;
end;

class function TNavigationView.get_FooterMenuItemsSourceProperty: IDependencyProperty;
begin
  Result := Statics.get_FooterMenuItemsSourceProperty;
end;

class function TNavigationView.get_PaneFooterProperty: IDependencyProperty;
begin
  Result := Statics.get_PaneFooterProperty;
end;

class function TNavigationView.get_HeaderProperty: IDependencyProperty;
begin
  Result := Statics.get_HeaderProperty;
end;

class function TNavigationView.get_HeaderTemplateProperty: IDependencyProperty;
begin
  Result := Statics.get_HeaderTemplateProperty;
end;

class function TNavigationView.get_DisplayModeProperty: IDependencyProperty;
begin
  Result := Statics.get_DisplayModeProperty;
end;

class function TNavigationView.get_IsSettingsVisibleProperty: IDependencyProperty;
begin
  Result := Statics.get_IsSettingsVisibleProperty;
end;

class function TNavigationView.get_IsPaneToggleButtonVisibleProperty: IDependencyProperty;
begin
  Result := Statics.get_IsPaneToggleButtonVisibleProperty;
end;

class function TNavigationView.get_AlwaysShowHeaderProperty: IDependencyProperty;
begin
  Result := Statics.get_AlwaysShowHeaderProperty;
end;

class function TNavigationView.get_CompactPaneLengthProperty: IDependencyProperty;
begin
  Result := Statics.get_CompactPaneLengthProperty;
end;

class function TNavigationView.get_OpenPaneLengthProperty: IDependencyProperty;
begin
  Result := Statics.get_OpenPaneLengthProperty;
end;

class function TNavigationView.get_PaneToggleButtonStyleProperty: IDependencyProperty;
begin
  Result := Statics.get_PaneToggleButtonStyleProperty;
end;

class function TNavigationView.get_MenuItemsProperty: IDependencyProperty;
begin
  Result := Statics.get_MenuItemsProperty;
end;

class function TNavigationView.get_MenuItemsSourceProperty: IDependencyProperty;
begin
  Result := Statics.get_MenuItemsSourceProperty;
end;

class function TNavigationView.get_SelectedItemProperty: IDependencyProperty;
begin
  Result := Statics.get_SelectedItemProperty;
end;

class function TNavigationView.get_SettingsItemProperty: IDependencyProperty;
begin
  Result := Statics.get_SettingsItemProperty;
end;

class function TNavigationView.get_AutoSuggestBoxProperty: IDependencyProperty;
begin
  Result := Statics.get_AutoSuggestBoxProperty;
end;

class function TNavigationView.get_MenuItemTemplateProperty: IDependencyProperty;
begin
  Result := Statics.get_MenuItemTemplateProperty;
end;

class function TNavigationView.get_MenuItemTemplateSelectorProperty: IDependencyProperty;
begin
  Result := Statics.get_MenuItemTemplateSelectorProperty;
end;

class function TNavigationView.get_MenuItemContainerStyleProperty: IDependencyProperty;
begin
  Result := Statics.get_MenuItemContainerStyleProperty;
end;

class function TNavigationView.get_MenuItemContainerStyleSelectorProperty: IDependencyProperty;
begin
  Result := Statics.get_MenuItemContainerStyleSelectorProperty;
end;

class function TNavigationView.get_IsTitleBarAutoPaddingEnabledProperty: IDependencyProperty;
begin
  Result := Statics.get_IsTitleBarAutoPaddingEnabledProperty;
end;


class function TNavigationView.get_IsBackButtonVisibleProperty: IDependencyProperty;
begin
  Result := Statics2.get_IsBackButtonVisibleProperty;
end;

class function TNavigationView.get_IsBackEnabledProperty: IDependencyProperty;
begin
  Result := Statics2.get_IsBackEnabledProperty;
end;

class function TNavigationView.get_PaneTitleProperty: IDependencyProperty;
begin
  Result := Statics2.get_PaneTitleProperty;
end;

class function TNavigationView.get_PaneDisplayModeProperty: IDependencyProperty;
begin
  Result := Statics2.get_PaneDisplayModeProperty;
end;

class function TNavigationView.get_PaneHeaderProperty: IDependencyProperty;
begin
  Result := Statics2.get_PaneHeaderProperty;
end;

class function TNavigationView.get_PaneCustomContentProperty: IDependencyProperty;
begin
  Result := Statics2.get_PaneCustomContentProperty;
end;

class function TNavigationView.get_ContentOverlayProperty: IDependencyProperty;
begin
  Result := Statics2.get_ContentOverlayProperty;
end;

class function TNavigationView.get_IsPaneVisibleProperty: IDependencyProperty;
begin
  Result := Statics2.get_IsPaneVisibleProperty;
end;

class function TNavigationView.get_SelectionFollowsFocusProperty: IDependencyProperty;
begin
  Result := Statics2.get_SelectionFollowsFocusProperty;
end;

class function TNavigationView.get_TemplateSettingsProperty: IDependencyProperty;
begin
  Result := Statics2.get_TemplateSettingsProperty;
end;

class function TNavigationView.get_ShoulderNavigationEnabledProperty: IDependencyProperty;
begin
  Result := Statics2.get_ShoulderNavigationEnabledProperty;
end;

class function TNavigationView.get_OverflowLabelModeProperty: IDependencyProperty;
begin
  Result := Statics2.get_OverflowLabelModeProperty;
end;

// Factories for : "NavigationView"
// Factory: "Microsoft.UI.Xaml.Controls.INavigationViewFactory"
// -> INavigationViewFactory

class function TNavigationView.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): INavigationView;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TNavigationViewItemBase }

class function TNavigationViewItemBase.get_IsSelectedProperty: IDependencyProperty;
begin
  Result := Statics.get_IsSelectedProperty;
end;

// Factories for : "NavigationViewItemBase"
// Factory: "Microsoft.UI.Xaml.Controls.INavigationViewItemBaseFactory"
// -> INavigationViewItemBaseFactory


{ TNavigationViewItem }

class function TNavigationViewItem.get_IconProperty: IDependencyProperty;
begin
  Result := Statics.get_IconProperty;
end;

class function TNavigationViewItem.get_CompactPaneLengthProperty: IDependencyProperty;
begin
  Result := Statics.get_CompactPaneLengthProperty;
end;


class function TNavigationViewItem.get_SelectsOnInvokedProperty: IDependencyProperty;
begin
  Result := Statics2.get_SelectsOnInvokedProperty;
end;

class function TNavigationViewItem.get_IsExpandedProperty: IDependencyProperty;
begin
  Result := Statics2.get_IsExpandedProperty;
end;

class function TNavigationViewItem.get_HasUnrealizedChildrenProperty: IDependencyProperty;
begin
  Result := Statics2.get_HasUnrealizedChildrenProperty;
end;

class function TNavigationViewItem.get_IsChildSelectedProperty: IDependencyProperty;
begin
  Result := Statics2.get_IsChildSelectedProperty;
end;

class function TNavigationViewItem.get_MenuItemsProperty: IDependencyProperty;
begin
  Result := Statics2.get_MenuItemsProperty;
end;

class function TNavigationViewItem.get_MenuItemsSourceProperty: IDependencyProperty;
begin
  Result := Statics2.get_MenuItemsSourceProperty;
end;


class function TNavigationViewItem.get_InfoBadgeProperty: IDependencyProperty;
begin
  Result := Statics3.get_InfoBadgeProperty;
end;

// Factories for : "NavigationViewItem"
// Factory: "Microsoft.UI.Xaml.Controls.INavigationViewItemFactory"
// -> INavigationViewItemFactory

class function TNavigationViewItem.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): INavigationViewItem;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TNavigationViewItemHeader }
// Factories for : "NavigationViewItemHeader"
// Factory: "Microsoft.UI.Xaml.Controls.INavigationViewItemHeaderFactory"
// -> INavigationViewItemHeaderFactory

class function TNavigationViewItemHeader.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): INavigationViewItemHeader;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TNavigationViewItemInvokedEventArgs }

{ TNavigationViewItemSeparator }
// Factories for : "NavigationViewItemSeparator"
// Factory: "Microsoft.UI.Xaml.Controls.INavigationViewItemSeparatorFactory"
// -> INavigationViewItemSeparatorFactory

class function TNavigationViewItemSeparator.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): INavigationViewItemSeparator;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TNavigationViewTemplateSettings }

class function TNavigationViewTemplateSettings.get_TopPaddingProperty: IDependencyProperty;
begin
  Result := Statics.get_TopPaddingProperty;
end;

class function TNavigationViewTemplateSettings.get_OverflowButtonVisibilityProperty: IDependencyProperty;
begin
  Result := Statics.get_OverflowButtonVisibilityProperty;
end;

class function TNavigationViewTemplateSettings.get_PaneToggleButtonVisibilityProperty: IDependencyProperty;
begin
  Result := Statics.get_PaneToggleButtonVisibilityProperty;
end;

class function TNavigationViewTemplateSettings.get_BackButtonVisibilityProperty: IDependencyProperty;
begin
  Result := Statics.get_BackButtonVisibilityProperty;
end;

class function TNavigationViewTemplateSettings.get_TopPaneVisibilityProperty: IDependencyProperty;
begin
  Result := Statics.get_TopPaneVisibilityProperty;
end;

class function TNavigationViewTemplateSettings.get_LeftPaneVisibilityProperty: IDependencyProperty;
begin
  Result := Statics.get_LeftPaneVisibilityProperty;
end;

class function TNavigationViewTemplateSettings.get_SingleSelectionFollowsFocusProperty: IDependencyProperty;
begin
  Result := Statics.get_SingleSelectionFollowsFocusProperty;
end;

class function TNavigationViewTemplateSettings.get_PaneToggleButtonWidthProperty: IDependencyProperty;
begin
  Result := Statics.get_PaneToggleButtonWidthProperty;
end;

class function TNavigationViewTemplateSettings.get_SmallerPaneToggleButtonWidthProperty: IDependencyProperty;
begin
  Result := Statics.get_SmallerPaneToggleButtonWidthProperty;
end;


class function TNavigationViewTemplateSettings.get_OpenPaneLengthProperty: IDependencyProperty;
begin
  Result := Statics2.get_OpenPaneLengthProperty;
end;

// Factories for : "NavigationViewTemplateSettings"
// Factory: "Microsoft.UI.Xaml.Controls.INavigationViewTemplateSettingsFactory"
// -> INavigationViewTemplateSettingsFactory

class function TNavigationViewTemplateSettings.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): INavigationViewTemplateSettings;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TNonVirtualizingLayout }
// Factories for : "NonVirtualizingLayout"
// Factory: "Microsoft.UI.Xaml.Controls.INonVirtualizingLayoutFactory"
// -> INonVirtualizingLayoutFactory

class function TNonVirtualizingLayout.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): INonVirtualizingLayout;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TNonVirtualizingLayoutContext }
// Factories for : "NonVirtualizingLayoutContext"
// Factory: "Microsoft.UI.Xaml.Controls.INonVirtualizingLayoutContextFactory"
// -> INonVirtualizingLayoutContextFactory

class function TNonVirtualizingLayoutContext.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): INonVirtualizingLayoutContext;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TNumberBox }

class function TNumberBox.get_MinimumProperty: IDependencyProperty;
begin
  Result := Statics.get_MinimumProperty;
end;

class function TNumberBox.get_MaximumProperty: IDependencyProperty;
begin
  Result := Statics.get_MaximumProperty;
end;

class function TNumberBox.get_ValueProperty: IDependencyProperty;
begin
  Result := Statics.get_ValueProperty;
end;

class function TNumberBox.get_SmallChangeProperty: IDependencyProperty;
begin
  Result := Statics.get_SmallChangeProperty;
end;

class function TNumberBox.get_LargeChangeProperty: IDependencyProperty;
begin
  Result := Statics.get_LargeChangeProperty;
end;

class function TNumberBox.get_TextProperty: IDependencyProperty;
begin
  Result := Statics.get_TextProperty;
end;

class function TNumberBox.get_HeaderProperty: IDependencyProperty;
begin
  Result := Statics.get_HeaderProperty;
end;

class function TNumberBox.get_HeaderTemplateProperty: IDependencyProperty;
begin
  Result := Statics.get_HeaderTemplateProperty;
end;

class function TNumberBox.get_PlaceholderTextProperty: IDependencyProperty;
begin
  Result := Statics.get_PlaceholderTextProperty;
end;

class function TNumberBox.get_SelectionFlyoutProperty: IDependencyProperty;
begin
  Result := Statics.get_SelectionFlyoutProperty;
end;

class function TNumberBox.get_SelectionHighlightColorProperty: IDependencyProperty;
begin
  Result := Statics.get_SelectionHighlightColorProperty;
end;

class function TNumberBox.get_TextReadingOrderProperty: IDependencyProperty;
begin
  Result := Statics.get_TextReadingOrderProperty;
end;

class function TNumberBox.get_PreventKeyboardDisplayOnProgrammaticFocusProperty: IDependencyProperty;
begin
  Result := Statics.get_PreventKeyboardDisplayOnProgrammaticFocusProperty;
end;

class function TNumberBox.get_DescriptionProperty: IDependencyProperty;
begin
  Result := Statics.get_DescriptionProperty;
end;

class function TNumberBox.get_ValidationModeProperty: IDependencyProperty;
begin
  Result := Statics.get_ValidationModeProperty;
end;

class function TNumberBox.get_SpinButtonPlacementModeProperty: IDependencyProperty;
begin
  Result := Statics.get_SpinButtonPlacementModeProperty;
end;

class function TNumberBox.get_IsWrapEnabledProperty: IDependencyProperty;
begin
  Result := Statics.get_IsWrapEnabledProperty;
end;

class function TNumberBox.get_AcceptsExpressionProperty: IDependencyProperty;
begin
  Result := Statics.get_AcceptsExpressionProperty;
end;

class function TNumberBox.get_NumberFormatterProperty: IDependencyProperty;
begin
  Result := Statics.get_NumberFormatterProperty;
end;

// Factories for : "NumberBox"
// Factory: "Microsoft.UI.Xaml.Controls.INumberBoxFactory"
// -> INumberBoxFactory

class function TNumberBox.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): INumberBox;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TUserControl }

class function TUserControl.get_ContentProperty: IDependencyProperty;
begin
  Result := Statics.get_ContentProperty;
end;

// Factories for : "UserControl"
// Factory: "Microsoft.UI.Xaml.Controls.IUserControlFactory"
// -> IUserControlFactory

class function TUserControl.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IUserControl;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TPage }

class function TPage.get_FrameProperty: IDependencyProperty;
begin
  Result := Statics.get_FrameProperty;
end;

class function TPage.get_TopAppBarProperty: IDependencyProperty;
begin
  Result := Statics.get_TopAppBarProperty;
end;

class function TPage.get_BottomAppBarProperty: IDependencyProperty;
begin
  Result := Statics.get_BottomAppBarProperty;
end;

// Factories for : "Page"
// Factory: "Microsoft.UI.Xaml.Controls.IPageFactory"
// -> IPageFactory

class function TPage.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IPage;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TParallaxView }

class function TParallaxView.get_ChildProperty: IDependencyProperty;
begin
  Result := Statics.get_ChildProperty;
end;

class function TParallaxView.get_HorizontalSourceEndOffsetProperty: IDependencyProperty;
begin
  Result := Statics.get_HorizontalSourceEndOffsetProperty;
end;

class function TParallaxView.get_HorizontalSourceOffsetKindProperty: IDependencyProperty;
begin
  Result := Statics.get_HorizontalSourceOffsetKindProperty;
end;

class function TParallaxView.get_HorizontalSourceStartOffsetProperty: IDependencyProperty;
begin
  Result := Statics.get_HorizontalSourceStartOffsetProperty;
end;

class function TParallaxView.get_MaxHorizontalShiftRatioProperty: IDependencyProperty;
begin
  Result := Statics.get_MaxHorizontalShiftRatioProperty;
end;

class function TParallaxView.get_HorizontalShiftProperty: IDependencyProperty;
begin
  Result := Statics.get_HorizontalShiftProperty;
end;

class function TParallaxView.get_IsHorizontalShiftClampedProperty: IDependencyProperty;
begin
  Result := Statics.get_IsHorizontalShiftClampedProperty;
end;

class function TParallaxView.get_IsVerticalShiftClampedProperty: IDependencyProperty;
begin
  Result := Statics.get_IsVerticalShiftClampedProperty;
end;

class function TParallaxView.get_SourceProperty: IDependencyProperty;
begin
  Result := Statics.get_SourceProperty;
end;

class function TParallaxView.get_VerticalSourceEndOffsetProperty: IDependencyProperty;
begin
  Result := Statics.get_VerticalSourceEndOffsetProperty;
end;

class function TParallaxView.get_VerticalSourceOffsetKindProperty: IDependencyProperty;
begin
  Result := Statics.get_VerticalSourceOffsetKindProperty;
end;

class function TParallaxView.get_VerticalSourceStartOffsetProperty: IDependencyProperty;
begin
  Result := Statics.get_VerticalSourceStartOffsetProperty;
end;

class function TParallaxView.get_MaxVerticalShiftRatioProperty: IDependencyProperty;
begin
  Result := Statics.get_MaxVerticalShiftRatioProperty;
end;

class function TParallaxView.get_VerticalShiftProperty: IDependencyProperty;
begin
  Result := Statics.get_VerticalShiftProperty;
end;

// Factories for : "ParallaxView"
// Factory: "Microsoft.UI.Xaml.Controls.IParallaxViewFactory"
// -> IParallaxViewFactory

class function TParallaxView.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IParallaxView;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TPasswordBox }

class function TPasswordBox.get_PasswordProperty: IDependencyProperty;
begin
  Result := Statics.get_PasswordProperty;
end;

class function TPasswordBox.get_PasswordCharProperty: IDependencyProperty;
begin
  Result := Statics.get_PasswordCharProperty;
end;

class function TPasswordBox.get_IsPasswordRevealButtonEnabledProperty: IDependencyProperty;
begin
  Result := Statics.get_IsPasswordRevealButtonEnabledProperty;
end;

class function TPasswordBox.get_MaxLengthProperty: IDependencyProperty;
begin
  Result := Statics.get_MaxLengthProperty;
end;

class function TPasswordBox.get_HeaderProperty: IDependencyProperty;
begin
  Result := Statics.get_HeaderProperty;
end;

class function TPasswordBox.get_HeaderTemplateProperty: IDependencyProperty;
begin
  Result := Statics.get_HeaderTemplateProperty;
end;

class function TPasswordBox.get_PlaceholderTextProperty: IDependencyProperty;
begin
  Result := Statics.get_PlaceholderTextProperty;
end;

class function TPasswordBox.get_SelectionHighlightColorProperty: IDependencyProperty;
begin
  Result := Statics.get_SelectionHighlightColorProperty;
end;

class function TPasswordBox.get_PreventKeyboardDisplayOnProgrammaticFocusProperty: IDependencyProperty;
begin
  Result := Statics.get_PreventKeyboardDisplayOnProgrammaticFocusProperty;
end;

class function TPasswordBox.get_PasswordRevealModeProperty: IDependencyProperty;
begin
  Result := Statics.get_PasswordRevealModeProperty;
end;

class function TPasswordBox.get_TextReadingOrderProperty: IDependencyProperty;
begin
  Result := Statics.get_TextReadingOrderProperty;
end;

class function TPasswordBox.get_InputScopeProperty: IDependencyProperty;
begin
  Result := Statics.get_InputScopeProperty;
end;

class function TPasswordBox.get_CanPasteClipboardContentProperty: IDependencyProperty;
begin
  Result := Statics.get_CanPasteClipboardContentProperty;
end;

class function TPasswordBox.get_SelectionFlyoutProperty: IDependencyProperty;
begin
  Result := Statics.get_SelectionFlyoutProperty;
end;

class function TPasswordBox.get_DescriptionProperty: IDependencyProperty;
begin
  Result := Statics.get_DescriptionProperty;
end;


{ TPathIcon }

class function TPathIcon.get_DataProperty: IDependencyProperty;
begin
  Result := Statics.get_DataProperty;
end;

// Factories for : "PathIcon"
// Factory: "Microsoft.UI.Xaml.Controls.IPathIconFactory"
// -> IPathIconFactory

class function TPathIcon.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IPathIcon;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TPathIconSource }

class function TPathIconSource.get_DataProperty: IDependencyProperty;
begin
  Result := Statics.get_DataProperty;
end;

// Factories for : "PathIconSource"
// Factory: "Microsoft.UI.Xaml.Controls.IPathIconSourceFactory"
// -> IPathIconSourceFactory

class function TPathIconSource.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IPathIconSource;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TPersonPicture }

class function TPersonPicture.get_BadgeNumberProperty: IDependencyProperty;
begin
  Result := Statics.get_BadgeNumberProperty;
end;

class function TPersonPicture.get_BadgeGlyphProperty: IDependencyProperty;
begin
  Result := Statics.get_BadgeGlyphProperty;
end;

class function TPersonPicture.get_BadgeImageSourceProperty: IDependencyProperty;
begin
  Result := Statics.get_BadgeImageSourceProperty;
end;

class function TPersonPicture.get_BadgeTextProperty: IDependencyProperty;
begin
  Result := Statics.get_BadgeTextProperty;
end;

class function TPersonPicture.get_IsGroupProperty: IDependencyProperty;
begin
  Result := Statics.get_IsGroupProperty;
end;

class function TPersonPicture.get_ContactProperty: IDependencyProperty;
begin
  Result := Statics.get_ContactProperty;
end;

class function TPersonPicture.get_DisplayNameProperty: IDependencyProperty;
begin
  Result := Statics.get_DisplayNameProperty;
end;

class function TPersonPicture.get_InitialsProperty: IDependencyProperty;
begin
  Result := Statics.get_InitialsProperty;
end;

class function TPersonPicture.get_PreferSmallImageProperty: IDependencyProperty;
begin
  Result := Statics.get_PreferSmallImageProperty;
end;

class function TPersonPicture.get_ProfilePictureProperty: IDependencyProperty;
begin
  Result := Statics.get_ProfilePictureProperty;
end;

// Factories for : "PersonPicture"
// Factory: "Microsoft.UI.Xaml.Controls.IPersonPictureFactory"
// -> IPersonPictureFactory

class function TPersonPicture.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IPersonPicture;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TPickerConfirmedEventArgs }

{ TPickerFlyout }

class function TPickerFlyout.get_ContentProperty: IDependencyProperty;
begin
  Result := Statics.get_ContentProperty;
end;

class function TPickerFlyout.get_ConfirmationButtonsVisibleProperty: IDependencyProperty;
begin
  Result := Statics.get_ConfirmationButtonsVisibleProperty;
end;


{ TPipsPager }

class function TPipsPager.get_NumberOfPagesProperty: IDependencyProperty;
begin
  Result := Statics.get_NumberOfPagesProperty;
end;

class function TPipsPager.get_SelectedPageIndexProperty: IDependencyProperty;
begin
  Result := Statics.get_SelectedPageIndexProperty;
end;

class function TPipsPager.get_MaxVisiblePipsProperty: IDependencyProperty;
begin
  Result := Statics.get_MaxVisiblePipsProperty;
end;

class function TPipsPager.get_OrientationProperty: IDependencyProperty;
begin
  Result := Statics.get_OrientationProperty;
end;

class function TPipsPager.get_PreviousButtonVisibilityProperty: IDependencyProperty;
begin
  Result := Statics.get_PreviousButtonVisibilityProperty;
end;

class function TPipsPager.get_NextButtonVisibilityProperty: IDependencyProperty;
begin
  Result := Statics.get_NextButtonVisibilityProperty;
end;

class function TPipsPager.get_PreviousButtonStyleProperty: IDependencyProperty;
begin
  Result := Statics.get_PreviousButtonStyleProperty;
end;

class function TPipsPager.get_NextButtonStyleProperty: IDependencyProperty;
begin
  Result := Statics.get_NextButtonStyleProperty;
end;

class function TPipsPager.get_SelectedPipStyleProperty: IDependencyProperty;
begin
  Result := Statics.get_SelectedPipStyleProperty;
end;

class function TPipsPager.get_NormalPipStyleProperty: IDependencyProperty;
begin
  Result := Statics.get_NormalPipStyleProperty;
end;

// Factories for : "PipsPager"
// Factory: "Microsoft.UI.Xaml.Controls.IPipsPagerFactory"
// -> IPipsPagerFactory

class function TPipsPager.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IPipsPager;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TPivot }

class function TPivot.get_TitleProperty: IDependencyProperty;
begin
  Result := Statics.get_TitleProperty;
end;

class function TPivot.get_TitleTemplateProperty: IDependencyProperty;
begin
  Result := Statics.get_TitleTemplateProperty;
end;

class function TPivot.get_LeftHeaderProperty: IDependencyProperty;
begin
  Result := Statics.get_LeftHeaderProperty;
end;

class function TPivot.get_LeftHeaderTemplateProperty: IDependencyProperty;
begin
  Result := Statics.get_LeftHeaderTemplateProperty;
end;

class function TPivot.get_RightHeaderProperty: IDependencyProperty;
begin
  Result := Statics.get_RightHeaderProperty;
end;

class function TPivot.get_RightHeaderTemplateProperty: IDependencyProperty;
begin
  Result := Statics.get_RightHeaderTemplateProperty;
end;

class function TPivot.get_HeaderTemplateProperty: IDependencyProperty;
begin
  Result := Statics.get_HeaderTemplateProperty;
end;

class function TPivot.get_SelectedIndexProperty: IDependencyProperty;
begin
  Result := Statics.get_SelectedIndexProperty;
end;

class function TPivot.get_SelectedItemProperty: IDependencyProperty;
begin
  Result := Statics.get_SelectedItemProperty;
end;

class function TPivot.get_IsLockedProperty: IDependencyProperty;
begin
  Result := Statics.get_IsLockedProperty;
end;

class function TPivot.get_HeaderFocusVisualPlacementProperty: IDependencyProperty;
begin
  Result := Statics.get_HeaderFocusVisualPlacementProperty;
end;

class function TPivot.get_IsHeaderItemsCarouselEnabledProperty: IDependencyProperty;
begin
  Result := Statics.get_IsHeaderItemsCarouselEnabledProperty;
end;

class function TPivot.get_SlideInAnimationGroupProperty: IDependencyProperty;
begin
  Result := Statics.get_SlideInAnimationGroupProperty;
end;

class function TPivot.GetSlideInAnimationGroup(element: IFrameworkElement): PivotSlideInAnimationGroup;
begin
  Result := Statics.GetSlideInAnimationGroup(element);
end;

class procedure TPivot.SetSlideInAnimationGroup(element: IFrameworkElement; value: PivotSlideInAnimationGroup);
begin
  Statics.SetSlideInAnimationGroup(element, value);
end;

// Factories for : "Pivot"
// Factory: "Microsoft.UI.Xaml.Controls.IPivotFactory"
// -> IPivotFactory

class function TPivot.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IPivot;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TPivotItem }

class function TPivotItem.get_HeaderProperty: IDependencyProperty;
begin
  Result := Statics.get_HeaderProperty;
end;

// Factories for : "PivotItem"
// Factory: "Microsoft.UI.Xaml.Controls.IPivotItemFactory"
// -> IPivotItemFactory

class function TPivotItem.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IPivotItem;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TPivotItemEventArgs }

{ TPrimitives_AutoSuggestBoxHelper }

class function TPrimitives_AutoSuggestBoxHelper.get_KeepInteriorCornersSquareProperty: IDependencyProperty;
begin
  Result := Statics.get_KeepInteriorCornersSquareProperty;
end;

class procedure TPrimitives_AutoSuggestBoxHelper.SetKeepInteriorCornersSquare(autoSuggestBox: IAutoSuggestBox; value: Boolean);
begin
  Statics.SetKeepInteriorCornersSquare(autoSuggestBox, value);
end;

class function TPrimitives_AutoSuggestBoxHelper.GetKeepInteriorCornersSquare(autoSuggestBox: IAutoSuggestBox): Boolean;
begin
  Result := Statics.GetKeepInteriorCornersSquare(autoSuggestBox);
end;


{ TPrimitives_CalendarPanel }

{ TVirtualizingPanel }
// Factories for : "VirtualizingPanel"
// Factory: "Microsoft.UI.Xaml.Controls.IVirtualizingPanelFactory"
// -> IVirtualizingPanelFactory


{ TPrimitives_CarouselPanel }
// Factories for : "Primitives_CarouselPanel"
// Factory: "Microsoft.UI.Xaml.Controls.Primitives.ICarouselPanelFactory"
// -> Primitives_ICarouselPanelFactory

class function TPrimitives_CarouselPanel.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): Primitives_ICarouselPanel;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TPrimitives_RangeBase }

class function TPrimitives_RangeBase.get_MinimumProperty: IDependencyProperty;
begin
  Result := Statics.get_MinimumProperty;
end;

class function TPrimitives_RangeBase.get_MaximumProperty: IDependencyProperty;
begin
  Result := Statics.get_MaximumProperty;
end;

class function TPrimitives_RangeBase.get_SmallChangeProperty: IDependencyProperty;
begin
  Result := Statics.get_SmallChangeProperty;
end;

class function TPrimitives_RangeBase.get_LargeChangeProperty: IDependencyProperty;
begin
  Result := Statics.get_LargeChangeProperty;
end;

class function TPrimitives_RangeBase.get_ValueProperty: IDependencyProperty;
begin
  Result := Statics.get_ValueProperty;
end;

// Factories for : "Primitives_RangeBase"
// Factory: "Microsoft.UI.Xaml.Controls.Primitives.IRangeBaseFactory"
// -> Primitives_IRangeBaseFactory

class function TPrimitives_RangeBase.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): Primitives_IRangeBase;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TSlider }

class function TSlider.get_IntermediateValueProperty: IDependencyProperty;
begin
  Result := Statics.get_IntermediateValueProperty;
end;

class function TSlider.get_StepFrequencyProperty: IDependencyProperty;
begin
  Result := Statics.get_StepFrequencyProperty;
end;

class function TSlider.get_SnapsToProperty: IDependencyProperty;
begin
  Result := Statics.get_SnapsToProperty;
end;

class function TSlider.get_TickFrequencyProperty: IDependencyProperty;
begin
  Result := Statics.get_TickFrequencyProperty;
end;

class function TSlider.get_TickPlacementProperty: IDependencyProperty;
begin
  Result := Statics.get_TickPlacementProperty;
end;

class function TSlider.get_OrientationProperty: IDependencyProperty;
begin
  Result := Statics.get_OrientationProperty;
end;

class function TSlider.get_IsDirectionReversedProperty: IDependencyProperty;
begin
  Result := Statics.get_IsDirectionReversedProperty;
end;

class function TSlider.get_IsThumbToolTipEnabledProperty: IDependencyProperty;
begin
  Result := Statics.get_IsThumbToolTipEnabledProperty;
end;

class function TSlider.get_ThumbToolTipValueConverterProperty: IDependencyProperty;
begin
  Result := Statics.get_ThumbToolTipValueConverterProperty;
end;

class function TSlider.get_HeaderProperty: IDependencyProperty;
begin
  Result := Statics.get_HeaderProperty;
end;

class function TSlider.get_HeaderTemplateProperty: IDependencyProperty;
begin
  Result := Statics.get_HeaderTemplateProperty;
end;

// Factories for : "Slider"
// Factory: "Microsoft.UI.Xaml.Controls.ISliderFactory"
// -> ISliderFactory

class function TSlider.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): ISlider;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TPrimitives_ColorPickerSlider }

class function TPrimitives_ColorPickerSlider.get_ColorChannelProperty: IDependencyProperty;
begin
  Result := Statics.get_ColorChannelProperty;
end;

// Factories for : "Primitives_ColorPickerSlider"
// Factory: "Microsoft.UI.Xaml.Controls.Primitives.IColorPickerSliderFactory"
// -> Primitives_IColorPickerSliderFactory

class function TPrimitives_ColorPickerSlider.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): Primitives_IColorPickerSlider;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TPrimitives_ColorSpectrum }

class function TPrimitives_ColorSpectrum.get_ColorProperty: IDependencyProperty;
begin
  Result := Statics.get_ColorProperty;
end;

class function TPrimitives_ColorSpectrum.get_HsvColorProperty: IDependencyProperty;
begin
  Result := Statics.get_HsvColorProperty;
end;

class function TPrimitives_ColorSpectrum.get_MinHueProperty: IDependencyProperty;
begin
  Result := Statics.get_MinHueProperty;
end;

class function TPrimitives_ColorSpectrum.get_MaxHueProperty: IDependencyProperty;
begin
  Result := Statics.get_MaxHueProperty;
end;

class function TPrimitives_ColorSpectrum.get_MinSaturationProperty: IDependencyProperty;
begin
  Result := Statics.get_MinSaturationProperty;
end;

class function TPrimitives_ColorSpectrum.get_MaxSaturationProperty: IDependencyProperty;
begin
  Result := Statics.get_MaxSaturationProperty;
end;

class function TPrimitives_ColorSpectrum.get_MinValueProperty: IDependencyProperty;
begin
  Result := Statics.get_MinValueProperty;
end;

class function TPrimitives_ColorSpectrum.get_MaxValueProperty: IDependencyProperty;
begin
  Result := Statics.get_MaxValueProperty;
end;

class function TPrimitives_ColorSpectrum.get_ShapeProperty: IDependencyProperty;
begin
  Result := Statics.get_ShapeProperty;
end;

class function TPrimitives_ColorSpectrum.get_ComponentsProperty: IDependencyProperty;
begin
  Result := Statics.get_ComponentsProperty;
end;

// Factories for : "Primitives_ColorSpectrum"
// Factory: "Microsoft.UI.Xaml.Controls.Primitives.IColorSpectrumFactory"
// -> Primitives_IColorSpectrumFactory

class function TPrimitives_ColorSpectrum.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): Primitives_IColorSpectrum;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TPrimitives_ColumnMajorUniformToLargestGridLayout }

class function TPrimitives_ColumnMajorUniformToLargestGridLayout.get_MaxColumnsProperty: IDependencyProperty;
begin
  Result := Statics.get_MaxColumnsProperty;
end;

class function TPrimitives_ColumnMajorUniformToLargestGridLayout.get_ColumnSpacingProperty: IDependencyProperty;
begin
  Result := Statics.get_ColumnSpacingProperty;
end;

class function TPrimitives_ColumnMajorUniformToLargestGridLayout.get_RowSpacingProperty: IDependencyProperty;
begin
  Result := Statics.get_RowSpacingProperty;
end;

// Factories for : "Primitives_ColumnMajorUniformToLargestGridLayout"
// Factory: "Microsoft.UI.Xaml.Controls.Primitives.IColumnMajorUniformToLargestGridLayoutFactory"
// -> Primitives_IColumnMajorUniformToLargestGridLayoutFactory

class function TPrimitives_ColumnMajorUniformToLargestGridLayout.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): Primitives_IColumnMajorUniformToLargestGridLayout;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TPrimitives_ComboBoxHelper }

class function TPrimitives_ComboBoxHelper.get_KeepInteriorCornersSquareProperty: IDependencyProperty;
begin
  Result := Statics.get_KeepInteriorCornersSquareProperty;
end;

class procedure TPrimitives_ComboBoxHelper.SetKeepInteriorCornersSquare(comboBox: IComboBox; value: Boolean);
begin
  Statics.SetKeepInteriorCornersSquare(comboBox, value);
end;

class function TPrimitives_ComboBoxHelper.GetKeepInteriorCornersSquare(comboBox: IComboBox): Boolean;
begin
  Result := Statics.GetKeepInteriorCornersSquare(comboBox);
end;


{ TPrimitives_CommandBarFlyoutCommandBar }
// Factories for : "Primitives_CommandBarFlyoutCommandBar"
// Factory: "Microsoft.UI.Xaml.Controls.Primitives.ICommandBarFlyoutCommandBarFactory"
// -> Primitives_ICommandBarFlyoutCommandBarFactory

class function TPrimitives_CommandBarFlyoutCommandBar.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): Primitives_ICommandBarFlyoutCommandBar;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TPrimitives_CommandBarFlyoutCommandBarAutomationProperties }

class function TPrimitives_CommandBarFlyoutCommandBarAutomationProperties.get_ControlTypeProperty: IDependencyProperty;
begin
  Result := Statics.get_ControlTypeProperty;
end;

class function TPrimitives_CommandBarFlyoutCommandBarAutomationProperties.GetControlType(element: IUIElement): Automation_Peers_AutomationControlType;
begin
  Result := Statics.GetControlType(element);
end;

class procedure TPrimitives_CommandBarFlyoutCommandBarAutomationProperties.SetControlType(element: IUIElement; value: Automation_Peers_AutomationControlType);
begin
  Statics.SetControlType(element, value);
end;


{ TPrimitives_CornerRadiusFilterConverter }

class function TPrimitives_CornerRadiusFilterConverter.get_FilterProperty: IDependencyProperty;
begin
  Result := Statics.get_FilterProperty;
end;

class function TPrimitives_CornerRadiusFilterConverter.get_ScaleProperty: IDependencyProperty;
begin
  Result := Statics.get_ScaleProperty;
end;


{ TPrimitives_CornerRadiusToThicknessConverter }

class function TPrimitives_CornerRadiusToThicknessConverter.get_ConversionKindProperty: IDependencyProperty;
begin
  Result := Statics.get_ConversionKindProperty;
end;

class function TPrimitives_CornerRadiusToThicknessConverter.get_MultiplierProperty: IDependencyProperty;
begin
  Result := Statics.get_MultiplierProperty;
end;


{ TPrimitives_DragCompletedEventArgs }
// Factories for : "Primitives_DragCompletedEventArgs"
// Factory: "Microsoft.UI.Xaml.Controls.Primitives.IDragCompletedEventArgsFactory"
// -> Primitives_IDragCompletedEventArgsFactory

class function TPrimitives_DragCompletedEventArgs.CreateInstanceWithHorizontalChangeVerticalChangeAndCanceled(horizontalChange: Double; verticalChange: Double; canceled: Boolean; baseInterface: IInspectable; out innerInterface: IInspectable): Primitives_IDragCompletedEventArgs;
begin
  Result := Factory.CreateInstanceWithHorizontalChangeVerticalChangeAndCanceled(horizontalChange, verticalChange, canceled, baseInterface, innerInterface);
end;


{ TPrimitives_DragDeltaEventArgs }
// Factories for : "Primitives_DragDeltaEventArgs"
// Factory: "Microsoft.UI.Xaml.Controls.Primitives.IDragDeltaEventArgsFactory"
// -> Primitives_IDragDeltaEventArgsFactory

class function TPrimitives_DragDeltaEventArgs.CreateInstanceWithHorizontalChangeAndVerticalChange(horizontalChange: Double; verticalChange: Double; baseInterface: IInspectable; out innerInterface: IInspectable): Primitives_IDragDeltaEventArgs;
begin
  Result := Factory.CreateInstanceWithHorizontalChangeAndVerticalChange(horizontalChange, verticalChange, baseInterface, innerInterface);
end;


{ TPrimitives_DragStartedEventArgs }
// Factories for : "Primitives_DragStartedEventArgs"
// Factory: "Microsoft.UI.Xaml.Controls.Primitives.IDragStartedEventArgsFactory"
// -> Primitives_IDragStartedEventArgsFactory

class function TPrimitives_DragStartedEventArgs.CreateInstanceWithHorizontalOffsetAndVerticalOffset(horizontalOffset: Double; verticalOffset: Double; baseInterface: IInspectable; out innerInterface: IInspectable): Primitives_IDragStartedEventArgs;
begin
  Result := Factory.CreateInstanceWithHorizontalOffsetAndVerticalOffset(horizontalOffset, verticalOffset, baseInterface, innerInterface);
end;


{ TPrimitives_FlyoutShowOptions }
// Factories for : "Primitives_FlyoutShowOptions"
// Factory: "Microsoft.UI.Xaml.Controls.Primitives.IFlyoutShowOptionsFactory"
// -> Primitives_IFlyoutShowOptionsFactory

class function TPrimitives_FlyoutShowOptions.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): Primitives_IFlyoutShowOptions;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TPrimitives_GeneratorPositionHelper }

class function TPrimitives_GeneratorPositionHelper.FromIndexAndOffset(index: Integer; offset: Integer): Primitives_GeneratorPosition;
begin
  Result := Statics.FromIndexAndOffset(index, offset);
end;


{ TPrimitives_GridViewItemPresenter }

class function TPrimitives_GridViewItemPresenter.get_SelectionCheckMarkVisualEnabledProperty: IDependencyProperty;
begin
  Result := Statics.get_SelectionCheckMarkVisualEnabledProperty;
end;

class function TPrimitives_GridViewItemPresenter.get_CheckHintBrushProperty: IDependencyProperty;
begin
  Result := Statics.get_CheckHintBrushProperty;
end;

class function TPrimitives_GridViewItemPresenter.get_CheckSelectingBrushProperty: IDependencyProperty;
begin
  Result := Statics.get_CheckSelectingBrushProperty;
end;

class function TPrimitives_GridViewItemPresenter.get_CheckBrushProperty: IDependencyProperty;
begin
  Result := Statics.get_CheckBrushProperty;
end;

class function TPrimitives_GridViewItemPresenter.get_DragBackgroundProperty: IDependencyProperty;
begin
  Result := Statics.get_DragBackgroundProperty;
end;

class function TPrimitives_GridViewItemPresenter.get_DragForegroundProperty: IDependencyProperty;
begin
  Result := Statics.get_DragForegroundProperty;
end;

class function TPrimitives_GridViewItemPresenter.get_FocusBorderBrushProperty: IDependencyProperty;
begin
  Result := Statics.get_FocusBorderBrushProperty;
end;

class function TPrimitives_GridViewItemPresenter.get_PlaceholderBackgroundProperty: IDependencyProperty;
begin
  Result := Statics.get_PlaceholderBackgroundProperty;
end;

class function TPrimitives_GridViewItemPresenter.get_PointerOverBackgroundProperty: IDependencyProperty;
begin
  Result := Statics.get_PointerOverBackgroundProperty;
end;

class function TPrimitives_GridViewItemPresenter.get_SelectedBackgroundProperty: IDependencyProperty;
begin
  Result := Statics.get_SelectedBackgroundProperty;
end;

class function TPrimitives_GridViewItemPresenter.get_SelectedForegroundProperty: IDependencyProperty;
begin
  Result := Statics.get_SelectedForegroundProperty;
end;

class function TPrimitives_GridViewItemPresenter.get_SelectedPointerOverBackgroundProperty: IDependencyProperty;
begin
  Result := Statics.get_SelectedPointerOverBackgroundProperty;
end;

class function TPrimitives_GridViewItemPresenter.get_SelectedPointerOverBorderBrushProperty: IDependencyProperty;
begin
  Result := Statics.get_SelectedPointerOverBorderBrushProperty;
end;

class function TPrimitives_GridViewItemPresenter.get_SelectedBorderThicknessProperty: IDependencyProperty;
begin
  Result := Statics.get_SelectedBorderThicknessProperty;
end;

class function TPrimitives_GridViewItemPresenter.get_DisabledOpacityProperty: IDependencyProperty;
begin
  Result := Statics.get_DisabledOpacityProperty;
end;

class function TPrimitives_GridViewItemPresenter.get_DragOpacityProperty: IDependencyProperty;
begin
  Result := Statics.get_DragOpacityProperty;
end;

class function TPrimitives_GridViewItemPresenter.get_ReorderHintOffsetProperty: IDependencyProperty;
begin
  Result := Statics.get_ReorderHintOffsetProperty;
end;

class function TPrimitives_GridViewItemPresenter.get_GridViewItemPresenterHorizontalContentAlignmentProperty: IDependencyProperty;
begin
  Result := Statics.get_GridViewItemPresenterHorizontalContentAlignmentProperty;
end;

class function TPrimitives_GridViewItemPresenter.get_GridViewItemPresenterVerticalContentAlignmentProperty: IDependencyProperty;
begin
  Result := Statics.get_GridViewItemPresenterVerticalContentAlignmentProperty;
end;

class function TPrimitives_GridViewItemPresenter.get_GridViewItemPresenterPaddingProperty: IDependencyProperty;
begin
  Result := Statics.get_GridViewItemPresenterPaddingProperty;
end;

class function TPrimitives_GridViewItemPresenter.get_PointerOverBackgroundMarginProperty: IDependencyProperty;
begin
  Result := Statics.get_PointerOverBackgroundMarginProperty;
end;

class function TPrimitives_GridViewItemPresenter.get_ContentMarginProperty: IDependencyProperty;
begin
  Result := Statics.get_ContentMarginProperty;
end;

// Factories for : "Primitives_GridViewItemPresenter"
// Factory: "Microsoft.UI.Xaml.Controls.Primitives.IGridViewItemPresenterFactory"
// -> Primitives_IGridViewItemPresenterFactory

class function TPrimitives_GridViewItemPresenter.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): Primitives_IGridViewItemPresenter;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TPrimitives_InfoBarPanel }

class function TPrimitives_InfoBarPanel.get_HorizontalOrientationPaddingProperty: IDependencyProperty;
begin
  Result := Statics.get_HorizontalOrientationPaddingProperty;
end;

class function TPrimitives_InfoBarPanel.get_VerticalOrientationPaddingProperty: IDependencyProperty;
begin
  Result := Statics.get_VerticalOrientationPaddingProperty;
end;

class procedure TPrimitives_InfoBarPanel.SetHorizontalOrientationMargin(&object: IDependencyObject; value: Thickness);
begin
  Statics.SetHorizontalOrientationMargin(&object, value);
end;

class function TPrimitives_InfoBarPanel.GetHorizontalOrientationMargin(&object: IDependencyObject): Thickness;
begin
  Result := Statics.GetHorizontalOrientationMargin(&object);
end;

class function TPrimitives_InfoBarPanel.get_HorizontalOrientationMarginProperty: IDependencyProperty;
begin
  Result := Statics.get_HorizontalOrientationMarginProperty;
end;

class procedure TPrimitives_InfoBarPanel.SetVerticalOrientationMargin(&object: IDependencyObject; value: Thickness);
begin
  Statics.SetVerticalOrientationMargin(&object, value);
end;

class function TPrimitives_InfoBarPanel.GetVerticalOrientationMargin(&object: IDependencyObject): Thickness;
begin
  Result := Statics.GetVerticalOrientationMargin(&object);
end;

class function TPrimitives_InfoBarPanel.get_VerticalOrientationMarginProperty: IDependencyProperty;
begin
  Result := Statics.get_VerticalOrientationMarginProperty;
end;

// Factories for : "Primitives_InfoBarPanel"
// Factory: "Microsoft.UI.Xaml.Controls.Primitives.IInfoBarPanelFactory"
// -> Primitives_IInfoBarPanelFactory

class function TPrimitives_InfoBarPanel.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): Primitives_IInfoBarPanel;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TPrimitives_JumpListItemBackgroundConverter }

class function TPrimitives_JumpListItemBackgroundConverter.get_EnabledProperty: IDependencyProperty;
begin
  Result := Statics.get_EnabledProperty;
end;

class function TPrimitives_JumpListItemBackgroundConverter.get_DisabledProperty: IDependencyProperty;
begin
  Result := Statics.get_DisabledProperty;
end;


{ TPrimitives_JumpListItemForegroundConverter }

class function TPrimitives_JumpListItemForegroundConverter.get_EnabledProperty: IDependencyProperty;
begin
  Result := Statics.get_EnabledProperty;
end;

class function TPrimitives_JumpListItemForegroundConverter.get_DisabledProperty: IDependencyProperty;
begin
  Result := Statics.get_DisabledProperty;
end;


{ TPrimitives_LayoutInformation }

class function TPrimitives_LayoutInformation.GetLayoutExceptionElement(dispatcher: IInspectable): IUIElement;
begin
  Result := Statics.GetLayoutExceptionElement(dispatcher);
end;

class function TPrimitives_LayoutInformation.GetLayoutSlot(element: IFrameworkElement): TRectF;
begin
  Result := Statics.GetLayoutSlot(element);
end;

class function TPrimitives_LayoutInformation.GetAvailableSize(element: IUIElement): TSizeF;
begin
  Result := Statics.GetAvailableSize(element);
end;


{ TPrimitives_ListViewItemPresenter }

class function TPrimitives_ListViewItemPresenter.get_SelectionCheckMarkVisualEnabledProperty: IDependencyProperty;
begin
  Result := Statics.get_SelectionCheckMarkVisualEnabledProperty;
end;

class function TPrimitives_ListViewItemPresenter.get_CheckHintBrushProperty: IDependencyProperty;
begin
  Result := Statics.get_CheckHintBrushProperty;
end;

class function TPrimitives_ListViewItemPresenter.get_CheckSelectingBrushProperty: IDependencyProperty;
begin
  Result := Statics.get_CheckSelectingBrushProperty;
end;

class function TPrimitives_ListViewItemPresenter.get_CheckBrushProperty: IDependencyProperty;
begin
  Result := Statics.get_CheckBrushProperty;
end;

class function TPrimitives_ListViewItemPresenter.get_DragBackgroundProperty: IDependencyProperty;
begin
  Result := Statics.get_DragBackgroundProperty;
end;

class function TPrimitives_ListViewItemPresenter.get_DragForegroundProperty: IDependencyProperty;
begin
  Result := Statics.get_DragForegroundProperty;
end;

class function TPrimitives_ListViewItemPresenter.get_FocusBorderBrushProperty: IDependencyProperty;
begin
  Result := Statics.get_FocusBorderBrushProperty;
end;

class function TPrimitives_ListViewItemPresenter.get_PlaceholderBackgroundProperty: IDependencyProperty;
begin
  Result := Statics.get_PlaceholderBackgroundProperty;
end;

class function TPrimitives_ListViewItemPresenter.get_PointerOverBackgroundProperty: IDependencyProperty;
begin
  Result := Statics.get_PointerOverBackgroundProperty;
end;

class function TPrimitives_ListViewItemPresenter.get_SelectedBackgroundProperty: IDependencyProperty;
begin
  Result := Statics.get_SelectedBackgroundProperty;
end;

class function TPrimitives_ListViewItemPresenter.get_SelectedForegroundProperty: IDependencyProperty;
begin
  Result := Statics.get_SelectedForegroundProperty;
end;

class function TPrimitives_ListViewItemPresenter.get_SelectedPointerOverBackgroundProperty: IDependencyProperty;
begin
  Result := Statics.get_SelectedPointerOverBackgroundProperty;
end;

class function TPrimitives_ListViewItemPresenter.get_SelectedPointerOverBorderBrushProperty: IDependencyProperty;
begin
  Result := Statics.get_SelectedPointerOverBorderBrushProperty;
end;

class function TPrimitives_ListViewItemPresenter.get_SelectedBorderThicknessProperty: IDependencyProperty;
begin
  Result := Statics.get_SelectedBorderThicknessProperty;
end;

class function TPrimitives_ListViewItemPresenter.get_DisabledOpacityProperty: IDependencyProperty;
begin
  Result := Statics.get_DisabledOpacityProperty;
end;

class function TPrimitives_ListViewItemPresenter.get_DragOpacityProperty: IDependencyProperty;
begin
  Result := Statics.get_DragOpacityProperty;
end;

class function TPrimitives_ListViewItemPresenter.get_ReorderHintOffsetProperty: IDependencyProperty;
begin
  Result := Statics.get_ReorderHintOffsetProperty;
end;

class function TPrimitives_ListViewItemPresenter.get_ListViewItemPresenterHorizontalContentAlignmentProperty: IDependencyProperty;
begin
  Result := Statics.get_ListViewItemPresenterHorizontalContentAlignmentProperty;
end;

class function TPrimitives_ListViewItemPresenter.get_ListViewItemPresenterVerticalContentAlignmentProperty: IDependencyProperty;
begin
  Result := Statics.get_ListViewItemPresenterVerticalContentAlignmentProperty;
end;

class function TPrimitives_ListViewItemPresenter.get_ListViewItemPresenterPaddingProperty: IDependencyProperty;
begin
  Result := Statics.get_ListViewItemPresenterPaddingProperty;
end;

class function TPrimitives_ListViewItemPresenter.get_PointerOverBackgroundMarginProperty: IDependencyProperty;
begin
  Result := Statics.get_PointerOverBackgroundMarginProperty;
end;

class function TPrimitives_ListViewItemPresenter.get_ContentMarginProperty: IDependencyProperty;
begin
  Result := Statics.get_ContentMarginProperty;
end;

class function TPrimitives_ListViewItemPresenter.get_SelectedPressedBackgroundProperty: IDependencyProperty;
begin
  Result := Statics.get_SelectedPressedBackgroundProperty;
end;

class function TPrimitives_ListViewItemPresenter.get_PressedBackgroundProperty: IDependencyProperty;
begin
  Result := Statics.get_PressedBackgroundProperty;
end;

class function TPrimitives_ListViewItemPresenter.get_CheckBoxBrushProperty: IDependencyProperty;
begin
  Result := Statics.get_CheckBoxBrushProperty;
end;

class function TPrimitives_ListViewItemPresenter.get_FocusSecondaryBorderBrushProperty: IDependencyProperty;
begin
  Result := Statics.get_FocusSecondaryBorderBrushProperty;
end;

class function TPrimitives_ListViewItemPresenter.get_CheckModeProperty: IDependencyProperty;
begin
  Result := Statics.get_CheckModeProperty;
end;

class function TPrimitives_ListViewItemPresenter.get_PointerOverForegroundProperty: IDependencyProperty;
begin
  Result := Statics.get_PointerOverForegroundProperty;
end;

class function TPrimitives_ListViewItemPresenter.get_RevealBackgroundProperty: IDependencyProperty;
begin
  Result := Statics.get_RevealBackgroundProperty;
end;

class function TPrimitives_ListViewItemPresenter.get_RevealBorderBrushProperty: IDependencyProperty;
begin
  Result := Statics.get_RevealBorderBrushProperty;
end;

class function TPrimitives_ListViewItemPresenter.get_RevealBorderThicknessProperty: IDependencyProperty;
begin
  Result := Statics.get_RevealBorderThicknessProperty;
end;

class function TPrimitives_ListViewItemPresenter.get_RevealBackgroundShowsAboveContentProperty: IDependencyProperty;
begin
  Result := Statics.get_RevealBackgroundShowsAboveContentProperty;
end;

class function TPrimitives_ListViewItemPresenter.get_SelectedDisabledBackgroundProperty: IDependencyProperty;
begin
  Result := Statics.get_SelectedDisabledBackgroundProperty;
end;

class function TPrimitives_ListViewItemPresenter.get_CheckPressedBrushProperty: IDependencyProperty;
begin
  Result := Statics.get_CheckPressedBrushProperty;
end;

class function TPrimitives_ListViewItemPresenter.get_CheckDisabledBrushProperty: IDependencyProperty;
begin
  Result := Statics.get_CheckDisabledBrushProperty;
end;

class function TPrimitives_ListViewItemPresenter.get_CheckBoxPointerOverBrushProperty: IDependencyProperty;
begin
  Result := Statics.get_CheckBoxPointerOverBrushProperty;
end;

class function TPrimitives_ListViewItemPresenter.get_CheckBoxPressedBrushProperty: IDependencyProperty;
begin
  Result := Statics.get_CheckBoxPressedBrushProperty;
end;

class function TPrimitives_ListViewItemPresenter.get_CheckBoxDisabledBrushProperty: IDependencyProperty;
begin
  Result := Statics.get_CheckBoxDisabledBrushProperty;
end;

class function TPrimitives_ListViewItemPresenter.get_CheckBoxSelectedBrushProperty: IDependencyProperty;
begin
  Result := Statics.get_CheckBoxSelectedBrushProperty;
end;

class function TPrimitives_ListViewItemPresenter.get_CheckBoxSelectedPointerOverBrushProperty: IDependencyProperty;
begin
  Result := Statics.get_CheckBoxSelectedPointerOverBrushProperty;
end;

class function TPrimitives_ListViewItemPresenter.get_CheckBoxSelectedPressedBrushProperty: IDependencyProperty;
begin
  Result := Statics.get_CheckBoxSelectedPressedBrushProperty;
end;

class function TPrimitives_ListViewItemPresenter.get_CheckBoxSelectedDisabledBrushProperty: IDependencyProperty;
begin
  Result := Statics.get_CheckBoxSelectedDisabledBrushProperty;
end;

class function TPrimitives_ListViewItemPresenter.get_CheckBoxBorderBrushProperty: IDependencyProperty;
begin
  Result := Statics.get_CheckBoxBorderBrushProperty;
end;

class function TPrimitives_ListViewItemPresenter.get_CheckBoxPointerOverBorderBrushProperty: IDependencyProperty;
begin
  Result := Statics.get_CheckBoxPointerOverBorderBrushProperty;
end;

class function TPrimitives_ListViewItemPresenter.get_CheckBoxPressedBorderBrushProperty: IDependencyProperty;
begin
  Result := Statics.get_CheckBoxPressedBorderBrushProperty;
end;

class function TPrimitives_ListViewItemPresenter.get_CheckBoxDisabledBorderBrushProperty: IDependencyProperty;
begin
  Result := Statics.get_CheckBoxDisabledBorderBrushProperty;
end;

class function TPrimitives_ListViewItemPresenter.get_CheckBoxCornerRadiusProperty: IDependencyProperty;
begin
  Result := Statics.get_CheckBoxCornerRadiusProperty;
end;

class function TPrimitives_ListViewItemPresenter.get_SelectionIndicatorCornerRadiusProperty: IDependencyProperty;
begin
  Result := Statics.get_SelectionIndicatorCornerRadiusProperty;
end;

class function TPrimitives_ListViewItemPresenter.get_SelectionIndicatorVisualEnabledProperty: IDependencyProperty;
begin
  Result := Statics.get_SelectionIndicatorVisualEnabledProperty;
end;

class function TPrimitives_ListViewItemPresenter.get_SelectionIndicatorModeProperty: IDependencyProperty;
begin
  Result := Statics.get_SelectionIndicatorModeProperty;
end;

class function TPrimitives_ListViewItemPresenter.get_SelectionIndicatorBrushProperty: IDependencyProperty;
begin
  Result := Statics.get_SelectionIndicatorBrushProperty;
end;

class function TPrimitives_ListViewItemPresenter.get_SelectionIndicatorPointerOverBrushProperty: IDependencyProperty;
begin
  Result := Statics.get_SelectionIndicatorPointerOverBrushProperty;
end;

class function TPrimitives_ListViewItemPresenter.get_SelectionIndicatorPressedBrushProperty: IDependencyProperty;
begin
  Result := Statics.get_SelectionIndicatorPressedBrushProperty;
end;

class function TPrimitives_ListViewItemPresenter.get_SelectionIndicatorDisabledBrushProperty: IDependencyProperty;
begin
  Result := Statics.get_SelectionIndicatorDisabledBrushProperty;
end;

class function TPrimitives_ListViewItemPresenter.get_SelectedBorderBrushProperty: IDependencyProperty;
begin
  Result := Statics.get_SelectedBorderBrushProperty;
end;

class function TPrimitives_ListViewItemPresenter.get_SelectedPressedBorderBrushProperty: IDependencyProperty;
begin
  Result := Statics.get_SelectedPressedBorderBrushProperty;
end;

class function TPrimitives_ListViewItemPresenter.get_SelectedDisabledBorderBrushProperty: IDependencyProperty;
begin
  Result := Statics.get_SelectedDisabledBorderBrushProperty;
end;

class function TPrimitives_ListViewItemPresenter.get_SelectedInnerBorderBrushProperty: IDependencyProperty;
begin
  Result := Statics.get_SelectedInnerBorderBrushProperty;
end;

class function TPrimitives_ListViewItemPresenter.get_PointerOverBorderBrushProperty: IDependencyProperty;
begin
  Result := Statics.get_PointerOverBorderBrushProperty;
end;

// Factories for : "Primitives_ListViewItemPresenter"
// Factory: "Microsoft.UI.Xaml.Controls.Primitives.IListViewItemPresenterFactory"
// -> Primitives_IListViewItemPresenterFactory

class function TPrimitives_ListViewItemPresenter.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): Primitives_IListViewItemPresenter;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TPrimitives_LoopingSelector }

class function TPrimitives_LoopingSelector.get_ShouldLoopProperty: IDependencyProperty;
begin
  Result := Statics.get_ShouldLoopProperty;
end;

class function TPrimitives_LoopingSelector.get_ItemsProperty: IDependencyProperty;
begin
  Result := Statics.get_ItemsProperty;
end;

class function TPrimitives_LoopingSelector.get_SelectedIndexProperty: IDependencyProperty;
begin
  Result := Statics.get_SelectedIndexProperty;
end;

class function TPrimitives_LoopingSelector.get_SelectedItemProperty: IDependencyProperty;
begin
  Result := Statics.get_SelectedItemProperty;
end;

class function TPrimitives_LoopingSelector.get_ItemWidthProperty: IDependencyProperty;
begin
  Result := Statics.get_ItemWidthProperty;
end;

class function TPrimitives_LoopingSelector.get_ItemHeightProperty: IDependencyProperty;
begin
  Result := Statics.get_ItemHeightProperty;
end;

class function TPrimitives_LoopingSelector.get_ItemTemplateProperty: IDependencyProperty;
begin
  Result := Statics.get_ItemTemplateProperty;
end;


{ TPrimitives_MonochromaticOverlayPresenter }

class function TPrimitives_MonochromaticOverlayPresenter.get_SourceElementProperty: IDependencyProperty;
begin
  Result := Statics.get_SourceElementProperty;
end;

class function TPrimitives_MonochromaticOverlayPresenter.get_ReplacementColorProperty: IDependencyProperty;
begin
  Result := Statics.get_ReplacementColorProperty;
end;

// Factories for : "Primitives_MonochromaticOverlayPresenter"
// Factory: "Microsoft.UI.Xaml.Controls.Primitives.IMonochromaticOverlayPresenterFactory"
// -> Primitives_IMonochromaticOverlayPresenterFactory

class function TPrimitives_MonochromaticOverlayPresenter.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): Primitives_IMonochromaticOverlayPresenter;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TPrimitives_NavigationViewItemPresenter }

class function TPrimitives_NavigationViewItemPresenter.get_IconProperty: IDependencyProperty;
begin
  Result := Statics.get_IconProperty;
end;

class function TPrimitives_NavigationViewItemPresenter.get_TemplateSettingsProperty: IDependencyProperty;
begin
  Result := Statics.get_TemplateSettingsProperty;
end;


class function TPrimitives_NavigationViewItemPresenter.get_InfoBadgeProperty: IDependencyProperty;
begin
  Result := Statics2.get_InfoBadgeProperty;
end;

// Factories for : "Primitives_NavigationViewItemPresenter"
// Factory: "Microsoft.UI.Xaml.Controls.Primitives.INavigationViewItemPresenterFactory"
// -> Primitives_INavigationViewItemPresenterFactory

class function TPrimitives_NavigationViewItemPresenter.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): Primitives_INavigationViewItemPresenter;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TPrimitives_NavigationViewItemPresenterTemplateSettings }

class function TPrimitives_NavigationViewItemPresenterTemplateSettings.get_IconWidthProperty: IDependencyProperty;
begin
  Result := Statics.get_IconWidthProperty;
end;

class function TPrimitives_NavigationViewItemPresenterTemplateSettings.get_SmallerIconWidthProperty: IDependencyProperty;
begin
  Result := Statics.get_SmallerIconWidthProperty;
end;

// Factories for : "Primitives_NavigationViewItemPresenterTemplateSettings"
// Factory: "Microsoft.UI.Xaml.Controls.Primitives.INavigationViewItemPresenterTemplateSettingsFactory"
// -> Primitives_INavigationViewItemPresenterTemplateSettingsFactory

class function TPrimitives_NavigationViewItemPresenterTemplateSettings.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): Primitives_INavigationViewItemPresenterTemplateSettings;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TPrimitives_OrientedVirtualizingPanel }
// Factories for : "Primitives_OrientedVirtualizingPanel"
// Factory: "Microsoft.UI.Xaml.Controls.Primitives.IOrientedVirtualizingPanelFactory"
// -> Primitives_IOrientedVirtualizingPanelFactory


{ TPrimitives_PivotHeaderItem }
// Factories for : "Primitives_PivotHeaderItem"
// Factory: "Microsoft.UI.Xaml.Controls.Primitives.IPivotHeaderItemFactory"
// -> Primitives_IPivotHeaderItemFactory

class function TPrimitives_PivotHeaderItem.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): Primitives_IPivotHeaderItem;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TPrimitives_PivotHeaderPanel }

{ TPrimitives_PivotPanel }

{ TPrimitives_Popup }

class function TPrimitives_Popup.get_ChildProperty: IDependencyProperty;
begin
  Result := Statics.get_ChildProperty;
end;

class function TPrimitives_Popup.get_IsOpenProperty: IDependencyProperty;
begin
  Result := Statics.get_IsOpenProperty;
end;

class function TPrimitives_Popup.get_HorizontalOffsetProperty: IDependencyProperty;
begin
  Result := Statics.get_HorizontalOffsetProperty;
end;

class function TPrimitives_Popup.get_VerticalOffsetProperty: IDependencyProperty;
begin
  Result := Statics.get_VerticalOffsetProperty;
end;

class function TPrimitives_Popup.get_ChildTransitionsProperty: IDependencyProperty;
begin
  Result := Statics.get_ChildTransitionsProperty;
end;

class function TPrimitives_Popup.get_IsLightDismissEnabledProperty: IDependencyProperty;
begin
  Result := Statics.get_IsLightDismissEnabledProperty;
end;

class function TPrimitives_Popup.get_LightDismissOverlayModeProperty: IDependencyProperty;
begin
  Result := Statics.get_LightDismissOverlayModeProperty;
end;

class function TPrimitives_Popup.get_ShouldConstrainToRootBoundsProperty: IDependencyProperty;
begin
  Result := Statics.get_ShouldConstrainToRootBoundsProperty;
end;


class function TPrimitives_Popup.get_PlacementTargetProperty: IDependencyProperty;
begin
  Result := Statics2.get_PlacementTargetProperty;
end;

class function TPrimitives_Popup.get_DesiredPlacementProperty: IDependencyProperty;
begin
  Result := Statics2.get_DesiredPlacementProperty;
end;


{ TPrimitives_RepeatButton }

class function TPrimitives_RepeatButton.get_DelayProperty: IDependencyProperty;
begin
  Result := Statics.get_DelayProperty;
end;

class function TPrimitives_RepeatButton.get_IntervalProperty: IDependencyProperty;
begin
  Result := Statics.get_IntervalProperty;
end;


{ TPrimitives_ScrollBar }

class function TPrimitives_ScrollBar.get_OrientationProperty: IDependencyProperty;
begin
  Result := Statics.get_OrientationProperty;
end;

class function TPrimitives_ScrollBar.get_ViewportSizeProperty: IDependencyProperty;
begin
  Result := Statics.get_ViewportSizeProperty;
end;

class function TPrimitives_ScrollBar.get_IndicatorModeProperty: IDependencyProperty;
begin
  Result := Statics.get_IndicatorModeProperty;
end;


{ TPrimitives_ScrollEventArgs }

{ TPrimitives_TabViewListView }
// Factories for : "Primitives_TabViewListView"
// Factory: "Microsoft.UI.Xaml.Controls.Primitives.ITabViewListViewFactory"
// -> Primitives_ITabViewListViewFactory

class function TPrimitives_TabViewListView.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): Primitives_ITabViewListView;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TPrimitives_Thumb }

class function TPrimitives_Thumb.get_IsDraggingProperty: IDependencyProperty;
begin
  Result := Statics.get_IsDraggingProperty;
end;


{ TPrimitives_TickBar }

class function TPrimitives_TickBar.get_FillProperty: IDependencyProperty;
begin
  Result := Statics.get_FillProperty;
end;


{ TProgressBar }

class function TProgressBar.get_IsIndeterminateProperty: IDependencyProperty;
begin
  Result := Statics.get_IsIndeterminateProperty;
end;

class function TProgressBar.get_ShowErrorProperty: IDependencyProperty;
begin
  Result := Statics.get_ShowErrorProperty;
end;

class function TProgressBar.get_ShowPausedProperty: IDependencyProperty;
begin
  Result := Statics.get_ShowPausedProperty;
end;

// Factories for : "ProgressBar"
// Factory: "Microsoft.UI.Xaml.Controls.IProgressBarFactory"
// -> IProgressBarFactory

class function TProgressBar.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IProgressBar;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TProgressRing }

class function TProgressRing.get_IsActiveProperty: IDependencyProperty;
begin
  Result := Statics.get_IsActiveProperty;
end;

class function TProgressRing.get_IsIndeterminateProperty: IDependencyProperty;
begin
  Result := Statics.get_IsIndeterminateProperty;
end;

class function TProgressRing.get_ValueProperty: IDependencyProperty;
begin
  Result := Statics.get_ValueProperty;
end;

class function TProgressRing.get_MinimumProperty: IDependencyProperty;
begin
  Result := Statics.get_MinimumProperty;
end;

class function TProgressRing.get_MaximumProperty: IDependencyProperty;
begin
  Result := Statics.get_MaximumProperty;
end;

// Factories for : "ProgressRing"
// Factory: "Microsoft.UI.Xaml.Controls.IProgressRingFactory"
// -> IProgressRingFactory

class function TProgressRing.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IProgressRing;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TRadioButton }

class function TRadioButton.get_GroupNameProperty: IDependencyProperty;
begin
  Result := Statics.get_GroupNameProperty;
end;

// Factories for : "RadioButton"
// Factory: "Microsoft.UI.Xaml.Controls.IRadioButtonFactory"
// -> IRadioButtonFactory

class function TRadioButton.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IRadioButton;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TRadioButtons }

class function TRadioButtons.get_ItemsSourceProperty: IDependencyProperty;
begin
  Result := Statics.get_ItemsSourceProperty;
end;

class function TRadioButtons.get_ItemsProperty: IDependencyProperty;
begin
  Result := Statics.get_ItemsProperty;
end;

class function TRadioButtons.get_ItemTemplateProperty: IDependencyProperty;
begin
  Result := Statics.get_ItemTemplateProperty;
end;

class function TRadioButtons.get_SelectedIndexProperty: IDependencyProperty;
begin
  Result := Statics.get_SelectedIndexProperty;
end;

class function TRadioButtons.get_SelectedItemProperty: IDependencyProperty;
begin
  Result := Statics.get_SelectedItemProperty;
end;

class function TRadioButtons.get_MaxColumnsProperty: IDependencyProperty;
begin
  Result := Statics.get_MaxColumnsProperty;
end;

class function TRadioButtons.get_HeaderProperty: IDependencyProperty;
begin
  Result := Statics.get_HeaderProperty;
end;

class function TRadioButtons.get_HeaderTemplateProperty: IDependencyProperty;
begin
  Result := Statics.get_HeaderTemplateProperty;
end;

// Factories for : "RadioButtons"
// Factory: "Microsoft.UI.Xaml.Controls.IRadioButtonsFactory"
// -> IRadioButtonsFactory

class function TRadioButtons.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IRadioButtons;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TRadioMenuFlyoutItem }

class function TRadioMenuFlyoutItem.get_IsCheckedProperty: IDependencyProperty;
begin
  Result := Statics.get_IsCheckedProperty;
end;

class function TRadioMenuFlyoutItem.get_GroupNameProperty: IDependencyProperty;
begin
  Result := Statics.get_GroupNameProperty;
end;


class function TRadioMenuFlyoutItem.get_AreCheckStatesEnabledProperty: IDependencyProperty;
begin
  Result := Statics2.get_AreCheckStatesEnabledProperty;
end;

class procedure TRadioMenuFlyoutItem.SetAreCheckStatesEnabled(&object: IMenuFlyoutSubItem; value: Boolean);
begin
  Statics2.SetAreCheckStatesEnabled(&object, value);
end;

class function TRadioMenuFlyoutItem.GetAreCheckStatesEnabled(&object: IMenuFlyoutSubItem): Boolean;
begin
  Result := Statics2.GetAreCheckStatesEnabled(&object);
end;

// Factories for : "RadioMenuFlyoutItem"
// Factory: "Microsoft.UI.Xaml.Controls.IRadioMenuFlyoutItemFactory"
// -> IRadioMenuFlyoutItemFactory

class function TRadioMenuFlyoutItem.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IRadioMenuFlyoutItem;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TRatingControl }

class function TRatingControl.get_CaptionProperty: IDependencyProperty;
begin
  Result := Statics.get_CaptionProperty;
end;

class function TRatingControl.get_InitialSetValueProperty: IDependencyProperty;
begin
  Result := Statics.get_InitialSetValueProperty;
end;

class function TRatingControl.get_IsClearEnabledProperty: IDependencyProperty;
begin
  Result := Statics.get_IsClearEnabledProperty;
end;

class function TRatingControl.get_IsReadOnlyProperty: IDependencyProperty;
begin
  Result := Statics.get_IsReadOnlyProperty;
end;

class function TRatingControl.get_MaxRatingProperty: IDependencyProperty;
begin
  Result := Statics.get_MaxRatingProperty;
end;

class function TRatingControl.get_PlaceholderValueProperty: IDependencyProperty;
begin
  Result := Statics.get_PlaceholderValueProperty;
end;

class function TRatingControl.get_ItemInfoProperty: IDependencyProperty;
begin
  Result := Statics.get_ItemInfoProperty;
end;

class function TRatingControl.get_ValueProperty: IDependencyProperty;
begin
  Result := Statics.get_ValueProperty;
end;

// Factories for : "RatingControl"
// Factory: "Microsoft.UI.Xaml.Controls.IRatingControlFactory"
// -> IRatingControlFactory

class function TRatingControl.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IRatingControl;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TRatingItemInfo }
// Factories for : "RatingItemInfo"
// Factory: "Microsoft.UI.Xaml.Controls.IRatingItemInfoFactory"
// -> IRatingItemInfoFactory

class function TRatingItemInfo.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IRatingItemInfo;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TRatingItemFontInfo }

class function TRatingItemFontInfo.get_DisabledGlyphProperty: IDependencyProperty;
begin
  Result := Statics.get_DisabledGlyphProperty;
end;

class function TRatingItemFontInfo.get_GlyphProperty: IDependencyProperty;
begin
  Result := Statics.get_GlyphProperty;
end;

class function TRatingItemFontInfo.get_PlaceholderGlyphProperty: IDependencyProperty;
begin
  Result := Statics.get_PlaceholderGlyphProperty;
end;

class function TRatingItemFontInfo.get_PointerOverGlyphProperty: IDependencyProperty;
begin
  Result := Statics.get_PointerOverGlyphProperty;
end;

class function TRatingItemFontInfo.get_PointerOverPlaceholderGlyphProperty: IDependencyProperty;
begin
  Result := Statics.get_PointerOverPlaceholderGlyphProperty;
end;

class function TRatingItemFontInfo.get_UnsetGlyphProperty: IDependencyProperty;
begin
  Result := Statics.get_UnsetGlyphProperty;
end;

// Factories for : "RatingItemFontInfo"
// Factory: "Microsoft.UI.Xaml.Controls.IRatingItemFontInfoFactory"
// -> IRatingItemFontInfoFactory

class function TRatingItemFontInfo.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IRatingItemFontInfo;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TRatingItemImageInfo }

class function TRatingItemImageInfo.get_DisabledImageProperty: IDependencyProperty;
begin
  Result := Statics.get_DisabledImageProperty;
end;

class function TRatingItemImageInfo.get_ImageProperty: IDependencyProperty;
begin
  Result := Statics.get_ImageProperty;
end;

class function TRatingItemImageInfo.get_PlaceholderImageProperty: IDependencyProperty;
begin
  Result := Statics.get_PlaceholderImageProperty;
end;

class function TRatingItemImageInfo.get_PointerOverImageProperty: IDependencyProperty;
begin
  Result := Statics.get_PointerOverImageProperty;
end;

class function TRatingItemImageInfo.get_PointerOverPlaceholderImageProperty: IDependencyProperty;
begin
  Result := Statics.get_PointerOverPlaceholderImageProperty;
end;

class function TRatingItemImageInfo.get_UnsetImageProperty: IDependencyProperty;
begin
  Result := Statics.get_UnsetImageProperty;
end;

// Factories for : "RatingItemImageInfo"
// Factory: "Microsoft.UI.Xaml.Controls.IRatingItemImageInfoFactory"
// -> IRatingItemImageInfoFactory

class function TRatingItemImageInfo.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IRatingItemImageInfo;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TRefreshContainer }

class function TRefreshContainer.get_VisualizerProperty: IDependencyProperty;
begin
  Result := Statics.get_VisualizerProperty;
end;

class function TRefreshContainer.get_PullDirectionProperty: IDependencyProperty;
begin
  Result := Statics.get_PullDirectionProperty;
end;

// Factories for : "RefreshContainer"
// Factory: "Microsoft.UI.Xaml.Controls.IRefreshContainerFactory"
// -> IRefreshContainerFactory

class function TRefreshContainer.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IRefreshContainer;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TRefreshVisualizer }

class function TRefreshVisualizer.get_InfoProviderProperty: IDependencyProperty;
begin
  Result := Statics.get_InfoProviderProperty;
end;

class function TRefreshVisualizer.get_OrientationProperty: IDependencyProperty;
begin
  Result := Statics.get_OrientationProperty;
end;

class function TRefreshVisualizer.get_ContentProperty: IDependencyProperty;
begin
  Result := Statics.get_ContentProperty;
end;

class function TRefreshVisualizer.get_StateProperty: IDependencyProperty;
begin
  Result := Statics.get_StateProperty;
end;

// Factories for : "RefreshVisualizer"
// Factory: "Microsoft.UI.Xaml.Controls.IRefreshVisualizerFactory"
// -> IRefreshVisualizerFactory

class function TRefreshVisualizer.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IRefreshVisualizer;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TRelativePanel }

class function TRelativePanel.get_BackgroundSizingProperty: IDependencyProperty;
begin
  Result := Statics.get_BackgroundSizingProperty;
end;

class function TRelativePanel.get_LeftOfProperty: IDependencyProperty;
begin
  Result := Statics.get_LeftOfProperty;
end;

class function TRelativePanel.GetLeftOf(element: IUIElement): IInspectable;
begin
  Result := Statics.GetLeftOf(element);
end;

class procedure TRelativePanel.SetLeftOf(element: IUIElement; value: IInspectable);
begin
  Statics.SetLeftOf(element, value);
end;

class function TRelativePanel.get_AboveProperty: IDependencyProperty;
begin
  Result := Statics.get_AboveProperty;
end;

class function TRelativePanel.GetAbove(element: IUIElement): IInspectable;
begin
  Result := Statics.GetAbove(element);
end;

class procedure TRelativePanel.SetAbove(element: IUIElement; value: IInspectable);
begin
  Statics.SetAbove(element, value);
end;

class function TRelativePanel.get_RightOfProperty: IDependencyProperty;
begin
  Result := Statics.get_RightOfProperty;
end;

class function TRelativePanel.GetRightOf(element: IUIElement): IInspectable;
begin
  Result := Statics.GetRightOf(element);
end;

class procedure TRelativePanel.SetRightOf(element: IUIElement; value: IInspectable);
begin
  Statics.SetRightOf(element, value);
end;

class function TRelativePanel.get_BelowProperty: IDependencyProperty;
begin
  Result := Statics.get_BelowProperty;
end;

class function TRelativePanel.GetBelow(element: IUIElement): IInspectable;
begin
  Result := Statics.GetBelow(element);
end;

class procedure TRelativePanel.SetBelow(element: IUIElement; value: IInspectable);
begin
  Statics.SetBelow(element, value);
end;

class function TRelativePanel.get_AlignHorizontalCenterWithProperty: IDependencyProperty;
begin
  Result := Statics.get_AlignHorizontalCenterWithProperty;
end;

class function TRelativePanel.GetAlignHorizontalCenterWith(element: IUIElement): IInspectable;
begin
  Result := Statics.GetAlignHorizontalCenterWith(element);
end;

class procedure TRelativePanel.SetAlignHorizontalCenterWith(element: IUIElement; value: IInspectable);
begin
  Statics.SetAlignHorizontalCenterWith(element, value);
end;

class function TRelativePanel.get_AlignVerticalCenterWithProperty: IDependencyProperty;
begin
  Result := Statics.get_AlignVerticalCenterWithProperty;
end;

class function TRelativePanel.GetAlignVerticalCenterWith(element: IUIElement): IInspectable;
begin
  Result := Statics.GetAlignVerticalCenterWith(element);
end;

class procedure TRelativePanel.SetAlignVerticalCenterWith(element: IUIElement; value: IInspectable);
begin
  Statics.SetAlignVerticalCenterWith(element, value);
end;

class function TRelativePanel.get_AlignLeftWithProperty: IDependencyProperty;
begin
  Result := Statics.get_AlignLeftWithProperty;
end;

class function TRelativePanel.GetAlignLeftWith(element: IUIElement): IInspectable;
begin
  Result := Statics.GetAlignLeftWith(element);
end;

class procedure TRelativePanel.SetAlignLeftWith(element: IUIElement; value: IInspectable);
begin
  Statics.SetAlignLeftWith(element, value);
end;

class function TRelativePanel.get_AlignTopWithProperty: IDependencyProperty;
begin
  Result := Statics.get_AlignTopWithProperty;
end;

class function TRelativePanel.GetAlignTopWith(element: IUIElement): IInspectable;
begin
  Result := Statics.GetAlignTopWith(element);
end;

class procedure TRelativePanel.SetAlignTopWith(element: IUIElement; value: IInspectable);
begin
  Statics.SetAlignTopWith(element, value);
end;

class function TRelativePanel.get_AlignRightWithProperty: IDependencyProperty;
begin
  Result := Statics.get_AlignRightWithProperty;
end;

class function TRelativePanel.GetAlignRightWith(element: IUIElement): IInspectable;
begin
  Result := Statics.GetAlignRightWith(element);
end;

class procedure TRelativePanel.SetAlignRightWith(element: IUIElement; value: IInspectable);
begin
  Statics.SetAlignRightWith(element, value);
end;

class function TRelativePanel.get_AlignBottomWithProperty: IDependencyProperty;
begin
  Result := Statics.get_AlignBottomWithProperty;
end;

class function TRelativePanel.GetAlignBottomWith(element: IUIElement): IInspectable;
begin
  Result := Statics.GetAlignBottomWith(element);
end;

class procedure TRelativePanel.SetAlignBottomWith(element: IUIElement; value: IInspectable);
begin
  Statics.SetAlignBottomWith(element, value);
end;

class function TRelativePanel.get_AlignLeftWithPanelProperty: IDependencyProperty;
begin
  Result := Statics.get_AlignLeftWithPanelProperty;
end;

class function TRelativePanel.GetAlignLeftWithPanel(element: IUIElement): Boolean;
begin
  Result := Statics.GetAlignLeftWithPanel(element);
end;

class procedure TRelativePanel.SetAlignLeftWithPanel(element: IUIElement; value: Boolean);
begin
  Statics.SetAlignLeftWithPanel(element, value);
end;

class function TRelativePanel.get_AlignTopWithPanelProperty: IDependencyProperty;
begin
  Result := Statics.get_AlignTopWithPanelProperty;
end;

class function TRelativePanel.GetAlignTopWithPanel(element: IUIElement): Boolean;
begin
  Result := Statics.GetAlignTopWithPanel(element);
end;

class procedure TRelativePanel.SetAlignTopWithPanel(element: IUIElement; value: Boolean);
begin
  Statics.SetAlignTopWithPanel(element, value);
end;

class function TRelativePanel.get_AlignRightWithPanelProperty: IDependencyProperty;
begin
  Result := Statics.get_AlignRightWithPanelProperty;
end;

class function TRelativePanel.GetAlignRightWithPanel(element: IUIElement): Boolean;
begin
  Result := Statics.GetAlignRightWithPanel(element);
end;

class procedure TRelativePanel.SetAlignRightWithPanel(element: IUIElement; value: Boolean);
begin
  Statics.SetAlignRightWithPanel(element, value);
end;

class function TRelativePanel.get_AlignBottomWithPanelProperty: IDependencyProperty;
begin
  Result := Statics.get_AlignBottomWithPanelProperty;
end;

class function TRelativePanel.GetAlignBottomWithPanel(element: IUIElement): Boolean;
begin
  Result := Statics.GetAlignBottomWithPanel(element);
end;

class procedure TRelativePanel.SetAlignBottomWithPanel(element: IUIElement; value: Boolean);
begin
  Statics.SetAlignBottomWithPanel(element, value);
end;

class function TRelativePanel.get_AlignHorizontalCenterWithPanelProperty: IDependencyProperty;
begin
  Result := Statics.get_AlignHorizontalCenterWithPanelProperty;
end;

class function TRelativePanel.GetAlignHorizontalCenterWithPanel(element: IUIElement): Boolean;
begin
  Result := Statics.GetAlignHorizontalCenterWithPanel(element);
end;

class procedure TRelativePanel.SetAlignHorizontalCenterWithPanel(element: IUIElement; value: Boolean);
begin
  Statics.SetAlignHorizontalCenterWithPanel(element, value);
end;

class function TRelativePanel.get_AlignVerticalCenterWithPanelProperty: IDependencyProperty;
begin
  Result := Statics.get_AlignVerticalCenterWithPanelProperty;
end;

class function TRelativePanel.GetAlignVerticalCenterWithPanel(element: IUIElement): Boolean;
begin
  Result := Statics.GetAlignVerticalCenterWithPanel(element);
end;

class procedure TRelativePanel.SetAlignVerticalCenterWithPanel(element: IUIElement; value: Boolean);
begin
  Statics.SetAlignVerticalCenterWithPanel(element, value);
end;

class function TRelativePanel.get_BorderBrushProperty: IDependencyProperty;
begin
  Result := Statics.get_BorderBrushProperty;
end;

class function TRelativePanel.get_BorderThicknessProperty: IDependencyProperty;
begin
  Result := Statics.get_BorderThicknessProperty;
end;

class function TRelativePanel.get_CornerRadiusProperty: IDependencyProperty;
begin
  Result := Statics.get_CornerRadiusProperty;
end;

class function TRelativePanel.get_PaddingProperty: IDependencyProperty;
begin
  Result := Statics.get_PaddingProperty;
end;

// Factories for : "RelativePanel"
// Factory: "Microsoft.UI.Xaml.Controls.IRelativePanelFactory"
// -> IRelativePanelFactory

class function TRelativePanel.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IRelativePanel;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TRevealListViewItemPresenter }
// Factories for : "RevealListViewItemPresenter"
// Factory: "Microsoft.UI.Xaml.Controls.IRevealListViewItemPresenterFactory"
// -> IRevealListViewItemPresenterFactory

class function TRevealListViewItemPresenter.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IRevealListViewItemPresenter;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TRichEditBox }

class function TRichEditBox.get_IsReadOnlyProperty: IDependencyProperty;
begin
  Result := Statics.get_IsReadOnlyProperty;
end;

class function TRichEditBox.get_AcceptsReturnProperty: IDependencyProperty;
begin
  Result := Statics.get_AcceptsReturnProperty;
end;

class function TRichEditBox.get_TextAlignmentProperty: IDependencyProperty;
begin
  Result := Statics.get_TextAlignmentProperty;
end;

class function TRichEditBox.get_TextWrappingProperty: IDependencyProperty;
begin
  Result := Statics.get_TextWrappingProperty;
end;

class function TRichEditBox.get_IsSpellCheckEnabledProperty: IDependencyProperty;
begin
  Result := Statics.get_IsSpellCheckEnabledProperty;
end;

class function TRichEditBox.get_IsTextPredictionEnabledProperty: IDependencyProperty;
begin
  Result := Statics.get_IsTextPredictionEnabledProperty;
end;

class function TRichEditBox.get_InputScopeProperty: IDependencyProperty;
begin
  Result := Statics.get_InputScopeProperty;
end;

class function TRichEditBox.get_HeaderProperty: IDependencyProperty;
begin
  Result := Statics.get_HeaderProperty;
end;

class function TRichEditBox.get_HeaderTemplateProperty: IDependencyProperty;
begin
  Result := Statics.get_HeaderTemplateProperty;
end;

class function TRichEditBox.get_PlaceholderTextProperty: IDependencyProperty;
begin
  Result := Statics.get_PlaceholderTextProperty;
end;

class function TRichEditBox.get_SelectionHighlightColorProperty: IDependencyProperty;
begin
  Result := Statics.get_SelectionHighlightColorProperty;
end;

class function TRichEditBox.get_PreventKeyboardDisplayOnProgrammaticFocusProperty: IDependencyProperty;
begin
  Result := Statics.get_PreventKeyboardDisplayOnProgrammaticFocusProperty;
end;

class function TRichEditBox.get_IsColorFontEnabledProperty: IDependencyProperty;
begin
  Result := Statics.get_IsColorFontEnabledProperty;
end;

class function TRichEditBox.get_SelectionHighlightColorWhenNotFocusedProperty: IDependencyProperty;
begin
  Result := Statics.get_SelectionHighlightColorWhenNotFocusedProperty;
end;

class function TRichEditBox.get_MaxLengthProperty: IDependencyProperty;
begin
  Result := Statics.get_MaxLengthProperty;
end;

class function TRichEditBox.get_HorizontalTextAlignmentProperty: IDependencyProperty;
begin
  Result := Statics.get_HorizontalTextAlignmentProperty;
end;

class function TRichEditBox.get_CharacterCasingProperty: IDependencyProperty;
begin
  Result := Statics.get_CharacterCasingProperty;
end;

class function TRichEditBox.get_DisabledFormattingAcceleratorsProperty: IDependencyProperty;
begin
  Result := Statics.get_DisabledFormattingAcceleratorsProperty;
end;

class function TRichEditBox.get_SelectionFlyoutProperty: IDependencyProperty;
begin
  Result := Statics.get_SelectionFlyoutProperty;
end;

class function TRichEditBox.get_ProofingMenuFlyoutProperty: IDependencyProperty;
begin
  Result := Statics.get_ProofingMenuFlyoutProperty;
end;

class function TRichEditBox.get_DescriptionProperty: IDependencyProperty;
begin
  Result := Statics.get_DescriptionProperty;
end;

class function TRichEditBox.get_DesiredCandidateWindowAlignmentProperty: IDependencyProperty;
begin
  Result := Statics.get_DesiredCandidateWindowAlignmentProperty;
end;

class function TRichEditBox.get_TextReadingOrderProperty: IDependencyProperty;
begin
  Result := Statics.get_TextReadingOrderProperty;
end;

class function TRichEditBox.get_ClipboardCopyFormatProperty: IDependencyProperty;
begin
  Result := Statics.get_ClipboardCopyFormatProperty;
end;

// Factories for : "RichEditBox"
// Factory: "Microsoft.UI.Xaml.Controls.IRichEditBoxFactory"
// -> IRichEditBoxFactory

class function TRichEditBox.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IRichEditBox;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TRichTextBlock }

class function TRichTextBlock.get_FontSizeProperty: IDependencyProperty;
begin
  Result := Statics.get_FontSizeProperty;
end;

class function TRichTextBlock.get_FontFamilyProperty: IDependencyProperty;
begin
  Result := Statics.get_FontFamilyProperty;
end;

class function TRichTextBlock.get_FontWeightProperty: IDependencyProperty;
begin
  Result := Statics.get_FontWeightProperty;
end;

class function TRichTextBlock.get_FontStyleProperty: IDependencyProperty;
begin
  Result := Statics.get_FontStyleProperty;
end;

class function TRichTextBlock.get_FontStretchProperty: IDependencyProperty;
begin
  Result := Statics.get_FontStretchProperty;
end;

class function TRichTextBlock.get_ForegroundProperty: IDependencyProperty;
begin
  Result := Statics.get_ForegroundProperty;
end;

class function TRichTextBlock.get_TextWrappingProperty: IDependencyProperty;
begin
  Result := Statics.get_TextWrappingProperty;
end;

class function TRichTextBlock.get_TextTrimmingProperty: IDependencyProperty;
begin
  Result := Statics.get_TextTrimmingProperty;
end;

class function TRichTextBlock.get_TextAlignmentProperty: IDependencyProperty;
begin
  Result := Statics.get_TextAlignmentProperty;
end;

class function TRichTextBlock.get_PaddingProperty: IDependencyProperty;
begin
  Result := Statics.get_PaddingProperty;
end;

class function TRichTextBlock.get_LineHeightProperty: IDependencyProperty;
begin
  Result := Statics.get_LineHeightProperty;
end;

class function TRichTextBlock.get_LineStackingStrategyProperty: IDependencyProperty;
begin
  Result := Statics.get_LineStackingStrategyProperty;
end;

class function TRichTextBlock.get_CharacterSpacingProperty: IDependencyProperty;
begin
  Result := Statics.get_CharacterSpacingProperty;
end;

class function TRichTextBlock.get_OverflowContentTargetProperty: IDependencyProperty;
begin
  Result := Statics.get_OverflowContentTargetProperty;
end;

class function TRichTextBlock.get_IsTextSelectionEnabledProperty: IDependencyProperty;
begin
  Result := Statics.get_IsTextSelectionEnabledProperty;
end;

class function TRichTextBlock.get_HasOverflowContentProperty: IDependencyProperty;
begin
  Result := Statics.get_HasOverflowContentProperty;
end;

class function TRichTextBlock.get_SelectedTextProperty: IDependencyProperty;
begin
  Result := Statics.get_SelectedTextProperty;
end;

class function TRichTextBlock.get_MaxLinesProperty: IDependencyProperty;
begin
  Result := Statics.get_MaxLinesProperty;
end;

class function TRichTextBlock.get_TextLineBoundsProperty: IDependencyProperty;
begin
  Result := Statics.get_TextLineBoundsProperty;
end;

class function TRichTextBlock.get_SelectionHighlightColorProperty: IDependencyProperty;
begin
  Result := Statics.get_SelectionHighlightColorProperty;
end;

class function TRichTextBlock.get_OpticalMarginAlignmentProperty: IDependencyProperty;
begin
  Result := Statics.get_OpticalMarginAlignmentProperty;
end;

class function TRichTextBlock.get_IsColorFontEnabledProperty: IDependencyProperty;
begin
  Result := Statics.get_IsColorFontEnabledProperty;
end;

class function TRichTextBlock.get_TextReadingOrderProperty: IDependencyProperty;
begin
  Result := Statics.get_TextReadingOrderProperty;
end;

class function TRichTextBlock.get_IsTextScaleFactorEnabledProperty: IDependencyProperty;
begin
  Result := Statics.get_IsTextScaleFactorEnabledProperty;
end;

class function TRichTextBlock.get_TextDecorationsProperty: IDependencyProperty;
begin
  Result := Statics.get_TextDecorationsProperty;
end;

class function TRichTextBlock.get_IsTextTrimmedProperty: IDependencyProperty;
begin
  Result := Statics.get_IsTextTrimmedProperty;
end;

class function TRichTextBlock.get_HorizontalTextAlignmentProperty: IDependencyProperty;
begin
  Result := Statics.get_HorizontalTextAlignmentProperty;
end;

class function TRichTextBlock.get_SelectionFlyoutProperty: IDependencyProperty;
begin
  Result := Statics.get_SelectionFlyoutProperty;
end;

class function TRichTextBlock.get_TextIndentProperty: IDependencyProperty;
begin
  Result := Statics.get_TextIndentProperty;
end;


{ TRichTextBlockOverflow }

class function TRichTextBlockOverflow.get_OverflowContentTargetProperty: IDependencyProperty;
begin
  Result := Statics.get_OverflowContentTargetProperty;
end;

class function TRichTextBlockOverflow.get_PaddingProperty: IDependencyProperty;
begin
  Result := Statics.get_PaddingProperty;
end;

class function TRichTextBlockOverflow.get_HasOverflowContentProperty: IDependencyProperty;
begin
  Result := Statics.get_HasOverflowContentProperty;
end;

class function TRichTextBlockOverflow.get_MaxLinesProperty: IDependencyProperty;
begin
  Result := Statics.get_MaxLinesProperty;
end;

class function TRichTextBlockOverflow.get_IsTextTrimmedProperty: IDependencyProperty;
begin
  Result := Statics.get_IsTextTrimmedProperty;
end;


{ TRowDefinition }

class function TRowDefinition.get_HeightProperty: IDependencyProperty;
begin
  Result := Statics.get_HeightProperty;
end;

class function TRowDefinition.get_MaxHeightProperty: IDependencyProperty;
begin
  Result := Statics.get_MaxHeightProperty;
end;

class function TRowDefinition.get_MinHeightProperty: IDependencyProperty;
begin
  Result := Statics.get_MinHeightProperty;
end;


{ TScrollContentPresenter }

class function TScrollContentPresenter.get_CanContentRenderOutsideBoundsProperty: IDependencyProperty;
begin
  Result := Statics.get_CanContentRenderOutsideBoundsProperty;
end;

class function TScrollContentPresenter.get_SizesContentToTemplatedParentProperty: IDependencyProperty;
begin
  Result := Statics.get_SizesContentToTemplatedParentProperty;
end;


{ TScrollViewer }

class function TScrollViewer.get_HorizontalSnapPointsAlignmentProperty: IDependencyProperty;
begin
  Result := Statics.get_HorizontalSnapPointsAlignmentProperty;
end;

class function TScrollViewer.get_VerticalSnapPointsAlignmentProperty: IDependencyProperty;
begin
  Result := Statics.get_VerticalSnapPointsAlignmentProperty;
end;

class function TScrollViewer.get_HorizontalSnapPointsTypeProperty: IDependencyProperty;
begin
  Result := Statics.get_HorizontalSnapPointsTypeProperty;
end;

class function TScrollViewer.get_VerticalSnapPointsTypeProperty: IDependencyProperty;
begin
  Result := Statics.get_VerticalSnapPointsTypeProperty;
end;

class function TScrollViewer.get_ZoomSnapPointsTypeProperty: IDependencyProperty;
begin
  Result := Statics.get_ZoomSnapPointsTypeProperty;
end;

class function TScrollViewer.get_HorizontalOffsetProperty: IDependencyProperty;
begin
  Result := Statics.get_HorizontalOffsetProperty;
end;

class function TScrollViewer.get_ViewportWidthProperty: IDependencyProperty;
begin
  Result := Statics.get_ViewportWidthProperty;
end;

class function TScrollViewer.get_ScrollableWidthProperty: IDependencyProperty;
begin
  Result := Statics.get_ScrollableWidthProperty;
end;

class function TScrollViewer.get_ComputedHorizontalScrollBarVisibilityProperty: IDependencyProperty;
begin
  Result := Statics.get_ComputedHorizontalScrollBarVisibilityProperty;
end;

class function TScrollViewer.get_ExtentWidthProperty: IDependencyProperty;
begin
  Result := Statics.get_ExtentWidthProperty;
end;

class function TScrollViewer.get_VerticalOffsetProperty: IDependencyProperty;
begin
  Result := Statics.get_VerticalOffsetProperty;
end;

class function TScrollViewer.get_ViewportHeightProperty: IDependencyProperty;
begin
  Result := Statics.get_ViewportHeightProperty;
end;

class function TScrollViewer.get_ScrollableHeightProperty: IDependencyProperty;
begin
  Result := Statics.get_ScrollableHeightProperty;
end;

class function TScrollViewer.get_ComputedVerticalScrollBarVisibilityProperty: IDependencyProperty;
begin
  Result := Statics.get_ComputedVerticalScrollBarVisibilityProperty;
end;

class function TScrollViewer.get_ExtentHeightProperty: IDependencyProperty;
begin
  Result := Statics.get_ExtentHeightProperty;
end;

class function TScrollViewer.get_MinZoomFactorProperty: IDependencyProperty;
begin
  Result := Statics.get_MinZoomFactorProperty;
end;

class function TScrollViewer.get_MaxZoomFactorProperty: IDependencyProperty;
begin
  Result := Statics.get_MaxZoomFactorProperty;
end;

class function TScrollViewer.get_ZoomFactorProperty: IDependencyProperty;
begin
  Result := Statics.get_ZoomFactorProperty;
end;

class function TScrollViewer.get_ZoomSnapPointsProperty: IDependencyProperty;
begin
  Result := Statics.get_ZoomSnapPointsProperty;
end;

class function TScrollViewer.get_TopLeftHeaderProperty: IDependencyProperty;
begin
  Result := Statics.get_TopLeftHeaderProperty;
end;

class function TScrollViewer.get_LeftHeaderProperty: IDependencyProperty;
begin
  Result := Statics.get_LeftHeaderProperty;
end;

class function TScrollViewer.get_TopHeaderProperty: IDependencyProperty;
begin
  Result := Statics.get_TopHeaderProperty;
end;

class function TScrollViewer.get_ReduceViewportForCoreInputViewOcclusionsProperty: IDependencyProperty;
begin
  Result := Statics.get_ReduceViewportForCoreInputViewOcclusionsProperty;
end;

class function TScrollViewer.get_HorizontalAnchorRatioProperty: IDependencyProperty;
begin
  Result := Statics.get_HorizontalAnchorRatioProperty;
end;

class function TScrollViewer.get_VerticalAnchorRatioProperty: IDependencyProperty;
begin
  Result := Statics.get_VerticalAnchorRatioProperty;
end;

class function TScrollViewer.get_HorizontalScrollBarVisibilityProperty: IDependencyProperty;
begin
  Result := Statics.get_HorizontalScrollBarVisibilityProperty;
end;

class function TScrollViewer.GetHorizontalScrollBarVisibility(element: IDependencyObject): ScrollBarVisibility;
begin
  Result := Statics.GetHorizontalScrollBarVisibility(element);
end;

class procedure TScrollViewer.SetHorizontalScrollBarVisibility(element: IDependencyObject; horizontalScrollBarVisibility: ScrollBarVisibility);
begin
  Statics.SetHorizontalScrollBarVisibility(element, horizontalScrollBarVisibility);
end;

class function TScrollViewer.get_VerticalScrollBarVisibilityProperty: IDependencyProperty;
begin
  Result := Statics.get_VerticalScrollBarVisibilityProperty;
end;

class function TScrollViewer.GetVerticalScrollBarVisibility(element: IDependencyObject): ScrollBarVisibility;
begin
  Result := Statics.GetVerticalScrollBarVisibility(element);
end;

class procedure TScrollViewer.SetVerticalScrollBarVisibility(element: IDependencyObject; verticalScrollBarVisibility: ScrollBarVisibility);
begin
  Statics.SetVerticalScrollBarVisibility(element, verticalScrollBarVisibility);
end;

class function TScrollViewer.get_IsHorizontalRailEnabledProperty: IDependencyProperty;
begin
  Result := Statics.get_IsHorizontalRailEnabledProperty;
end;

class function TScrollViewer.GetIsHorizontalRailEnabled(element: IDependencyObject): Boolean;
begin
  Result := Statics.GetIsHorizontalRailEnabled(element);
end;

class procedure TScrollViewer.SetIsHorizontalRailEnabled(element: IDependencyObject; isHorizontalRailEnabled: Boolean);
begin
  Statics.SetIsHorizontalRailEnabled(element, isHorizontalRailEnabled);
end;

class function TScrollViewer.get_IsVerticalRailEnabledProperty: IDependencyProperty;
begin
  Result := Statics.get_IsVerticalRailEnabledProperty;
end;

class function TScrollViewer.GetIsVerticalRailEnabled(element: IDependencyObject): Boolean;
begin
  Result := Statics.GetIsVerticalRailEnabled(element);
end;

class procedure TScrollViewer.SetIsVerticalRailEnabled(element: IDependencyObject; isVerticalRailEnabled: Boolean);
begin
  Statics.SetIsVerticalRailEnabled(element, isVerticalRailEnabled);
end;

class function TScrollViewer.get_IsHorizontalScrollChainingEnabledProperty: IDependencyProperty;
begin
  Result := Statics.get_IsHorizontalScrollChainingEnabledProperty;
end;

class function TScrollViewer.GetIsHorizontalScrollChainingEnabled(element: IDependencyObject): Boolean;
begin
  Result := Statics.GetIsHorizontalScrollChainingEnabled(element);
end;

class procedure TScrollViewer.SetIsHorizontalScrollChainingEnabled(element: IDependencyObject; isHorizontalScrollChainingEnabled: Boolean);
begin
  Statics.SetIsHorizontalScrollChainingEnabled(element, isHorizontalScrollChainingEnabled);
end;

class function TScrollViewer.get_IsVerticalScrollChainingEnabledProperty: IDependencyProperty;
begin
  Result := Statics.get_IsVerticalScrollChainingEnabledProperty;
end;

class function TScrollViewer.GetIsVerticalScrollChainingEnabled(element: IDependencyObject): Boolean;
begin
  Result := Statics.GetIsVerticalScrollChainingEnabled(element);
end;

class procedure TScrollViewer.SetIsVerticalScrollChainingEnabled(element: IDependencyObject; isVerticalScrollChainingEnabled: Boolean);
begin
  Statics.SetIsVerticalScrollChainingEnabled(element, isVerticalScrollChainingEnabled);
end;

class function TScrollViewer.get_IsZoomChainingEnabledProperty: IDependencyProperty;
begin
  Result := Statics.get_IsZoomChainingEnabledProperty;
end;

class function TScrollViewer.GetIsZoomChainingEnabled(element: IDependencyObject): Boolean;
begin
  Result := Statics.GetIsZoomChainingEnabled(element);
end;

class procedure TScrollViewer.SetIsZoomChainingEnabled(element: IDependencyObject; isZoomChainingEnabled: Boolean);
begin
  Statics.SetIsZoomChainingEnabled(element, isZoomChainingEnabled);
end;

class function TScrollViewer.get_IsScrollInertiaEnabledProperty: IDependencyProperty;
begin
  Result := Statics.get_IsScrollInertiaEnabledProperty;
end;

class function TScrollViewer.GetIsScrollInertiaEnabled(element: IDependencyObject): Boolean;
begin
  Result := Statics.GetIsScrollInertiaEnabled(element);
end;

class procedure TScrollViewer.SetIsScrollInertiaEnabled(element: IDependencyObject; isScrollInertiaEnabled: Boolean);
begin
  Statics.SetIsScrollInertiaEnabled(element, isScrollInertiaEnabled);
end;

class function TScrollViewer.get_IsZoomInertiaEnabledProperty: IDependencyProperty;
begin
  Result := Statics.get_IsZoomInertiaEnabledProperty;
end;

class function TScrollViewer.GetIsZoomInertiaEnabled(element: IDependencyObject): Boolean;
begin
  Result := Statics.GetIsZoomInertiaEnabled(element);
end;

class procedure TScrollViewer.SetIsZoomInertiaEnabled(element: IDependencyObject; isZoomInertiaEnabled: Boolean);
begin
  Statics.SetIsZoomInertiaEnabled(element, isZoomInertiaEnabled);
end;

class function TScrollViewer.get_HorizontalScrollModeProperty: IDependencyProperty;
begin
  Result := Statics.get_HorizontalScrollModeProperty;
end;

class function TScrollViewer.GetHorizontalScrollMode(element: IDependencyObject): ScrollMode;
begin
  Result := Statics.GetHorizontalScrollMode(element);
end;

class procedure TScrollViewer.SetHorizontalScrollMode(element: IDependencyObject; horizontalScrollMode: ScrollMode);
begin
  Statics.SetHorizontalScrollMode(element, horizontalScrollMode);
end;

class function TScrollViewer.get_VerticalScrollModeProperty: IDependencyProperty;
begin
  Result := Statics.get_VerticalScrollModeProperty;
end;

class function TScrollViewer.GetVerticalScrollMode(element: IDependencyObject): ScrollMode;
begin
  Result := Statics.GetVerticalScrollMode(element);
end;

class procedure TScrollViewer.SetVerticalScrollMode(element: IDependencyObject; verticalScrollMode: ScrollMode);
begin
  Statics.SetVerticalScrollMode(element, verticalScrollMode);
end;

class function TScrollViewer.get_ZoomModeProperty: IDependencyProperty;
begin
  Result := Statics.get_ZoomModeProperty;
end;

class function TScrollViewer.GetZoomMode(element: IDependencyObject): ZoomMode;
begin
  Result := Statics.GetZoomMode(element);
end;

class procedure TScrollViewer.SetZoomMode(element: IDependencyObject; zoomMode: ZoomMode);
begin
  Statics.SetZoomMode(element, zoomMode);
end;

class function TScrollViewer.get_CanContentRenderOutsideBoundsProperty: IDependencyProperty;
begin
  Result := Statics.get_CanContentRenderOutsideBoundsProperty;
end;

class function TScrollViewer.GetCanContentRenderOutsideBounds(element: IDependencyObject): Boolean;
begin
  Result := Statics.GetCanContentRenderOutsideBounds(element);
end;

class procedure TScrollViewer.SetCanContentRenderOutsideBounds(element: IDependencyObject; canContentRenderOutsideBounds: Boolean);
begin
  Statics.SetCanContentRenderOutsideBounds(element, canContentRenderOutsideBounds);
end;

class function TScrollViewer.get_IsDeferredScrollingEnabledProperty: IDependencyProperty;
begin
  Result := Statics.get_IsDeferredScrollingEnabledProperty;
end;

class function TScrollViewer.GetIsDeferredScrollingEnabled(element: IDependencyObject): Boolean;
begin
  Result := Statics.GetIsDeferredScrollingEnabled(element);
end;

class procedure TScrollViewer.SetIsDeferredScrollingEnabled(element: IDependencyObject; isDeferredScrollingEnabled: Boolean);
begin
  Statics.SetIsDeferredScrollingEnabled(element, isDeferredScrollingEnabled);
end;

class function TScrollViewer.get_BringIntoViewOnFocusChangeProperty: IDependencyProperty;
begin
  Result := Statics.get_BringIntoViewOnFocusChangeProperty;
end;

class function TScrollViewer.GetBringIntoViewOnFocusChange(element: IDependencyObject): Boolean;
begin
  Result := Statics.GetBringIntoViewOnFocusChange(element);
end;

class procedure TScrollViewer.SetBringIntoViewOnFocusChange(element: IDependencyObject; bringIntoViewOnFocusChange: Boolean);
begin
  Statics.SetBringIntoViewOnFocusChange(element, bringIntoViewOnFocusChange);
end;


{ TScrollViewerViewChangedEventArgs }

{ TSectionsInViewChangedEventArgs }
// Factories for : "SectionsInViewChangedEventArgs"
// Factory: "Microsoft.UI.Xaml.Controls.ISectionsInViewChangedEventArgsFactory"
// -> ISectionsInViewChangedEventArgsFactory


{ TSelectionChangedEventArgs }
// Factories for : "SelectionChangedEventArgs"
// Factory: "Microsoft.UI.Xaml.Controls.ISelectionChangedEventArgsFactory"
// -> ISelectionChangedEventArgsFactory

class function TSelectionChangedEventArgs.CreateInstanceWithRemovedItemsAndAddedItems(removedItems: IVector_1__IInspectable; addedItems: IVector_1__IInspectable; baseInterface: IInspectable; out innerInterface: IInspectable): ISelectionChangedEventArgs;
begin
  Result := Factory.CreateInstanceWithRemovedItemsAndAddedItems(removedItems, addedItems, baseInterface, innerInterface);
end;


{ TSemanticZoom }

class function TSemanticZoom.get_ZoomedInViewProperty: IDependencyProperty;
begin
  Result := Statics.get_ZoomedInViewProperty;
end;

class function TSemanticZoom.get_ZoomedOutViewProperty: IDependencyProperty;
begin
  Result := Statics.get_ZoomedOutViewProperty;
end;

class function TSemanticZoom.get_IsZoomedInViewActiveProperty: IDependencyProperty;
begin
  Result := Statics.get_IsZoomedInViewActiveProperty;
end;

class function TSemanticZoom.get_CanChangeViewsProperty: IDependencyProperty;
begin
  Result := Statics.get_CanChangeViewsProperty;
end;

class function TSemanticZoom.get_IsZoomOutButtonEnabledProperty: IDependencyProperty;
begin
  Result := Statics.get_IsZoomOutButtonEnabledProperty;
end;


{ TSemanticZoomLocation }

{ TSemanticZoomViewChangedEventArgs }

{ TSplitButton }

class function TSplitButton.get_FlyoutProperty: IDependencyProperty;
begin
  Result := Statics.get_FlyoutProperty;
end;

class function TSplitButton.get_CommandProperty: IDependencyProperty;
begin
  Result := Statics.get_CommandProperty;
end;

class function TSplitButton.get_CommandParameterProperty: IDependencyProperty;
begin
  Result := Statics.get_CommandParameterProperty;
end;

// Factories for : "SplitButton"
// Factory: "Microsoft.UI.Xaml.Controls.ISplitButtonFactory"
// -> ISplitButtonFactory

class function TSplitButton.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): ISplitButton;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TSplitView }

class function TSplitView.get_ContentProperty: IDependencyProperty;
begin
  Result := Statics.get_ContentProperty;
end;

class function TSplitView.get_PaneProperty: IDependencyProperty;
begin
  Result := Statics.get_PaneProperty;
end;

class function TSplitView.get_IsPaneOpenProperty: IDependencyProperty;
begin
  Result := Statics.get_IsPaneOpenProperty;
end;

class function TSplitView.get_OpenPaneLengthProperty: IDependencyProperty;
begin
  Result := Statics.get_OpenPaneLengthProperty;
end;

class function TSplitView.get_CompactPaneLengthProperty: IDependencyProperty;
begin
  Result := Statics.get_CompactPaneLengthProperty;
end;

class function TSplitView.get_PanePlacementProperty: IDependencyProperty;
begin
  Result := Statics.get_PanePlacementProperty;
end;

class function TSplitView.get_DisplayModeProperty: IDependencyProperty;
begin
  Result := Statics.get_DisplayModeProperty;
end;

class function TSplitView.get_TemplateSettingsProperty: IDependencyProperty;
begin
  Result := Statics.get_TemplateSettingsProperty;
end;

class function TSplitView.get_PaneBackgroundProperty: IDependencyProperty;
begin
  Result := Statics.get_PaneBackgroundProperty;
end;

class function TSplitView.get_LightDismissOverlayModeProperty: IDependencyProperty;
begin
  Result := Statics.get_LightDismissOverlayModeProperty;
end;

// Factories for : "SplitView"
// Factory: "Microsoft.UI.Xaml.Controls.ISplitViewFactory"
// -> ISplitViewFactory

class function TSplitView.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): ISplitView;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TVirtualizingLayout }
// Factories for : "VirtualizingLayout"
// Factory: "Microsoft.UI.Xaml.Controls.IVirtualizingLayoutFactory"
// -> IVirtualizingLayoutFactory

class function TVirtualizingLayout.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IVirtualizingLayout;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TStackLayout }

class function TStackLayout.get_OrientationProperty: IDependencyProperty;
begin
  Result := Statics.get_OrientationProperty;
end;

class function TStackLayout.get_SpacingProperty: IDependencyProperty;
begin
  Result := Statics.get_SpacingProperty;
end;

// Factories for : "StackLayout"
// Factory: "Microsoft.UI.Xaml.Controls.IStackLayoutFactory"
// -> IStackLayoutFactory

class function TStackLayout.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IStackLayout;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TStackPanel }

class function TStackPanel.get_AreScrollSnapPointsRegularProperty: IDependencyProperty;
begin
  Result := Statics.get_AreScrollSnapPointsRegularProperty;
end;

class function TStackPanel.get_OrientationProperty: IDependencyProperty;
begin
  Result := Statics.get_OrientationProperty;
end;

class function TStackPanel.get_BackgroundSizingProperty: IDependencyProperty;
begin
  Result := Statics.get_BackgroundSizingProperty;
end;

class function TStackPanel.get_BorderBrushProperty: IDependencyProperty;
begin
  Result := Statics.get_BorderBrushProperty;
end;

class function TStackPanel.get_BorderThicknessProperty: IDependencyProperty;
begin
  Result := Statics.get_BorderThicknessProperty;
end;

class function TStackPanel.get_CornerRadiusProperty: IDependencyProperty;
begin
  Result := Statics.get_CornerRadiusProperty;
end;

class function TStackPanel.get_PaddingProperty: IDependencyProperty;
begin
  Result := Statics.get_PaddingProperty;
end;

class function TStackPanel.get_SpacingProperty: IDependencyProperty;
begin
  Result := Statics.get_SpacingProperty;
end;

// Factories for : "StackPanel"
// Factory: "Microsoft.UI.Xaml.Controls.IStackPanelFactory"
// -> IStackPanelFactory

class function TStackPanel.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IStackPanel;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TStyleSelector }
// Factories for : "StyleSelector"
// Factory: "Microsoft.UI.Xaml.Controls.IStyleSelectorFactory"
// -> IStyleSelectorFactory

class function TStyleSelector.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IStyleSelector;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TSwapChainBackgroundPanel }
// Factories for : "SwapChainBackgroundPanel"
// Factory: "Microsoft.UI.Xaml.Controls.ISwapChainBackgroundPanelFactory"
// -> ISwapChainBackgroundPanelFactory

class function TSwapChainBackgroundPanel.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): ISwapChainBackgroundPanel;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TSwapChainPanel }

class function TSwapChainPanel.get_CompositionScaleXProperty: IDependencyProperty;
begin
  Result := Statics.get_CompositionScaleXProperty;
end;

class function TSwapChainPanel.get_CompositionScaleYProperty: IDependencyProperty;
begin
  Result := Statics.get_CompositionScaleYProperty;
end;

// Factories for : "SwapChainPanel"
// Factory: "Microsoft.UI.Xaml.Controls.ISwapChainPanelFactory"
// -> ISwapChainPanelFactory

class function TSwapChainPanel.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): ISwapChainPanel;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TSwipeControl }

class function TSwipeControl.get_LeftItemsProperty: IDependencyProperty;
begin
  Result := Statics.get_LeftItemsProperty;
end;

class function TSwipeControl.get_RightItemsProperty: IDependencyProperty;
begin
  Result := Statics.get_RightItemsProperty;
end;

class function TSwipeControl.get_TopItemsProperty: IDependencyProperty;
begin
  Result := Statics.get_TopItemsProperty;
end;

class function TSwipeControl.get_BottomItemsProperty: IDependencyProperty;
begin
  Result := Statics.get_BottomItemsProperty;
end;

// Factories for : "SwipeControl"
// Factory: "Microsoft.UI.Xaml.Controls.ISwipeControlFactory"
// -> ISwipeControlFactory

class function TSwipeControl.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): ISwipeControl;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TSwipeItem }

class function TSwipeItem.get_IconSourceProperty: IDependencyProperty;
begin
  Result := Statics.get_IconSourceProperty;
end;

class function TSwipeItem.get_TextProperty: IDependencyProperty;
begin
  Result := Statics.get_TextProperty;
end;

class function TSwipeItem.get_BackgroundProperty: IDependencyProperty;
begin
  Result := Statics.get_BackgroundProperty;
end;

class function TSwipeItem.get_ForegroundProperty: IDependencyProperty;
begin
  Result := Statics.get_ForegroundProperty;
end;

class function TSwipeItem.get_CommandProperty: IDependencyProperty;
begin
  Result := Statics.get_CommandProperty;
end;

class function TSwipeItem.get_CommandParameterProperty: IDependencyProperty;
begin
  Result := Statics.get_CommandParameterProperty;
end;

class function TSwipeItem.get_BehaviorOnInvokedProperty: IDependencyProperty;
begin
  Result := Statics.get_BehaviorOnInvokedProperty;
end;

// Factories for : "SwipeItem"
// Factory: "Microsoft.UI.Xaml.Controls.ISwipeItemFactory"
// -> ISwipeItemFactory

class function TSwipeItem.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): ISwipeItem;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TSwipeItems }

class function TSwipeItems.get_ModeProperty: IDependencyProperty;
begin
  Result := Statics.get_ModeProperty;
end;

// Factories for : "SwipeItems"
// Factory: "Microsoft.UI.Xaml.Controls.ISwipeItemsFactory"
// -> ISwipeItemsFactory

class function TSwipeItems.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): ISwipeItems;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TSymbolIcon }

class function TSymbolIcon.get_SymbolProperty: IDependencyProperty;
begin
  Result := Statics.get_SymbolProperty;
end;

// Factories for : "SymbolIcon"
// Factory: "Microsoft.UI.Xaml.Controls.ISymbolIconFactory"
// -> ISymbolIconFactory

class function TSymbolIcon.CreateInstanceWithSymbol(symbol: Symbol): ISymbolIcon;
begin
  Result := Factory.CreateInstanceWithSymbol(symbol);
end;


{ TSymbolIconSource }

class function TSymbolIconSource.get_SymbolProperty: IDependencyProperty;
begin
  Result := Statics.get_SymbolProperty;
end;

// Factories for : "SymbolIconSource"
// Factory: "Microsoft.UI.Xaml.Controls.ISymbolIconSourceFactory"
// -> ISymbolIconSourceFactory

class function TSymbolIconSource.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): ISymbolIconSource;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TTabView }

class function TTabView.get_TabWidthModeProperty: IDependencyProperty;
begin
  Result := Statics.get_TabWidthModeProperty;
end;

class function TTabView.get_TabStripHeaderProperty: IDependencyProperty;
begin
  Result := Statics.get_TabStripHeaderProperty;
end;

class function TTabView.get_TabStripHeaderTemplateProperty: IDependencyProperty;
begin
  Result := Statics.get_TabStripHeaderTemplateProperty;
end;

class function TTabView.get_TabStripFooterProperty: IDependencyProperty;
begin
  Result := Statics.get_TabStripFooterProperty;
end;

class function TTabView.get_TabStripFooterTemplateProperty: IDependencyProperty;
begin
  Result := Statics.get_TabStripFooterTemplateProperty;
end;

class function TTabView.get_IsAddTabButtonVisibleProperty: IDependencyProperty;
begin
  Result := Statics.get_IsAddTabButtonVisibleProperty;
end;

class function TTabView.get_AddTabButtonCommandProperty: IDependencyProperty;
begin
  Result := Statics.get_AddTabButtonCommandProperty;
end;

class function TTabView.get_AddTabButtonCommandParameterProperty: IDependencyProperty;
begin
  Result := Statics.get_AddTabButtonCommandParameterProperty;
end;

class function TTabView.get_TabItemsSourceProperty: IDependencyProperty;
begin
  Result := Statics.get_TabItemsSourceProperty;
end;

class function TTabView.get_TabItemsProperty: IDependencyProperty;
begin
  Result := Statics.get_TabItemsProperty;
end;

class function TTabView.get_TabItemTemplateProperty: IDependencyProperty;
begin
  Result := Statics.get_TabItemTemplateProperty;
end;

class function TTabView.get_TabItemTemplateSelectorProperty: IDependencyProperty;
begin
  Result := Statics.get_TabItemTemplateSelectorProperty;
end;

class function TTabView.get_CloseButtonOverlayModeProperty: IDependencyProperty;
begin
  Result := Statics.get_CloseButtonOverlayModeProperty;
end;

class function TTabView.get_CanDragTabsProperty: IDependencyProperty;
begin
  Result := Statics.get_CanDragTabsProperty;
end;

class function TTabView.get_CanReorderTabsProperty: IDependencyProperty;
begin
  Result := Statics.get_CanReorderTabsProperty;
end;

class function TTabView.get_AllowDropTabsProperty: IDependencyProperty;
begin
  Result := Statics.get_AllowDropTabsProperty;
end;

class function TTabView.get_SelectedIndexProperty: IDependencyProperty;
begin
  Result := Statics.get_SelectedIndexProperty;
end;

class function TTabView.get_SelectedItemProperty: IDependencyProperty;
begin
  Result := Statics.get_SelectedItemProperty;
end;

// Factories for : "TabView"
// Factory: "Microsoft.UI.Xaml.Controls.ITabViewFactory"
// -> ITabViewFactory

class function TTabView.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): ITabView;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TTabViewItem }

class function TTabViewItem.get_HeaderProperty: IDependencyProperty;
begin
  Result := Statics.get_HeaderProperty;
end;

class function TTabViewItem.get_HeaderTemplateProperty: IDependencyProperty;
begin
  Result := Statics.get_HeaderTemplateProperty;
end;

class function TTabViewItem.get_IconSourceProperty: IDependencyProperty;
begin
  Result := Statics.get_IconSourceProperty;
end;

class function TTabViewItem.get_IsClosableProperty: IDependencyProperty;
begin
  Result := Statics.get_IsClosableProperty;
end;

class function TTabViewItem.get_TabViewTemplateSettingsProperty: IDependencyProperty;
begin
  Result := Statics.get_TabViewTemplateSettingsProperty;
end;

// Factories for : "TabViewItem"
// Factory: "Microsoft.UI.Xaml.Controls.ITabViewItemFactory"
// -> ITabViewItemFactory

class function TTabViewItem.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): ITabViewItem;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TTabViewItemTemplateSettings }

class function TTabViewItemTemplateSettings.get_IconElementProperty: IDependencyProperty;
begin
  Result := Statics.get_IconElementProperty;
end;


class function TTabViewItemTemplateSettings.get_TabGeometryProperty: IDependencyProperty;
begin
  Result := Statics2.get_TabGeometryProperty;
end;

// Factories for : "TabViewItemTemplateSettings"
// Factory: "Microsoft.UI.Xaml.Controls.ITabViewItemTemplateSettingsFactory"
// -> ITabViewItemTemplateSettingsFactory

class function TTabViewItemTemplateSettings.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): ITabViewItemTemplateSettings;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TTeachingTip }

class function TTeachingTip.get_IsOpenProperty: IDependencyProperty;
begin
  Result := Statics.get_IsOpenProperty;
end;

class function TTeachingTip.get_TargetProperty: IDependencyProperty;
begin
  Result := Statics.get_TargetProperty;
end;

class function TTeachingTip.get_TailVisibilityProperty: IDependencyProperty;
begin
  Result := Statics.get_TailVisibilityProperty;
end;

class function TTeachingTip.get_TitleProperty: IDependencyProperty;
begin
  Result := Statics.get_TitleProperty;
end;

class function TTeachingTip.get_SubtitleProperty: IDependencyProperty;
begin
  Result := Statics.get_SubtitleProperty;
end;

class function TTeachingTip.get_ActionButtonContentProperty: IDependencyProperty;
begin
  Result := Statics.get_ActionButtonContentProperty;
end;

class function TTeachingTip.get_ActionButtonStyleProperty: IDependencyProperty;
begin
  Result := Statics.get_ActionButtonStyleProperty;
end;

class function TTeachingTip.get_ActionButtonCommandProperty: IDependencyProperty;
begin
  Result := Statics.get_ActionButtonCommandProperty;
end;

class function TTeachingTip.get_ActionButtonCommandParameterProperty: IDependencyProperty;
begin
  Result := Statics.get_ActionButtonCommandParameterProperty;
end;

class function TTeachingTip.get_CloseButtonContentProperty: IDependencyProperty;
begin
  Result := Statics.get_CloseButtonContentProperty;
end;

class function TTeachingTip.get_CloseButtonStyleProperty: IDependencyProperty;
begin
  Result := Statics.get_CloseButtonStyleProperty;
end;

class function TTeachingTip.get_CloseButtonCommandProperty: IDependencyProperty;
begin
  Result := Statics.get_CloseButtonCommandProperty;
end;

class function TTeachingTip.get_CloseButtonCommandParameterProperty: IDependencyProperty;
begin
  Result := Statics.get_CloseButtonCommandParameterProperty;
end;

class function TTeachingTip.get_PlacementMarginProperty: IDependencyProperty;
begin
  Result := Statics.get_PlacementMarginProperty;
end;

class function TTeachingTip.get_ShouldConstrainToRootBoundsProperty: IDependencyProperty;
begin
  Result := Statics.get_ShouldConstrainToRootBoundsProperty;
end;

class function TTeachingTip.get_IsLightDismissEnabledProperty: IDependencyProperty;
begin
  Result := Statics.get_IsLightDismissEnabledProperty;
end;

class function TTeachingTip.get_PreferredPlacementProperty: IDependencyProperty;
begin
  Result := Statics.get_PreferredPlacementProperty;
end;

class function TTeachingTip.get_HeroContentPlacementProperty: IDependencyProperty;
begin
  Result := Statics.get_HeroContentPlacementProperty;
end;

class function TTeachingTip.get_HeroContentProperty: IDependencyProperty;
begin
  Result := Statics.get_HeroContentProperty;
end;

class function TTeachingTip.get_IconSourceProperty: IDependencyProperty;
begin
  Result := Statics.get_IconSourceProperty;
end;

class function TTeachingTip.get_TemplateSettingsProperty: IDependencyProperty;
begin
  Result := Statics.get_TemplateSettingsProperty;
end;

// Factories for : "TeachingTip"
// Factory: "Microsoft.UI.Xaml.Controls.ITeachingTipFactory"
// -> ITeachingTipFactory

class function TTeachingTip.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): ITeachingTip;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TTeachingTipTemplateSettings }

class function TTeachingTipTemplateSettings.get_TopRightHighlightMarginProperty: IDependencyProperty;
begin
  Result := Statics.get_TopRightHighlightMarginProperty;
end;

class function TTeachingTipTemplateSettings.get_TopLeftHighlightMarginProperty: IDependencyProperty;
begin
  Result := Statics.get_TopLeftHighlightMarginProperty;
end;

class function TTeachingTipTemplateSettings.get_IconElementProperty: IDependencyProperty;
begin
  Result := Statics.get_IconElementProperty;
end;

// Factories for : "TeachingTipTemplateSettings"
// Factory: "Microsoft.UI.Xaml.Controls.ITeachingTipTemplateSettingsFactory"
// -> ITeachingTipTemplateSettingsFactory

class function TTeachingTipTemplateSettings.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): ITeachingTipTemplateSettings;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TTextBlock }

class function TTextBlock.get_FontSizeProperty: IDependencyProperty;
begin
  Result := Statics.get_FontSizeProperty;
end;

class function TTextBlock.get_FontFamilyProperty: IDependencyProperty;
begin
  Result := Statics.get_FontFamilyProperty;
end;

class function TTextBlock.get_FontWeightProperty: IDependencyProperty;
begin
  Result := Statics.get_FontWeightProperty;
end;

class function TTextBlock.get_FontStyleProperty: IDependencyProperty;
begin
  Result := Statics.get_FontStyleProperty;
end;

class function TTextBlock.get_FontStretchProperty: IDependencyProperty;
begin
  Result := Statics.get_FontStretchProperty;
end;

class function TTextBlock.get_CharacterSpacingProperty: IDependencyProperty;
begin
  Result := Statics.get_CharacterSpacingProperty;
end;

class function TTextBlock.get_ForegroundProperty: IDependencyProperty;
begin
  Result := Statics.get_ForegroundProperty;
end;

class function TTextBlock.get_TextWrappingProperty: IDependencyProperty;
begin
  Result := Statics.get_TextWrappingProperty;
end;

class function TTextBlock.get_TextTrimmingProperty: IDependencyProperty;
begin
  Result := Statics.get_TextTrimmingProperty;
end;

class function TTextBlock.get_TextAlignmentProperty: IDependencyProperty;
begin
  Result := Statics.get_TextAlignmentProperty;
end;

class function TTextBlock.get_TextProperty: IDependencyProperty;
begin
  Result := Statics.get_TextProperty;
end;

class function TTextBlock.get_PaddingProperty: IDependencyProperty;
begin
  Result := Statics.get_PaddingProperty;
end;

class function TTextBlock.get_LineHeightProperty: IDependencyProperty;
begin
  Result := Statics.get_LineHeightProperty;
end;

class function TTextBlock.get_LineStackingStrategyProperty: IDependencyProperty;
begin
  Result := Statics.get_LineStackingStrategyProperty;
end;

class function TTextBlock.get_IsTextSelectionEnabledProperty: IDependencyProperty;
begin
  Result := Statics.get_IsTextSelectionEnabledProperty;
end;

class function TTextBlock.get_SelectedTextProperty: IDependencyProperty;
begin
  Result := Statics.get_SelectedTextProperty;
end;

class function TTextBlock.get_SelectionHighlightColorProperty: IDependencyProperty;
begin
  Result := Statics.get_SelectionHighlightColorProperty;
end;

class function TTextBlock.get_MaxLinesProperty: IDependencyProperty;
begin
  Result := Statics.get_MaxLinesProperty;
end;

class function TTextBlock.get_TextLineBoundsProperty: IDependencyProperty;
begin
  Result := Statics.get_TextLineBoundsProperty;
end;

class function TTextBlock.get_OpticalMarginAlignmentProperty: IDependencyProperty;
begin
  Result := Statics.get_OpticalMarginAlignmentProperty;
end;

class function TTextBlock.get_IsColorFontEnabledProperty: IDependencyProperty;
begin
  Result := Statics.get_IsColorFontEnabledProperty;
end;

class function TTextBlock.get_TextReadingOrderProperty: IDependencyProperty;
begin
  Result := Statics.get_TextReadingOrderProperty;
end;

class function TTextBlock.get_IsTextScaleFactorEnabledProperty: IDependencyProperty;
begin
  Result := Statics.get_IsTextScaleFactorEnabledProperty;
end;

class function TTextBlock.get_TextDecorationsProperty: IDependencyProperty;
begin
  Result := Statics.get_TextDecorationsProperty;
end;

class function TTextBlock.get_IsTextTrimmedProperty: IDependencyProperty;
begin
  Result := Statics.get_IsTextTrimmedProperty;
end;

class function TTextBlock.get_HorizontalTextAlignmentProperty: IDependencyProperty;
begin
  Result := Statics.get_HorizontalTextAlignmentProperty;
end;

class function TTextBlock.get_SelectionFlyoutProperty: IDependencyProperty;
begin
  Result := Statics.get_SelectionFlyoutProperty;
end;


{ TTextBox }

class function TTextBox.get_TextProperty: IDependencyProperty;
begin
  Result := Statics.get_TextProperty;
end;

class function TTextBox.get_MaxLengthProperty: IDependencyProperty;
begin
  Result := Statics.get_MaxLengthProperty;
end;

class function TTextBox.get_IsReadOnlyProperty: IDependencyProperty;
begin
  Result := Statics.get_IsReadOnlyProperty;
end;

class function TTextBox.get_AcceptsReturnProperty: IDependencyProperty;
begin
  Result := Statics.get_AcceptsReturnProperty;
end;

class function TTextBox.get_TextAlignmentProperty: IDependencyProperty;
begin
  Result := Statics.get_TextAlignmentProperty;
end;

class function TTextBox.get_TextWrappingProperty: IDependencyProperty;
begin
  Result := Statics.get_TextWrappingProperty;
end;

class function TTextBox.get_IsSpellCheckEnabledProperty: IDependencyProperty;
begin
  Result := Statics.get_IsSpellCheckEnabledProperty;
end;

class function TTextBox.get_IsTextPredictionEnabledProperty: IDependencyProperty;
begin
  Result := Statics.get_IsTextPredictionEnabledProperty;
end;

class function TTextBox.get_InputScopeProperty: IDependencyProperty;
begin
  Result := Statics.get_InputScopeProperty;
end;

class function TTextBox.get_HeaderProperty: IDependencyProperty;
begin
  Result := Statics.get_HeaderProperty;
end;

class function TTextBox.get_HeaderTemplateProperty: IDependencyProperty;
begin
  Result := Statics.get_HeaderTemplateProperty;
end;

class function TTextBox.get_PlaceholderTextProperty: IDependencyProperty;
begin
  Result := Statics.get_PlaceholderTextProperty;
end;

class function TTextBox.get_SelectionHighlightColorProperty: IDependencyProperty;
begin
  Result := Statics.get_SelectionHighlightColorProperty;
end;

class function TTextBox.get_PreventKeyboardDisplayOnProgrammaticFocusProperty: IDependencyProperty;
begin
  Result := Statics.get_PreventKeyboardDisplayOnProgrammaticFocusProperty;
end;

class function TTextBox.get_IsColorFontEnabledProperty: IDependencyProperty;
begin
  Result := Statics.get_IsColorFontEnabledProperty;
end;

class function TTextBox.get_SelectionHighlightColorWhenNotFocusedProperty: IDependencyProperty;
begin
  Result := Statics.get_SelectionHighlightColorWhenNotFocusedProperty;
end;

class function TTextBox.get_HorizontalTextAlignmentProperty: IDependencyProperty;
begin
  Result := Statics.get_HorizontalTextAlignmentProperty;
end;

class function TTextBox.get_CharacterCasingProperty: IDependencyProperty;
begin
  Result := Statics.get_CharacterCasingProperty;
end;

class function TTextBox.get_PlaceholderForegroundProperty: IDependencyProperty;
begin
  Result := Statics.get_PlaceholderForegroundProperty;
end;

class function TTextBox.get_CanPasteClipboardContentProperty: IDependencyProperty;
begin
  Result := Statics.get_CanPasteClipboardContentProperty;
end;

class function TTextBox.get_CanUndoProperty: IDependencyProperty;
begin
  Result := Statics.get_CanUndoProperty;
end;

class function TTextBox.get_CanRedoProperty: IDependencyProperty;
begin
  Result := Statics.get_CanRedoProperty;
end;

class function TTextBox.get_SelectionFlyoutProperty: IDependencyProperty;
begin
  Result := Statics.get_SelectionFlyoutProperty;
end;

class function TTextBox.get_ProofingMenuFlyoutProperty: IDependencyProperty;
begin
  Result := Statics.get_ProofingMenuFlyoutProperty;
end;

class function TTextBox.get_DescriptionProperty: IDependencyProperty;
begin
  Result := Statics.get_DescriptionProperty;
end;

class function TTextBox.get_DesiredCandidateWindowAlignmentProperty: IDependencyProperty;
begin
  Result := Statics.get_DesiredCandidateWindowAlignmentProperty;
end;

class function TTextBox.get_TextReadingOrderProperty: IDependencyProperty;
begin
  Result := Statics.get_TextReadingOrderProperty;
end;

// Factories for : "TextBox"
// Factory: "Microsoft.UI.Xaml.Controls.ITextBoxFactory"
// -> ITextBoxFactory

class function TTextBox.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): ITextBox;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TTextCommandBarFlyout }
// Factories for : "TextCommandBarFlyout"
// Factory: "Microsoft.UI.Xaml.Controls.ITextCommandBarFlyoutFactory"
// -> ITextCommandBarFlyoutFactory

class function TTextCommandBarFlyout.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): ITextCommandBarFlyout;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TTimePickedEventArgs }

{ TTimePicker }

class function TTimePicker.get_HeaderProperty: IDependencyProperty;
begin
  Result := Statics.get_HeaderProperty;
end;

class function TTimePicker.get_HeaderTemplateProperty: IDependencyProperty;
begin
  Result := Statics.get_HeaderTemplateProperty;
end;

class function TTimePicker.get_ClockIdentifierProperty: IDependencyProperty;
begin
  Result := Statics.get_ClockIdentifierProperty;
end;

class function TTimePicker.get_MinuteIncrementProperty: IDependencyProperty;
begin
  Result := Statics.get_MinuteIncrementProperty;
end;

class function TTimePicker.get_TimeProperty: IDependencyProperty;
begin
  Result := Statics.get_TimeProperty;
end;

class function TTimePicker.get_LightDismissOverlayModeProperty: IDependencyProperty;
begin
  Result := Statics.get_LightDismissOverlayModeProperty;
end;

class function TTimePicker.get_SelectedTimeProperty: IDependencyProperty;
begin
  Result := Statics.get_SelectedTimeProperty;
end;

// Factories for : "TimePicker"
// Factory: "Microsoft.UI.Xaml.Controls.ITimePickerFactory"
// -> ITimePickerFactory

class function TTimePicker.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): ITimePicker;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TTimePickerFlyout }

class function TTimePickerFlyout.get_ClockIdentifierProperty: IDependencyProperty;
begin
  Result := Statics.get_ClockIdentifierProperty;
end;

class function TTimePickerFlyout.get_TimeProperty: IDependencyProperty;
begin
  Result := Statics.get_TimeProperty;
end;

class function TTimePickerFlyout.get_MinuteIncrementProperty: IDependencyProperty;
begin
  Result := Statics.get_MinuteIncrementProperty;
end;


{ TTimePickerFlyoutPresenter }

class function TTimePickerFlyoutPresenter.get_IsDefaultShadowEnabledProperty: IDependencyProperty;
begin
  Result := Statics.get_IsDefaultShadowEnabledProperty;
end;


{ TToggleMenuFlyoutItem }

class function TToggleMenuFlyoutItem.get_IsCheckedProperty: IDependencyProperty;
begin
  Result := Statics.get_IsCheckedProperty;
end;

// Factories for : "ToggleMenuFlyoutItem"
// Factory: "Microsoft.UI.Xaml.Controls.IToggleMenuFlyoutItemFactory"
// -> IToggleMenuFlyoutItemFactory

class function TToggleMenuFlyoutItem.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IToggleMenuFlyoutItem;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TToggleSplitButton }

class function TToggleSplitButton.get_IsCheckedProperty: IDependencyProperty;
begin
  Result := Statics.get_IsCheckedProperty;
end;

// Factories for : "ToggleSplitButton"
// Factory: "Microsoft.UI.Xaml.Controls.IToggleSplitButtonFactory"
// -> IToggleSplitButtonFactory

class function TToggleSplitButton.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IToggleSplitButton;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TToggleSwitch }

class function TToggleSwitch.get_IsOnProperty: IDependencyProperty;
begin
  Result := Statics.get_IsOnProperty;
end;

class function TToggleSwitch.get_HeaderProperty: IDependencyProperty;
begin
  Result := Statics.get_HeaderProperty;
end;

class function TToggleSwitch.get_HeaderTemplateProperty: IDependencyProperty;
begin
  Result := Statics.get_HeaderTemplateProperty;
end;

class function TToggleSwitch.get_OnContentProperty: IDependencyProperty;
begin
  Result := Statics.get_OnContentProperty;
end;

class function TToggleSwitch.get_OnContentTemplateProperty: IDependencyProperty;
begin
  Result := Statics.get_OnContentTemplateProperty;
end;

class function TToggleSwitch.get_OffContentProperty: IDependencyProperty;
begin
  Result := Statics.get_OffContentProperty;
end;

class function TToggleSwitch.get_OffContentTemplateProperty: IDependencyProperty;
begin
  Result := Statics.get_OffContentTemplateProperty;
end;


{ TToolTip }

class function TToolTip.get_HorizontalOffsetProperty: IDependencyProperty;
begin
  Result := Statics.get_HorizontalOffsetProperty;
end;

class function TToolTip.get_IsOpenProperty: IDependencyProperty;
begin
  Result := Statics.get_IsOpenProperty;
end;

class function TToolTip.get_PlacementProperty: IDependencyProperty;
begin
  Result := Statics.get_PlacementProperty;
end;

class function TToolTip.get_PlacementTargetProperty: IDependencyProperty;
begin
  Result := Statics.get_PlacementTargetProperty;
end;

class function TToolTip.get_PlacementRectProperty: IDependencyProperty;
begin
  Result := Statics.get_PlacementRectProperty;
end;

class function TToolTip.get_VerticalOffsetProperty: IDependencyProperty;
begin
  Result := Statics.get_VerticalOffsetProperty;
end;

// Factories for : "ToolTip"
// Factory: "Microsoft.UI.Xaml.Controls.IToolTipFactory"
// -> IToolTipFactory

class function TToolTip.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IToolTip;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TToolTipService }

class function TToolTipService.get_PlacementProperty: IDependencyProperty;
begin
  Result := Statics.get_PlacementProperty;
end;

class function TToolTipService.GetPlacement(element: IDependencyObject): Primitives_PlacementMode;
begin
  Result := Statics.GetPlacement(element);
end;

class procedure TToolTipService.SetPlacement(element: IDependencyObject; value: Primitives_PlacementMode);
begin
  Statics.SetPlacement(element, value);
end;

class function TToolTipService.get_PlacementTargetProperty: IDependencyProperty;
begin
  Result := Statics.get_PlacementTargetProperty;
end;

class function TToolTipService.GetPlacementTarget(element: IDependencyObject): IUIElement;
begin
  Result := Statics.GetPlacementTarget(element);
end;

class procedure TToolTipService.SetPlacementTarget(element: IDependencyObject; value: IUIElement);
begin
  Statics.SetPlacementTarget(element, value);
end;

class function TToolTipService.get_ToolTipProperty: IDependencyProperty;
begin
  Result := Statics.get_ToolTipProperty;
end;

class function TToolTipService.GetToolTip(element: IDependencyObject): IInspectable;
begin
  Result := Statics.GetToolTip(element);
end;

class procedure TToolTipService.SetToolTip(element: IDependencyObject; value: IInspectable);
begin
  Statics.SetToolTip(element, value);
end;


{ TTreeView }

class function TTreeView.get_SelectedItemProperty: IDependencyProperty;
begin
  Result := Statics.get_SelectedItemProperty;
end;

class function TTreeView.get_SelectionModeProperty: IDependencyProperty;
begin
  Result := Statics.get_SelectionModeProperty;
end;


class function TTreeView.get_CanDragItemsProperty: IDependencyProperty;
begin
  Result := Statics2.get_CanDragItemsProperty;
end;

class function TTreeView.get_CanReorderItemsProperty: IDependencyProperty;
begin
  Result := Statics2.get_CanReorderItemsProperty;
end;

class function TTreeView.get_ItemTemplateProperty: IDependencyProperty;
begin
  Result := Statics2.get_ItemTemplateProperty;
end;

class function TTreeView.get_ItemTemplateSelectorProperty: IDependencyProperty;
begin
  Result := Statics2.get_ItemTemplateSelectorProperty;
end;

class function TTreeView.get_ItemContainerStyleProperty: IDependencyProperty;
begin
  Result := Statics2.get_ItemContainerStyleProperty;
end;

class function TTreeView.get_ItemContainerStyleSelectorProperty: IDependencyProperty;
begin
  Result := Statics2.get_ItemContainerStyleSelectorProperty;
end;

class function TTreeView.get_ItemContainerTransitionsProperty: IDependencyProperty;
begin
  Result := Statics2.get_ItemContainerTransitionsProperty;
end;

class function TTreeView.get_ItemsSourceProperty: IDependencyProperty;
begin
  Result := Statics2.get_ItemsSourceProperty;
end;

// Factories for : "TreeView"
// Factory: "Microsoft.UI.Xaml.Controls.ITreeViewFactory"
// -> ITreeViewFactory

class function TTreeView.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): ITreeView;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TTreeViewItem }

class function TTreeViewItem.get_GlyphOpacityProperty: IDependencyProperty;
begin
  Result := Statics.get_GlyphOpacityProperty;
end;

class function TTreeViewItem.get_GlyphBrushProperty: IDependencyProperty;
begin
  Result := Statics.get_GlyphBrushProperty;
end;

class function TTreeViewItem.get_ExpandedGlyphProperty: IDependencyProperty;
begin
  Result := Statics.get_ExpandedGlyphProperty;
end;

class function TTreeViewItem.get_CollapsedGlyphProperty: IDependencyProperty;
begin
  Result := Statics.get_CollapsedGlyphProperty;
end;

class function TTreeViewItem.get_GlyphSizeProperty: IDependencyProperty;
begin
  Result := Statics.get_GlyphSizeProperty;
end;

class function TTreeViewItem.get_IsExpandedProperty: IDependencyProperty;
begin
  Result := Statics.get_IsExpandedProperty;
end;

class function TTreeViewItem.get_TreeViewItemTemplateSettingsProperty: IDependencyProperty;
begin
  Result := Statics.get_TreeViewItemTemplateSettingsProperty;
end;


class function TTreeViewItem.get_HasUnrealizedChildrenProperty: IDependencyProperty;
begin
  Result := Statics2.get_HasUnrealizedChildrenProperty;
end;

class function TTreeViewItem.get_ItemsSourceProperty: IDependencyProperty;
begin
  Result := Statics2.get_ItemsSourceProperty;
end;

// Factories for : "TreeViewItem"
// Factory: "Microsoft.UI.Xaml.Controls.ITreeViewItemFactory"
// -> ITreeViewItemFactory

class function TTreeViewItem.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): ITreeViewItem;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TTreeViewItemTemplateSettings }

class function TTreeViewItemTemplateSettings.get_ExpandedGlyphVisibilityProperty: IDependencyProperty;
begin
  Result := Statics.get_ExpandedGlyphVisibilityProperty;
end;

class function TTreeViewItemTemplateSettings.get_CollapsedGlyphVisibilityProperty: IDependencyProperty;
begin
  Result := Statics.get_CollapsedGlyphVisibilityProperty;
end;

class function TTreeViewItemTemplateSettings.get_IndentationProperty: IDependencyProperty;
begin
  Result := Statics.get_IndentationProperty;
end;

class function TTreeViewItemTemplateSettings.get_DragItemsCountProperty: IDependencyProperty;
begin
  Result := Statics.get_DragItemsCountProperty;
end;

// Factories for : "TreeViewItemTemplateSettings"
// Factory: "Microsoft.UI.Xaml.Controls.ITreeViewItemTemplateSettingsFactory"
// -> ITreeViewItemTemplateSettingsFactory

class function TTreeViewItemTemplateSettings.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): ITreeViewItemTemplateSettings;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TTreeViewList }
// Factories for : "TreeViewList"
// Factory: "Microsoft.UI.Xaml.Controls.ITreeViewListFactory"
// -> ITreeViewListFactory

class function TTreeViewList.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): ITreeViewList;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TTreeViewNode }

class function TTreeViewNode.get_ContentProperty: IDependencyProperty;
begin
  Result := Statics.get_ContentProperty;
end;

class function TTreeViewNode.get_DepthProperty: IDependencyProperty;
begin
  Result := Statics.get_DepthProperty;
end;

class function TTreeViewNode.get_IsExpandedProperty: IDependencyProperty;
begin
  Result := Statics.get_IsExpandedProperty;
end;

class function TTreeViewNode.get_HasChildrenProperty: IDependencyProperty;
begin
  Result := Statics.get_HasChildrenProperty;
end;

// Factories for : "TreeViewNode"
// Factory: "Microsoft.UI.Xaml.Controls.ITreeViewNodeFactory"
// -> ITreeViewNodeFactory

class function TTreeViewNode.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): ITreeViewNode;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TTwoPaneView }

class function TTwoPaneView.get_Pane1Property: IDependencyProperty;
begin
  Result := Statics.get_Pane1Property;
end;

class function TTwoPaneView.get_Pane2Property: IDependencyProperty;
begin
  Result := Statics.get_Pane2Property;
end;

class function TTwoPaneView.get_Pane1LengthProperty: IDependencyProperty;
begin
  Result := Statics.get_Pane1LengthProperty;
end;

class function TTwoPaneView.get_Pane2LengthProperty: IDependencyProperty;
begin
  Result := Statics.get_Pane2LengthProperty;
end;

class function TTwoPaneView.get_PanePriorityProperty: IDependencyProperty;
begin
  Result := Statics.get_PanePriorityProperty;
end;

class function TTwoPaneView.get_ModeProperty: IDependencyProperty;
begin
  Result := Statics.get_ModeProperty;
end;

class function TTwoPaneView.get_WideModeConfigurationProperty: IDependencyProperty;
begin
  Result := Statics.get_WideModeConfigurationProperty;
end;

class function TTwoPaneView.get_TallModeConfigurationProperty: IDependencyProperty;
begin
  Result := Statics.get_TallModeConfigurationProperty;
end;

class function TTwoPaneView.get_MinWideModeWidthProperty: IDependencyProperty;
begin
  Result := Statics.get_MinWideModeWidthProperty;
end;

class function TTwoPaneView.get_MinTallModeHeightProperty: IDependencyProperty;
begin
  Result := Statics.get_MinTallModeHeightProperty;
end;

// Factories for : "TwoPaneView"
// Factory: "Microsoft.UI.Xaml.Controls.ITwoPaneViewFactory"
// -> ITwoPaneViewFactory

class function TTwoPaneView.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): ITwoPaneView;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TUniformGridLayout }

class function TUniformGridLayout.get_OrientationProperty: IDependencyProperty;
begin
  Result := Statics.get_OrientationProperty;
end;

class function TUniformGridLayout.get_MinItemWidthProperty: IDependencyProperty;
begin
  Result := Statics.get_MinItemWidthProperty;
end;

class function TUniformGridLayout.get_MinItemHeightProperty: IDependencyProperty;
begin
  Result := Statics.get_MinItemHeightProperty;
end;

class function TUniformGridLayout.get_MinRowSpacingProperty: IDependencyProperty;
begin
  Result := Statics.get_MinRowSpacingProperty;
end;

class function TUniformGridLayout.get_MinColumnSpacingProperty: IDependencyProperty;
begin
  Result := Statics.get_MinColumnSpacingProperty;
end;

class function TUniformGridLayout.get_ItemsJustificationProperty: IDependencyProperty;
begin
  Result := Statics.get_ItemsJustificationProperty;
end;

class function TUniformGridLayout.get_ItemsStretchProperty: IDependencyProperty;
begin
  Result := Statics.get_ItemsStretchProperty;
end;

class function TUniformGridLayout.get_MaximumRowsOrColumnsProperty: IDependencyProperty;
begin
  Result := Statics.get_MaximumRowsOrColumnsProperty;
end;

// Factories for : "UniformGridLayout"
// Factory: "Microsoft.UI.Xaml.Controls.IUniformGridLayoutFactory"
// -> IUniformGridLayoutFactory

class function TUniformGridLayout.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IUniformGridLayout;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TVariableSizedWrapGrid }

class function TVariableSizedWrapGrid.get_ItemHeightProperty: IDependencyProperty;
begin
  Result := Statics.get_ItemHeightProperty;
end;

class function TVariableSizedWrapGrid.get_ItemWidthProperty: IDependencyProperty;
begin
  Result := Statics.get_ItemWidthProperty;
end;

class function TVariableSizedWrapGrid.get_OrientationProperty: IDependencyProperty;
begin
  Result := Statics.get_OrientationProperty;
end;

class function TVariableSizedWrapGrid.get_HorizontalChildrenAlignmentProperty: IDependencyProperty;
begin
  Result := Statics.get_HorizontalChildrenAlignmentProperty;
end;

class function TVariableSizedWrapGrid.get_VerticalChildrenAlignmentProperty: IDependencyProperty;
begin
  Result := Statics.get_VerticalChildrenAlignmentProperty;
end;

class function TVariableSizedWrapGrid.get_MaximumRowsOrColumnsProperty: IDependencyProperty;
begin
  Result := Statics.get_MaximumRowsOrColumnsProperty;
end;

class function TVariableSizedWrapGrid.get_RowSpanProperty: IDependencyProperty;
begin
  Result := Statics.get_RowSpanProperty;
end;

class function TVariableSizedWrapGrid.GetRowSpan(element: IUIElement): Integer;
begin
  Result := Statics.GetRowSpan(element);
end;

class procedure TVariableSizedWrapGrid.SetRowSpan(element: IUIElement; value: Integer);
begin
  Statics.SetRowSpan(element, value);
end;

class function TVariableSizedWrapGrid.get_ColumnSpanProperty: IDependencyProperty;
begin
  Result := Statics.get_ColumnSpanProperty;
end;

class function TVariableSizedWrapGrid.GetColumnSpan(element: IUIElement): Integer;
begin
  Result := Statics.GetColumnSpan(element);
end;

class procedure TVariableSizedWrapGrid.SetColumnSpan(element: IUIElement; value: Integer);
begin
  Statics.SetColumnSpan(element, value);
end;


{ TViewbox }

class function TViewbox.get_StretchProperty: IDependencyProperty;
begin
  Result := Statics.get_StretchProperty;
end;

class function TViewbox.get_StretchDirectionProperty: IDependencyProperty;
begin
  Result := Statics.get_StretchDirectionProperty;
end;


{ TVirtualizingLayoutContext }
// Factories for : "VirtualizingLayoutContext"
// Factory: "Microsoft.UI.Xaml.Controls.IVirtualizingLayoutContextFactory"
// -> IVirtualizingLayoutContextFactory

class function TVirtualizingLayoutContext.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IVirtualizingLayoutContext;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TVirtualizingStackPanel }

class function TVirtualizingStackPanel.get_AreScrollSnapPointsRegularProperty: IDependencyProperty;
begin
  Result := Statics.get_AreScrollSnapPointsRegularProperty;
end;

class function TVirtualizingStackPanel.get_OrientationProperty: IDependencyProperty;
begin
  Result := Statics.get_OrientationProperty;
end;

class function TVirtualizingStackPanel.get_VirtualizationModeProperty: IDependencyProperty;
begin
  Result := Statics.get_VirtualizationModeProperty;
end;

class function TVirtualizingStackPanel.GetVirtualizationMode(element: IDependencyObject): VirtualizationMode;
begin
  Result := Statics.GetVirtualizationMode(element);
end;

class procedure TVirtualizingStackPanel.SetVirtualizationMode(element: IDependencyObject; value: VirtualizationMode);
begin
  Statics.SetVirtualizationMode(element, value);
end;

class function TVirtualizingStackPanel.get_IsVirtualizingProperty: IDependencyProperty;
begin
  Result := Statics.get_IsVirtualizingProperty;
end;

class function TVirtualizingStackPanel.GetIsVirtualizing(o: IDependencyObject): Boolean;
begin
  Result := Statics.GetIsVirtualizing(o);
end;


{ TWebView2 }

class function TWebView2.get_SourceProperty: IDependencyProperty;
begin
  Result := Statics.get_SourceProperty;
end;

class function TWebView2.get_CanGoForwardProperty: IDependencyProperty;
begin
  Result := Statics.get_CanGoForwardProperty;
end;

class function TWebView2.get_CanGoBackProperty: IDependencyProperty;
begin
  Result := Statics.get_CanGoBackProperty;
end;

class function TWebView2.get_DefaultBackgroundColorProperty: IDependencyProperty;
begin
  Result := Statics.get_DefaultBackgroundColorProperty;
end;

// Factories for : "WebView2"
// Factory: "Microsoft.UI.Xaml.Controls.IWebView2Factory"
// -> IWebView2Factory

class function TWebView2.CreateInstance(baseInterface: IInspectable; out innerInterface: IInspectable): IWebView2;
begin
  Result := Factory.CreateInstance(baseInterface, innerInterface);
end;


{ TWrapGrid }

class function TWrapGrid.get_ItemWidthProperty: IDependencyProperty;
begin
  Result := Statics.get_ItemWidthProperty;
end;

class function TWrapGrid.get_ItemHeightProperty: IDependencyProperty;
begin
  Result := Statics.get_ItemHeightProperty;
end;

class function TWrapGrid.get_OrientationProperty: IDependencyProperty;
begin
  Result := Statics.get_OrientationProperty;
end;

class function TWrapGrid.get_HorizontalChildrenAlignmentProperty: IDependencyProperty;
begin
  Result := Statics.get_HorizontalChildrenAlignmentProperty;
end;

class function TWrapGrid.get_VerticalChildrenAlignmentProperty: IDependencyProperty;
begin
  Result := Statics.get_VerticalChildrenAlignmentProperty;
end;

class function TWrapGrid.get_MaximumRowsOrColumnsProperty: IDependencyProperty;
begin
  Result := Statics.get_MaximumRowsOrColumnsProperty;
end;


{ TXamlControlsResources }

class procedure TXamlControlsResources.EnsureRevealLights(element: IUIElement);
begin
  Statics.EnsureRevealLights(element);
end;

class function TXamlControlsResources.get_UseCompactResourcesProperty: IDependencyProperty;
begin
  Result := Statics.get_UseCompactResourcesProperty;
end;


end.
